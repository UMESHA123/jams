import tkinter as tk
from tkcalendar import *
from tkinter import *
from tkinter import ttk
from PIL import Image,ImageTk
from tkinter import filedialog
import os
import sqlite3
from tkinter import messagebox
from tkinter import colorchooser

class IAScheduleEntry():
    def __init__(self,root):
        self.root=root
        self.root.title("Add Student")
        self.root.geometry('1055x440+213+145')
        self.root.resizable(False,False)


        ###############################################################################################################
        self.var_student_semister_select=StringVar()
        self.var_student_branch_select=StringVar()
        self.var_ia_select=StringVar()


        self.var_che_subjects_entry=StringVar()
        self.var_che_time_entry=StringVar()
        self.var_che_date_entry=StringVar()
        self.var_che_code=StringVar()
        self.var_che_semister=StringVar()
        self.var_serach_che_semisters=StringVar()

        self.var_phy_subjects_entry=StringVar()
        self.var_phy_time_entry=StringVar()
        self.var_phy_date_entry=StringVar()
        self.var_phy_code=StringVar()
        self.var_phy_semister=StringVar()
        self.var_serach_phy_semisters=StringVar()
        self.serch_phy_ia_schedule=StringVar()

        self.var_civil_3rd_subjects_entry=StringVar()
        self.var_civil_3rd_time_entry=StringVar()
        self.var_civil_3rd_date_entry=StringVar()
        self.var_civil_3rd_code=StringVar()
        self.var_civil_3rd_semister=StringVar()
        self.var_serach_civil_3rd_semisters=StringVar()
        self.serch_civil_3rd_ia_schedule=StringVar()


        self.var_civil_4th_subjects_entry=StringVar()
        self.var_civil_4th_time_entry=StringVar()
        self.var_civil_4th_date_entry=StringVar()
        self.var_civil_4th_code=StringVar()
        self.var_civil_4th_semister=StringVar()
        self.var_serach_civil_4th_semisters=StringVar()
        self.serch_civil_4th_ia_schedule=StringVar()

        self.var_civil_5th_subjects_entry=StringVar()
        self.var_civil_5th_time_entry=StringVar()
        self.var_civil_5th_date_entry=StringVar()
        self.var_civil_5th_code=StringVar()
        self.var_civil_5th_semister=StringVar()
        self.var_serach_civil_5th_semisters=StringVar()
        self.serch_civil_5th_ia_schedule=StringVar()

        self.var_civil_6th_subjects_entry=StringVar()
        self.var_civil_6th_time_entry=StringVar()
        self.var_civil_6th_date_entry=StringVar()
        self.var_civil_6th_code=StringVar()
        self.var_civil_6th_semister=StringVar()
        self.var_serach_civil_6th_semisters=StringVar()
        self.serch_civil_6th_ia_schedule=StringVar()

        self.var_civil_7th_subjects_entry=StringVar()
        self.var_civil_7th_time_entry=StringVar()
        self.var_civil_7th_date_entry=StringVar()
        self.var_civil_7th_code=StringVar()
        self.var_civil_7th_semister=StringVar()
        self.var_serach_civil_7th_semisters=StringVar()
        self.serch_civil_7th_ia_schedule=StringVar()

        self.var_civil_8th_subjects_entry=StringVar()
        self.var_civil_8th_time_entry=StringVar()
        self.var_civil_8th_date_entry=StringVar()
        self.var_civil_8th_code=StringVar()
        self.var_civil_8th_semister=StringVar()
        self.var_serach_civil_8th_semisters=StringVar()
        self.serch_civil_8th_ia_schedule=StringVar()

        self.var_mech_3rd_subjects_entry=StringVar()
        self.var_mech_3rd_time_entry=StringVar()
        self.var_mech_3rd_date_entry=StringVar()
        self.var_mech_3rd_code=StringVar()
        self.var_mech_3rd_semister=StringVar()
        self.var_serach_mech_3rd_semisters=StringVar()
        self.serch_mech_3rd_ia_schedule=StringVar()


        self.var_mech_4th_subjects_entry=StringVar()
        self.var_mech_4th_time_entry=StringVar()
        self.var_mech_4th_date_entry=StringVar()
        self.var_mech_4th_code=StringVar()
        self.var_mech_4th_semister=StringVar()
        self.var_serach_mech_4th_semisters=StringVar()
        self.serch_mech_4th_ia_schedule=StringVar()

        self.var_mech_5th_subjects_entry=StringVar()
        self.var_mech_5th_time_entry=StringVar()
        self.var_mech_5th_date_entry=StringVar()
        self.var_mech_5th_code=StringVar()
        self.var_mech_5th_semister=StringVar()
        self.var_serach_mech_5th_semisters=StringVar()
        self.serch_mech_5th_ia_schedule=StringVar()

        self.var_mech_6th_subjects_entry=StringVar()
        self.var_mech_6th_time_entry=StringVar()
        self.var_mech_6th_date_entry=StringVar()
        self.var_mech_6th_code=StringVar()
        self.var_mech_6th_semister=StringVar()
        self.var_serach_mech_6th_semisters=StringVar()
        self.serch_mech_6th_ia_schedule=StringVar()

        self.var_mech_7th_subjects_entry=StringVar()
        self.var_mech_7th_time_entry=StringVar()
        self.var_mech_7th_date_entry=StringVar()
        self.var_mech_7th_code=StringVar()
        self.var_mech_7th_semister=StringVar()
        self.var_serach_mech_7th_semisters=StringVar()
        self.serch_mech_7th_ia_schedule=StringVar()

        self.var_mech_8th_subjects_entry=StringVar()
        self.var_mech_8th_time_entry=StringVar()
        self.var_mech_8th_date_entry=StringVar()
        self.var_mech_8th_code=StringVar()
        self.var_mech_8th_semister=StringVar()
        self.var_serach_mech_8th_semisters=StringVar()
        self.serch_mech_8th_ia_schedule=StringVar()

        ###############################################
        self.var_ece_3rd_subjects_entry=StringVar()
        self.var_ece_3rd_time_entry=StringVar()
        self.var_ece_3rd_date_entry=StringVar()
        self.var_ece_3rd_code=StringVar()
        self.var_ece_3rd_semister=StringVar()
        self.var_serach_ece_3rd_semisters=StringVar()
        self.serch_ece_3rd_ia_schedule=StringVar()


        self.var_ece_4th_subjects_entry=StringVar()
        self.var_ece_4th_time_entry=StringVar()
        self.var_ece_4th_date_entry=StringVar()
        self.var_ece_4th_code=StringVar()
        self.var_ece_4th_semister=StringVar()
        self.var_serach_ece_4th_semisters=StringVar()
        self.serch_ece_4th_ia_schedule=StringVar()

        self.var_ece_5th_subjects_entry=StringVar()
        self.var_ece_5th_time_entry=StringVar()
        self.var_ece_5th_date_entry=StringVar()
        self.var_ece_5th_code=StringVar()
        self.var_ece_5th_semister=StringVar()
        self.var_serach_ece_5th_semisters=StringVar()
        self.serch_ece_5th_ia_schedule=StringVar()

        self.var_ece_6th_subjects_entry=StringVar()
        self.var_ece_6th_time_entry=StringVar()
        self.var_ece_6th_date_entry=StringVar()
        self.var_ece_6th_code=StringVar()
        self.var_ece_6th_semister=StringVar()
        self.var_serach_ece_6th_semisters=StringVar()
        self.serch_ece_6th_ia_schedule=StringVar()

        self.var_ece_7th_subjects_entry=StringVar()
        self.var_ece_7th_time_entry=StringVar()
        self.var_ece_7th_date_entry=StringVar()
        self.var_ece_7th_code=StringVar()
        self.var_ece_7th_semister=StringVar()
        self.var_serach_ece_7th_semisters=StringVar()
        self.serch_ece_7th_ia_schedule=StringVar()

        self.var_ece_8th_subjects_entry=StringVar()
        self.var_ece_8th_time_entry=StringVar()
        self.var_ece_8th_date_entry=StringVar()
        self.var_ece_8th_code=StringVar()
        self.var_ece_8th_semister=StringVar()
        self.var_serach_ece_8th_semisters=StringVar()
        self.serch_ece_8th_ia_schedule=StringVar()

        #########################################
        self.var_eee_3rd_subjects_entry=StringVar()
        self.var_eee_3rd_time_entry=StringVar()
        self.var_eee_3rd_date_entry=StringVar()
        self.var_eee_3rd_code=StringVar()
        self.var_eee_3rd_semister=StringVar()
        self.var_serach_eee_3rd_semisters=StringVar()
        self.serch_eee_3rd_ia_schedule=StringVar()


        self.var_eee_4th_subjects_entry=StringVar()
        self.var_eee_4th_time_entry=StringVar()
        self.var_eee_4th_date_entry=StringVar()
        self.var_eee_4th_code=StringVar()
        self.var_eee_4th_semister=StringVar()
        self.var_serach_eee_4th_semisters=StringVar()
        self.serch_eee_4th_ia_schedule=StringVar()

        self.var_eee_5th_subjects_entry=StringVar()
        self.var_eee_5th_time_entry=StringVar()
        self.var_eee_5th_date_entry=StringVar()
        self.var_eee_5th_code=StringVar()
        self.var_eee_5th_semister=StringVar()
        self.var_serach_eee_5th_semisters=StringVar()
        self.serch_eee_5th_ia_schedule=StringVar()

        self.var_eee_6th_subjects_entry=StringVar()
        self.var_eee_6th_time_entry=StringVar()
        self.var_eee_6th_date_entry=StringVar()
        self.var_eee_6th_code=StringVar()
        self.var_eee_6th_semister=StringVar()
        self.var_serach_eee_6th_semisters=StringVar()
        self.serch_eee_6th_ia_schedule=StringVar()

        self.var_eee_7th_subjects_entry=StringVar()
        self.var_eee_7th_time_entry=StringVar()
        self.var_eee_7th_date_entry=StringVar()
        self.var_eee_7th_code=StringVar()
        self.var_eee_7th_semister=StringVar()
        self.var_serach_eee_7th_semisters=StringVar()
        self.serch_eee_7th_ia_schedule=StringVar()

        self.var_eee_8th_subjects_entry=StringVar()
        self.var_eee_8th_time_entry=StringVar()
        self.var_eee_8th_date_entry=StringVar()
        self.var_eee_8th_code=StringVar()
        self.var_eee_8th_semister=StringVar()
        self.var_serach_eee_8th_semisters=StringVar()
        self.serch_eee_8th_ia_schedule=StringVar()
        ###########################################################
        self.var_ise_3rd_subjects_entry=StringVar()
        self.var_ise_3rd_time_entry=StringVar()
        self.var_ise_3rd_date_entry=StringVar()
        self.var_ise_3rd_code=StringVar()
        self.var_ise_3rd_semister=StringVar()
        self.var_serach_ise_3rd_semisters=StringVar()
        self.serch_ise_3rd_ia_schedule=StringVar()


        self.var_ise_4th_subjects_entry=StringVar()
        self.var_ise_4th_time_entry=StringVar()
        self.var_ise_4th_date_entry=StringVar()
        self.var_ise_4th_code=StringVar()
        self.var_ise_4th_semister=StringVar()
        self.var_serach_ise_4th_semisters=StringVar()
        self.serch_ise_4th_ia_schedule=StringVar()

        self.var_ise_5th_subjects_entry=StringVar()
        self.var_ise_5th_time_entry=StringVar()
        self.var_ise_5th_date_entry=StringVar()
        self.var_ise_5th_code=StringVar()
        self.var_ise_5th_semister=StringVar()
        self.var_serach_ise_5th_semisters=StringVar()
        self.serch_ise_5th_ia_schedule=StringVar()

        self.var_ise_6th_subjects_entry=StringVar()
        self.var_ise_6th_time_entry=StringVar()
        self.var_ise_6th_date_entry=StringVar()
        self.var_ise_6th_code=StringVar()
        self.var_ise_6th_semister=StringVar()
        self.var_serach_ise_6th_semisters=StringVar()
        self.serch_ise_6th_ia_schedule=StringVar()

        self.var_ise_7th_subjects_entry=StringVar()
        self.var_ise_7th_time_entry=StringVar()
        self.var_ise_7th_date_entry=StringVar()
        self.var_ise_7th_code=StringVar()
        self.var_ise_7th_semister=StringVar()
        self.var_serach_ise_7th_semisters=StringVar()
        self.serch_ise_7th_ia_schedule=StringVar()

        self.var_ise_8th_subjects_entry=StringVar()
        self.var_ise_8th_time_entry=StringVar()
        self.var_ise_8th_date_entry=StringVar()
        self.var_ise_8th_code=StringVar()
        self.var_ise_8th_semister=StringVar()
        self.var_serach_ise_8th_semisters=StringVar()
        self.serch_ise_8th_ia_schedule=StringVar()
        ##################################################
        self.var_ete_3rd_subjects_entry=StringVar()
        self.var_ete_3rd_time_entry=StringVar()
        self.var_ete_3rd_date_entry=StringVar()
        self.var_ete_3rd_code=StringVar()
        self.var_ete_3rd_semister=StringVar()
        self.var_serach_ete_3rd_semisters=StringVar()
        self.serch_ete_3rd_ia_schedule=StringVar()


        self.var_ete_4th_subjects_entry=StringVar()
        self.var_ete_4th_time_entry=StringVar()
        self.var_ete_4th_date_entry=StringVar()
        self.var_ete_4th_code=StringVar()
        self.var_ete_4th_semister=StringVar()
        self.var_serach_ete_4th_semisters=StringVar()
        self.serch_ete_4th_ia_schedule=StringVar()

        self.var_ete_5th_subjects_entry=StringVar()
        self.var_ete_5th_time_entry=StringVar()
        self.var_ete_5th_date_entry=StringVar()
        self.var_ete_5th_code=StringVar()
        self.var_ete_5th_semister=StringVar()
        self.var_serach_ete_5th_semisters=StringVar()
        self.serch_ete_5th_ia_schedule=StringVar()

        self.var_ete_6th_subjects_entry=StringVar()
        self.var_ete_6th_time_entry=StringVar()
        self.var_ete_6th_date_entry=StringVar()
        self.var_ete_6th_code=StringVar()
        self.var_ete_6th_semister=StringVar()
        self.var_serach_ete_6th_semisters=StringVar()
        self.serch_ete_6th_ia_schedule=StringVar()

        self.var_ete_7th_subjects_entry=StringVar()
        self.var_ete_7th_time_entry=StringVar()
        self.var_ete_7th_date_entry=StringVar()
        self.var_ete_7th_code=StringVar()
        self.var_ete_7th_semister=StringVar()
        self.var_serach_ete_7th_semisters=StringVar()
        self.serch_ete_7th_ia_schedule=StringVar()

        self.var_ete_8th_subjects_entry=StringVar()
        self.var_ete_8th_time_entry=StringVar()
        self.var_ete_8th_date_entry=StringVar()
        self.var_ete_8th_code=StringVar()
        self.var_ete_8th_semister=StringVar()
        self.var_serach_ete_8th_semisters=StringVar()
        self.serch_ete_8th_ia_schedule=StringVar()
        ################################################################################################################
        self.var_cs_3rd_subjects_entry=StringVar()
        self.var_cs_3rd_time_entry=StringVar()
        self.var_cs_3rd_date_entry=StringVar()
        self.var_cs_3rd_code=StringVar()
        self.var_cs_3rd_semister=StringVar()
        self.var_serach_cs_3rd_semisters=StringVar()
        self.serch_cs_3rd_ia_schedule=StringVar()


        self.var_cs_4th_subjects_entry=StringVar()
        self.var_cs_4th_time_entry=StringVar()
        self.var_cs_4th_date_entry=StringVar()
        self.var_cs_4th_code=StringVar()
        self.var_cs_4th_semister=StringVar()
        self.var_serach_cs_4th_semisters=StringVar()
        self.serch_cs_4th_ia_schedule=StringVar()

        self.var_cs_5th_subjects_entry=StringVar()
        self.var_cs_5th_time_entry=StringVar()
        self.var_cs_5th_date_entry=StringVar()
        self.var_cs_5th_code=StringVar()
        self.var_cs_5th_semister=StringVar()
        self.var_serach_cs_5th_semisters=StringVar()
        self.serch_cs_5th_ia_schedule=StringVar()

        self.var_cs_6th_subjects_entry=StringVar()
        self.var_cs_6th_time_entry=StringVar()
        self.var_cs_6th_date_entry=StringVar()
        self.var_cs_6th_code=StringVar()
        self.var_cs_6th_semister=StringVar()
        self.var_serach_cs_6th_semisters=StringVar()
        self.serch_cs_6th_ia_schedule=StringVar()

        self.var_cs_7th_subjects_entry=StringVar()
        self.var_cs_7th_time_entry=StringVar()
        self.var_cs_7th_date_entry=StringVar()
        self.var_cs_7th_code=StringVar()
        self.var_cs_7th_semister=StringVar()
        self.var_serach_cs_7th_semisters=StringVar()
        self.serch_cs_7th_ia_schedule=StringVar()

        self.var_cs_8th_subjects_entry=StringVar()
        self.var_cs_8th_time_entry=StringVar()
        self.var_cs_8th_date_entry=StringVar()
        self.var_cs_8th_code=StringVar()
        self.var_cs_8th_semister=StringVar()
        self.var_serach_cs_8th_semisters=StringVar()
        self.serch_cs_8th_ia_schedule=StringVar()

        #####################################################################################################################################################
        ####################################################################################################################################################
        ########################################################################################################################################################
        ###########################################################################################################################################################
        self.var_che_ia2_subjects_entry=StringVar()
        self.var_che_ia2_time_entry=StringVar()
        self.var_che_ia2_date_entry=StringVar()
        self.var_che_ia2_code=StringVar()
        self.var_che_ia2_semister=StringVar()
        self.var_serach_che_ia2_semisters=StringVar()

        self.var_phy_ia2_subjects_entry=StringVar()
        self.var_phy_ia2_time_entry=StringVar()
        self.var_phy_ia2_date_entry=StringVar()
        self.var_phy_ia2_code=StringVar()
        self.var_phy_ia2_semister=StringVar()
        self.var_serach_phy_ia2_semisters=StringVar()
        self.serch_phy_ia2_ia_schedule=StringVar()

        self.var_civil_ia2_3rd_subjects_entry=StringVar()
        self.var_civil_ia2_3rd_time_entry=StringVar()
        self.var_civil_ia2_3rd_date_entry=StringVar()
        self.var_civil_ia2_3rd_code=StringVar()
        self.var_civil_ia2_3rd_semister=StringVar()
        self.var_serach_civil_ia2_3rd_semisters=StringVar()
        self.serch_civil_ia2_3rd_ia_schedule=StringVar()


        self.var_civil_ia2_4th_subjects_entry=StringVar()
        self.var_civil_ia2_4th_time_entry=StringVar()
        self.var_civil_ia2_4th_date_entry=StringVar()
        self.var_civil_ia2_4th_code=StringVar()
        self.var_civil_ia2_4th_semister=StringVar()
        self.var_serach_civil_ia2_4th_semisters=StringVar()
        self.serch_civil_ia2_4th_ia_schedule=StringVar()

        self.var_civil_ia2_5th_subjects_entry=StringVar()
        self.var_civil_ia2_5th_time_entry=StringVar()
        self.var_civil_ia2_5th_date_entry=StringVar()
        self.var_civil_ia2_5th_code=StringVar()
        self.var_civil_ia2_5th_semister=StringVar()
        self.var_serach_civil_ia2_5th_semisters=StringVar()
        self.serch_civil_ia2_5th_ia_schedule=StringVar()

        self.var_civil_ia2_6th_subjects_entry=StringVar()
        self.var_civil_ia2_6th_time_entry=StringVar()
        self.var_civil_ia2_6th_date_entry=StringVar()
        self.var_civil_ia2_6th_code=StringVar()
        self.var_civil_ia2_6th_semister=StringVar()
        self.var_serach_civil_ia2_6th_semisters=StringVar()
        self.serch_civil_ia2_6th_ia_schedule=StringVar()

        self.var_civil_ia2_7th_subjects_entry=StringVar()
        self.var_civil_ia2_7th_time_entry=StringVar()
        self.var_civil_ia2_7th_date_entry=StringVar()
        self.var_civil_ia2_7th_code=StringVar()
        self.var_civil_ia2_7th_semister=StringVar()
        self.var_serach_civil_ia2_7th_semisters=StringVar()
        self.serch_civil_ia2_7th_ia_schedule=StringVar()

        self.var_civil_ia2_8th_subjects_entry=StringVar()
        self.var_civil_ia2_8th_time_entry=StringVar()
        self.var_civil_ia2_8th_date_entry=StringVar()
        self.var_civil_ia2_8th_code=StringVar()
        self.var_civil_ia2_8th_semister=StringVar()
        self.var_serach_civil_ia2_8th_semisters=StringVar()
        self.serch_civil_ia2_8th_ia_schedule=StringVar()

        self.var_mech_ia2_3rd_subjects_entry=StringVar()
        self.var_mech_ia2_3rd_time_entry=StringVar()
        self.var_mech_ia2_3rd_date_entry=StringVar()
        self.var_mech_ia2_3rd_code=StringVar()
        self.var_mech_ia2_3rd_semister=StringVar()
        self.var_serach_mech_ia2_3rd_semisters=StringVar()
        self.serch_mech_ia2_3rd_ia_schedule=StringVar()


        self.var_mech_ia2_4th_subjects_entry=StringVar()
        self.var_mech_ia2_4th_time_entry=StringVar()
        self.var_mech_ia2_4th_date_entry=StringVar()
        self.var_mech_ia2_4th_code=StringVar()
        self.var_mech_ia2_4th_semister=StringVar()
        self.var_serach_mech_ia2_4th_semisters=StringVar()
        self.serch_mech_ia2_4th_ia_schedule=StringVar()

        self.var_mech_ia2_5th_subjects_entry=StringVar()
        self.var_mech_ia2_5th_time_entry=StringVar()
        self.var_mech_ia2_5th_date_entry=StringVar()
        self.var_mech_ia2_5th_code=StringVar()
        self.var_mech_ia2_5th_semister=StringVar()
        self.var_serach_mech_ia2_5th_semisters=StringVar()
        self.serch_mech_ia2_5th_ia_schedule=StringVar()

        self.var_mech_ia2_6th_subjects_entry=StringVar()
        self.var_mech_ia2_6th_time_entry=StringVar()
        self.var_mech_ia2_6th_date_entry=StringVar()
        self.var_mech_ia2_6th_code=StringVar()
        self.var_mech_ia2_6th_semister=StringVar()
        self.var_serach_mech_ia2_6th_semisters=StringVar()
        self.serch_mech_ia2_6th_ia_schedule=StringVar()

        self.var_mech_ia2_7th_subjects_entry=StringVar()
        self.var_mech_ia2_7th_time_entry=StringVar()
        self.var_mech_ia2_7th_date_entry=StringVar()
        self.var_mech_ia2_7th_code=StringVar()
        self.var_mech_ia2_7th_semister=StringVar()
        self.var_serach_mech_ia2_7th_semisters=StringVar()
        self.serch_mech_ia2_7th_ia_schedule=StringVar()

        self.var_mech_ia2_8th_subjects_entry=StringVar()
        self.var_mech_ia2_8th_time_entry=StringVar()
        self.var_mech_ia2_8th_date_entry=StringVar()
        self.var_mech_ia2_8th_code=StringVar()
        self.var_mech_ia2_8th_semister=StringVar()
        self.var_serach_mech_ia2_8th_semisters=StringVar()
        self.serch_mech_ia2_8th_ia_schedule=StringVar()

        ###############################################
        self.var_ece_ia2_3rd_subjects_entry=StringVar()
        self.var_ece_ia2_3rd_time_entry=StringVar()
        self.var_ece_ia2_3rd_date_entry=StringVar()
        self.var_ece_ia2_3rd_code=StringVar()
        self.var_ece_ia2_3rd_semister=StringVar()
        self.var_serach_ece_ia2_3rd_semisters=StringVar()
        self.serch_ece_ia2_3rd_ia_schedule=StringVar()


        self.var_ece_ia2_4th_subjects_entry=StringVar()
        self.var_ece_ia2_4th_time_entry=StringVar()
        self.var_ece_ia2_4th_date_entry=StringVar()
        self.var_ece_ia2_4th_code=StringVar()
        self.var_ece_ia2_4th_semister=StringVar()
        self.var_serach_ece_ia2_4th_semisters=StringVar()
        self.serch_ece_ia2_4th_ia_schedule=StringVar()

        self.var_ece_ia2_5th_subjects_entry=StringVar()
        self.var_ece_ia2_5th_time_entry=StringVar()
        self.var_ece_ia2_5th_date_entry=StringVar()
        self.var_ece_ia2_5th_code=StringVar()
        self.var_ece_ia2_5th_semister=StringVar()
        self.var_serach_ece_ia2_5th_semisters=StringVar()
        self.serch_ece_ia2_5th_ia_schedule=StringVar()

        self.var_ece_ia2_6th_subjects_entry=StringVar()
        self.var_ece_ia2_6th_time_entry=StringVar()
        self.var_ece_ia2_6th_date_entry=StringVar()
        self.var_ece_ia2_6th_code=StringVar()
        self.var_ece_ia2_6th_semister=StringVar()
        self.var_serach_ece_ia2_6th_semisters=StringVar()
        self.serch_ece_ia2_6th_ia_schedule=StringVar()

        self.var_ece_ia2_7th_subjects_entry=StringVar()
        self.var_ece_ia2_7th_time_entry=StringVar()
        self.var_ece_ia2_7th_date_entry=StringVar()
        self.var_ece_ia2_7th_code=StringVar()
        self.var_ece_ia2_7th_semister=StringVar()
        self.var_serach_ece_ia2_7th_semisters=StringVar()
        self.serch_ece_ia2_7th_ia_schedule=StringVar()

        self.var_ece_ia2_8th_subjects_entry=StringVar()
        self.var_ece_ia2_8th_time_entry=StringVar()
        self.var_ece_ia2_8th_date_entry=StringVar()
        self.var_ece_ia2_8th_code=StringVar()
        self.var_ece_ia2_8th_semister=StringVar()
        self.var_serach_ece_ia2_8th_semisters=StringVar()
        self.serch_ece_ia2_8th_ia_schedule=StringVar()

        #########################################
        self.var_eee_ia2_3rd_subjects_entry=StringVar()
        self.var_eee_ia2_3rd_time_entry=StringVar()
        self.var_eee_ia2_3rd_date_entry=StringVar()
        self.var_eee_ia2_3rd_code=StringVar()
        self.var_eee_ia2_3rd_semister=StringVar()
        self.var_serach_eee_ia2_3rd_semisters=StringVar()
        self.serch_eee_ia2_3rd_ia_schedule=StringVar()


        self.var_eee_ia2_4th_subjects_entry=StringVar()
        self.var_eee_ia2_4th_time_entry=StringVar()
        self.var_eee_ia2_4th_date_entry=StringVar()
        self.var_eee_ia2_4th_code=StringVar()
        self.var_eee_ia2_4th_semister=StringVar()
        self.var_serach_eee_ia2_4th_semisters=StringVar()
        self.serch_eee_ia2_4th_ia_schedule=StringVar()

        self.var_eee_ia2_5th_subjects_entry=StringVar()
        self.var_eee_ia2_5th_time_entry=StringVar()
        self.var_eee_ia2_5th_date_entry=StringVar()
        self.var_eee_ia2_5th_code=StringVar()
        self.var_eee_ia2_5th_semister=StringVar()
        self.var_serach_eee_ia2_5th_semisters=StringVar()
        self.serch_eee_ia2_5th_ia_schedule=StringVar()

        self.var_eee_ia2_6th_subjects_entry=StringVar()
        self.var_eee_ia2_6th_time_entry=StringVar()
        self.var_eee_ia2_6th_date_entry=StringVar()
        self.var_eee_ia2_6th_code=StringVar()
        self.var_eee_ia2_6th_semister=StringVar()
        self.var_serach_eee_ia2_6th_semisters=StringVar()
        self.serch_eee_ia2_6th_ia_schedule=StringVar()

        self.var_eee_ia2_7th_subjects_entry=StringVar()
        self.var_eee_ia2_7th_time_entry=StringVar()
        self.var_eee_ia2_7th_date_entry=StringVar()
        self.var_eee_ia2_7th_code=StringVar()
        self.var_eee_ia2_7th_semister=StringVar()
        self.var_serach_eee_ia2_7th_semisters=StringVar()
        self.serch_eee_ia2_7th_ia_schedule=StringVar()

        self.var_eee_ia2_8th_subjects_entry=StringVar()
        self.var_eee_ia2_8th_time_entry=StringVar()
        self.var_eee_ia2_8th_date_entry=StringVar()
        self.var_eee_ia2_8th_code=StringVar()
        self.var_eee_ia2_8th_semister=StringVar()
        self.var_serach_eee_ia2_8th_semisters=StringVar()
        self.serch_eee_ia2_8th_ia_schedule=StringVar()
        ###########################################################
        self.var_ise_ia2_3rd_subjects_entry=StringVar()
        self.var_ise_ia2_3rd_time_entry=StringVar()
        self.var_ise_ia2_3rd_date_entry=StringVar()
        self.var_ise_ia2_3rd_code=StringVar()
        self.var_ise_ia2_3rd_semister=StringVar()
        self.var_serach_ise_ia2_3rd_semisters=StringVar()
        self.serch_ise_ia2_3rd_ia_schedule=StringVar()


        self.var_ise_ia2_4th_subjects_entry=StringVar()
        self.var_ise_ia2_4th_time_entry=StringVar()
        self.var_ise_ia2_4th_date_entry=StringVar()
        self.var_ise_ia2_4th_code=StringVar()
        self.var_ise_ia2_4th_semister=StringVar()
        self.var_serach_ise_ia2_4th_semisters=StringVar()
        self.serch_ise_ia2_4th_ia_schedule=StringVar()

        self.var_ise_ia2_5th_subjects_entry=StringVar()
        self.var_ise_ia2_5th_time_entry=StringVar()
        self.var_ise_ia2_5th_date_entry=StringVar()
        self.var_ise_ia2_5th_code=StringVar()
        self.var_ise_ia2_5th_semister=StringVar()
        self.var_serach_ise_ia2_5th_semisters=StringVar()
        self.serch_ise_ia2_5th_ia_schedule=StringVar()

        self.var_ise_ia2_6th_subjects_entry=StringVar()
        self.var_ise_ia2_6th_time_entry=StringVar()
        self.var_ise_ia2_6th_date_entry=StringVar()
        self.var_ise_ia2_6th_code=StringVar()
        self.var_ise_ia2_6th_semister=StringVar()
        self.var_serach_ise_ia2_6th_semisters=StringVar()
        self.serch_ise_ia2_6th_ia_schedule=StringVar()

        self.var_ise_ia2_7th_subjects_entry=StringVar()
        self.var_ise_ia2_7th_time_entry=StringVar()
        self.var_ise_ia2_7th_date_entry=StringVar()
        self.var_ise_ia2_7th_code=StringVar()
        self.var_ise_ia2_7th_semister=StringVar()
        self.var_serach_ise_ia2_7th_semisters=StringVar()
        self.serch_ise_ia2_7th_ia_schedule=StringVar()

        self.var_ise_ia2_8th_subjects_entry=StringVar()
        self.var_ise_ia2_8th_time_entry=StringVar()
        self.var_ise_ia2_8th_date_entry=StringVar()
        self.var_ise_ia2_8th_code=StringVar()
        self.var_ise_ia2_8th_semister=StringVar()
        self.var_serach_ise_ia2_8th_semisters=StringVar()
        self.serch_ise_ia2_8th_ia_schedule=StringVar()
        ##################################################
        self.var_ete_ia2_3rd_subjects_entry=StringVar()
        self.var_ete_ia2_3rd_time_entry=StringVar()
        self.var_ete_ia2_3rd_date_entry=StringVar()
        self.var_ete_ia2_3rd_code=StringVar()
        self.var_ete_ia2_3rd_semister=StringVar()
        self.var_serach_ete_ia2_3rd_semisters=StringVar()
        self.serch_ete_ia2_3rd_ia_schedule=StringVar()


        self.var_ete_ia2_4th_subjects_entry=StringVar()
        self.var_ete_ia2_4th_time_entry=StringVar()
        self.var_ete_ia2_4th_date_entry=StringVar()
        self.var_ete_ia2_4th_code=StringVar()
        self.var_ete_ia2_4th_semister=StringVar()
        self.var_serach_ete_ia2_4th_semisters=StringVar()
        self.serch_ete_ia2_4th_ia_schedule=StringVar()

        self.var_ete_ia2_5th_subjects_entry=StringVar()
        self.var_ete_ia2_5th_time_entry=StringVar()
        self.var_ete_ia2_5th_date_entry=StringVar()
        self.var_ete_ia2_5th_code=StringVar()
        self.var_ete_ia2_5th_semister=StringVar()
        self.var_serach_ete_ia2_5th_semisters=StringVar()
        self.serch_ete_ia2_5th_ia_schedule=StringVar()

        self.var_ete_ia2_6th_subjects_entry=StringVar()
        self.var_ete_ia2_6th_time_entry=StringVar()
        self.var_ete_ia2_6th_date_entry=StringVar()
        self.var_ete_ia2_6th_code=StringVar()
        self.var_ete_ia2_6th_semister=StringVar()
        self.var_serach_ete_ia2_6th_semisters=StringVar()
        self.serch_ete_ia2_6th_ia_schedule=StringVar()

        self.var_ete_ia2_7th_subjects_entry=StringVar()
        self.var_ete_ia2_7th_time_entry=StringVar()
        self.var_ete_ia2_7th_date_entry=StringVar()
        self.var_ete_ia2_7th_code=StringVar()
        self.var_ete_ia2_7th_semister=StringVar()
        self.var_serach_ete_ia2_7th_semisters=StringVar()
        self.serch_ete_ia2_7th_ia_schedule=StringVar()

        self.var_ete_ia2_8th_subjects_entry=StringVar()
        self.var_ete_ia2_8th_time_entry=StringVar()
        self.var_ete_ia2_8th_date_entry=StringVar()
        self.var_ete_ia2_8th_code=StringVar()
        self.var_ete_ia2_8th_semister=StringVar()
        self.var_serach_ete_ia2_8th_semisters=StringVar()
        self.serch_ete_ia2_8th_ia_schedule=StringVar()
        ################################################################################################################
        self.var_cs_ia2_3rd_subjects_entry=StringVar()
        self.var_cs_ia2_3rd_time_entry=StringVar()
        self.var_cs_ia2_3rd_date_entry=StringVar()
        self.var_cs_ia2_3rd_code=StringVar()
        self.var_cs_ia2_3rd_semister=StringVar()
        self.var_serach_cs_ia2_3rd_semisters=StringVar()
        self.serch_cs_ia2_3rd_ia_schedule=StringVar()


        self.var_cs_ia2_4th_subjects_entry=StringVar()
        self.var_cs_ia2_4th_time_entry=StringVar()
        self.var_cs_ia2_4th_date_entry=StringVar()
        self.var_cs_ia2_4th_code=StringVar()
        self.var_cs_ia2_4th_semister=StringVar()
        self.var_serach_cs_ia2_4th_semisters=StringVar()
        self.serch_cs_ia2_4th_ia_schedule=StringVar()

        self.var_cs_ia2_5th_subjects_entry=StringVar()
        self.var_cs_ia2_5th_time_entry=StringVar()
        self.var_cs_ia2_5th_date_entry=StringVar()
        self.var_cs_ia2_5th_code=StringVar()
        self.var_cs_ia2_5th_semister=StringVar()
        self.var_serach_cs_ia2_5th_semisters=StringVar()
        self.serch_cs_ia2_5th_ia_schedule=StringVar()

        self.var_cs_ia2_6th_subjects_entry=StringVar()
        self.var_cs_ia2_6th_time_entry=StringVar()
        self.var_cs_ia2_6th_date_entry=StringVar()
        self.var_cs_ia2_6th_code=StringVar()
        self.var_cs_ia2_6th_semister=StringVar()
        self.var_serach_cs_ia2_6th_semisters=StringVar()
        self.serch_cs_ia2_6th_ia_schedule=StringVar()

        self.var_cs_ia2_7th_subjects_entry=StringVar()
        self.var_cs_ia2_7th_time_entry=StringVar()
        self.var_cs_ia2_7th_date_entry=StringVar()
        self.var_cs_ia2_7th_code=StringVar()
        self.var_cs_ia2_7th_semister=StringVar()
        self.var_serach_cs_ia2_7th_semisters=StringVar()
        self.serch_cs_ia2_7th_ia_schedule=StringVar()

        self.var_cs_ia2_8th_subjects_entry=StringVar()
        self.var_cs_ia2_8th_time_entry=StringVar()
        self.var_cs_ia2_8th_date_entry=StringVar()
        self.var_cs_ia2_8th_code=StringVar()
        self.var_cs_ia2_8th_semister=StringVar()
        self.var_serach_cs_ia2_8th_semisters=StringVar()
        self.serch_cs_ia2_8th_ia_schedule=StringVar()


        #####################################################################################################################################################
        ####################################################################################################################################################
        ########################################################################################################################################################
        ###########################################################################################################################################################
        self.var_che_ia3_subjects_entry=StringVar()
        self.var_che_ia3_time_entry=StringVar()
        self.var_che_ia3_date_entry=StringVar()
        self.var_che_ia3_code=StringVar()
        self.var_che_ia3_semister=StringVar()
        self.var_serach_che_ia3_semisters=StringVar()

        self.var_phy_ia3_subjects_entry=StringVar()
        self.var_phy_ia3_time_entry=StringVar()
        self.var_phy_ia3_date_entry=StringVar()
        self.var_phy_ia3_code=StringVar()
        self.var_phy_ia3_semister=StringVar()
        self.var_serach_phy_ia3_semisters=StringVar()
        self.serch_phy_ia3_ia_schedule=StringVar()

        self.var_civil_ia3_3rd_subjects_entry=StringVar()
        self.var_civil_ia3_3rd_time_entry=StringVar()
        self.var_civil_ia3_3rd_date_entry=StringVar()
        self.var_civil_ia3_3rd_code=StringVar()
        self.var_civil_ia3_3rd_semister=StringVar()
        self.var_serach_civil_ia3_3rd_semisters=StringVar()
        self.serch_civil_ia3_3rd_ia_schedule=StringVar()


        self.var_civil_ia3_4th_subjects_entry=StringVar()
        self.var_civil_ia3_4th_time_entry=StringVar()
        self.var_civil_ia3_4th_date_entry=StringVar()
        self.var_civil_ia3_4th_code=StringVar()
        self.var_civil_ia3_4th_semister=StringVar()
        self.var_serach_civil_ia3_4th_semisters=StringVar()
        self.serch_civil_ia3_4th_ia_schedule=StringVar()

        self.var_civil_ia3_5th_subjects_entry=StringVar()
        self.var_civil_ia3_5th_time_entry=StringVar()
        self.var_civil_ia3_5th_date_entry=StringVar()
        self.var_civil_ia3_5th_code=StringVar()
        self.var_civil_ia3_5th_semister=StringVar()
        self.var_serach_civil_ia3_5th_semisters=StringVar()
        self.serch_civil_ia3_5th_ia_schedule=StringVar()

        self.var_civil_ia3_6th_subjects_entry=StringVar()
        self.var_civil_ia3_6th_time_entry=StringVar()
        self.var_civil_ia3_6th_date_entry=StringVar()
        self.var_civil_ia3_6th_code=StringVar()
        self.var_civil_ia3_6th_semister=StringVar()
        self.var_serach_civil_ia3_6th_semisters=StringVar()
        self.serch_civil_ia3_6th_ia_schedule=StringVar()

        self.var_civil_ia3_7th_subjects_entry=StringVar()
        self.var_civil_ia3_7th_time_entry=StringVar()
        self.var_civil_ia3_7th_date_entry=StringVar()
        self.var_civil_ia3_7th_code=StringVar()
        self.var_civil_ia3_7th_semister=StringVar()
        self.var_serach_civil_ia3_7th_semisters=StringVar()
        self.serch_civil_ia3_7th_ia_schedule=StringVar()

        self.var_civil_ia3_8th_subjects_entry=StringVar()
        self.var_civil_ia3_8th_time_entry=StringVar()
        self.var_civil_ia3_8th_date_entry=StringVar()
        self.var_civil_ia3_8th_code=StringVar()
        self.var_civil_ia3_8th_semister=StringVar()
        self.var_serach_civil_ia3_8th_semisters=StringVar()
        self.serch_civil_ia3_8th_ia_schedule=StringVar()

        self.var_mech_ia3_3rd_subjects_entry=StringVar()
        self.var_mech_ia3_3rd_time_entry=StringVar()
        self.var_mech_ia3_3rd_date_entry=StringVar()
        self.var_mech_ia3_3rd_code=StringVar()
        self.var_mech_ia3_3rd_semister=StringVar()
        self.var_serach_mech_ia3_3rd_semisters=StringVar()
        self.serch_mech_ia3_3rd_ia_schedule=StringVar()


        self.var_mech_ia3_4th_subjects_entry=StringVar()
        self.var_mech_ia3_4th_time_entry=StringVar()
        self.var_mech_ia3_4th_date_entry=StringVar()
        self.var_mech_ia3_4th_code=StringVar()
        self.var_mech_ia3_4th_semister=StringVar()
        self.var_serach_mech_ia3_4th_semisters=StringVar()
        self.serch_mech_ia3_4th_ia_schedule=StringVar()

        self.var_mech_ia3_5th_subjects_entry=StringVar()
        self.var_mech_ia3_5th_time_entry=StringVar()
        self.var_mech_ia3_5th_date_entry=StringVar()
        self.var_mech_ia3_5th_code=StringVar()
        self.var_mech_ia3_5th_semister=StringVar()
        self.var_serach_mech_ia3_5th_semisters=StringVar()
        self.serch_mech_ia3_5th_ia_schedule=StringVar()

        self.var_mech_ia3_6th_subjects_entry=StringVar()
        self.var_mech_ia3_6th_time_entry=StringVar()
        self.var_mech_ia3_6th_date_entry=StringVar()
        self.var_mech_ia3_6th_code=StringVar()
        self.var_mech_ia3_6th_semister=StringVar()
        self.var_serach_mech_ia3_6th_semisters=StringVar()
        self.serch_mech_ia3_6th_ia_schedule=StringVar()

        self.var_mech_ia3_7th_subjects_entry=StringVar()
        self.var_mech_ia3_7th_time_entry=StringVar()
        self.var_mech_ia3_7th_date_entry=StringVar()
        self.var_mech_ia3_7th_code=StringVar()
        self.var_mech_ia3_7th_semister=StringVar()
        self.var_serach_mech_ia3_7th_semisters=StringVar()
        self.serch_mech_ia3_7th_ia_schedule=StringVar()

        self.var_mech_ia3_8th_subjects_entry=StringVar()
        self.var_mech_ia3_8th_time_entry=StringVar()
        self.var_mech_ia3_8th_date_entry=StringVar()
        self.var_mech_ia3_8th_code=StringVar()
        self.var_mech_ia3_8th_semister=StringVar()
        self.var_serach_mech_ia3_8th_semisters=StringVar()
        self.serch_mech_ia3_8th_ia_schedule=StringVar()

        ###############################################
        self.var_ece_ia3_3rd_subjects_entry=StringVar()
        self.var_ece_ia3_3rd_time_entry=StringVar()
        self.var_ece_ia3_3rd_date_entry=StringVar()
        self.var_ece_ia3_3rd_code=StringVar()
        self.var_ece_ia3_3rd_semister=StringVar()
        self.var_serach_ece_ia3_3rd_semisters=StringVar()
        self.serch_ece_ia3_3rd_ia_schedule=StringVar()


        self.var_ece_ia3_4th_subjects_entry=StringVar()
        self.var_ece_ia3_4th_time_entry=StringVar()
        self.var_ece_ia3_4th_date_entry=StringVar()
        self.var_ece_ia3_4th_code=StringVar()
        self.var_ece_ia3_4th_semister=StringVar()
        self.var_serach_ece_ia3_4th_semisters=StringVar()
        self.serch_ece_ia3_4th_ia_schedule=StringVar()

        self.var_ece_ia3_5th_subjects_entry=StringVar()
        self.var_ece_ia3_5th_time_entry=StringVar()
        self.var_ece_ia3_5th_date_entry=StringVar()
        self.var_ece_ia3_5th_code=StringVar()
        self.var_ece_ia3_5th_semister=StringVar()
        self.var_serach_ece_ia3_5th_semisters=StringVar()
        self.serch_ece_ia3_5th_ia_schedule=StringVar()

        self.var_ece_ia3_6th_subjects_entry=StringVar()
        self.var_ece_ia3_6th_time_entry=StringVar()
        self.var_ece_ia3_6th_date_entry=StringVar()
        self.var_ece_ia3_6th_code=StringVar()
        self.var_ece_ia3_6th_semister=StringVar()
        self.var_serach_ece_ia3_6th_semisters=StringVar()
        self.serch_ece_ia3_6th_ia_schedule=StringVar()

        self.var_ece_ia3_7th_subjects_entry=StringVar()
        self.var_ece_ia3_7th_time_entry=StringVar()
        self.var_ece_ia3_7th_date_entry=StringVar()
        self.var_ece_ia3_7th_code=StringVar()
        self.var_ece_ia3_7th_semister=StringVar()
        self.var_serach_ece_ia3_7th_semisters=StringVar()
        self.serch_ece_ia3_7th_ia_schedule=StringVar()

        self.var_ece_ia3_8th_subjects_entry=StringVar()
        self.var_ece_ia3_8th_time_entry=StringVar()
        self.var_ece_ia3_8th_date_entry=StringVar()
        self.var_ece_ia3_8th_code=StringVar()
        self.var_ece_ia3_8th_semister=StringVar()
        self.var_serach_ece_ia3_8th_semisters=StringVar()
        self.serch_ece_ia3_8th_ia_schedule=StringVar()

        #########################################
        self.var_eee_ia3_3rd_subjects_entry=StringVar()
        self.var_eee_ia3_3rd_time_entry=StringVar()
        self.var_eee_ia3_3rd_date_entry=StringVar()
        self.var_eee_ia3_3rd_code=StringVar()
        self.var_eee_ia3_3rd_semister=StringVar()
        self.var_serach_eee_ia3_3rd_semisters=StringVar()
        self.serch_eee_ia3_3rd_ia_schedule=StringVar()


        self.var_eee_ia3_4th_subjects_entry=StringVar()
        self.var_eee_ia3_4th_time_entry=StringVar()
        self.var_eee_ia3_4th_date_entry=StringVar()
        self.var_eee_ia3_4th_code=StringVar()
        self.var_eee_ia3_4th_semister=StringVar()
        self.var_serach_eee_ia3_4th_semisters=StringVar()
        self.serch_eee_ia3_4th_ia_schedule=StringVar()

        self.var_eee_ia3_5th_subjects_entry=StringVar()
        self.var_eee_ia3_5th_time_entry=StringVar()
        self.var_eee_ia3_5th_date_entry=StringVar()
        self.var_eee_ia3_5th_code=StringVar()
        self.var_eee_ia3_5th_semister=StringVar()
        self.var_serach_eee_ia3_5th_semisters=StringVar()
        self.serch_eee_ia3_5th_ia_schedule=StringVar()

        self.var_eee_ia3_6th_subjects_entry=StringVar()
        self.var_eee_ia3_6th_time_entry=StringVar()
        self.var_eee_ia3_6th_date_entry=StringVar()
        self.var_eee_ia3_6th_code=StringVar()
        self.var_eee_ia3_6th_semister=StringVar()
        self.var_serach_eee_ia3_6th_semisters=StringVar()
        self.serch_eee_ia3_6th_ia_schedule=StringVar()

        self.var_eee_ia3_7th_subjects_entry=StringVar()
        self.var_eee_ia3_7th_time_entry=StringVar()
        self.var_eee_ia3_7th_date_entry=StringVar()
        self.var_eee_ia3_7th_code=StringVar()
        self.var_eee_ia3_7th_semister=StringVar()
        self.var_serach_eee_ia3_7th_semisters=StringVar()
        self.serch_eee_ia3_7th_ia_schedule=StringVar()

        self.var_eee_ia3_8th_subjects_entry=StringVar()
        self.var_eee_ia3_8th_time_entry=StringVar()
        self.var_eee_ia3_8th_date_entry=StringVar()
        self.var_eee_ia3_8th_code=StringVar()
        self.var_eee_ia3_8th_semister=StringVar()
        self.var_serach_eee_ia3_8th_semisters=StringVar()
        self.serch_eee_ia3_8th_ia_schedule=StringVar()
        ###########################################################
        self.var_ise_ia3_3rd_subjects_entry=StringVar()
        self.var_ise_ia3_3rd_time_entry=StringVar()
        self.var_ise_ia3_3rd_date_entry=StringVar()
        self.var_ise_ia3_3rd_code=StringVar()
        self.var_ise_ia3_3rd_semister=StringVar()
        self.var_serach_ise_ia3_3rd_semisters=StringVar()
        self.serch_ise_ia3_3rd_ia_schedule=StringVar()


        self.var_ise_ia3_4th_subjects_entry=StringVar()
        self.var_ise_ia3_4th_time_entry=StringVar()
        self.var_ise_ia3_4th_date_entry=StringVar()
        self.var_ise_ia3_4th_code=StringVar()
        self.var_ise_ia3_4th_semister=StringVar()
        self.var_serach_ise_ia3_4th_semisters=StringVar()
        self.serch_ise_ia3_4th_ia_schedule=StringVar()

        self.var_ise_ia3_5th_subjects_entry=StringVar()
        self.var_ise_ia3_5th_time_entry=StringVar()
        self.var_ise_ia3_5th_date_entry=StringVar()
        self.var_ise_ia3_5th_code=StringVar()
        self.var_ise_ia3_5th_semister=StringVar()
        self.var_serach_ise_ia3_5th_semisters=StringVar()
        self.serch_ise_ia3_5th_ia_schedule=StringVar()

        self.var_ise_ia3_6th_subjects_entry=StringVar()
        self.var_ise_ia3_6th_time_entry=StringVar()
        self.var_ise_ia3_6th_date_entry=StringVar()
        self.var_ise_ia3_6th_code=StringVar()
        self.var_ise_ia3_6th_semister=StringVar()
        self.var_serach_ise_ia3_6th_semisters=StringVar()
        self.serch_ise_ia3_6th_ia_schedule=StringVar()

        self.var_ise_ia3_7th_subjects_entry=StringVar()
        self.var_ise_ia3_7th_time_entry=StringVar()
        self.var_ise_ia3_7th_date_entry=StringVar()
        self.var_ise_ia3_7th_code=StringVar()
        self.var_ise_ia3_7th_semister=StringVar()
        self.var_serach_ise_ia3_7th_semisters=StringVar()
        self.serch_ise_ia3_7th_ia_schedule=StringVar()

        self.var_ise_ia3_8th_subjects_entry=StringVar()
        self.var_ise_ia3_8th_time_entry=StringVar()
        self.var_ise_ia3_8th_date_entry=StringVar()
        self.var_ise_ia3_8th_code=StringVar()
        self.var_ise_ia3_8th_semister=StringVar()
        self.var_serach_ise_ia3_8th_semisters=StringVar()
        self.serch_ise_ia3_8th_ia_schedule=StringVar()
        ##################################################
        self.var_ete_ia3_3rd_subjects_entry=StringVar()
        self.var_ete_ia3_3rd_time_entry=StringVar()
        self.var_ete_ia3_3rd_date_entry=StringVar()
        self.var_ete_ia3_3rd_code=StringVar()
        self.var_ete_ia3_3rd_semister=StringVar()
        self.var_serach_ete_ia3_3rd_semisters=StringVar()
        self.serch_ete_ia3_3rd_ia_schedule=StringVar()


        self.var_ete_ia3_4th_subjects_entry=StringVar()
        self.var_ete_ia3_4th_time_entry=StringVar()
        self.var_ete_ia3_4th_date_entry=StringVar()
        self.var_ete_ia3_4th_code=StringVar()
        self.var_ete_ia3_4th_semister=StringVar()
        self.var_serach_ete_ia3_4th_semisters=StringVar()
        self.serch_ete_ia3_4th_ia_schedule=StringVar()

        self.var_ete_ia3_5th_subjects_entry=StringVar()
        self.var_ete_ia3_5th_time_entry=StringVar()
        self.var_ete_ia3_5th_date_entry=StringVar()
        self.var_ete_ia3_5th_code=StringVar()
        self.var_ete_ia3_5th_semister=StringVar()
        self.var_serach_ete_ia3_5th_semisters=StringVar()
        self.serch_ete_ia3_5th_ia_schedule=StringVar()

        self.var_ete_ia3_6th_subjects_entry=StringVar()
        self.var_ete_ia3_6th_time_entry=StringVar()
        self.var_ete_ia3_6th_date_entry=StringVar()
        self.var_ete_ia3_6th_code=StringVar()
        self.var_ete_ia3_6th_semister=StringVar()
        self.var_serach_ete_ia3_6th_semisters=StringVar()
        self.serch_ete_ia3_6th_ia_schedule=StringVar()

        self.var_ete_ia3_7th_subjects_entry=StringVar()
        self.var_ete_ia3_7th_time_entry=StringVar()
        self.var_ete_ia3_7th_date_entry=StringVar()
        self.var_ete_ia3_7th_code=StringVar()
        self.var_ete_ia3_7th_semister=StringVar()
        self.var_serach_ete_ia3_7th_semisters=StringVar()
        self.serch_ete_ia3_7th_ia_schedule=StringVar()

        self.var_ete_ia3_8th_subjects_entry=StringVar()
        self.var_ete_ia3_8th_time_entry=StringVar()
        self.var_ete_ia3_8th_date_entry=StringVar()
        self.var_ete_ia3_8th_code=StringVar()
        self.var_ete_ia3_8th_semister=StringVar()
        self.var_serach_ete_ia3_8th_semisters=StringVar()
        self.serch_ete_ia3_8th_ia_schedule=StringVar()
        ################################################################################################################
        self.var_cs_ia3_3rd_subjects_entry=StringVar()
        self.var_cs_ia3_3rd_time_entry=StringVar()
        self.var_cs_ia3_3rd_date_entry=StringVar()
        self.var_cs_ia3_3rd_code=StringVar()
        self.var_cs_ia3_3rd_semister=StringVar()
        self.var_serach_cs_ia3_3rd_semisters=StringVar()
        self.serch_cs_ia3_3rd_ia_schedule=StringVar()


        self.var_cs_ia3_4th_subjects_entry=StringVar()
        self.var_cs_ia3_4th_time_entry=StringVar()
        self.var_cs_ia3_4th_date_entry=StringVar()
        self.var_cs_ia3_4th_code=StringVar()
        self.var_cs_ia3_4th_semister=StringVar()
        self.var_serach_cs_ia3_4th_semisters=StringVar()
        self.serch_cs_ia3_4th_ia_schedule=StringVar()

        self.var_cs_ia3_5th_subjects_entry=StringVar()
        self.var_cs_ia3_5th_time_entry=StringVar()
        self.var_cs_ia3_5th_date_entry=StringVar()
        self.var_cs_ia3_5th_code=StringVar()
        self.var_cs_ia3_5th_semister=StringVar()
        self.var_serach_cs_ia3_5th_semisters=StringVar()
        self.serch_cs_ia3_5th_ia_schedule=StringVar()

        self.var_cs_ia3_6th_subjects_entry=StringVar()
        self.var_cs_ia3_6th_time_entry=StringVar()
        self.var_cs_ia3_6th_date_entry=StringVar()
        self.var_cs_ia3_6th_code=StringVar()
        self.var_cs_ia3_6th_semister=StringVar()
        self.var_serach_cs_ia3_6th_semisters=StringVar()
        self.serch_cs_ia3_6th_ia_schedule=StringVar()

        self.var_cs_ia3_7th_subjects_entry=StringVar()
        self.var_cs_ia3_7th_time_entry=StringVar()
        self.var_cs_ia3_7th_date_entry=StringVar()
        self.var_cs_ia3_7th_code=StringVar()
        self.var_cs_ia3_7th_semister=StringVar()
        self.var_serach_cs_ia3_7th_semisters=StringVar()
        self.serch_cs_ia3_7th_ia_schedule=StringVar()

        self.var_cs_ia3_8th_subjects_entry=StringVar()
        self.var_cs_ia3_8th_time_entry=StringVar()
        self.var_cs_ia3_8th_date_entry=StringVar()
        self.var_cs_ia3_8th_code=StringVar()
        self.var_cs_ia3_8th_semister=StringVar()
        self.var_serach_cs_ia3_8th_semisters=StringVar()
        self.serch_cs_ia3_8th_ia_schedule=StringVar()

        top_label=tk.Label(self.root,text='Add IA Schedule',font=('Bahnschrift',20),fg='white',bg='#033054')
        top_label.place(x=0,y=0,relwidth=1,height=40)

        menu_frame=tk.LabelFrame(self.root,text='Menu',font=('times now roman',10,'bold'),fg='#262626')
        menu_frame.place(x=10,y=40,width=1035,height=55)

        self.semister_entry=ttk.Combobox(menu_frame,width=43,textvariable=self.var_student_semister_select)
        self.semister_entry.grid(row=0,column=1,padx=5,pady=3)
        self.semister_entry['values']=(
            'CHEMISTRY_cycle',
            'PHYSICS_cycle',
            '3rd_Semister',
            '4th_Semister',
            '5th_Semister',
            '6th_Semister',
            '7th_Semister',
            '8th_Semister'
        )
        branch_entry=ttk.Combobox(menu_frame,width=45,textvariable=self.var_student_branch_select)
        branch_entry.grid(row=0,column=2,padx=5,pady=3)
        branch_entry['values']=(
                                    '1st_semister',
                                    '2nd_semister',
                                    'Civil_Engineering',
                                    'Mechanical_Engineering',
                                    'Electrical_And_Electronic_Engineering',
                                    'Electronic_And_Communication_Engineering',
                                    'Computer_Science_Engineering',
                                    'Information_Science_and_Engineering',
                                    'Electronic_And_Telecommunication_Engineering'
        )

        ia_entry=ttk.Combobox(menu_frame,width=40,textvariable=self.var_ia_select)
        ia_entry.grid(row=0,column=3,padx=5,pady=3)
        ia_entry['values']=(
            'IA_1',
            'IA_2',
            'IA_3'
        )
        button2=ttk.Button(menu_frame,text='Search',width=20,command=self.serach_student).grid(row=0,column=4,padx=4,pady=3)
        self.add_student_frame=Frame(self.root,width=1035,height=300,relief=RIDGE)
        self.add_student_frame.place(x=10,y=110)

        addStudentNoteBook=ttk.Notebook(self.add_student_frame)
        addStudentNoteBook.place(x=0,y=0)
        
        self.frame1=ttk.Frame(addStudentNoteBook,width=1035,height=300)
        self.frame2=ttk.Frame(addStudentNoteBook,width=1035,height=260)
        self.frame3=ttk.Frame(addStudentNoteBook,width=1035,height=260)
        
        
        self.frame1.pack(fill='both')
        self.frame2.pack(fill='both')
        self.frame3.pack(fill='both')
        

        
        addStudentNoteBook.add(self.frame1,text='       IA - 1          ')
        addStudentNoteBook.add(self.frame2,text='       IA - 2     ')
        addStudentNoteBook.add(self.frame3,text='       IA - 3   ')

        bottom_label=tk.Label(self.root,text='Addwdbh duhh fhg  gf goerg bv jdj eehfgvl vzfg zlgfgvv',font=('Bahnschrift',10),fg='white',bg='#363636')
        bottom_label.place(x=0,y=418,width=1055)
   

    def serach_student(self):
        if self.var_student_semister_select.get()=='CHEMISTRY_cycle':
            if self.var_student_branch_select.get()=="1st_semister":
                if self.var_ia_select.get()=='IA_1':
                    che_subjects_list=[]
                    def fetch_che_subjects():
                        #all_che_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select che_subjects from all_che_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    che_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_che_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_che_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_che_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_che_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_che_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'che_subjects','che_date','che_time','che_code','semisters','branch'
                                        cur.execute('insert into che_ia1_schedule(che_subjects,che_date,che_time,che_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_che_subjects_entry.get(),
                                            self.var_che_date_entry.get(),
                                            self.var_che_time_entry.get(),
                                            self.var_che_code.get(),
                                            self.var_che_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_che_ia_schedule()
                                        con.close()
                    def fetch_che_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from che_ia1_schedule')
                            rows=cur.fetchall()
                            tree_che_treeview.delete(*tree_che_treeview.get_children())
                            for row in rows:
                                tree_che_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_che_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_che_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from che_ia1_schedule where che_subjects=?',(self.var_che_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from che_ia1_schedule where che_subjects=? ',(self.var_che_subjects_entry.get(),))
                                        messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                        con.commit()
                                        clear_che_all()
                                        fetch_che_ia_schedule()
                                        con.close()
                                    
                                    if option==False:
                                        messagebox.showinfo('Info','the data is not deleted.',parent=frame)
                                
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_che_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_che_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update che_ia1_schedule set che_date=?,che_time=?,che_code=?,semisters=?,branch=?  where che_subjects=?',(
                                self.var_che_date_entry.get(),
                                self.var_che_time_entry.get(),
                                self.var_che_code.get(),
                                self.var_che_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_che_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_che_ia_schedule()
                                clear_che_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_che_all():
                        fetch_che_ia_schedule()
                        self.var_che_subjects_entry.set("")
                        self.var_che_date_entry.set("")
                        self.var_che_time_entry.set("")
                        self.var_che_code.set("")
                        self.var_che_semister.set("")
                        self.var_serach_che_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_che_ia_schedule(ev):
                        read=tree_che_treeview.focus()
                        content=tree_che_treeview.item(read)
                        row=content['values']

                        self.var_che_subjects_entry.set(row[1])
                        self.var_che_date_entry.set(row[2])
                        self.var_che_time_entry.set(row[3])
                        self.var_che_code.set(row[4])
                        self.var_che_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_che_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_che_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from che_ia1_schedule where che_subjects=?",(self.var_serach_che_semisters.get(),))
                                rows=cur.fetchall()
                                tree_che_treeview.delete(*tree_che_treeview.get_children())
                                for row in rows:
                                    tree_che_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_che_subjects()
                    che_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_che_subjects_entry,values=che_subjects_list).place(x=87,y=14)

                    che_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_che_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    che_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_che_time_entry).place(x=569,y=14)

                    che_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_che_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_che_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_che_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_che_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_che_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_che_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_che_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_che_treeview=ttk.Treeview(tree_frame1,columns=('che_subjects','che_date','che_time','che_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_che_treeview.xview)
                    scrolly.configure(command=tree_che_treeview.yview)

                    tree_che_treeview.heading('che_subjects',text="Subjects")
                    tree_che_treeview.heading('che_date',text="Date")
                    tree_che_treeview.heading('che_time',text="Time")
                    tree_che_treeview.heading('che_code',text="Code")
                    tree_che_treeview.heading('semisters',text="Semister")
                    tree_che_treeview.heading('branch',text="Branch")

                    tree_che_treeview.column('che_subjects',width=200)
                    tree_che_treeview.column('che_date',width=150)
                    tree_che_treeview.column('che_time',width=150)
                    tree_che_treeview.column('che_code',width=150)
                    tree_che_treeview.column('semisters',width=150)
                    tree_che_treeview.column('branch',width=200)

                    tree_che_treeview['show']='headings'
                
                    tree_che_treeview.pack(fill=BOTH,expand=1)
                    fetch_che_ia_schedule()
                    tree_che_treeview.bind('<ButtonRelease-1>',get_che_ia_schedule)
        if self.var_student_semister_select.get()=='PHYSICS_cycle':
            if self.var_student_branch_select.get()=="2nd_semister":
                if self.var_ia_select.get()=='IA_1':
                    phy_subjects_list=[]
                    def fetch_phy_subjects():
                        #all_phy_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select phy_subjects from all_phy_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    phy_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_phy_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_phy_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_phy_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_phy_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_phy_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'phy_subjects','phy_date','phy_time','phy_code','semisters','branch'
                                        cur.execute('insert into phy_ia1_schedule(phy_subjects,phy_date,phy_time,phy_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_phy_subjects_entry.get(),
                                            self.var_phy_date_entry.get(),
                                            self.var_phy_time_entry.get(),
                                            self.var_phy_code.get(),
                                            self.var_phy_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_phy_ia_schedule()
                                        con.close()
                    def fetch_phy_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from phy_ia1_schedule')
                            rows=cur.fetchall()
                            tree_phy_treeview.delete(*tree_phy_treeview.get_children())
                            for row in rows:
                                tree_phy_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_phy_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_phy_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from phy_ia1_schedule where phy_subjects=?',(self.var_phy_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from phy_ia1_schedule where phy_subjects=? ',(self.var_phy_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_phy_all()
                                    fetch_phy_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_phy_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_phy_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update phy_ia1_schedule set phy_date=?,phy_time=?,phy_code=?,semisters=?,branch=?  where phy_subjects=?',(
                                self.var_phy_date_entry.get(),
                                self.var_phy_time_entry.get(),
                                self.var_phy_code.get(),
                                self.var_phy_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_phy_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_phy_ia_schedule()
                                clear_phy_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_phy_all():
                        fetch_phy_ia_schedule()
                        self.var_phy_subjects_entry.set("")
                        self.var_phy_date_entry.set("")
                        self.var_phy_time_entry.set("")
                        self.var_phy_code.set("")
                        self.var_phy_semister.set("")
                        self.var_serach_phy_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_phy_ia_schedule(ev):
                        read=tree_phy_treeview.focus()
                        content=tree_phy_treeview.item(read)
                        row=content['values']

                        self.var_phy_subjects_entry.set(row[1])
                        self.var_phy_date_entry.set(row[2])
                        self.var_phy_time_entry.set(row[3])
                        self.var_phy_code.set(row[4])
                        self.var_phy_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_phy_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_phy_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from phy_ia1_schedule where phy_subjects=?",(self.var_serach_phy_semisters.get(),))
                                rows=cur.fetchall()
                                tree_phy_treeview.delete(*tree_phy_treeview.get_children())
                                for row in rows:
                                    tree_phy_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_phy_subjects()
                    phy_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_phy_subjects_entry,values=phy_subjects_list).place(x=87,y=14)

                    phy_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_phy_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    phy_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_phy_time_entry).place(x=569,y=14)

                    phy_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_phy_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_phy_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_phy_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_phy_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_phy_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_phy_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_phy_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_phy_treeview=ttk.Treeview(tree_frame1,columns=('phy_subjects','phy_date','phy_time','phy_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_phy_treeview.xview)
                    scrolly.configure(command=tree_phy_treeview.yview)

                    tree_phy_treeview.heading('phy_subjects',text="Subjects")
                    tree_phy_treeview.heading('phy_date',text="Date")
                    tree_phy_treeview.heading('phy_time',text="Time")
                    tree_phy_treeview.heading('phy_code',text="Code")
                    tree_phy_treeview.heading('semisters',text="Semister")
                    tree_phy_treeview.heading('branch',text="Branch")

                    tree_phy_treeview.column('phy_subjects',width=200)
                    tree_phy_treeview.column('phy_date',width=150)
                    tree_phy_treeview.column('phy_time',width=150)
                    tree_phy_treeview.column('phy_code',width=150)
                    tree_phy_treeview.column('semisters',width=150)
                    tree_phy_treeview.column('branch',width=200)

                    tree_phy_treeview['show']='headings'
                
                    tree_phy_treeview.pack(fill=BOTH,expand=1)
                    fetch_phy_ia_schedule()
                    tree_phy_treeview.bind('<ButtonRelease-1>',get_phy_ia_schedule)

        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Civil_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    civil_3rd_subjects_list=[]
                    def fetch_civil_3rd_subjects():
                        #all_civil_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select civil_3rd_subjects from all_civil_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    civil_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_civil_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_civil_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_civil_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_civil_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_civil_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'civil_3rd_subjects','civil_3rd_date','civil_3rd_time','civil_3rd_code','semisters','branch'
                                        cur.execute('insert into civil_3rd_schedule(civil_3rd_subjects,civil_3rd_date,civil_3rd_time,civil_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_civil_3rd_subjects_entry.get(),
                                            self.var_civil_3rd_date_entry.get(),
                                            self.var_civil_3rd_time_entry.get(),
                                            self.var_civil_3rd_code.get(),
                                            self.var_civil_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_civil_3rd_ia_schedule()
                                        con.close()
                    def fetch_civil_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_3rd_schedule')
                            rows=cur.fetchall()
                            tree_civil_3rd_treeview.delete(*tree_civil_3rd_treeview.get_children())
                            for row in rows:
                                tree_civil_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_civil_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from civil_3rd_schedule where civil_3rd_subjects=?',(self.var_civil_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from civil_3rd_schedule where civil_3rd_subjects=? ',(self.var_civil_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_civil_3rd_all()
                                    fetch_civil_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_civil_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update civil_3rd_schedule set civil_3rd_date=?,civil_3rd_time=?,civil_3rd_code=?,semisters=?,branch=?  where civil_3rd_subjects=?',(
                                self.var_civil_3rd_date_entry.get(),
                                self.var_civil_3rd_time_entry.get(),
                                self.var_civil_3rd_code.get(),
                                self.var_civil_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_civil_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_civil_3rd_ia_schedule()
                                clear_civil_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_civil_3rd_all():
                        fetch_civil_3rd_ia_schedule()
                        self.var_civil_3rd_subjects_entry.set("")
                        self.var_civil_3rd_date_entry.set("")
                        self.var_civil_3rd_time_entry.set("")
                        self.var_civil_3rd_code.set("")
                        self.var_civil_3rd_semister.set("")
                        self.var_serach_civil_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_civil_3rd_ia_schedule(ev):
                        read=tree_civil_3rd_treeview.focus()
                        content=tree_civil_3rd_treeview.item(read)
                        row=content['values']

                        self.var_civil_3rd_subjects_entry.set(row[1])
                        self.var_civil_3rd_date_entry.set(row[2])
                        self.var_civil_3rd_time_entry.set(row[3])
                        self.var_civil_3rd_code.set(row[4])
                        self.var_civil_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_civil_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_civil_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from civil_3rd_schedule where civil_3rd_subjects=?",(self.var_serach_civil_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_civil_3rd_treeview.delete(*tree_civil_3rd_treeview.get_children())
                                for row in rows:
                                    tree_civil_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_civil_3rd_subjects()
                    civil_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_civil_3rd_subjects_entry,values=civil_3rd_subjects_list).place(x=87,y=14)

                    civil_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_civil_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    civil_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_3rd_time_entry).place(x=569,y=14)

                    civil_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_civil_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_civil_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_civil_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_civil_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_civil_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_civil_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_civil_3rd_treeview=ttk.Treeview(tree_frame1,columns=('civil_3rd_subjects','civil_3rd_date','civil_3rd_time','civil_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_civil_3rd_treeview.xview)
                    scrolly.configure(command=tree_civil_3rd_treeview.yview)

                    tree_civil_3rd_treeview.heading('civil_3rd_subjects',text="Subjects")
                    tree_civil_3rd_treeview.heading('civil_3rd_date',text="Date")
                    tree_civil_3rd_treeview.heading('civil_3rd_time',text="Time")
                    tree_civil_3rd_treeview.heading('civil_3rd_code',text="Code")
                    tree_civil_3rd_treeview.heading('semisters',text="Semister")
                    tree_civil_3rd_treeview.heading('branch',text="Branch")

                    tree_civil_3rd_treeview.column('civil_3rd_subjects',width=200)
                    tree_civil_3rd_treeview.column('civil_3rd_date',width=150)
                    tree_civil_3rd_treeview.column('civil_3rd_time',width=150)
                    tree_civil_3rd_treeview.column('civil_3rd_code',width=150)
                    tree_civil_3rd_treeview.column('semisters',width=150)
                    tree_civil_3rd_treeview.column('branch',width=200)

                    tree_civil_3rd_treeview['show']='headings'
                
                    tree_civil_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_civil_3rd_ia_schedule()
                    tree_civil_3rd_treeview.bind('<ButtonRelease-1>',get_civil_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Civil_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    civil_4th_subjects_list=[]
                    def fetch_civil_4th_subjects():
                        #all_civil_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select civil_4th_subjects from all_civil_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    civil_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_civil_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_civil_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_civil_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_civil_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_civil_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'civil_4th_subjects','civil_4th_date','civil_4th_time','civil_4th_code','semisters','branch'
                                        cur.execute('insert into civil_4th_schedule(civil_4th_subjects,civil_4th_date,civil_4th_time,civil_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_civil_4th_subjects_entry.get(),
                                            self.var_civil_4th_date_entry.get(),
                                            self.var_civil_4th_time_entry.get(),
                                            self.var_civil_4th_code.get(),
                                            self.var_civil_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_civil_4th_ia_schedule()
                                        con.close()
                    def fetch_civil_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_4th_schedule')
                            rows=cur.fetchall()
                            tree_civil_4th_treeview.delete(*tree_civil_4th_treeview.get_children())
                            for row in rows:
                                tree_civil_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_civil_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from civil_4th_schedule where civil_4th_subjects=?',(self.var_civil_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from civil_4th_schedule where civil_4th_subjects=? ',(self.var_civil_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_civil_4th_all()
                                    fetch_civil_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_civil_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update civil_4th_schedule set civil_4th_date=?,civil_4th_time=?,civil_4th_code=?,semisters=?,branch=?  where civil_4th_subjects=?',(
                                self.var_civil_4th_date_entry.get(),
                                self.var_civil_4th_time_entry.get(),
                                self.var_civil_4th_code.get(),
                                self.var_civil_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_civil_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_civil_4th_ia_schedule()
                                clear_civil_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_civil_4th_all():
                        fetch_civil_4th_ia_schedule()
                        self.var_civil_4th_subjects_entry.set("")
                        self.var_civil_4th_date_entry.set("")
                        self.var_civil_4th_time_entry.set("")
                        self.var_civil_4th_code.set("")
                        self.var_civil_4th_semister.set("")
                        self.var_serach_civil_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_civil_4th_ia_schedule(ev):
                        read=tree_civil_4th_treeview.focus()
                        content=tree_civil_4th_treeview.item(read)
                        row=content['values']

                        self.var_civil_4th_subjects_entry.set(row[1])
                        self.var_civil_4th_date_entry.set(row[2])
                        self.var_civil_4th_time_entry.set(row[3])
                        self.var_civil_4th_code.set(row[4])
                        self.var_civil_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_civil_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_civil_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from civil_4th_schedule where civil_4th_subjects=?",(self.var_serach_civil_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_civil_4th_treeview.delete(*tree_civil_4th_treeview.get_children())
                                for row in rows:
                                    tree_civil_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_civil_4th_subjects()
                    civil_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_civil_4th_subjects_entry,values=civil_4th_subjects_list).place(x=87,y=14)

                    civil_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_civil_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    civil_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_4th_time_entry).place(x=569,y=14)

                    civil_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_civil_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_civil_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_civil_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_civil_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_civil_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_civil_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_civil_4th_treeview=ttk.Treeview(tree_frame1,columns=('civil_4th_subjects','civil_4th_date','civil_4th_time','civil_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_civil_4th_treeview.xview)
                    scrolly.configure(command=tree_civil_4th_treeview.yview)

                    tree_civil_4th_treeview.heading('civil_4th_subjects',text="Subjects")
                    tree_civil_4th_treeview.heading('civil_4th_date',text="Date")
                    tree_civil_4th_treeview.heading('civil_4th_time',text="Time")
                    tree_civil_4th_treeview.heading('civil_4th_code',text="Code")
                    tree_civil_4th_treeview.heading('semisters',text="Semister")
                    tree_civil_4th_treeview.heading('branch',text="Branch")

                    tree_civil_4th_treeview.column('civil_4th_subjects',width=200)
                    tree_civil_4th_treeview.column('civil_4th_date',width=150)
                    tree_civil_4th_treeview.column('civil_4th_time',width=150)
                    tree_civil_4th_treeview.column('civil_4th_code',width=150)
                    tree_civil_4th_treeview.column('semisters',width=150)
                    tree_civil_4th_treeview.column('branch',width=200)

                    tree_civil_4th_treeview['show']='headings'
                
                    tree_civil_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_civil_4th_ia_schedule()
                    tree_civil_4th_treeview.bind('<ButtonRelease-1>',get_civil_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Civil_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    civil_5th_subjects_list=[]
                    def fetch_civil_5th_subjects():
                        #all_civil_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select civil_5th_subjects from all_civil_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    civil_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_civil_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_civil_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_civil_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_civil_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_civil_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'civil_5th_subjects','civil_5th_date','civil_5th_time','civil_5th_code','semisters','branch'
                                        cur.execute('insert into civil_5th_schedule(civil_5th_subjects,civil_5th_date,civil_5th_time,civil_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_civil_5th_subjects_entry.get(),
                                            self.var_civil_5th_date_entry.get(),
                                            self.var_civil_5th_time_entry.get(),
                                            self.var_civil_5th_code.get(),
                                            self.var_civil_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_civil_5th_ia_schedule()
                                        con.close()
                    def fetch_civil_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_5th_schedule')
                            rows=cur.fetchall()
                            tree_civil_5th_treeview.delete(*tree_civil_5th_treeview.get_children())
                            for row in rows:
                                tree_civil_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_civil_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from civil_5th_schedule where civil_5th_subjects=?',(self.var_civil_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from civil_5th_schedule where civil_5th_subjects=? ',(self.var_civil_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_civil_5th_all()
                                    fetch_civil_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_civil_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update civil_5th_schedule set civil_5th_date=?,civil_5th_time=?,civil_5th_code=?,semisters=?,branch=?  where civil_5th_subjects=?',(
                                self.var_civil_5th_date_entry.get(),
                                self.var_civil_5th_time_entry.get(),
                                self.var_civil_5th_code.get(),
                                self.var_civil_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_civil_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_civil_5th_ia_schedule()
                                clear_civil_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_civil_5th_all():
                        fetch_civil_5th_ia_schedule()
                        self.var_civil_5th_subjects_entry.set("")
                        self.var_civil_5th_date_entry.set("")
                        self.var_civil_5th_time_entry.set("")
                        self.var_civil_5th_code.set("")
                        self.var_civil_5th_semister.set("")
                        self.var_serach_civil_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_civil_5th_ia_schedule(ev):
                        read=tree_civil_5th_treeview.focus()
                        content=tree_civil_5th_treeview.item(read)
                        row=content['values']

                        self.var_civil_5th_subjects_entry.set(row[1])
                        self.var_civil_5th_date_entry.set(row[2])
                        self.var_civil_5th_time_entry.set(row[3])
                        self.var_civil_5th_code.set(row[4])
                        self.var_civil_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_civil_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_civil_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from civil_5th_schedule where civil_5th_subjects=?",(self.var_serach_civil_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_civil_5th_treeview.delete(*tree_civil_5th_treeview.get_children())
                                for row in rows:
                                    tree_civil_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_civil_5th_subjects()
                    civil_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_civil_5th_subjects_entry,values=civil_5th_subjects_list).place(x=87,y=14)

                    civil_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_civil_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    civil_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_5th_time_entry).place(x=569,y=14)

                    civil_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_civil_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_civil_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_civil_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_civil_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_civil_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_civil_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_civil_5th_treeview=ttk.Treeview(tree_frame1,columns=('civil_5th_subjects','civil_5th_date','civil_5th_time','civil_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_civil_5th_treeview.xview)
                    scrolly.configure(command=tree_civil_5th_treeview.yview)

                    tree_civil_5th_treeview.heading('civil_5th_subjects',text="Subjects")
                    tree_civil_5th_treeview.heading('civil_5th_date',text="Date")
                    tree_civil_5th_treeview.heading('civil_5th_time',text="Time")
                    tree_civil_5th_treeview.heading('civil_5th_code',text="Code")
                    tree_civil_5th_treeview.heading('semisters',text="Semister")
                    tree_civil_5th_treeview.heading('branch',text="Branch")

                    tree_civil_5th_treeview.column('civil_5th_subjects',width=200)
                    tree_civil_5th_treeview.column('civil_5th_date',width=150)
                    tree_civil_5th_treeview.column('civil_5th_time',width=150)
                    tree_civil_5th_treeview.column('civil_5th_code',width=150)
                    tree_civil_5th_treeview.column('semisters',width=150)
                    tree_civil_5th_treeview.column('branch',width=200)

                    tree_civil_5th_treeview['show']='headings'
                
                    tree_civil_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_civil_5th_ia_schedule()
                    tree_civil_5th_treeview.bind('<ButtonRelease-1>',get_civil_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Civil_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    civil_6th_subjects_list=[]
                    def fetch_civil_6th_subjects():
                        #all_civil_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select civil_6th_subjects from all_civil_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    civil_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_civil_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_civil_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_civil_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_civil_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_civil_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'civil_6th_subjects','civil_6th_date','civil_6th_time','civil_6th_code','semisters','branch'
                                        cur.execute('insert into civil_6th_schedule(civil_6th_subjects,civil_6th_date,civil_6th_time,civil_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_civil_6th_subjects_entry.get(),
                                            self.var_civil_6th_date_entry.get(),
                                            self.var_civil_6th_time_entry.get(),
                                            self.var_civil_6th_code.get(),
                                            self.var_civil_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_civil_6th_ia_schedule()
                                        con.close()
                    def fetch_civil_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_6th_schedule')
                            rows=cur.fetchall()
                            tree_civil_6th_treeview.delete(*tree_civil_6th_treeview.get_children())
                            for row in rows:
                                tree_civil_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_civil_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from civil_6th_schedule where civil_6th_subjects=?',(self.var_civil_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from civil_6th_schedule where civil_6th_subjects=? ',(self.var_civil_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_civil_6th_all()
                                    fetch_civil_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_civil_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update civil_6th_schedule set civil_6th_date=?,civil_6th_time=?,civil_6th_code=?,semisters=?,branch=?  where civil_6th_subjects=?',(
                                self.var_civil_6th_date_entry.get(),
                                self.var_civil_6th_time_entry.get(),
                                self.var_civil_6th_code.get(),
                                self.var_civil_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_civil_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_civil_6th_ia_schedule()
                                clear_civil_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_civil_6th_all():
                        fetch_civil_6th_ia_schedule()
                        self.var_civil_6th_subjects_entry.set("")
                        self.var_civil_6th_date_entry.set("")
                        self.var_civil_6th_time_entry.set("")
                        self.var_civil_6th_code.set("")
                        self.var_civil_6th_semister.set("")
                        self.var_serach_civil_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_civil_6th_ia_schedule(ev):
                        read=tree_civil_6th_treeview.focus()
                        content=tree_civil_6th_treeview.item(read)
                        row=content['values']

                        self.var_civil_6th_subjects_entry.set(row[1])
                        self.var_civil_6th_date_entry.set(row[2])
                        self.var_civil_6th_time_entry.set(row[3])
                        self.var_civil_6th_code.set(row[4])
                        self.var_civil_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_civil_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_civil_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from civil_6th_schedule where civil_6th_subjects=?",(self.var_serach_civil_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_civil_6th_treeview.delete(*tree_civil_6th_treeview.get_children())
                                for row in rows:
                                    tree_civil_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_civil_6th_subjects()
                    civil_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_civil_6th_subjects_entry,values=civil_6th_subjects_list).place(x=87,y=14)

                    civil_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_civil_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    civil_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_6th_time_entry).place(x=569,y=14)

                    civil_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_civil_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_civil_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_civil_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_civil_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_civil_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_civil_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_civil_6th_treeview=ttk.Treeview(tree_frame1,columns=('civil_6th_subjects','civil_6th_date','civil_6th_time','civil_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_civil_6th_treeview.xview)
                    scrolly.configure(command=tree_civil_6th_treeview.yview)

                    tree_civil_6th_treeview.heading('civil_6th_subjects',text="Subjects")
                    tree_civil_6th_treeview.heading('civil_6th_date',text="Date")
                    tree_civil_6th_treeview.heading('civil_6th_time',text="Time")
                    tree_civil_6th_treeview.heading('civil_6th_code',text="Code")
                    tree_civil_6th_treeview.heading('semisters',text="Semister")
                    tree_civil_6th_treeview.heading('branch',text="Branch")

                    tree_civil_6th_treeview.column('civil_6th_subjects',width=200)
                    tree_civil_6th_treeview.column('civil_6th_date',width=150)
                    tree_civil_6th_treeview.column('civil_6th_time',width=150)
                    tree_civil_6th_treeview.column('civil_6th_code',width=150)
                    tree_civil_6th_treeview.column('semisters',width=150)
                    tree_civil_6th_treeview.column('branch',width=200)

                    tree_civil_6th_treeview['show']='headings'
                
                    tree_civil_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_civil_6th_ia_schedule()
                    tree_civil_6th_treeview.bind('<ButtonRelease-1>',get_civil_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Civil_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    civil_7th_subjects_list=[]
                    def fetch_civil_7th_subjects():
                        #all_civil_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select civil_7th_subjects from all_civil_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    civil_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_civil_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_civil_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_civil_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_civil_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_civil_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'civil_7th_subjects','civil_7th_date','civil_7th_time','civil_7th_code','semisters','branch'
                                        cur.execute('insert into civil_7th_schedule(civil_7th_subjects,civil_7th_date,civil_7th_time,civil_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_civil_7th_subjects_entry.get(),
                                            self.var_civil_7th_date_entry.get(),
                                            self.var_civil_7th_time_entry.get(),
                                            self.var_civil_7th_code.get(),
                                            self.var_civil_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_civil_7th_ia_schedule()
                                        con.close()
                    def fetch_civil_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_7th_schedule')
                            rows=cur.fetchall()
                            tree_civil_7th_treeview.delete(*tree_civil_7th_treeview.get_children())
                            for row in rows:
                                tree_civil_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_civil_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from civil_7th_schedule where civil_7th_subjects=?',(self.var_civil_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from civil_7th_schedule where civil_7th_subjects=? ',(self.var_civil_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_civil_7th_all()
                                    fetch_civil_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_civil_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update civil_7th_schedule set civil_7th_date=?,civil_7th_time=?,civil_7th_code=?,semisters=?,branch=?  where civil_7th_subjects=?',(
                                self.var_civil_7th_date_entry.get(),
                                self.var_civil_7th_time_entry.get(),
                                self.var_civil_7th_code.get(),
                                self.var_civil_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_civil_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_civil_7th_ia_schedule()
                                clear_civil_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_civil_7th_all():
                        fetch_civil_7th_ia_schedule()
                        self.var_civil_7th_subjects_entry.set("")
                        self.var_civil_7th_date_entry.set("")
                        self.var_civil_7th_time_entry.set("")
                        self.var_civil_7th_code.set("")
                        self.var_civil_7th_semister.set("")
                        self.var_serach_civil_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_civil_7th_ia_schedule(ev):
                        read=tree_civil_7th_treeview.focus()
                        content=tree_civil_7th_treeview.item(read)
                        row=content['values']

                        self.var_civil_7th_subjects_entry.set(row[1])
                        self.var_civil_7th_date_entry.set(row[2])
                        self.var_civil_7th_time_entry.set(row[3])
                        self.var_civil_7th_code.set(row[4])
                        self.var_civil_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_civil_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_civil_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from civil_7th_schedule where civil_7th_subjects=?",(self.var_serach_civil_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_civil_7th_treeview.delete(*tree_civil_7th_treeview.get_children())
                                for row in rows:
                                    tree_civil_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_civil_7th_subjects()
                    civil_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_civil_7th_subjects_entry,values=civil_7th_subjects_list).place(x=87,y=14)

                    civil_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_civil_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    civil_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_7th_time_entry).place(x=569,y=14)

                    civil_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_civil_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_civil_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_civil_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_civil_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_civil_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_civil_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_civil_7th_treeview=ttk.Treeview(tree_frame1,columns=('civil_7th_subjects','civil_7th_date','civil_7th_time','civil_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_civil_7th_treeview.xview)
                    scrolly.configure(command=tree_civil_7th_treeview.yview)

                    tree_civil_7th_treeview.heading('civil_7th_subjects',text="Subjects")
                    tree_civil_7th_treeview.heading('civil_7th_date',text="Date")
                    tree_civil_7th_treeview.heading('civil_7th_time',text="Time")
                    tree_civil_7th_treeview.heading('civil_7th_code',text="Code")
                    tree_civil_7th_treeview.heading('semisters',text="Semister")
                    tree_civil_7th_treeview.heading('branch',text="Branch")

                    tree_civil_7th_treeview.column('civil_7th_subjects',width=200)
                    tree_civil_7th_treeview.column('civil_7th_date',width=150)
                    tree_civil_7th_treeview.column('civil_7th_time',width=150)
                    tree_civil_7th_treeview.column('civil_7th_code',width=150)
                    tree_civil_7th_treeview.column('semisters',width=150)
                    tree_civil_7th_treeview.column('branch',width=200)

                    tree_civil_7th_treeview['show']='headings'
                
                    tree_civil_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_civil_7th_ia_schedule()
                    tree_civil_7th_treeview.bind('<ButtonRelease-1>',get_civil_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Civil_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    civil_8th_subjects_list=[]
                    def fetch_civil_8th_subjects():
                        #all_civil_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select civil_8th_subjects from all_civil_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    civil_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_civil_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_civil_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_civil_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_civil_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_civil_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'civil_8th_subjects','civil_8th_date','civil_8th_time','civil_8th_code','semisters','branch'
                                        cur.execute('insert into civil_8th_schedule(civil_8th_subjects,civil_8th_date,civil_8th_time,civil_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_civil_8th_subjects_entry.get(),
                                            self.var_civil_8th_date_entry.get(),
                                            self.var_civil_8th_time_entry.get(),
                                            self.var_civil_8th_code.get(),
                                            self.var_civil_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_civil_8th_ia_schedule()
                                        con.close()
                    def fetch_civil_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_8th_schedule')
                            rows=cur.fetchall()
                            tree_civil_8th_treeview.delete(*tree_civil_8th_treeview.get_children())
                            for row in rows:
                                tree_civil_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_civil_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from civil_8th_schedule where civil_8th_subjects=?',(self.var_civil_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from civil_8th_schedule where civil_8th_subjects=? ',(self.var_civil_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_civil_8th_all()
                                    fetch_civil_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_civil_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update civil_8th_schedule set civil_8th_date=?,civil_8th_time=?,civil_8th_code=?,semisters=?,branch=?  where civil_8th_subjects=?',(
                                self.var_civil_8th_date_entry.get(),
                                self.var_civil_8th_time_entry.get(),
                                self.var_civil_8th_code.get(),
                                self.var_civil_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_civil_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_civil_8th_ia_schedule()
                                clear_civil_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_civil_8th_all():
                        fetch_civil_8th_ia_schedule()
                        self.var_civil_8th_subjects_entry.set("")
                        self.var_civil_8th_date_entry.set("")
                        self.var_civil_8th_time_entry.set("")
                        self.var_civil_8th_code.set("")
                        self.var_civil_8th_semister.set("")
                        self.var_serach_civil_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_civil_8th_ia_schedule(ev):
                        read=tree_civil_8th_treeview.focus()
                        content=tree_civil_8th_treeview.item(read)
                        row=content['values']

                        self.var_civil_8th_subjects_entry.set(row[1])
                        self.var_civil_8th_date_entry.set(row[2])
                        self.var_civil_8th_time_entry.set(row[3])
                        self.var_civil_8th_code.set(row[4])
                        self.var_civil_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_civil_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_civil_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from civil_8th_schedule where civil_8th_subjects=?",(self.var_serach_civil_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_civil_8th_treeview.delete(*tree_civil_8th_treeview.get_children())
                                for row in rows:
                                    tree_civil_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_civil_8th_subjects()
                    civil_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_civil_8th_subjects_entry,values=civil_8th_subjects_list).place(x=87,y=14)

                    civil_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_civil_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    civil_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_8th_time_entry).place(x=569,y=14)

                    civil_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_civil_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_civil_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_civil_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_civil_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_civil_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_civil_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_civil_8th_treeview=ttk.Treeview(tree_frame1,columns=('civil_8th_subjects','civil_8th_date','civil_8th_time','civil_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_civil_8th_treeview.xview)
                    scrolly.configure(command=tree_civil_8th_treeview.yview)

                    tree_civil_8th_treeview.heading('civil_8th_subjects',text="Subjects")
                    tree_civil_8th_treeview.heading('civil_8th_date',text="Date")
                    tree_civil_8th_treeview.heading('civil_8th_time',text="Time")
                    tree_civil_8th_treeview.heading('civil_8th_code',text="Code")
                    tree_civil_8th_treeview.heading('semisters',text="Semister")
                    tree_civil_8th_treeview.heading('branch',text="Branch")

                    tree_civil_8th_treeview.column('civil_8th_subjects',width=200)
                    tree_civil_8th_treeview.column('civil_8th_date',width=150)
                    tree_civil_8th_treeview.column('civil_8th_time',width=150)
                    tree_civil_8th_treeview.column('civil_8th_code',width=150)
                    tree_civil_8th_treeview.column('semisters',width=150)
                    tree_civil_8th_treeview.column('branch',width=200)

                    tree_civil_8th_treeview['show']='headings'
                
                    tree_civil_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_civil_8th_ia_schedule()
                    tree_civil_8th_treeview.bind('<ButtonRelease-1>',get_civil_8th_ia_schedule)

                ############################################################################################################
        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Mechanical_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    mech_3rd_subjects_list=[]
                    def fetch_mech_3rd_subjects():
                        #all_mech_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select mech_3rd_subjects from all_mech_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    mech_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_mech_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_mech_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_mech_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_mech_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_mech_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'mech_3rd_subjects','mech_3rd_date','mech_3rd_time','mech_3rd_code','semisters','branch'
                                        cur.execute('insert into mech_3rd_schedule(mech_3rd_subjects,mech_3rd_date,mech_3rd_time,mech_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_mech_3rd_subjects_entry.get(),
                                            self.var_mech_3rd_date_entry.get(),
                                            self.var_mech_3rd_time_entry.get(),
                                            self.var_mech_3rd_code.get(),
                                            self.var_mech_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_mech_3rd_ia_schedule()
                                        con.close()
                    def fetch_mech_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_3rd_schedule')
                            rows=cur.fetchall()
                            tree_mech_3rd_treeview.delete(*tree_mech_3rd_treeview.get_children())
                            for row in rows:
                                tree_mech_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_mech_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from mech_3rd_schedule where mech_3rd_subjects=?',(self.var_mech_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from mech_3rd_schedule where mech_3rd_subjects=? ',(self.var_mech_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_mech_3rd_all()
                                    fetch_mech_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_mech_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update mech_3rd_schedule set mech_3rd_date=?,mech_3rd_time=?,mech_3rd_code=?,semisters=?,branch=?  where mech_3rd_subjects=?',(
                                self.var_mech_3rd_date_entry.get(),
                                self.var_mech_3rd_time_entry.get(),
                                self.var_mech_3rd_code.get(),
                                self.var_mech_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_mech_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_mech_3rd_ia_schedule()
                                clear_mech_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_mech_3rd_all():
                        fetch_mech_3rd_ia_schedule()
                        self.var_mech_3rd_subjects_entry.set("")
                        self.var_mech_3rd_date_entry.set("")
                        self.var_mech_3rd_time_entry.set("")
                        self.var_mech_3rd_code.set("")
                        self.var_mech_3rd_semister.set("")
                        self.var_serach_mech_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_mech_3rd_ia_schedule(ev):
                        read=tree_mech_3rd_treeview.focus()
                        content=tree_mech_3rd_treeview.item(read)
                        row=content['values']

                        self.var_mech_3rd_subjects_entry.set(row[1])
                        self.var_mech_3rd_date_entry.set(row[2])
                        self.var_mech_3rd_time_entry.set(row[3])
                        self.var_mech_3rd_code.set(row[4])
                        self.var_mech_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_mech_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_mech_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from mech_3rd_schedule where mech_3rd_subjects=?",(self.var_serach_mech_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_mech_3rd_treeview.delete(*tree_mech_3rd_treeview.get_children())
                                for row in rows:
                                    tree_mech_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_mech_3rd_subjects()
                    mech_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_mech_3rd_subjects_entry,values=mech_3rd_subjects_list).place(x=87,y=14)

                    mech_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_mech_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    mech_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_3rd_time_entry).place(x=569,y=14)

                    mech_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_mech_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_mech_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_mech_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_mech_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_mech_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_mech_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_mech_3rd_treeview=ttk.Treeview(tree_frame1,columns=('mech_3rd_subjects','mech_3rd_date','mech_3rd_time','mech_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_mech_3rd_treeview.xview)
                    scrolly.configure(command=tree_mech_3rd_treeview.yview)

                    tree_mech_3rd_treeview.heading('mech_3rd_subjects',text="Subjects")
                    tree_mech_3rd_treeview.heading('mech_3rd_date',text="Date")
                    tree_mech_3rd_treeview.heading('mech_3rd_time',text="Time")
                    tree_mech_3rd_treeview.heading('mech_3rd_code',text="Code")
                    tree_mech_3rd_treeview.heading('semisters',text="Semister")
                    tree_mech_3rd_treeview.heading('branch',text="Branch")

                    tree_mech_3rd_treeview.column('mech_3rd_subjects',width=200)
                    tree_mech_3rd_treeview.column('mech_3rd_date',width=150)
                    tree_mech_3rd_treeview.column('mech_3rd_time',width=150)
                    tree_mech_3rd_treeview.column('mech_3rd_code',width=150)
                    tree_mech_3rd_treeview.column('semisters',width=150)
                    tree_mech_3rd_treeview.column('branch',width=200)

                    tree_mech_3rd_treeview['show']='headings'
                
                    tree_mech_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_mech_3rd_ia_schedule()
                    tree_mech_3rd_treeview.bind('<ButtonRelease-1>',get_mech_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Mechanical_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    mech_4th_subjects_list=[]
                    def fetch_mech_4th_subjects():
                        #all_mech_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select mech_4th_subjects from all_mech_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    mech_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_mech_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_mech_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_mech_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_mech_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_mech_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'mech_4th_subjects','mech_4th_date','mech_4th_time','mech_4th_code','semisters','branch'
                                        cur.execute('insert into mech_4th_schedule(mech_4th_subjects,mech_4th_date,mech_4th_time,mech_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_mech_4th_subjects_entry.get(),
                                            self.var_mech_4th_date_entry.get(),
                                            self.var_mech_4th_time_entry.get(),
                                            self.var_mech_4th_code.get(),
                                            self.var_mech_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_mech_4th_ia_schedule()
                                        con.close()
                    def fetch_mech_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_4th_schedule')
                            rows=cur.fetchall()
                            tree_mech_4th_treeview.delete(*tree_mech_4th_treeview.get_children())
                            for row in rows:
                                tree_mech_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_mech_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from mech_4th_schedule where mech_4th_subjects=?',(self.var_mech_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from mech_4th_schedule where mech_4th_subjects=? ',(self.var_mech_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_mech_4th_all()
                                    fetch_mech_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_mech_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update mech_4th_schedule set mech_4th_date=?,mech_4th_time=?,mech_4th_code=?,semisters=?,branch=?  where mech_4th_subjects=?',(
                                self.var_mech_4th_date_entry.get(),
                                self.var_mech_4th_time_entry.get(),
                                self.var_mech_4th_code.get(),
                                self.var_mech_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_mech_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_mech_4th_ia_schedule()
                                clear_mech_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_mech_4th_all():
                        fetch_mech_4th_ia_schedule()
                        self.var_mech_4th_subjects_entry.set("")
                        self.var_mech_4th_date_entry.set("")
                        self.var_mech_4th_time_entry.set("")
                        self.var_mech_4th_code.set("")
                        self.var_mech_4th_semister.set("")
                        self.var_serach_mech_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_mech_4th_ia_schedule(ev):
                        read=tree_mech_4th_treeview.focus()
                        content=tree_mech_4th_treeview.item(read)
                        row=content['values']

                        self.var_mech_4th_subjects_entry.set(row[1])
                        self.var_mech_4th_date_entry.set(row[2])
                        self.var_mech_4th_time_entry.set(row[3])
                        self.var_mech_4th_code.set(row[4])
                        self.var_mech_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_mech_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_mech_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from mech_4th_schedule where mech_4th_subjects=?",(self.var_serach_mech_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_mech_4th_treeview.delete(*tree_mech_4th_treeview.get_children())
                                for row in rows:
                                    tree_mech_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_mech_4th_subjects()
                    mech_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_mech_4th_subjects_entry,values=mech_4th_subjects_list).place(x=87,y=14)

                    mech_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_mech_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    mech_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_4th_time_entry).place(x=569,y=14)

                    mech_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_mech_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_mech_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_mech_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_mech_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_mech_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_mech_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_mech_4th_treeview=ttk.Treeview(tree_frame1,columns=('mech_4th_subjects','mech_4th_date','mech_4th_time','mech_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_mech_4th_treeview.xview)
                    scrolly.configure(command=tree_mech_4th_treeview.yview)

                    tree_mech_4th_treeview.heading('mech_4th_subjects',text="Subjects")
                    tree_mech_4th_treeview.heading('mech_4th_date',text="Date")
                    tree_mech_4th_treeview.heading('mech_4th_time',text="Time")
                    tree_mech_4th_treeview.heading('mech_4th_code',text="Code")
                    tree_mech_4th_treeview.heading('semisters',text="Semister")
                    tree_mech_4th_treeview.heading('branch',text="Branch")

                    tree_mech_4th_treeview.column('mech_4th_subjects',width=200)
                    tree_mech_4th_treeview.column('mech_4th_date',width=150)
                    tree_mech_4th_treeview.column('mech_4th_time',width=150)
                    tree_mech_4th_treeview.column('mech_4th_code',width=150)
                    tree_mech_4th_treeview.column('semisters',width=150)
                    tree_mech_4th_treeview.column('branch',width=200)

                    tree_mech_4th_treeview['show']='headings'
                
                    tree_mech_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_mech_4th_ia_schedule()
                    tree_mech_4th_treeview.bind('<ButtonRelease-1>',get_mech_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Mechanical_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    mech_5th_subjects_list=[]
                    def fetch_mech_5th_subjects():
                        #all_mech_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select mech_5th_subjects from all_mech_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    mech_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_mech_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_mech_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_mech_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_mech_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_mech_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'mech_5th_subjects','mech_5th_date','mech_5th_time','mech_5th_code','semisters','branch'
                                        cur.execute('insert into mech_5th_schedule(mech_5th_subjects,mech_5th_date,mech_5th_time,mech_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_mech_5th_subjects_entry.get(),
                                            self.var_mech_5th_date_entry.get(),
                                            self.var_mech_5th_time_entry.get(),
                                            self.var_mech_5th_code.get(),
                                            self.var_mech_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_mech_5th_ia_schedule()
                                        con.close()
                    def fetch_mech_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_5th_schedule')
                            rows=cur.fetchall()
                            tree_mech_5th_treeview.delete(*tree_mech_5th_treeview.get_children())
                            for row in rows:
                                tree_mech_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_mech_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from mech_5th_schedule where mech_5th_subjects=?',(self.var_mech_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from mech_5th_schedule where mech_5th_subjects=? ',(self.var_mech_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_mech_5th_all()
                                    fetch_mech_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_mech_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update mech_5th_schedule set mech_5th_date=?,mech_5th_time=?,mech_5th_code=?,semisters=?,branch=?  where mech_5th_subjects=?',(
                                self.var_mech_5th_date_entry.get(),
                                self.var_mech_5th_time_entry.get(),
                                self.var_mech_5th_code.get(),
                                self.var_mech_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_mech_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_mech_5th_ia_schedule()
                                clear_mech_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_mech_5th_all():
                        fetch_mech_5th_ia_schedule()
                        self.var_mech_5th_subjects_entry.set("")
                        self.var_mech_5th_date_entry.set("")
                        self.var_mech_5th_time_entry.set("")
                        self.var_mech_5th_code.set("")
                        self.var_mech_5th_semister.set("")
                        self.var_serach_mech_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_mech_5th_ia_schedule(ev):
                        read=tree_mech_5th_treeview.focus()
                        content=tree_mech_5th_treeview.item(read)
                        row=content['values']

                        self.var_mech_5th_subjects_entry.set(row[1])
                        self.var_mech_5th_date_entry.set(row[2])
                        self.var_mech_5th_time_entry.set(row[3])
                        self.var_mech_5th_code.set(row[4])
                        self.var_mech_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_mech_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_mech_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from mech_5th_schedule where mech_5th_subjects=?",(self.var_serach_mech_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_mech_5th_treeview.delete(*tree_mech_5th_treeview.get_children())
                                for row in rows:
                                    tree_mech_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_mech_5th_subjects()
                    mech_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_mech_5th_subjects_entry,values=mech_5th_subjects_list).place(x=87,y=14)

                    mech_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_mech_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    mech_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_5th_time_entry).place(x=569,y=14)

                    mech_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_mech_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_mech_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_mech_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_mech_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_mech_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_mech_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_mech_5th_treeview=ttk.Treeview(tree_frame1,columns=('mech_5th_subjects','mech_5th_date','mech_5th_time','mech_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_mech_5th_treeview.xview)
                    scrolly.configure(command=tree_mech_5th_treeview.yview)

                    tree_mech_5th_treeview.heading('mech_5th_subjects',text="Subjects")
                    tree_mech_5th_treeview.heading('mech_5th_date',text="Date")
                    tree_mech_5th_treeview.heading('mech_5th_time',text="Time")
                    tree_mech_5th_treeview.heading('mech_5th_code',text="Code")
                    tree_mech_5th_treeview.heading('semisters',text="Semister")
                    tree_mech_5th_treeview.heading('branch',text="Branch")

                    tree_mech_5th_treeview.column('mech_5th_subjects',width=200)
                    tree_mech_5th_treeview.column('mech_5th_date',width=150)
                    tree_mech_5th_treeview.column('mech_5th_time',width=150)
                    tree_mech_5th_treeview.column('mech_5th_code',width=150)
                    tree_mech_5th_treeview.column('semisters',width=150)
                    tree_mech_5th_treeview.column('branch',width=200)

                    tree_mech_5th_treeview['show']='headings'
                
                    tree_mech_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_mech_5th_ia_schedule()
                    tree_mech_5th_treeview.bind('<ButtonRelease-1>',get_mech_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Mechanical_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    mech_6th_subjects_list=[]
                    def fetch_mech_6th_subjects():
                        #all_mech_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select mech_6th_subjects from all_mech_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    mech_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_mech_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_mech_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_mech_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_mech_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_mech_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'mech_6th_subjects','mech_6th_date','mech_6th_time','mech_6th_code','semisters','branch'
                                        cur.execute('insert into mech_6th_schedule(mech_6th_subjects,mech_6th_date,mech_6th_time,mech_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_mech_6th_subjects_entry.get(),
                                            self.var_mech_6th_date_entry.get(),
                                            self.var_mech_6th_time_entry.get(),
                                            self.var_mech_6th_code.get(),
                                            self.var_mech_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_mech_6th_ia_schedule()
                                        con.close()
                    def fetch_mech_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_6th_schedule')
                            rows=cur.fetchall()
                            tree_mech_6th_treeview.delete(*tree_mech_6th_treeview.get_children())
                            for row in rows:
                                tree_mech_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_mech_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from mech_6th_schedule where mech_6th_subjects=?',(self.var_mech_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from mech_6th_schedule where mech_6th_subjects=? ',(self.var_mech_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_mech_6th_all()
                                    fetch_mech_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_mech_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update mech_6th_schedule set mech_6th_date=?,mech_6th_time=?,mech_6th_code=?,semisters=?,branch=?  where mech_6th_subjects=?',(
                                self.var_mech_6th_date_entry.get(),
                                self.var_mech_6th_time_entry.get(),
                                self.var_mech_6th_code.get(),
                                self.var_mech_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_mech_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_mech_6th_ia_schedule()
                                clear_mech_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_mech_6th_all():
                        fetch_mech_6th_ia_schedule()
                        self.var_mech_6th_subjects_entry.set("")
                        self.var_mech_6th_date_entry.set("")
                        self.var_mech_6th_time_entry.set("")
                        self.var_mech_6th_code.set("")
                        self.var_mech_6th_semister.set("")
                        self.var_serach_mech_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_mech_6th_ia_schedule(ev):
                        read=tree_mech_6th_treeview.focus()
                        content=tree_mech_6th_treeview.item(read)
                        row=content['values']

                        self.var_mech_6th_subjects_entry.set(row[1])
                        self.var_mech_6th_date_entry.set(row[2])
                        self.var_mech_6th_time_entry.set(row[3])
                        self.var_mech_6th_code.set(row[4])
                        self.var_mech_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_mech_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_mech_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from mech_6th_schedule where mech_6th_subjects=?",(self.var_serach_mech_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_mech_6th_treeview.delete(*tree_mech_6th_treeview.get_children())
                                for row in rows:
                                    tree_mech_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_mech_6th_subjects()
                    mech_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_mech_6th_subjects_entry,values=mech_6th_subjects_list).place(x=87,y=14)

                    mech_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_mech_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    mech_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_6th_time_entry).place(x=569,y=14)

                    mech_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_mech_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_mech_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_mech_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_mech_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_mech_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_mech_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_mech_6th_treeview=ttk.Treeview(tree_frame1,columns=('mech_6th_subjects','mech_6th_date','mech_6th_time','mech_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_mech_6th_treeview.xview)
                    scrolly.configure(command=tree_mech_6th_treeview.yview)

                    tree_mech_6th_treeview.heading('mech_6th_subjects',text="Subjects")
                    tree_mech_6th_treeview.heading('mech_6th_date',text="Date")
                    tree_mech_6th_treeview.heading('mech_6th_time',text="Time")
                    tree_mech_6th_treeview.heading('mech_6th_code',text="Code")
                    tree_mech_6th_treeview.heading('semisters',text="Semister")
                    tree_mech_6th_treeview.heading('branch',text="Branch")

                    tree_mech_6th_treeview.column('mech_6th_subjects',width=200)
                    tree_mech_6th_treeview.column('mech_6th_date',width=150)
                    tree_mech_6th_treeview.column('mech_6th_time',width=150)
                    tree_mech_6th_treeview.column('mech_6th_code',width=150)
                    tree_mech_6th_treeview.column('semisters',width=150)
                    tree_mech_6th_treeview.column('branch',width=200)

                    tree_mech_6th_treeview['show']='headings'
                
                    tree_mech_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_mech_6th_ia_schedule()
                    tree_mech_6th_treeview.bind('<ButtonRelease-1>',get_mech_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Mechanical_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    mech_7th_subjects_list=[]
                    def fetch_mech_7th_subjects():
                        #all_mech_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select mech_7th_subjects from all_mech_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    mech_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_mech_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_mech_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_mech_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_mech_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_mech_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'mech_7th_subjects','mech_7th_date','mech_7th_time','mech_7th_code','semisters','branch'
                                        cur.execute('insert into mech_7th_schedule(mech_7th_subjects,mech_7th_date,mech_7th_time,mech_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_mech_7th_subjects_entry.get(),
                                            self.var_mech_7th_date_entry.get(),
                                            self.var_mech_7th_time_entry.get(),
                                            self.var_mech_7th_code.get(),
                                            self.var_mech_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_mech_7th_ia_schedule()
                                        con.close()
                    def fetch_mech_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_7th_schedule')
                            rows=cur.fetchall()
                            tree_mech_7th_treeview.delete(*tree_mech_7th_treeview.get_children())
                            for row in rows:
                                tree_mech_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_mech_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from mech_7th_schedule where mech_7th_subjects=?',(self.var_mech_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from mech_7th_schedule where mech_7th_subjects=? ',(self.var_mech_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_mech_7th_all()
                                    fetch_mech_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_mech_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update mech_7th_schedule set mech_7th_date=?,mech_7th_time=?,mech_7th_code=?,semisters=?,branch=?  where mech_7th_subjects=?',(
                                self.var_mech_7th_date_entry.get(),
                                self.var_mech_7th_time_entry.get(),
                                self.var_mech_7th_code.get(),
                                self.var_mech_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_mech_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_mech_7th_ia_schedule()
                                clear_mech_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_mech_7th_all():
                        fetch_mech_7th_ia_schedule()
                        self.var_mech_7th_subjects_entry.set("")
                        self.var_mech_7th_date_entry.set("")
                        self.var_mech_7th_time_entry.set("")
                        self.var_mech_7th_code.set("")
                        self.var_mech_7th_semister.set("")
                        self.var_serach_mech_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_mech_7th_ia_schedule(ev):
                        read=tree_mech_7th_treeview.focus()
                        content=tree_mech_7th_treeview.item(read)
                        row=content['values']

                        self.var_mech_7th_subjects_entry.set(row[1])
                        self.var_mech_7th_date_entry.set(row[2])
                        self.var_mech_7th_time_entry.set(row[3])
                        self.var_mech_7th_code.set(row[4])
                        self.var_mech_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_mech_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_mech_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from mech_7th_schedule where mech_7th_subjects=?",(self.var_serach_mech_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_mech_7th_treeview.delete(*tree_mech_7th_treeview.get_children())
                                for row in rows:
                                    tree_mech_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_mech_7th_subjects()
                    mech_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_mech_7th_subjects_entry,values=mech_7th_subjects_list).place(x=87,y=14)

                    mech_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_mech_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    mech_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_7th_time_entry).place(x=569,y=14)

                    mech_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_mech_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_mech_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_mech_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_mech_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_mech_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_mech_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_mech_7th_treeview=ttk.Treeview(tree_frame1,columns=('mech_7th_subjects','mech_7th_date','mech_7th_time','mech_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_mech_7th_treeview.xview)
                    scrolly.configure(command=tree_mech_7th_treeview.yview)

                    tree_mech_7th_treeview.heading('mech_7th_subjects',text="Subjects")
                    tree_mech_7th_treeview.heading('mech_7th_date',text="Date")
                    tree_mech_7th_treeview.heading('mech_7th_time',text="Time")
                    tree_mech_7th_treeview.heading('mech_7th_code',text="Code")
                    tree_mech_7th_treeview.heading('semisters',text="Semister")
                    tree_mech_7th_treeview.heading('branch',text="Branch")

                    tree_mech_7th_treeview.column('mech_7th_subjects',width=200)
                    tree_mech_7th_treeview.column('mech_7th_date',width=150)
                    tree_mech_7th_treeview.column('mech_7th_time',width=150)
                    tree_mech_7th_treeview.column('mech_7th_code',width=150)
                    tree_mech_7th_treeview.column('semisters',width=150)
                    tree_mech_7th_treeview.column('branch',width=200)

                    tree_mech_7th_treeview['show']='headings'
                
                    tree_mech_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_mech_7th_ia_schedule()
                    tree_mech_7th_treeview.bind('<ButtonRelease-1>',get_mech_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Mechanical_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    mech_8th_subjects_list=[]
                    def fetch_mech_8th_subjects():
                        #all_mech_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select mech_8th_subjects from all_mech_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    mech_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_mech_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_mech_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_mech_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_mech_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_mech_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'mech_8th_subjects','mech_8th_date','mech_8th_time','mech_8th_code','semisters','branch'
                                        cur.execute('insert into mech_8th_schedule(mech_8th_subjects,mech_8th_date,mech_8th_time,mech_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_mech_8th_subjects_entry.get(),
                                            self.var_mech_8th_date_entry.get(),
                                            self.var_mech_8th_time_entry.get(),
                                            self.var_mech_8th_code.get(),
                                            self.var_mech_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_mech_8th_ia_schedule()
                                        con.close()
                    def fetch_mech_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_8th_schedule')
                            rows=cur.fetchall()
                            tree_mech_8th_treeview.delete(*tree_mech_8th_treeview.get_children())
                            for row in rows:
                                tree_mech_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_mech_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from mech_8th_schedule where mech_8th_subjects=?',(self.var_mech_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from mech_8th_schedule where mech_8th_subjects=? ',(self.var_mech_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_mech_8th_all()
                                    fetch_mech_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_mech_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update mech_8th_schedule set mech_8th_date=?,mech_8th_time=?,mech_8th_code=?,semisters=?,branch=?  where mech_8th_subjects=?',(
                                self.var_mech_8th_date_entry.get(),
                                self.var_mech_8th_time_entry.get(),
                                self.var_mech_8th_code.get(),
                                self.var_mech_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_mech_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_mech_8th_ia_schedule()
                                clear_mech_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_mech_8th_all():
                        fetch_mech_8th_ia_schedule()
                        self.var_mech_8th_subjects_entry.set("")
                        self.var_mech_8th_date_entry.set("")
                        self.var_mech_8th_time_entry.set("")
                        self.var_mech_8th_code.set("")
                        self.var_mech_8th_semister.set("")
                        self.var_serach_mech_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_mech_8th_ia_schedule(ev):
                        read=tree_mech_8th_treeview.focus()
                        content=tree_mech_8th_treeview.item(read)
                        row=content['values']

                        self.var_mech_8th_subjects_entry.set(row[1])
                        self.var_mech_8th_date_entry.set(row[2])
                        self.var_mech_8th_time_entry.set(row[3])
                        self.var_mech_8th_code.set(row[4])
                        self.var_mech_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_mech_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_mech_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from mech_8th_schedule where mech_8th_subjects=?",(self.var_serach_mech_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_mech_8th_treeview.delete(*tree_mech_8th_treeview.get_children())
                                for row in rows:
                                    tree_mech_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_mech_8th_subjects()
                    mech_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_mech_8th_subjects_entry,values=mech_8th_subjects_list).place(x=87,y=14)

                    mech_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_mech_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    mech_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_8th_time_entry).place(x=569,y=14)

                    mech_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_mech_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_mech_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_mech_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_mech_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_mech_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_mech_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_mech_8th_treeview=ttk.Treeview(tree_frame1,columns=('mech_8th_subjects','mech_8th_date','mech_8th_time','mech_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_mech_8th_treeview.xview)
                    scrolly.configure(command=tree_mech_8th_treeview.yview)

                    tree_mech_8th_treeview.heading('mech_8th_subjects',text="Subjects")
                    tree_mech_8th_treeview.heading('mech_8th_date',text="Date")
                    tree_mech_8th_treeview.heading('mech_8th_time',text="Time")
                    tree_mech_8th_treeview.heading('mech_8th_code',text="Code")
                    tree_mech_8th_treeview.heading('semisters',text="Semister")
                    tree_mech_8th_treeview.heading('branch',text="Branch")

                    tree_mech_8th_treeview.column('mech_8th_subjects',width=200)
                    tree_mech_8th_treeview.column('mech_8th_date',width=150)
                    tree_mech_8th_treeview.column('mech_8th_time',width=150)
                    tree_mech_8th_treeview.column('mech_8th_code',width=150)
                    tree_mech_8th_treeview.column('semisters',width=150)
                    tree_mech_8th_treeview.column('branch',width=200)

                    tree_mech_8th_treeview['show']='headings'
                
                    tree_mech_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_mech_8th_ia_schedule()
                    tree_mech_8th_treeview.bind('<ButtonRelease-1>',get_mech_8th_ia_schedule)
        #########################################################################################################################################################################
        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Electrical_And_Electronic_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    eee_3rd_subjects_list=[]
                    def fetch_eee_3rd_subjects():
                        #all_eee_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select eee_3rd_subjects from all_eee_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    eee_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_eee_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_eee_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_eee_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_eee_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_eee_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'eee_3rd_subjects','eee_3rd_date','eee_3rd_time','eee_3rd_code','semisters','branch'
                                        cur.execute('insert into eee_3rd_schedule(eee_3rd_subjects,eee_3rd_date,eee_3rd_time,eee_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_eee_3rd_subjects_entry.get(),
                                            self.var_eee_3rd_date_entry.get(),
                                            self.var_eee_3rd_time_entry.get(),
                                            self.var_eee_3rd_code.get(),
                                            self.var_eee_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_eee_3rd_ia_schedule()
                                        con.close()
                    def fetch_eee_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_3rd_schedule')
                            rows=cur.fetchall()
                            tree_eee_3rd_treeview.delete(*tree_eee_3rd_treeview.get_children())
                            for row in rows:
                                tree_eee_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_eee_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from eee_3rd_schedule where eee_3rd_subjects=?',(self.var_eee_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from eee_3rd_schedule where eee_3rd_subjects=? ',(self.var_eee_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_eee_3rd_all()
                                    fetch_eee_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_eee_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update eee_3rd_schedule set eee_3rd_date=?,eee_3rd_time=?,eee_3rd_code=?,semisters=?,branch=?  where eee_3rd_subjects=?',(
                                self.var_eee_3rd_date_entry.get(),
                                self.var_eee_3rd_time_entry.get(),
                                self.var_eee_3rd_code.get(),
                                self.var_eee_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_eee_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_eee_3rd_ia_schedule()
                                clear_eee_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_eee_3rd_all():
                        fetch_eee_3rd_ia_schedule()
                        self.var_eee_3rd_subjects_entry.set("")
                        self.var_eee_3rd_date_entry.set("")
                        self.var_eee_3rd_time_entry.set("")
                        self.var_eee_3rd_code.set("")
                        self.var_eee_3rd_semister.set("")
                        self.var_serach_eee_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_eee_3rd_ia_schedule(ev):
                        read=tree_eee_3rd_treeview.focus()
                        content=tree_eee_3rd_treeview.item(read)
                        row=content['values']

                        self.var_eee_3rd_subjects_entry.set(row[1])
                        self.var_eee_3rd_date_entry.set(row[2])
                        self.var_eee_3rd_time_entry.set(row[3])
                        self.var_eee_3rd_code.set(row[4])
                        self.var_eee_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_eee_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_eee_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from eee_3rd_schedule where eee_3rd_subjects=?",(self.var_serach_eee_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_eee_3rd_treeview.delete(*tree_eee_3rd_treeview.get_children())
                                for row in rows:
                                    tree_eee_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_eee_3rd_subjects()
                    eee_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_eee_3rd_subjects_entry,values=eee_3rd_subjects_list).place(x=87,y=14)

                    eee_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_eee_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    eee_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_3rd_time_entry).place(x=569,y=14)

                    eee_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_eee_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_eee_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_eee_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_eee_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_eee_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_eee_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_eee_3rd_treeview=ttk.Treeview(tree_frame1,columns=('eee_3rd_subjects','eee_3rd_date','eee_3rd_time','eee_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_eee_3rd_treeview.xview)
                    scrolly.configure(command=tree_eee_3rd_treeview.yview)

                    tree_eee_3rd_treeview.heading('eee_3rd_subjects',text="Subjects")
                    tree_eee_3rd_treeview.heading('eee_3rd_date',text="Date")
                    tree_eee_3rd_treeview.heading('eee_3rd_time',text="Time")
                    tree_eee_3rd_treeview.heading('eee_3rd_code',text="Code")
                    tree_eee_3rd_treeview.heading('semisters',text="Semister")
                    tree_eee_3rd_treeview.heading('branch',text="Branch")

                    tree_eee_3rd_treeview.column('eee_3rd_subjects',width=200)
                    tree_eee_3rd_treeview.column('eee_3rd_date',width=150)
                    tree_eee_3rd_treeview.column('eee_3rd_time',width=150)
                    tree_eee_3rd_treeview.column('eee_3rd_code',width=150)
                    tree_eee_3rd_treeview.column('semisters',width=150)
                    tree_eee_3rd_treeview.column('branch',width=200)

                    tree_eee_3rd_treeview['show']='headings'
                
                    tree_eee_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_eee_3rd_ia_schedule()
                    tree_eee_3rd_treeview.bind('<ButtonRelease-1>',get_eee_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Electrical_And_Electronic_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    eee_4th_subjects_list=[]
                    def fetch_eee_4th_subjects():
                        #all_eee_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select eee_4th_subjects from all_eee_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    eee_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_eee_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_eee_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_eee_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_eee_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_eee_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'eee_4th_subjects','eee_4th_date','eee_4th_time','eee_4th_code','semisters','branch'
                                        cur.execute('insert into eee_4th_schedule(eee_4th_subjects,eee_4th_date,eee_4th_time,eee_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_eee_4th_subjects_entry.get(),
                                            self.var_eee_4th_date_entry.get(),
                                            self.var_eee_4th_time_entry.get(),
                                            self.var_eee_4th_code.get(),
                                            self.var_eee_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_eee_4th_ia_schedule()
                                        con.close()
                    def fetch_eee_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_4th_schedule')
                            rows=cur.fetchall()
                            tree_eee_4th_treeview.delete(*tree_eee_4th_treeview.get_children())
                            for row in rows:
                                tree_eee_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_eee_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from eee_4th_schedule where eee_4th_subjects=?',(self.var_eee_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from eee_4th_schedule where eee_4th_subjects=? ',(self.var_eee_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_eee_4th_all()
                                    fetch_eee_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_eee_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update eee_4th_schedule set eee_4th_date=?,eee_4th_time=?,eee_4th_code=?,semisters=?,branch=?  where eee_4th_subjects=?',(
                                self.var_eee_4th_date_entry.get(),
                                self.var_eee_4th_time_entry.get(),
                                self.var_eee_4th_code.get(),
                                self.var_eee_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_eee_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_eee_4th_ia_schedule()
                                clear_eee_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_eee_4th_all():
                        fetch_eee_4th_ia_schedule()
                        self.var_eee_4th_subjects_entry.set("")
                        self.var_eee_4th_date_entry.set("")
                        self.var_eee_4th_time_entry.set("")
                        self.var_eee_4th_code.set("")
                        self.var_eee_4th_semister.set("")
                        self.var_serach_eee_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_eee_4th_ia_schedule(ev):
                        read=tree_eee_4th_treeview.focus()
                        content=tree_eee_4th_treeview.item(read)
                        row=content['values']

                        self.var_eee_4th_subjects_entry.set(row[1])
                        self.var_eee_4th_date_entry.set(row[2])
                        self.var_eee_4th_time_entry.set(row[3])
                        self.var_eee_4th_code.set(row[4])
                        self.var_eee_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_eee_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_eee_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from eee_4th_schedule where eee_4th_subjects=?",(self.var_serach_eee_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_eee_4th_treeview.delete(*tree_eee_4th_treeview.get_children())
                                for row in rows:
                                    tree_eee_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_eee_4th_subjects()
                    eee_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_eee_4th_subjects_entry,values=eee_4th_subjects_list).place(x=87,y=14)

                    eee_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_eee_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    eee_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_4th_time_entry).place(x=569,y=14)

                    eee_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_eee_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_eee_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_eee_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_eee_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_eee_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_eee_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_eee_4th_treeview=ttk.Treeview(tree_frame1,columns=('eee_4th_subjects','eee_4th_date','eee_4th_time','eee_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_eee_4th_treeview.xview)
                    scrolly.configure(command=tree_eee_4th_treeview.yview)

                    tree_eee_4th_treeview.heading('eee_4th_subjects',text="Subjects")
                    tree_eee_4th_treeview.heading('eee_4th_date',text="Date")
                    tree_eee_4th_treeview.heading('eee_4th_time',text="Time")
                    tree_eee_4th_treeview.heading('eee_4th_code',text="Code")
                    tree_eee_4th_treeview.heading('semisters',text="Semister")
                    tree_eee_4th_treeview.heading('branch',text="Branch")

                    tree_eee_4th_treeview.column('eee_4th_subjects',width=200)
                    tree_eee_4th_treeview.column('eee_4th_date',width=150)
                    tree_eee_4th_treeview.column('eee_4th_time',width=150)
                    tree_eee_4th_treeview.column('eee_4th_code',width=150)
                    tree_eee_4th_treeview.column('semisters',width=150)
                    tree_eee_4th_treeview.column('branch',width=200)

                    tree_eee_4th_treeview['show']='headings'
                
                    tree_eee_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_eee_4th_ia_schedule()
                    tree_eee_4th_treeview.bind('<ButtonRelease-1>',get_eee_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Electrical_And_Electronic_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    eee_5th_subjects_list=[]
                    def fetch_eee_5th_subjects():
                        #all_eee_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select eee_5th_subjects from all_eee_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    eee_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_eee_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_eee_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_eee_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_eee_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_eee_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'eee_5th_subjects','eee_5th_date','eee_5th_time','eee_5th_code','semisters','branch'
                                        cur.execute('insert into eee_5th_schedule(eee_5th_subjects,eee_5th_date,eee_5th_time,eee_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_eee_5th_subjects_entry.get(),
                                            self.var_eee_5th_date_entry.get(),
                                            self.var_eee_5th_time_entry.get(),
                                            self.var_eee_5th_code.get(),
                                            self.var_eee_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_eee_5th_ia_schedule()
                                        con.close()
                    def fetch_eee_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_5th_schedule')
                            rows=cur.fetchall()
                            tree_eee_5th_treeview.delete(*tree_eee_5th_treeview.get_children())
                            for row in rows:
                                tree_eee_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_eee_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from eee_5th_schedule where eee_5th_subjects=?',(self.var_eee_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from eee_5th_schedule where eee_5th_subjects=? ',(self.var_eee_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_eee_5th_all()
                                    fetch_eee_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_eee_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update eee_5th_schedule set eee_5th_date=?,eee_5th_time=?,eee_5th_code=?,semisters=?,branch=?  where eee_5th_subjects=?',(
                                self.var_eee_5th_date_entry.get(),
                                self.var_eee_5th_time_entry.get(),
                                self.var_eee_5th_code.get(),
                                self.var_eee_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_eee_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_eee_5th_ia_schedule()
                                clear_eee_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_eee_5th_all():
                        fetch_eee_5th_ia_schedule()
                        self.var_eee_5th_subjects_entry.set("")
                        self.var_eee_5th_date_entry.set("")
                        self.var_eee_5th_time_entry.set("")
                        self.var_eee_5th_code.set("")
                        self.var_eee_5th_semister.set("")
                        self.var_serach_eee_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_eee_5th_ia_schedule(ev):
                        read=tree_eee_5th_treeview.focus()
                        content=tree_eee_5th_treeview.item(read)
                        row=content['values']

                        self.var_eee_5th_subjects_entry.set(row[1])
                        self.var_eee_5th_date_entry.set(row[2])
                        self.var_eee_5th_time_entry.set(row[3])
                        self.var_eee_5th_code.set(row[4])
                        self.var_eee_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_eee_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_eee_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from eee_5th_schedule where eee_5th_subjects=?",(self.var_serach_eee_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_eee_5th_treeview.delete(*tree_eee_5th_treeview.get_children())
                                for row in rows:
                                    tree_eee_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_eee_5th_subjects()
                    eee_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_eee_5th_subjects_entry,values=eee_5th_subjects_list).place(x=87,y=14)

                    eee_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_eee_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    eee_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_5th_time_entry).place(x=569,y=14)

                    eee_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_eee_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_eee_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_eee_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_eee_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_eee_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_eee_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_eee_5th_treeview=ttk.Treeview(tree_frame1,columns=('eee_5th_subjects','eee_5th_date','eee_5th_time','eee_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_eee_5th_treeview.xview)
                    scrolly.configure(command=tree_eee_5th_treeview.yview)

                    tree_eee_5th_treeview.heading('eee_5th_subjects',text="Subjects")
                    tree_eee_5th_treeview.heading('eee_5th_date',text="Date")
                    tree_eee_5th_treeview.heading('eee_5th_time',text="Time")
                    tree_eee_5th_treeview.heading('eee_5th_code',text="Code")
                    tree_eee_5th_treeview.heading('semisters',text="Semister")
                    tree_eee_5th_treeview.heading('branch',text="Branch")

                    tree_eee_5th_treeview.column('eee_5th_subjects',width=200)
                    tree_eee_5th_treeview.column('eee_5th_date',width=150)
                    tree_eee_5th_treeview.column('eee_5th_time',width=150)
                    tree_eee_5th_treeview.column('eee_5th_code',width=150)
                    tree_eee_5th_treeview.column('semisters',width=150)
                    tree_eee_5th_treeview.column('branch',width=200)

                    tree_eee_5th_treeview['show']='headings'
                
                    tree_eee_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_eee_5th_ia_schedule()
                    tree_eee_5th_treeview.bind('<ButtonRelease-1>',get_eee_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Electrical_And_Electronic_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    eee_6th_subjects_list=[]
                    def fetch_eee_6th_subjects():
                        #all_eee_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select eee_6th_subjects from all_eee_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    eee_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_eee_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_eee_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_eee_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_eee_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_eee_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'eee_6th_subjects','eee_6th_date','eee_6th_time','eee_6th_code','semisters','branch'
                                        cur.execute('insert into eee_6th_schedule(eee_6th_subjects,eee_6th_date,eee_6th_time,eee_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_eee_6th_subjects_entry.get(),
                                            self.var_eee_6th_date_entry.get(),
                                            self.var_eee_6th_time_entry.get(),
                                            self.var_eee_6th_code.get(),
                                            self.var_eee_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_eee_6th_ia_schedule()
                                        con.close()
                    def fetch_eee_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_6th_schedule')
                            rows=cur.fetchall()
                            tree_eee_6th_treeview.delete(*tree_eee_6th_treeview.get_children())
                            for row in rows:
                                tree_eee_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_eee_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from eee_6th_schedule where eee_6th_subjects=?',(self.var_eee_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from eee_6th_schedule where eee_6th_subjects=? ',(self.var_eee_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_eee_6th_all()
                                    fetch_eee_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_eee_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update eee_6th_schedule set eee_6th_date=?,eee_6th_time=?,eee_6th_code=?,semisters=?,branch=?  where eee_6th_subjects=?',(
                                self.var_eee_6th_date_entry.get(),
                                self.var_eee_6th_time_entry.get(),
                                self.var_eee_6th_code.get(),
                                self.var_eee_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_eee_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_eee_6th_ia_schedule()
                                clear_eee_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_eee_6th_all():
                        fetch_eee_6th_ia_schedule()
                        self.var_eee_6th_subjects_entry.set("")
                        self.var_eee_6th_date_entry.set("")
                        self.var_eee_6th_time_entry.set("")
                        self.var_eee_6th_code.set("")
                        self.var_eee_6th_semister.set("")
                        self.var_serach_eee_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_eee_6th_ia_schedule(ev):
                        read=tree_eee_6th_treeview.focus()
                        content=tree_eee_6th_treeview.item(read)
                        row=content['values']

                        self.var_eee_6th_subjects_entry.set(row[1])
                        self.var_eee_6th_date_entry.set(row[2])
                        self.var_eee_6th_time_entry.set(row[3])
                        self.var_eee_6th_code.set(row[4])
                        self.var_eee_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_eee_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_eee_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from eee_6th_schedule where eee_6th_subjects=?",(self.var_serach_eee_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_eee_6th_treeview.delete(*tree_eee_6th_treeview.get_children())
                                for row in rows:
                                    tree_eee_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_eee_6th_subjects()
                    eee_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_eee_6th_subjects_entry,values=eee_6th_subjects_list).place(x=87,y=14)

                    eee_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_eee_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    eee_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_6th_time_entry).place(x=569,y=14)

                    eee_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_eee_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_eee_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_eee_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_eee_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_eee_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_eee_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_eee_6th_treeview=ttk.Treeview(tree_frame1,columns=('eee_6th_subjects','eee_6th_date','eee_6th_time','eee_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_eee_6th_treeview.xview)
                    scrolly.configure(command=tree_eee_6th_treeview.yview)

                    tree_eee_6th_treeview.heading('eee_6th_subjects',text="Subjects")
                    tree_eee_6th_treeview.heading('eee_6th_date',text="Date")
                    tree_eee_6th_treeview.heading('eee_6th_time',text="Time")
                    tree_eee_6th_treeview.heading('eee_6th_code',text="Code")
                    tree_eee_6th_treeview.heading('semisters',text="Semister")
                    tree_eee_6th_treeview.heading('branch',text="Branch")

                    tree_eee_6th_treeview.column('eee_6th_subjects',width=200)
                    tree_eee_6th_treeview.column('eee_6th_date',width=150)
                    tree_eee_6th_treeview.column('eee_6th_time',width=150)
                    tree_eee_6th_treeview.column('eee_6th_code',width=150)
                    tree_eee_6th_treeview.column('semisters',width=150)
                    tree_eee_6th_treeview.column('branch',width=200)

                    tree_eee_6th_treeview['show']='headings'
                
                    tree_eee_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_eee_6th_ia_schedule()
                    tree_eee_6th_treeview.bind('<ButtonRelease-1>',get_eee_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Electrical_And_Electronic_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    eee_7th_subjects_list=[]
                    def fetch_eee_7th_subjects():
                        #all_eee_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select eee_7th_subjects from all_eee_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    eee_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_eee_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_eee_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_eee_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_eee_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_eee_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'eee_7th_subjects','eee_7th_date','eee_7th_time','eee_7th_code','semisters','branch'
                                        cur.execute('insert into eee_7th_schedule(eee_7th_subjects,eee_7th_date,eee_7th_time,eee_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_eee_7th_subjects_entry.get(),
                                            self.var_eee_7th_date_entry.get(),
                                            self.var_eee_7th_time_entry.get(),
                                            self.var_eee_7th_code.get(),
                                            self.var_eee_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_eee_7th_ia_schedule()
                                        con.close()
                    def fetch_eee_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_7th_schedule')
                            rows=cur.fetchall()
                            tree_eee_7th_treeview.delete(*tree_eee_7th_treeview.get_children())
                            for row in rows:
                                tree_eee_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_eee_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from eee_7th_schedule where eee_7th_subjects=?',(self.var_eee_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from eee_7th_schedule where eee_7th_subjects=? ',(self.var_eee_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_eee_7th_all()
                                    fetch_eee_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_eee_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update eee_7th_schedule set eee_7th_date=?,eee_7th_time=?,eee_7th_code=?,semisters=?,branch=?  where eee_7th_subjects=?',(
                                self.var_eee_7th_date_entry.get(),
                                self.var_eee_7th_time_entry.get(),
                                self.var_eee_7th_code.get(),
                                self.var_eee_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_eee_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_eee_7th_ia_schedule()
                                clear_eee_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_eee_7th_all():
                        fetch_eee_7th_ia_schedule()
                        self.var_eee_7th_subjects_entry.set("")
                        self.var_eee_7th_date_entry.set("")
                        self.var_eee_7th_time_entry.set("")
                        self.var_eee_7th_code.set("")
                        self.var_eee_7th_semister.set("")
                        self.var_serach_eee_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_eee_7th_ia_schedule(ev):
                        read=tree_eee_7th_treeview.focus()
                        content=tree_eee_7th_treeview.item(read)
                        row=content['values']

                        self.var_eee_7th_subjects_entry.set(row[1])
                        self.var_eee_7th_date_entry.set(row[2])
                        self.var_eee_7th_time_entry.set(row[3])
                        self.var_eee_7th_code.set(row[4])
                        self.var_eee_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_eee_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_eee_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from eee_7th_schedule where eee_7th_subjects=?",(self.var_serach_eee_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_eee_7th_treeview.delete(*tree_eee_7th_treeview.get_children())
                                for row in rows:
                                    tree_eee_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_eee_7th_subjects()
                    eee_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_eee_7th_subjects_entry,values=eee_7th_subjects_list).place(x=87,y=14)

                    eee_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_eee_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    eee_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_7th_time_entry).place(x=569,y=14)

                    eee_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_eee_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_eee_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_eee_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_eee_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_eee_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_eee_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_eee_7th_treeview=ttk.Treeview(tree_frame1,columns=('eee_7th_subjects','eee_7th_date','eee_7th_time','eee_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_eee_7th_treeview.xview)
                    scrolly.configure(command=tree_eee_7th_treeview.yview)

                    tree_eee_7th_treeview.heading('eee_7th_subjects',text="Subjects")
                    tree_eee_7th_treeview.heading('eee_7th_date',text="Date")
                    tree_eee_7th_treeview.heading('eee_7th_time',text="Time")
                    tree_eee_7th_treeview.heading('eee_7th_code',text="Code")
                    tree_eee_7th_treeview.heading('semisters',text="Semister")
                    tree_eee_7th_treeview.heading('branch',text="Branch")

                    tree_eee_7th_treeview.column('eee_7th_subjects',width=200)
                    tree_eee_7th_treeview.column('eee_7th_date',width=150)
                    tree_eee_7th_treeview.column('eee_7th_time',width=150)
                    tree_eee_7th_treeview.column('eee_7th_code',width=150)
                    tree_eee_7th_treeview.column('semisters',width=150)
                    tree_eee_7th_treeview.column('branch',width=200)

                    tree_eee_7th_treeview['show']='headings'
                
                    tree_eee_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_eee_7th_ia_schedule()
                    tree_eee_7th_treeview.bind('<ButtonRelease-1>',get_eee_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Electrical_And_Electronic_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    eee_8th_subjects_list=[]
                    def fetch_eee_8th_subjects():
                        #all_eee_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select eee_8th_subjects from all_eee_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    eee_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_eee_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_eee_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_eee_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_eee_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_eee_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'eee_8th_subjects','eee_8th_date','eee_8th_time','eee_8th_code','semisters','branch'
                                        cur.execute('insert into eee_8th_schedule(eee_8th_subjects,eee_8th_date,eee_8th_time,eee_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_eee_8th_subjects_entry.get(),
                                            self.var_eee_8th_date_entry.get(),
                                            self.var_eee_8th_time_entry.get(),
                                            self.var_eee_8th_code.get(),
                                            self.var_eee_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_eee_8th_ia_schedule()
                                        con.close()
                    def fetch_eee_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_8th_schedule')
                            rows=cur.fetchall()
                            tree_eee_8th_treeview.delete(*tree_eee_8th_treeview.get_children())
                            for row in rows:
                                tree_eee_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_eee_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from eee_8th_schedule where eee_8th_subjects=?',(self.var_eee_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from eee_8th_schedule where eee_8th_subjects=? ',(self.var_eee_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_eee_8th_all()
                                    fetch_eee_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_eee_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update eee_8th_schedule set eee_8th_date=?,eee_8th_time=?,eee_8th_code=?,semisters=?,branch=?  where eee_8th_subjects=?',(
                                self.var_eee_8th_date_entry.get(),
                                self.var_eee_8th_time_entry.get(),
                                self.var_eee_8th_code.get(),
                                self.var_eee_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_eee_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_eee_8th_ia_schedule()
                                clear_eee_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_eee_8th_all():
                        fetch_eee_8th_ia_schedule()
                        self.var_eee_8th_subjects_entry.set("")
                        self.var_eee_8th_date_entry.set("")
                        self.var_eee_8th_time_entry.set("")
                        self.var_eee_8th_code.set("")
                        self.var_eee_8th_semister.set("")
                        self.var_serach_eee_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_eee_8th_ia_schedule(ev):
                        read=tree_eee_8th_treeview.focus()
                        content=tree_eee_8th_treeview.item(read)
                        row=content['values']

                        self.var_eee_8th_subjects_entry.set(row[1])
                        self.var_eee_8th_date_entry.set(row[2])
                        self.var_eee_8th_time_entry.set(row[3])
                        self.var_eee_8th_code.set(row[4])
                        self.var_eee_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_eee_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_eee_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from eee_8th_schedule where eee_8th_subjects=?",(self.var_serach_eee_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_eee_8th_treeview.delete(*tree_eee_8th_treeview.get_children())
                                for row in rows:
                                    tree_eee_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_eee_8th_subjects()
                    eee_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_eee_8th_subjects_entry,values=eee_8th_subjects_list).place(x=87,y=14)

                    eee_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_eee_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    eee_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_8th_time_entry).place(x=569,y=14)

                    eee_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_eee_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_eee_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_eee_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_eee_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_eee_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_eee_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_eee_8th_treeview=ttk.Treeview(tree_frame1,columns=('eee_8th_subjects','eee_8th_date','eee_8th_time','eee_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_eee_8th_treeview.xview)
                    scrolly.configure(command=tree_eee_8th_treeview.yview)

                    tree_eee_8th_treeview.heading('eee_8th_subjects',text="Subjects")
                    tree_eee_8th_treeview.heading('eee_8th_date',text="Date")
                    tree_eee_8th_treeview.heading('eee_8th_time',text="Time")
                    tree_eee_8th_treeview.heading('eee_8th_code',text="Code")
                    tree_eee_8th_treeview.heading('semisters',text="Semister")
                    tree_eee_8th_treeview.heading('branch',text="Branch")

                    tree_eee_8th_treeview.column('eee_8th_subjects',width=200)
                    tree_eee_8th_treeview.column('eee_8th_date',width=150)
                    tree_eee_8th_treeview.column('eee_8th_time',width=150)
                    tree_eee_8th_treeview.column('eee_8th_code',width=150)
                    tree_eee_8th_treeview.column('semisters',width=150)
                    tree_eee_8th_treeview.column('branch',width=200)

                    tree_eee_8th_treeview['show']='headings'
                
                    tree_eee_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_eee_8th_ia_schedule()
                    tree_eee_8th_treeview.bind('<ButtonRelease-1>',get_eee_8th_ia_schedule)
        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Communication_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    ece_3rd_subjects_list=[]
                    def fetch_ece_3rd_subjects():
                        #all_ece_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ece_3rd_subjects from all_ece_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ece_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ece_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ece_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ece_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ece_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ece_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ece_3rd_subjects','ece_3rd_date','ece_3rd_time','ece_3rd_code','semisters','branch'
                                        cur.execute('insert into ece_3rd_schedule(ece_3rd_subjects,ece_3rd_date,ece_3rd_time,ece_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ece_3rd_subjects_entry.get(),
                                            self.var_ece_3rd_date_entry.get(),
                                            self.var_ece_3rd_time_entry.get(),
                                            self.var_ece_3rd_code.get(),
                                            self.var_ece_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ece_3rd_ia_schedule()
                                        con.close()
                    def fetch_ece_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_3rd_schedule')
                            rows=cur.fetchall()
                            tree_ece_3rd_treeview.delete(*tree_ece_3rd_treeview.get_children())
                            for row in rows:
                                tree_ece_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ece_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ece_3rd_schedule where ece_3rd_subjects=?',(self.var_ece_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ece_3rd_schedule where ece_3rd_subjects=? ',(self.var_ece_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ece_3rd_all()
                                    fetch_ece_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ece_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ece_3rd_schedule set ece_3rd_date=?,ece_3rd_time=?,ece_3rd_code=?,semisters=?,branch=?  where ece_3rd_subjects=?',(
                                self.var_ece_3rd_date_entry.get(),
                                self.var_ece_3rd_time_entry.get(),
                                self.var_ece_3rd_code.get(),
                                self.var_ece_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ece_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ece_3rd_ia_schedule()
                                clear_ece_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ece_3rd_all():
                        fetch_ece_3rd_ia_schedule()
                        self.var_ece_3rd_subjects_entry.set("")
                        self.var_ece_3rd_date_entry.set("")
                        self.var_ece_3rd_time_entry.set("")
                        self.var_ece_3rd_code.set("")
                        self.var_ece_3rd_semister.set("")
                        self.var_serach_ece_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ece_3rd_ia_schedule(ev):
                        read=tree_ece_3rd_treeview.focus()
                        content=tree_ece_3rd_treeview.item(read)
                        row=content['values']

                        self.var_ece_3rd_subjects_entry.set(row[1])
                        self.var_ece_3rd_date_entry.set(row[2])
                        self.var_ece_3rd_time_entry.set(row[3])
                        self.var_ece_3rd_code.set(row[4])
                        self.var_ece_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ece_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ece_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ece_3rd_schedule where ece_3rd_subjects=?",(self.var_serach_ece_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ece_3rd_treeview.delete(*tree_ece_3rd_treeview.get_children())
                                for row in rows:
                                    tree_ece_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ece_3rd_subjects()
                    ece_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ece_3rd_subjects_entry,values=ece_3rd_subjects_list).place(x=87,y=14)

                    ece_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ece_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ece_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_3rd_time_entry).place(x=569,y=14)

                    ece_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ece_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ece_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ece_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ece_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ece_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ece_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ece_3rd_treeview=ttk.Treeview(tree_frame1,columns=('ece_3rd_subjects','ece_3rd_date','ece_3rd_time','ece_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ece_3rd_treeview.xview)
                    scrolly.configure(command=tree_ece_3rd_treeview.yview)

                    tree_ece_3rd_treeview.heading('ece_3rd_subjects',text="Subjects")
                    tree_ece_3rd_treeview.heading('ece_3rd_date',text="Date")
                    tree_ece_3rd_treeview.heading('ece_3rd_time',text="Time")
                    tree_ece_3rd_treeview.heading('ece_3rd_code',text="Code")
                    tree_ece_3rd_treeview.heading('semisters',text="Semister")
                    tree_ece_3rd_treeview.heading('branch',text="Branch")

                    tree_ece_3rd_treeview.column('ece_3rd_subjects',width=200)
                    tree_ece_3rd_treeview.column('ece_3rd_date',width=150)
                    tree_ece_3rd_treeview.column('ece_3rd_time',width=150)
                    tree_ece_3rd_treeview.column('ece_3rd_code',width=150)
                    tree_ece_3rd_treeview.column('semisters',width=150)
                    tree_ece_3rd_treeview.column('branch',width=200)

                    tree_ece_3rd_treeview['show']='headings'
                
                    tree_ece_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_ece_3rd_ia_schedule()
                    tree_ece_3rd_treeview.bind('<ButtonRelease-1>',get_ece_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Communication_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    ece_4th_subjects_list=[]
                    def fetch_ece_4th_subjects():
                        #all_ece_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ece_4th_subjects from all_ece_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ece_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ece_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ece_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ece_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ece_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ece_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ece_4th_subjects','ece_4th_date','ece_4th_time','ece_4th_code','semisters','branch'
                                        cur.execute('insert into ece_4th_schedule(ece_4th_subjects,ece_4th_date,ece_4th_time,ece_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ece_4th_subjects_entry.get(),
                                            self.var_ece_4th_date_entry.get(),
                                            self.var_ece_4th_time_entry.get(),
                                            self.var_ece_4th_code.get(),
                                            self.var_ece_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ece_4th_ia_schedule()
                                        con.close()
                    def fetch_ece_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_4th_schedule')
                            rows=cur.fetchall()
                            tree_ece_4th_treeview.delete(*tree_ece_4th_treeview.get_children())
                            for row in rows:
                                tree_ece_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ece_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ece_4th_schedule where ece_4th_subjects=?',(self.var_ece_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ece_4th_schedule where ece_4th_subjects=? ',(self.var_ece_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ece_4th_all()
                                    fetch_ece_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ece_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ece_4th_schedule set ece_4th_date=?,ece_4th_time=?,ece_4th_code=?,semisters=?,branch=?  where ece_4th_subjects=?',(
                                self.var_ece_4th_date_entry.get(),
                                self.var_ece_4th_time_entry.get(),
                                self.var_ece_4th_code.get(),
                                self.var_ece_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ece_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ece_4th_ia_schedule()
                                clear_ece_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ece_4th_all():
                        fetch_ece_4th_ia_schedule()
                        self.var_ece_4th_subjects_entry.set("")
                        self.var_ece_4th_date_entry.set("")
                        self.var_ece_4th_time_entry.set("")
                        self.var_ece_4th_code.set("")
                        self.var_ece_4th_semister.set("")
                        self.var_serach_ece_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ece_4th_ia_schedule(ev):
                        read=tree_ece_4th_treeview.focus()
                        content=tree_ece_4th_treeview.item(read)
                        row=content['values']

                        self.var_ece_4th_subjects_entry.set(row[1])
                        self.var_ece_4th_date_entry.set(row[2])
                        self.var_ece_4th_time_entry.set(row[3])
                        self.var_ece_4th_code.set(row[4])
                        self.var_ece_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ece_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ece_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ece_4th_schedule where ece_4th_subjects=?",(self.var_serach_ece_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ece_4th_treeview.delete(*tree_ece_4th_treeview.get_children())
                                for row in rows:
                                    tree_ece_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ece_4th_subjects()
                    ece_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ece_4th_subjects_entry,values=ece_4th_subjects_list).place(x=87,y=14)

                    ece_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ece_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ece_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_4th_time_entry).place(x=569,y=14)

                    ece_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ece_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ece_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ece_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ece_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ece_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ece_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ece_4th_treeview=ttk.Treeview(tree_frame1,columns=('ece_4th_subjects','ece_4th_date','ece_4th_time','ece_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ece_4th_treeview.xview)
                    scrolly.configure(command=tree_ece_4th_treeview.yview)

                    tree_ece_4th_treeview.heading('ece_4th_subjects',text="Subjects")
                    tree_ece_4th_treeview.heading('ece_4th_date',text="Date")
                    tree_ece_4th_treeview.heading('ece_4th_time',text="Time")
                    tree_ece_4th_treeview.heading('ece_4th_code',text="Code")
                    tree_ece_4th_treeview.heading('semisters',text="Semister")
                    tree_ece_4th_treeview.heading('branch',text="Branch")

                    tree_ece_4th_treeview.column('ece_4th_subjects',width=200)
                    tree_ece_4th_treeview.column('ece_4th_date',width=150)
                    tree_ece_4th_treeview.column('ece_4th_time',width=150)
                    tree_ece_4th_treeview.column('ece_4th_code',width=150)
                    tree_ece_4th_treeview.column('semisters',width=150)
                    tree_ece_4th_treeview.column('branch',width=200)

                    tree_ece_4th_treeview['show']='headings'
                
                    tree_ece_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ece_4th_ia_schedule()
                    tree_ece_4th_treeview.bind('<ButtonRelease-1>',get_ece_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Communication_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    ece_5th_subjects_list=[]
                    def fetch_ece_5th_subjects():
                        #all_ece_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ece_5th_subjects from all_ece_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ece_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ece_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ece_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ece_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ece_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ece_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ece_5th_subjects','ece_5th_date','ece_5th_time','ece_5th_code','semisters','branch'
                                        cur.execute('insert into ece_5th_schedule(ece_5th_subjects,ece_5th_date,ece_5th_time,ece_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ece_5th_subjects_entry.get(),
                                            self.var_ece_5th_date_entry.get(),
                                            self.var_ece_5th_time_entry.get(),
                                            self.var_ece_5th_code.get(),
                                            self.var_ece_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ece_5th_ia_schedule()
                                        con.close()
                    def fetch_ece_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_5th_schedule')
                            rows=cur.fetchall()
                            tree_ece_5th_treeview.delete(*tree_ece_5th_treeview.get_children())
                            for row in rows:
                                tree_ece_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ece_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ece_5th_schedule where ece_5th_subjects=?',(self.var_ece_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ece_5th_schedule where ece_5th_subjects=? ',(self.var_ece_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ece_5th_all()
                                    fetch_ece_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ece_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ece_5th_schedule set ece_5th_date=?,ece_5th_time=?,ece_5th_code=?,semisters=?,branch=?  where ece_5th_subjects=?',(
                                self.var_ece_5th_date_entry.get(),
                                self.var_ece_5th_time_entry.get(),
                                self.var_ece_5th_code.get(),
                                self.var_ece_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ece_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ece_5th_ia_schedule()
                                clear_ece_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ece_5th_all():
                        fetch_ece_5th_ia_schedule()
                        self.var_ece_5th_subjects_entry.set("")
                        self.var_ece_5th_date_entry.set("")
                        self.var_ece_5th_time_entry.set("")
                        self.var_ece_5th_code.set("")
                        self.var_ece_5th_semister.set("")
                        self.var_serach_ece_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ece_5th_ia_schedule(ev):
                        read=tree_ece_5th_treeview.focus()
                        content=tree_ece_5th_treeview.item(read)
                        row=content['values']

                        self.var_ece_5th_subjects_entry.set(row[1])
                        self.var_ece_5th_date_entry.set(row[2])
                        self.var_ece_5th_time_entry.set(row[3])
                        self.var_ece_5th_code.set(row[4])
                        self.var_ece_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ece_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ece_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ece_5th_schedule where ece_5th_subjects=?",(self.var_serach_ece_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ece_5th_treeview.delete(*tree_ece_5th_treeview.get_children())
                                for row in rows:
                                    tree_ece_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ece_5th_subjects()
                    ece_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ece_5th_subjects_entry,values=ece_5th_subjects_list).place(x=87,y=14)

                    ece_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ece_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ece_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_5th_time_entry).place(x=569,y=14)

                    ece_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ece_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ece_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ece_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ece_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ece_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ece_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ece_5th_treeview=ttk.Treeview(tree_frame1,columns=('ece_5th_subjects','ece_5th_date','ece_5th_time','ece_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ece_5th_treeview.xview)
                    scrolly.configure(command=tree_ece_5th_treeview.yview)

                    tree_ece_5th_treeview.heading('ece_5th_subjects',text="Subjects")
                    tree_ece_5th_treeview.heading('ece_5th_date',text="Date")
                    tree_ece_5th_treeview.heading('ece_5th_time',text="Time")
                    tree_ece_5th_treeview.heading('ece_5th_code',text="Code")
                    tree_ece_5th_treeview.heading('semisters',text="Semister")
                    tree_ece_5th_treeview.heading('branch',text="Branch")

                    tree_ece_5th_treeview.column('ece_5th_subjects',width=200)
                    tree_ece_5th_treeview.column('ece_5th_date',width=150)
                    tree_ece_5th_treeview.column('ece_5th_time',width=150)
                    tree_ece_5th_treeview.column('ece_5th_code',width=150)
                    tree_ece_5th_treeview.column('semisters',width=150)
                    tree_ece_5th_treeview.column('branch',width=200)

                    tree_ece_5th_treeview['show']='headings'
                
                    tree_ece_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ece_5th_ia_schedule()
                    tree_ece_5th_treeview.bind('<ButtonRelease-1>',get_ece_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Communication_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    ece_6th_subjects_list=[]
                    def fetch_ece_6th_subjects():
                        #all_ece_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ece_6th_subjects from all_ece_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ece_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ece_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ece_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ece_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ece_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ece_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ece_6th_subjects','ece_6th_date','ece_6th_time','ece_6th_code','semisters','branch'
                                        cur.execute('insert into ece_6th_schedule(ece_6th_subjects,ece_6th_date,ece_6th_time,ece_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ece_6th_subjects_entry.get(),
                                            self.var_ece_6th_date_entry.get(),
                                            self.var_ece_6th_time_entry.get(),
                                            self.var_ece_6th_code.get(),
                                            self.var_ece_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ece_6th_ia_schedule()
                                        con.close()
                    def fetch_ece_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_6th_schedule')
                            rows=cur.fetchall()
                            tree_ece_6th_treeview.delete(*tree_ece_6th_treeview.get_children())
                            for row in rows:
                                tree_ece_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ece_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ece_6th_schedule where ece_6th_subjects=?',(self.var_ece_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ece_6th_schedule where ece_6th_subjects=? ',(self.var_ece_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ece_6th_all()
                                    fetch_ece_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ece_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ece_6th_schedule set ece_6th_date=?,ece_6th_time=?,ece_6th_code=?,semisters=?,branch=?  where ece_6th_subjects=?',(
                                self.var_ece_6th_date_entry.get(),
                                self.var_ece_6th_time_entry.get(),
                                self.var_ece_6th_code.get(),
                                self.var_ece_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ece_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ece_6th_ia_schedule()
                                clear_ece_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ece_6th_all():
                        fetch_ece_6th_ia_schedule()
                        self.var_ece_6th_subjects_entry.set("")
                        self.var_ece_6th_date_entry.set("")
                        self.var_ece_6th_time_entry.set("")
                        self.var_ece_6th_code.set("")
                        self.var_ece_6th_semister.set("")
                        self.var_serach_ece_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ece_6th_ia_schedule(ev):
                        read=tree_ece_6th_treeview.focus()
                        content=tree_ece_6th_treeview.item(read)
                        row=content['values']

                        self.var_ece_6th_subjects_entry.set(row[1])
                        self.var_ece_6th_date_entry.set(row[2])
                        self.var_ece_6th_time_entry.set(row[3])
                        self.var_ece_6th_code.set(row[4])
                        self.var_ece_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ece_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ece_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ece_6th_schedule where ece_6th_subjects=?",(self.var_serach_ece_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ece_6th_treeview.delete(*tree_ece_6th_treeview.get_children())
                                for row in rows:
                                    tree_ece_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ece_6th_subjects()
                    ece_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ece_6th_subjects_entry,values=ece_6th_subjects_list).place(x=87,y=14)

                    ece_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ece_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ece_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_6th_time_entry).place(x=569,y=14)

                    ece_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ece_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ece_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ece_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ece_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ece_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ece_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ece_6th_treeview=ttk.Treeview(tree_frame1,columns=('ece_6th_subjects','ece_6th_date','ece_6th_time','ece_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ece_6th_treeview.xview)
                    scrolly.configure(command=tree_ece_6th_treeview.yview)

                    tree_ece_6th_treeview.heading('ece_6th_subjects',text="Subjects")
                    tree_ece_6th_treeview.heading('ece_6th_date',text="Date")
                    tree_ece_6th_treeview.heading('ece_6th_time',text="Time")
                    tree_ece_6th_treeview.heading('ece_6th_code',text="Code")
                    tree_ece_6th_treeview.heading('semisters',text="Semister")
                    tree_ece_6th_treeview.heading('branch',text="Branch")

                    tree_ece_6th_treeview.column('ece_6th_subjects',width=200)
                    tree_ece_6th_treeview.column('ece_6th_date',width=150)
                    tree_ece_6th_treeview.column('ece_6th_time',width=150)
                    tree_ece_6th_treeview.column('ece_6th_code',width=150)
                    tree_ece_6th_treeview.column('semisters',width=150)
                    tree_ece_6th_treeview.column('branch',width=200)

                    tree_ece_6th_treeview['show']='headings'
                
                    tree_ece_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ece_6th_ia_schedule()
                    tree_ece_6th_treeview.bind('<ButtonRelease-1>',get_ece_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Communication_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    ece_7th_subjects_list=[]
                    def fetch_ece_7th_subjects():
                        #all_ece_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ece_7th_subjects from all_ece_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ece_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ece_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ece_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ece_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ece_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ece_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ece_7th_subjects','ece_7th_date','ece_7th_time','ece_7th_code','semisters','branch'
                                        cur.execute('insert into ece_7th_schedule(ece_7th_subjects,ece_7th_date,ece_7th_time,ece_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ece_7th_subjects_entry.get(),
                                            self.var_ece_7th_date_entry.get(),
                                            self.var_ece_7th_time_entry.get(),
                                            self.var_ece_7th_code.get(),
                                            self.var_ece_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ece_7th_ia_schedule()
                                        con.close()
                    def fetch_ece_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_7th_schedule')
                            rows=cur.fetchall()
                            tree_ece_7th_treeview.delete(*tree_ece_7th_treeview.get_children())
                            for row in rows:
                                tree_ece_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ece_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ece_7th_schedule where ece_7th_subjects=?',(self.var_ece_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ece_7th_schedule where ece_7th_subjects=? ',(self.var_ece_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ece_7th_all()
                                    fetch_ece_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ece_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ece_7th_schedule set ece_7th_date=?,ece_7th_time=?,ece_7th_code=?,semisters=?,branch=?  where ece_7th_subjects=?',(
                                self.var_ece_7th_date_entry.get(),
                                self.var_ece_7th_time_entry.get(),
                                self.var_ece_7th_code.get(),
                                self.var_ece_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ece_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ece_7th_ia_schedule()
                                clear_ece_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ece_7th_all():
                        fetch_ece_7th_ia_schedule()
                        self.var_ece_7th_subjects_entry.set("")
                        self.var_ece_7th_date_entry.set("")
                        self.var_ece_7th_time_entry.set("")
                        self.var_ece_7th_code.set("")
                        self.var_ece_7th_semister.set("")
                        self.var_serach_ece_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ece_7th_ia_schedule(ev):
                        read=tree_ece_7th_treeview.focus()
                        content=tree_ece_7th_treeview.item(read)
                        row=content['values']

                        self.var_ece_7th_subjects_entry.set(row[1])
                        self.var_ece_7th_date_entry.set(row[2])
                        self.var_ece_7th_time_entry.set(row[3])
                        self.var_ece_7th_code.set(row[4])
                        self.var_ece_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ece_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ece_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ece_7th_schedule where ece_7th_subjects=?",(self.var_serach_ece_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ece_7th_treeview.delete(*tree_ece_7th_treeview.get_children())
                                for row in rows:
                                    tree_ece_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ece_7th_subjects()
                    ece_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ece_7th_subjects_entry,values=ece_7th_subjects_list).place(x=87,y=14)

                    ece_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ece_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ece_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_7th_time_entry).place(x=569,y=14)

                    ece_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ece_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ece_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ece_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ece_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ece_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ece_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ece_7th_treeview=ttk.Treeview(tree_frame1,columns=('ece_7th_subjects','ece_7th_date','ece_7th_time','ece_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ece_7th_treeview.xview)
                    scrolly.configure(command=tree_ece_7th_treeview.yview)

                    tree_ece_7th_treeview.heading('ece_7th_subjects',text="Subjects")
                    tree_ece_7th_treeview.heading('ece_7th_date',text="Date")
                    tree_ece_7th_treeview.heading('ece_7th_time',text="Time")
                    tree_ece_7th_treeview.heading('ece_7th_code',text="Code")
                    tree_ece_7th_treeview.heading('semisters',text="Semister")
                    tree_ece_7th_treeview.heading('branch',text="Branch")

                    tree_ece_7th_treeview.column('ece_7th_subjects',width=200)
                    tree_ece_7th_treeview.column('ece_7th_date',width=150)
                    tree_ece_7th_treeview.column('ece_7th_time',width=150)
                    tree_ece_7th_treeview.column('ece_7th_code',width=150)
                    tree_ece_7th_treeview.column('semisters',width=150)
                    tree_ece_7th_treeview.column('branch',width=200)

                    tree_ece_7th_treeview['show']='headings'
                
                    tree_ece_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ece_7th_ia_schedule()
                    tree_ece_7th_treeview.bind('<ButtonRelease-1>',get_ece_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Communication_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    ece_8th_subjects_list=[]
                    def fetch_ece_8th_subjects():
                        #all_ece_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ece_8th_subjects from all_ece_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ece_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ece_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ece_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ece_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ece_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ece_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ece_8th_subjects','ece_8th_date','ece_8th_time','ece_8th_code','semisters','branch'
                                        cur.execute('insert into ece_8th_schedule(ece_8th_subjects,ece_8th_date,ece_8th_time,ece_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ece_8th_subjects_entry.get(),
                                            self.var_ece_8th_date_entry.get(),
                                            self.var_ece_8th_time_entry.get(),
                                            self.var_ece_8th_code.get(),
                                            self.var_ece_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ece_8th_ia_schedule()
                                        con.close()
                    def fetch_ece_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_8th_schedule')
                            rows=cur.fetchall()
                            tree_ece_8th_treeview.delete(*tree_ece_8th_treeview.get_children())
                            for row in rows:
                                tree_ece_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ece_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ece_8th_schedule where ece_8th_subjects=?',(self.var_ece_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ece_8th_schedule where ece_8th_subjects=? ',(self.var_ece_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ece_8th_all()
                                    fetch_ece_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ece_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ece_8th_schedule set ece_8th_date=?,ece_8th_time=?,ece_8th_code=?,semisters=?,branch=?  where ece_8th_subjects=?',(
                                self.var_ece_8th_date_entry.get(),
                                self.var_ece_8th_time_entry.get(),
                                self.var_ece_8th_code.get(),
                                self.var_ece_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ece_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ece_8th_ia_schedule()
                                clear_ece_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ece_8th_all():
                        fetch_ece_8th_ia_schedule()
                        self.var_ece_8th_subjects_entry.set("")
                        self.var_ece_8th_date_entry.set("")
                        self.var_ece_8th_time_entry.set("")
                        self.var_ece_8th_code.set("")
                        self.var_ece_8th_semister.set("")
                        self.var_serach_ece_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ece_8th_ia_schedule(ev):
                        read=tree_ece_8th_treeview.focus()
                        content=tree_ece_8th_treeview.item(read)
                        row=content['values']

                        self.var_ece_8th_subjects_entry.set(row[1])
                        self.var_ece_8th_date_entry.set(row[2])
                        self.var_ece_8th_time_entry.set(row[3])
                        self.var_ece_8th_code.set(row[4])
                        self.var_ece_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ece_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ece_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ece_8th_schedule where ece_8th_subjects=?",(self.var_serach_ece_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ece_8th_treeview.delete(*tree_ece_8th_treeview.get_children())
                                for row in rows:
                                    tree_ece_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ece_8th_subjects()
                    ece_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ece_8th_subjects_entry,values=ece_8th_subjects_list).place(x=87,y=14)

                    ece_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ece_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ece_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_8th_time_entry).place(x=569,y=14)

                    ece_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ece_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ece_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ece_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ece_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ece_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ece_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ece_8th_treeview=ttk.Treeview(tree_frame1,columns=('ece_8th_subjects','ece_8th_date','ece_8th_time','ece_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ece_8th_treeview.xview)
                    scrolly.configure(command=tree_ece_8th_treeview.yview)

                    tree_ece_8th_treeview.heading('ece_8th_subjects',text="Subjects")
                    tree_ece_8th_treeview.heading('ece_8th_date',text="Date")
                    tree_ece_8th_treeview.heading('ece_8th_time',text="Time")
                    tree_ece_8th_treeview.heading('ece_8th_code',text="Code")
                    tree_ece_8th_treeview.heading('semisters',text="Semister")
                    tree_ece_8th_treeview.heading('branch',text="Branch")

                    tree_ece_8th_treeview.column('ece_8th_subjects',width=200)
                    tree_ece_8th_treeview.column('ece_8th_date',width=150)
                    tree_ece_8th_treeview.column('ece_8th_time',width=150)
                    tree_ece_8th_treeview.column('ece_8th_code',width=150)
                    tree_ece_8th_treeview.column('semisters',width=150)
                    tree_ece_8th_treeview.column('branch',width=200)

                    tree_ece_8th_treeview['show']='headings'
                
                    tree_ece_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ece_8th_ia_schedule()
                    tree_ece_8th_treeview.bind('<ButtonRelease-1>',get_ece_8th_ia_schedule)
        ####################################################################################################################################################################
        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Telecommunication_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    ete_3rd_subjects_list=[]
                    def fetch_ete_3rd_subjects():
                        #all_ete_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ete_3rd_subjects from all_ete_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ete_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ete_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ete_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ete_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ete_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ete_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ete_3rd_subjects','ete_3rd_date','ete_3rd_time','ete_3rd_code','semisters','branch'
                                        cur.execute('insert into ete_3rd_schedule(ete_3rd_subjects,ete_3rd_date,ete_3rd_time,ete_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ete_3rd_subjects_entry.get(),
                                            self.var_ete_3rd_date_entry.get(),
                                            self.var_ete_3rd_time_entry.get(),
                                            self.var_ete_3rd_code.get(),
                                            self.var_ete_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ete_3rd_ia_schedule()
                                        con.close()
                    def fetch_ete_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_3rd_schedule')
                            rows=cur.fetchall()
                            tree_ete_3rd_treeview.delete(*tree_ete_3rd_treeview.get_children())
                            for row in rows:
                                tree_ete_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ete_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ete_3rd_schedule where ete_3rd_subjects=?',(self.var_ete_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ete_3rd_schedule where ete_3rd_subjects=? ',(self.var_ete_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ete_3rd_all()
                                    fetch_ete_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ete_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ete_3rd_schedule set ete_3rd_date=?,ete_3rd_time=?,ete_3rd_code=?,semisters=?,branch=?  where ete_3rd_subjects=?',(
                                self.var_ete_3rd_date_entry.get(),
                                self.var_ete_3rd_time_entry.get(),
                                self.var_ete_3rd_code.get(),
                                self.var_ete_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ete_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ete_3rd_ia_schedule()
                                clear_ete_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ete_3rd_all():
                        fetch_ete_3rd_ia_schedule()
                        self.var_ete_3rd_subjects_entry.set("")
                        self.var_ete_3rd_date_entry.set("")
                        self.var_ete_3rd_time_entry.set("")
                        self.var_ete_3rd_code.set("")
                        self.var_ete_3rd_semister.set("")
                        self.var_serach_ete_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ete_3rd_ia_schedule(ev):
                        read=tree_ete_3rd_treeview.focus()
                        content=tree_ete_3rd_treeview.item(read)
                        row=content['values']

                        self.var_ete_3rd_subjects_entry.set(row[1])
                        self.var_ete_3rd_date_entry.set(row[2])
                        self.var_ete_3rd_time_entry.set(row[3])
                        self.var_ete_3rd_code.set(row[4])
                        self.var_ete_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ete_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ete_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ete_3rd_schedule where ete_3rd_subjects=?",(self.var_serach_ete_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ete_3rd_treeview.delete(*tree_ete_3rd_treeview.get_children())
                                for row in rows:
                                    tree_ete_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ete_3rd_subjects()
                    ete_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ete_3rd_subjects_entry,values=ete_3rd_subjects_list).place(x=87,y=14)

                    ete_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ete_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ete_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_3rd_time_entry).place(x=569,y=14)

                    ete_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ete_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ete_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ete_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ete_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ete_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ete_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ete_3rd_treeview=ttk.Treeview(tree_frame1,columns=('ete_3rd_subjects','ete_3rd_date','ete_3rd_time','ete_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ete_3rd_treeview.xview)
                    scrolly.configure(command=tree_ete_3rd_treeview.yview)

                    tree_ete_3rd_treeview.heading('ete_3rd_subjects',text="Subjects")
                    tree_ete_3rd_treeview.heading('ete_3rd_date',text="Date")
                    tree_ete_3rd_treeview.heading('ete_3rd_time',text="Time")
                    tree_ete_3rd_treeview.heading('ete_3rd_code',text="Code")
                    tree_ete_3rd_treeview.heading('semisters',text="Semister")
                    tree_ete_3rd_treeview.heading('branch',text="Branch")

                    tree_ete_3rd_treeview.column('ete_3rd_subjects',width=200)
                    tree_ete_3rd_treeview.column('ete_3rd_date',width=150)
                    tree_ete_3rd_treeview.column('ete_3rd_time',width=150)
                    tree_ete_3rd_treeview.column('ete_3rd_code',width=150)
                    tree_ete_3rd_treeview.column('semisters',width=150)
                    tree_ete_3rd_treeview.column('branch',width=200)

                    tree_ete_3rd_treeview['show']='headings'
                
                    tree_ete_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_ete_3rd_ia_schedule()
                    tree_ete_3rd_treeview.bind('<ButtonRelease-1>',get_ete_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Telecommunication_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    ete_4th_subjects_list=[]
                    def fetch_ete_4th_subjects():
                        #all_ete_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ete_4th_subjects from all_ete_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ete_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ete_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ete_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ete_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ete_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ete_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ete_4th_subjects','ete_4th_date','ete_4th_time','ete_4th_code','semisters','branch'
                                        cur.execute('insert into ete_4th_schedule(ete_4th_subjects,ete_4th_date,ete_4th_time,ete_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ete_4th_subjects_entry.get(),
                                            self.var_ete_4th_date_entry.get(),
                                            self.var_ete_4th_time_entry.get(),
                                            self.var_ete_4th_code.get(),
                                            self.var_ete_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ete_4th_ia_schedule()
                                        con.close()
                    def fetch_ete_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_4th_schedule')
                            rows=cur.fetchall()
                            tree_ete_4th_treeview.delete(*tree_ete_4th_treeview.get_children())
                            for row in rows:
                                tree_ete_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ete_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ete_4th_schedule where ete_4th_subjects=?',(self.var_ete_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ete_4th_schedule where ete_4th_subjects=? ',(self.var_ete_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ete_4th_all()
                                    fetch_ete_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ete_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ete_4th_schedule set ete_4th_date=?,ete_4th_time=?,ete_4th_code=?,semisters=?,branch=?  where ete_4th_subjects=?',(
                                self.var_ete_4th_date_entry.get(),
                                self.var_ete_4th_time_entry.get(),
                                self.var_ete_4th_code.get(),
                                self.var_ete_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ete_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ete_4th_ia_schedule()
                                clear_ete_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ete_4th_all():
                        fetch_ete_4th_ia_schedule()
                        self.var_ete_4th_subjects_entry.set("")
                        self.var_ete_4th_date_entry.set("")
                        self.var_ete_4th_time_entry.set("")
                        self.var_ete_4th_code.set("")
                        self.var_ete_4th_semister.set("")
                        self.var_serach_ete_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ete_4th_ia_schedule(ev):
                        read=tree_ete_4th_treeview.focus()
                        content=tree_ete_4th_treeview.item(read)
                        row=content['values']

                        self.var_ete_4th_subjects_entry.set(row[1])
                        self.var_ete_4th_date_entry.set(row[2])
                        self.var_ete_4th_time_entry.set(row[3])
                        self.var_ete_4th_code.set(row[4])
                        self.var_ete_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ete_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ete_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ete_4th_schedule where ete_4th_subjects=?",(self.var_serach_ete_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ete_4th_treeview.delete(*tree_ete_4th_treeview.get_children())
                                for row in rows:
                                    tree_ete_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ete_4th_subjects()
                    ete_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ete_4th_subjects_entry,values=ete_4th_subjects_list).place(x=87,y=14)

                    ete_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ete_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ete_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_4th_time_entry).place(x=569,y=14)

                    ete_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ete_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ete_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ete_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ete_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ete_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ete_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ete_4th_treeview=ttk.Treeview(tree_frame1,columns=('ete_4th_subjects','ete_4th_date','ete_4th_time','ete_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ete_4th_treeview.xview)
                    scrolly.configure(command=tree_ete_4th_treeview.yview)

                    tree_ete_4th_treeview.heading('ete_4th_subjects',text="Subjects")
                    tree_ete_4th_treeview.heading('ete_4th_date',text="Date")
                    tree_ete_4th_treeview.heading('ete_4th_time',text="Time")
                    tree_ete_4th_treeview.heading('ete_4th_code',text="Code")
                    tree_ete_4th_treeview.heading('semisters',text="Semister")
                    tree_ete_4th_treeview.heading('branch',text="Branch")

                    tree_ete_4th_treeview.column('ete_4th_subjects',width=200)
                    tree_ete_4th_treeview.column('ete_4th_date',width=150)
                    tree_ete_4th_treeview.column('ete_4th_time',width=150)
                    tree_ete_4th_treeview.column('ete_4th_code',width=150)
                    tree_ete_4th_treeview.column('semisters',width=150)
                    tree_ete_4th_treeview.column('branch',width=200)

                    tree_ete_4th_treeview['show']='headings'
                
                    tree_ete_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ete_4th_ia_schedule()
                    tree_ete_4th_treeview.bind('<ButtonRelease-1>',get_ete_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Telecommunication_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    ete_5th_subjects_list=[]
                    def fetch_ete_5th_subjects():
                        #all_ete_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ete_5th_subjects from all_ete_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ete_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ete_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ete_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ete_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ete_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ete_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ete_5th_subjects','ete_5th_date','ete_5th_time','ete_5th_code','semisters','branch'
                                        cur.execute('insert into ete_5th_schedule(ete_5th_subjects,ete_5th_date,ete_5th_time,ete_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ete_5th_subjects_entry.get(),
                                            self.var_ete_5th_date_entry.get(),
                                            self.var_ete_5th_time_entry.get(),
                                            self.var_ete_5th_code.get(),
                                            self.var_ete_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ete_5th_ia_schedule()
                                        con.close()
                    def fetch_ete_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_5th_schedule')
                            rows=cur.fetchall()
                            tree_ete_5th_treeview.delete(*tree_ete_5th_treeview.get_children())
                            for row in rows:
                                tree_ete_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ete_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ete_5th_schedule where ete_5th_subjects=?',(self.var_ete_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ete_5th_schedule where ete_5th_subjects=? ',(self.var_ete_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ete_5th_all()
                                    fetch_ete_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ete_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ete_5th_schedule set ete_5th_date=?,ete_5th_time=?,ete_5th_code=?,semisters=?,branch=?  where ete_5th_subjects=?',(
                                self.var_ete_5th_date_entry.get(),
                                self.var_ete_5th_time_entry.get(),
                                self.var_ete_5th_code.get(),
                                self.var_ete_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ete_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ete_5th_ia_schedule()
                                clear_ete_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ete_5th_all():
                        fetch_ete_5th_ia_schedule()
                        self.var_ete_5th_subjects_entry.set("")
                        self.var_ete_5th_date_entry.set("")
                        self.var_ete_5th_time_entry.set("")
                        self.var_ete_5th_code.set("")
                        self.var_ete_5th_semister.set("")
                        self.var_serach_ete_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ete_5th_ia_schedule(ev):
                        read=tree_ete_5th_treeview.focus()
                        content=tree_ete_5th_treeview.item(read)
                        row=content['values']

                        self.var_ete_5th_subjects_entry.set(row[1])
                        self.var_ete_5th_date_entry.set(row[2])
                        self.var_ete_5th_time_entry.set(row[3])
                        self.var_ete_5th_code.set(row[4])
                        self.var_ete_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ete_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ete_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ete_5th_schedule where ete_5th_subjects=?",(self.var_serach_ete_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ete_5th_treeview.delete(*tree_ete_5th_treeview.get_children())
                                for row in rows:
                                    tree_ete_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ete_5th_subjects()
                    ete_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ete_5th_subjects_entry,values=ete_5th_subjects_list).place(x=87,y=14)

                    ete_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ete_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ete_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_5th_time_entry).place(x=569,y=14)

                    ete_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ete_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ete_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ete_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ete_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ete_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ete_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ete_5th_treeview=ttk.Treeview(tree_frame1,columns=('ete_5th_subjects','ete_5th_date','ete_5th_time','ete_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ete_5th_treeview.xview)
                    scrolly.configure(command=tree_ete_5th_treeview.yview)

                    tree_ete_5th_treeview.heading('ete_5th_subjects',text="Subjects")
                    tree_ete_5th_treeview.heading('ete_5th_date',text="Date")
                    tree_ete_5th_treeview.heading('ete_5th_time',text="Time")
                    tree_ete_5th_treeview.heading('ete_5th_code',text="Code")
                    tree_ete_5th_treeview.heading('semisters',text="Semister")
                    tree_ete_5th_treeview.heading('branch',text="Branch")

                    tree_ete_5th_treeview.column('ete_5th_subjects',width=200)
                    tree_ete_5th_treeview.column('ete_5th_date',width=150)
                    tree_ete_5th_treeview.column('ete_5th_time',width=150)
                    tree_ete_5th_treeview.column('ete_5th_code',width=150)
                    tree_ete_5th_treeview.column('semisters',width=150)
                    tree_ete_5th_treeview.column('branch',width=200)

                    tree_ete_5th_treeview['show']='headings'
                
                    tree_ete_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ete_5th_ia_schedule()
                    tree_ete_5th_treeview.bind('<ButtonRelease-1>',get_ete_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Telecommunication_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    ete_6th_subjects_list=[]
                    def fetch_ete_6th_subjects():
                        #all_ete_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ete_6th_subjects from all_ete_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ete_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ete_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ete_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ete_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ete_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ete_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ete_6th_subjects','ete_6th_date','ete_6th_time','ete_6th_code','semisters','branch'
                                        cur.execute('insert into ete_6th_schedule(ete_6th_subjects,ete_6th_date,ete_6th_time,ete_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ete_6th_subjects_entry.get(),
                                            self.var_ete_6th_date_entry.get(),
                                            self.var_ete_6th_time_entry.get(),
                                            self.var_ete_6th_code.get(),
                                            self.var_ete_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ete_6th_ia_schedule()
                                        con.close()
                    def fetch_ete_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_6th_schedule')
                            rows=cur.fetchall()
                            tree_ete_6th_treeview.delete(*tree_ete_6th_treeview.get_children())
                            for row in rows:
                                tree_ete_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ete_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ete_6th_schedule where ete_6th_subjects=?',(self.var_ete_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ete_6th_schedule where ete_6th_subjects=? ',(self.var_ete_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ete_6th_all()
                                    fetch_ete_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ete_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ete_6th_schedule set ete_6th_date=?,ete_6th_time=?,ete_6th_code=?,semisters=?,branch=?  where ete_6th_subjects=?',(
                                self.var_ete_6th_date_entry.get(),
                                self.var_ete_6th_time_entry.get(),
                                self.var_ete_6th_code.get(),
                                self.var_ete_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ete_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ete_6th_ia_schedule()
                                clear_ete_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ete_6th_all():
                        fetch_ete_6th_ia_schedule()
                        self.var_ete_6th_subjects_entry.set("")
                        self.var_ete_6th_date_entry.set("")
                        self.var_ete_6th_time_entry.set("")
                        self.var_ete_6th_code.set("")
                        self.var_ete_6th_semister.set("")
                        self.var_serach_ete_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ete_6th_ia_schedule(ev):
                        read=tree_ete_6th_treeview.focus()
                        content=tree_ete_6th_treeview.item(read)
                        row=content['values']

                        self.var_ete_6th_subjects_entry.set(row[1])
                        self.var_ete_6th_date_entry.set(row[2])
                        self.var_ete_6th_time_entry.set(row[3])
                        self.var_ete_6th_code.set(row[4])
                        self.var_ete_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ete_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ete_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ete_6th_schedule where ete_6th_subjects=?",(self.var_serach_ete_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ete_6th_treeview.delete(*tree_ete_6th_treeview.get_children())
                                for row in rows:
                                    tree_ete_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ete_6th_subjects()
                    ete_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ete_6th_subjects_entry,values=ete_6th_subjects_list).place(x=87,y=14)

                    ete_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ete_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ete_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_6th_time_entry).place(x=569,y=14)

                    ete_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ete_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ete_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ete_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ete_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ete_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ete_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ete_6th_treeview=ttk.Treeview(tree_frame1,columns=('ete_6th_subjects','ete_6th_date','ete_6th_time','ete_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ete_6th_treeview.xview)
                    scrolly.configure(command=tree_ete_6th_treeview.yview)

                    tree_ete_6th_treeview.heading('ete_6th_subjects',text="Subjects")
                    tree_ete_6th_treeview.heading('ete_6th_date',text="Date")
                    tree_ete_6th_treeview.heading('ete_6th_time',text="Time")
                    tree_ete_6th_treeview.heading('ete_6th_code',text="Code")
                    tree_ete_6th_treeview.heading('semisters',text="Semister")
                    tree_ete_6th_treeview.heading('branch',text="Branch")

                    tree_ete_6th_treeview.column('ete_6th_subjects',width=200)
                    tree_ete_6th_treeview.column('ete_6th_date',width=150)
                    tree_ete_6th_treeview.column('ete_6th_time',width=150)
                    tree_ete_6th_treeview.column('ete_6th_code',width=150)
                    tree_ete_6th_treeview.column('semisters',width=150)
                    tree_ete_6th_treeview.column('branch',width=200)

                    tree_ete_6th_treeview['show']='headings'
                
                    tree_ete_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ete_6th_ia_schedule()
                    tree_ete_6th_treeview.bind('<ButtonRelease-1>',get_ete_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Telecommunication_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    ete_7th_subjects_list=[]
                    def fetch_ete_7th_subjects():
                        #all_ete_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ete_7th_subjects from all_ete_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ete_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ete_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ete_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ete_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ete_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ete_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ete_7th_subjects','ete_7th_date','ete_7th_time','ete_7th_code','semisters','branch'
                                        cur.execute('insert into ete_7th_schedule(ete_7th_subjects,ete_7th_date,ete_7th_time,ete_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ete_7th_subjects_entry.get(),
                                            self.var_ete_7th_date_entry.get(),
                                            self.var_ete_7th_time_entry.get(),
                                            self.var_ete_7th_code.get(),
                                            self.var_ete_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ete_7th_ia_schedule()
                                        con.close()
                    def fetch_ete_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_7th_schedule')
                            rows=cur.fetchall()
                            tree_ete_7th_treeview.delete(*tree_ete_7th_treeview.get_children())
                            for row in rows:
                                tree_ete_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ete_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ete_7th_schedule where ete_7th_subjects=?',(self.var_ete_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ete_7th_schedule where ete_7th_subjects=? ',(self.var_ete_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ete_7th_all()
                                    fetch_ete_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ete_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ete_7th_schedule set ete_7th_date=?,ete_7th_time=?,ete_7th_code=?,semisters=?,branch=?  where ete_7th_subjects=?',(
                                self.var_ete_7th_date_entry.get(),
                                self.var_ete_7th_time_entry.get(),
                                self.var_ete_7th_code.get(),
                                self.var_ete_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ete_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ete_7th_ia_schedule()
                                clear_ete_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ete_7th_all():
                        fetch_ete_7th_ia_schedule()
                        self.var_ete_7th_subjects_entry.set("")
                        self.var_ete_7th_date_entry.set("")
                        self.var_ete_7th_time_entry.set("")
                        self.var_ete_7th_code.set("")
                        self.var_ete_7th_semister.set("")
                        self.var_serach_ete_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ete_7th_ia_schedule(ev):
                        read=tree_ete_7th_treeview.focus()
                        content=tree_ete_7th_treeview.item(read)
                        row=content['values']

                        self.var_ete_7th_subjects_entry.set(row[1])
                        self.var_ete_7th_date_entry.set(row[2])
                        self.var_ete_7th_time_entry.set(row[3])
                        self.var_ete_7th_code.set(row[4])
                        self.var_ete_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ete_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ete_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ete_7th_schedule where ete_7th_subjects=?",(self.var_serach_ete_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ete_7th_treeview.delete(*tree_ete_7th_treeview.get_children())
                                for row in rows:
                                    tree_ete_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ete_7th_subjects()
                    ete_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ete_7th_subjects_entry,values=ete_7th_subjects_list).place(x=87,y=14)

                    ete_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ete_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ete_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_7th_time_entry).place(x=569,y=14)

                    ete_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ete_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ete_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ete_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ete_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ete_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ete_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ete_7th_treeview=ttk.Treeview(tree_frame1,columns=('ete_7th_subjects','ete_7th_date','ete_7th_time','ete_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ete_7th_treeview.xview)
                    scrolly.configure(command=tree_ete_7th_treeview.yview)

                    tree_ete_7th_treeview.heading('ete_7th_subjects',text="Subjects")
                    tree_ete_7th_treeview.heading('ete_7th_date',text="Date")
                    tree_ete_7th_treeview.heading('ete_7th_time',text="Time")
                    tree_ete_7th_treeview.heading('ete_7th_code',text="Code")
                    tree_ete_7th_treeview.heading('semisters',text="Semister")
                    tree_ete_7th_treeview.heading('branch',text="Branch")

                    tree_ete_7th_treeview.column('ete_7th_subjects',width=200)
                    tree_ete_7th_treeview.column('ete_7th_date',width=150)
                    tree_ete_7th_treeview.column('ete_7th_time',width=150)
                    tree_ete_7th_treeview.column('ete_7th_code',width=150)
                    tree_ete_7th_treeview.column('semisters',width=150)
                    tree_ete_7th_treeview.column('branch',width=200)

                    tree_ete_7th_treeview['show']='headings'
                
                    tree_ete_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ete_7th_ia_schedule()
                    tree_ete_7th_treeview.bind('<ButtonRelease-1>',get_ete_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Telecommunication_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    ete_8th_subjects_list=[]
                    def fetch_ete_8th_subjects():
                        #all_ete_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ete_8th_subjects from all_ete_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ete_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ete_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ete_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ete_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ete_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ete_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ete_8th_subjects','ete_8th_date','ete_8th_time','ete_8th_code','semisters','branch'
                                        cur.execute('insert into ete_8th_schedule(ete_8th_subjects,ete_8th_date,ete_8th_time,ete_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ete_8th_subjects_entry.get(),
                                            self.var_ete_8th_date_entry.get(),
                                            self.var_ete_8th_time_entry.get(),
                                            self.var_ete_8th_code.get(),
                                            self.var_ete_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ete_8th_ia_schedule()
                                        con.close()
                    def fetch_ete_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_8th_schedule')
                            rows=cur.fetchall()
                            tree_ete_8th_treeview.delete(*tree_ete_8th_treeview.get_children())
                            for row in rows:
                                tree_ete_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ete_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ete_8th_schedule where ete_8th_subjects=?',(self.var_ete_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ete_8th_schedule where ete_8th_subjects=? ',(self.var_ete_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ete_8th_all()
                                    fetch_ete_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ete_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ete_8th_schedule set ete_8th_date=?,ete_8th_time=?,ete_8th_code=?,semisters=?,branch=?  where ete_8th_subjects=?',(
                                self.var_ete_8th_date_entry.get(),
                                self.var_ete_8th_time_entry.get(),
                                self.var_ete_8th_code.get(),
                                self.var_ete_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ete_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ete_8th_ia_schedule()
                                clear_ete_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ete_8th_all():
                        fetch_ete_8th_ia_schedule()
                        self.var_ete_8th_subjects_entry.set("")
                        self.var_ete_8th_date_entry.set("")
                        self.var_ete_8th_time_entry.set("")
                        self.var_ete_8th_code.set("")
                        self.var_ete_8th_semister.set("")
                        self.var_serach_ete_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ete_8th_ia_schedule(ev):
                        read=tree_ete_8th_treeview.focus()
                        content=tree_ete_8th_treeview.item(read)
                        row=content['values']

                        self.var_ete_8th_subjects_entry.set(row[1])
                        self.var_ete_8th_date_entry.set(row[2])
                        self.var_ete_8th_time_entry.set(row[3])
                        self.var_ete_8th_code.set(row[4])
                        self.var_ete_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ete_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ete_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ete_8th_schedule where ete_8th_subjects=?",(self.var_serach_ete_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ete_8th_treeview.delete(*tree_ete_8th_treeview.get_children())
                                for row in rows:
                                    tree_ete_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ete_8th_subjects()
                    ete_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ete_8th_subjects_entry,values=ete_8th_subjects_list).place(x=87,y=14)

                    ete_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ete_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ete_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_8th_time_entry).place(x=569,y=14)

                    ete_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ete_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ete_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ete_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ete_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ete_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ete_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ete_8th_treeview=ttk.Treeview(tree_frame1,columns=('ete_8th_subjects','ete_8th_date','ete_8th_time','ete_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ete_8th_treeview.xview)
                    scrolly.configure(command=tree_ete_8th_treeview.yview)

                    tree_ete_8th_treeview.heading('ete_8th_subjects',text="Subjects")
                    tree_ete_8th_treeview.heading('ete_8th_date',text="Date")
                    tree_ete_8th_treeview.heading('ete_8th_time',text="Time")
                    tree_ete_8th_treeview.heading('ete_8th_code',text="Code")
                    tree_ete_8th_treeview.heading('semisters',text="Semister")
                    tree_ete_8th_treeview.heading('branch',text="Branch")

                    tree_ete_8th_treeview.column('ete_8th_subjects',width=200)
                    tree_ete_8th_treeview.column('ete_8th_date',width=150)
                    tree_ete_8th_treeview.column('ete_8th_time',width=150)
                    tree_ete_8th_treeview.column('ete_8th_code',width=150)
                    tree_ete_8th_treeview.column('semisters',width=150)
                    tree_ete_8th_treeview.column('branch',width=200)

                    tree_ete_8th_treeview['show']='headings'
                
                    tree_ete_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ete_8th_ia_schedule()
                    tree_ete_8th_treeview.bind('<ButtonRelease-1>',get_ete_8th_ia_schedule)
        ##################################################################################################################################################################
        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Computer_Science_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    cs_3rd_subjects_list=[]
                    def fetch_cs_3rd_subjects():
                        #all_cs_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select cs_3rd_subjects from all_cs_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    cs_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_cs_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_cs_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_cs_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_cs_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_cs_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'cs_3rd_subjects','cs_3rd_date','cs_3rd_time','cs_3rd_code','semisters','branch'
                                        cur.execute('insert into cs_3rd_schedule(cs_3rd_subjects,cs_3rd_date,cs_3rd_time,cs_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_cs_3rd_subjects_entry.get(),
                                            self.var_cs_3rd_date_entry.get(),
                                            self.var_cs_3rd_time_entry.get(),
                                            self.var_cs_3rd_code.get(),
                                            self.var_cs_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_cs_3rd_ia_schedule()
                                        con.close()
                    def fetch_cs_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_3rd_schedule')
                            rows=cur.fetchall()
                            tree_cs_3rd_treeview.delete(*tree_cs_3rd_treeview.get_children())
                            for row in rows:
                                tree_cs_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_cs_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from cs_3rd_schedule where cs_3rd_subjects=?',(self.var_cs_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from cs_3rd_schedule where cs_3rd_subjects=? ',(self.var_cs_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_cs_3rd_all()
                                    fetch_cs_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_cs_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update cs_3rd_schedule set cs_3rd_date=?,cs_3rd_time=?,cs_3rd_code=?,semisters=?,branch=?  where cs_3rd_subjects=?',(
                                self.var_cs_3rd_date_entry.get(),
                                self.var_cs_3rd_time_entry.get(),
                                self.var_cs_3rd_code.get(),
                                self.var_cs_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_cs_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_cs_3rd_ia_schedule()
                                clear_cs_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_cs_3rd_all():
                        fetch_cs_3rd_ia_schedule()
                        self.var_cs_3rd_subjects_entry.set("")
                        self.var_cs_3rd_date_entry.set("")
                        self.var_cs_3rd_time_entry.set("")
                        self.var_cs_3rd_code.set("")
                        self.var_cs_3rd_semister.set("")
                        self.var_serach_cs_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_cs_3rd_ia_schedule(ev):
                        read=tree_cs_3rd_treeview.focus()
                        content=tree_cs_3rd_treeview.item(read)
                        row=content['values']

                        self.var_cs_3rd_subjects_entry.set(row[1])
                        self.var_cs_3rd_date_entry.set(row[2])
                        self.var_cs_3rd_time_entry.set(row[3])
                        self.var_cs_3rd_code.set(row[4])
                        self.var_cs_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_cs_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_cs_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from cs_3rd_schedule where cs_3rd_subjects=?",(self.var_serach_cs_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_cs_3rd_treeview.delete(*tree_cs_3rd_treeview.get_children())
                                for row in rows:
                                    tree_cs_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_cs_3rd_subjects()
                    cs_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_cs_3rd_subjects_entry,values=cs_3rd_subjects_list).place(x=87,y=14)

                    cs_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_cs_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    cs_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_3rd_time_entry).place(x=569,y=14)

                    cs_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_cs_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_cs_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_cs_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_cs_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_cs_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_cs_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_cs_3rd_treeview=ttk.Treeview(tree_frame1,columns=('cs_3rd_subjects','cs_3rd_date','cs_3rd_time','cs_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_cs_3rd_treeview.xview)
                    scrolly.configure(command=tree_cs_3rd_treeview.yview)

                    tree_cs_3rd_treeview.heading('cs_3rd_subjects',text="Subjects")
                    tree_cs_3rd_treeview.heading('cs_3rd_date',text="Date")
                    tree_cs_3rd_treeview.heading('cs_3rd_time',text="Time")
                    tree_cs_3rd_treeview.heading('cs_3rd_code',text="Code")
                    tree_cs_3rd_treeview.heading('semisters',text="Semister")
                    tree_cs_3rd_treeview.heading('branch',text="Branch")

                    tree_cs_3rd_treeview.column('cs_3rd_subjects',width=200)
                    tree_cs_3rd_treeview.column('cs_3rd_date',width=150)
                    tree_cs_3rd_treeview.column('cs_3rd_time',width=150)
                    tree_cs_3rd_treeview.column('cs_3rd_code',width=150)
                    tree_cs_3rd_treeview.column('semisters',width=150)
                    tree_cs_3rd_treeview.column('branch',width=200)

                    tree_cs_3rd_treeview['show']='headings'
                
                    tree_cs_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_cs_3rd_ia_schedule()
                    tree_cs_3rd_treeview.bind('<ButtonRelease-1>',get_cs_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Computer_Science_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    cs_4th_subjects_list=[]
                    def fetch_cs_4th_subjects():
                        #all_cs_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select cs_4th_subjects from all_cs_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    cs_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_cs_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_cs_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_cs_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_cs_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_cs_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'cs_4th_subjects','cs_4th_date','cs_4th_time','cs_4th_code','semisters','branch'
                                        cur.execute('insert into cs_4th_schedule(cs_4th_subjects,cs_4th_date,cs_4th_time,cs_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_cs_4th_subjects_entry.get(),
                                            self.var_cs_4th_date_entry.get(),
                                            self.var_cs_4th_time_entry.get(),
                                            self.var_cs_4th_code.get(),
                                            self.var_cs_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_cs_4th_ia_schedule()
                                        con.close()
                    def fetch_cs_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_4th_schedule')
                            rows=cur.fetchall()
                            tree_cs_4th_treeview.delete(*tree_cs_4th_treeview.get_children())
                            for row in rows:
                                tree_cs_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_cs_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from cs_4th_schedule where cs_4th_subjects=?',(self.var_cs_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from cs_4th_schedule where cs_4th_subjects=? ',(self.var_cs_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_cs_4th_all()
                                    fetch_cs_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_cs_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update cs_4th_schedule set cs_4th_date=?,cs_4th_time=?,cs_4th_code=?,semisters=?,branch=?  where cs_4th_subjects=?',(
                                self.var_cs_4th_date_entry.get(),
                                self.var_cs_4th_time_entry.get(),
                                self.var_cs_4th_code.get(),
                                self.var_cs_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_cs_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_cs_4th_ia_schedule()
                                clear_cs_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_cs_4th_all():
                        fetch_cs_4th_ia_schedule()
                        self.var_cs_4th_subjects_entry.set("")
                        self.var_cs_4th_date_entry.set("")
                        self.var_cs_4th_time_entry.set("")
                        self.var_cs_4th_code.set("")
                        self.var_cs_4th_semister.set("")
                        self.var_serach_cs_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_cs_4th_ia_schedule(ev):
                        read=tree_cs_4th_treeview.focus()
                        content=tree_cs_4th_treeview.item(read)
                        row=content['values']

                        self.var_cs_4th_subjects_entry.set(row[1])
                        self.var_cs_4th_date_entry.set(row[2])
                        self.var_cs_4th_time_entry.set(row[3])
                        self.var_cs_4th_code.set(row[4])
                        self.var_cs_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_cs_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_cs_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from cs_4th_schedule where cs_4th_subjects=?",(self.var_serach_cs_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_cs_4th_treeview.delete(*tree_cs_4th_treeview.get_children())
                                for row in rows:
                                    tree_cs_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_cs_4th_subjects()
                    cs_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_cs_4th_subjects_entry,values=cs_4th_subjects_list).place(x=87,y=14)

                    cs_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_cs_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    cs_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_4th_time_entry).place(x=569,y=14)

                    cs_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_cs_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_cs_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_cs_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_cs_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_cs_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_cs_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_cs_4th_treeview=ttk.Treeview(tree_frame1,columns=('cs_4th_subjects','cs_4th_date','cs_4th_time','cs_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_cs_4th_treeview.xview)
                    scrolly.configure(command=tree_cs_4th_treeview.yview)

                    tree_cs_4th_treeview.heading('cs_4th_subjects',text="Subjects")
                    tree_cs_4th_treeview.heading('cs_4th_date',text="Date")
                    tree_cs_4th_treeview.heading('cs_4th_time',text="Time")
                    tree_cs_4th_treeview.heading('cs_4th_code',text="Code")
                    tree_cs_4th_treeview.heading('semisters',text="Semister")
                    tree_cs_4th_treeview.heading('branch',text="Branch")

                    tree_cs_4th_treeview.column('cs_4th_subjects',width=200)
                    tree_cs_4th_treeview.column('cs_4th_date',width=150)
                    tree_cs_4th_treeview.column('cs_4th_time',width=150)
                    tree_cs_4th_treeview.column('cs_4th_code',width=150)
                    tree_cs_4th_treeview.column('semisters',width=150)
                    tree_cs_4th_treeview.column('branch',width=200)

                    tree_cs_4th_treeview['show']='headings'
                
                    tree_cs_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_cs_4th_ia_schedule()
                    tree_cs_4th_treeview.bind('<ButtonRelease-1>',get_cs_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Computer_Science_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    cs_5th_subjects_list=[]
                    def fetch_cs_5th_subjects():
                        #all_cs_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select cs_5th_subjects from all_cs_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    cs_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_cs_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_cs_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_cs_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_cs_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_cs_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'cs_5th_subjects','cs_5th_date','cs_5th_time','cs_5th_code','semisters','branch'
                                        cur.execute('insert into cs_5th_schedule(cs_5th_subjects,cs_5th_date,cs_5th_time,cs_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_cs_5th_subjects_entry.get(),
                                            self.var_cs_5th_date_entry.get(),
                                            self.var_cs_5th_time_entry.get(),
                                            self.var_cs_5th_code.get(),
                                            self.var_cs_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_cs_5th_ia_schedule()
                                        con.close()
                    def fetch_cs_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_5th_schedule')
                            rows=cur.fetchall()
                            tree_cs_5th_treeview.delete(*tree_cs_5th_treeview.get_children())
                            for row in rows:
                                tree_cs_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_cs_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from cs_5th_schedule where cs_5th_subjects=?',(self.var_cs_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from cs_5th_schedule where cs_5th_subjects=? ',(self.var_cs_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_cs_5th_all()
                                    fetch_cs_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_cs_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update cs_5th_schedule set cs_5th_date=?,cs_5th_time=?,cs_5th_code=?,semisters=?,branch=?  where cs_5th_subjects=?',(
                                self.var_cs_5th_date_entry.get(),
                                self.var_cs_5th_time_entry.get(),
                                self.var_cs_5th_code.get(),
                                self.var_cs_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_cs_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_cs_5th_ia_schedule()
                                clear_cs_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_cs_5th_all():
                        fetch_cs_5th_ia_schedule()
                        self.var_cs_5th_subjects_entry.set("")
                        self.var_cs_5th_date_entry.set("")
                        self.var_cs_5th_time_entry.set("")
                        self.var_cs_5th_code.set("")
                        self.var_cs_5th_semister.set("")
                        self.var_serach_cs_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_cs_5th_ia_schedule(ev):
                        read=tree_cs_5th_treeview.focus()
                        content=tree_cs_5th_treeview.item(read)
                        row=content['values']

                        self.var_cs_5th_subjects_entry.set(row[1])
                        self.var_cs_5th_date_entry.set(row[2])
                        self.var_cs_5th_time_entry.set(row[3])
                        self.var_cs_5th_code.set(row[4])
                        self.var_cs_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_cs_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_cs_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from cs_5th_schedule where cs_5th_subjects=?",(self.var_serach_cs_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_cs_5th_treeview.delete(*tree_cs_5th_treeview.get_children())
                                for row in rows:
                                    tree_cs_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_cs_5th_subjects()
                    cs_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_cs_5th_subjects_entry,values=cs_5th_subjects_list).place(x=87,y=14)

                    cs_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_cs_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    cs_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_5th_time_entry).place(x=569,y=14)

                    cs_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_cs_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_cs_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_cs_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_cs_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_cs_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_cs_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_cs_5th_treeview=ttk.Treeview(tree_frame1,columns=('cs_5th_subjects','cs_5th_date','cs_5th_time','cs_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_cs_5th_treeview.xview)
                    scrolly.configure(command=tree_cs_5th_treeview.yview)

                    tree_cs_5th_treeview.heading('cs_5th_subjects',text="Subjects")
                    tree_cs_5th_treeview.heading('cs_5th_date',text="Date")
                    tree_cs_5th_treeview.heading('cs_5th_time',text="Time")
                    tree_cs_5th_treeview.heading('cs_5th_code',text="Code")
                    tree_cs_5th_treeview.heading('semisters',text="Semister")
                    tree_cs_5th_treeview.heading('branch',text="Branch")

                    tree_cs_5th_treeview.column('cs_5th_subjects',width=200)
                    tree_cs_5th_treeview.column('cs_5th_date',width=150)
                    tree_cs_5th_treeview.column('cs_5th_time',width=150)
                    tree_cs_5th_treeview.column('cs_5th_code',width=150)
                    tree_cs_5th_treeview.column('semisters',width=150)
                    tree_cs_5th_treeview.column('branch',width=200)

                    tree_cs_5th_treeview['show']='headings'
                
                    tree_cs_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_cs_5th_ia_schedule()
                    tree_cs_5th_treeview.bind('<ButtonRelease-1>',get_cs_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Computer_Science_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    cs_6th_subjects_list=[]
                    def fetch_cs_6th_subjects():
                        #all_cs_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select cs_6th_subjects from all_cs_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    cs_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_cs_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_cs_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_cs_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_cs_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_cs_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'cs_6th_subjects','cs_6th_date','cs_6th_time','cs_6th_code','semisters','branch'
                                        cur.execute('insert into cs_6th_schedule(cs_6th_subjects,cs_6th_date,cs_6th_time,cs_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_cs_6th_subjects_entry.get(),
                                            self.var_cs_6th_date_entry.get(),
                                            self.var_cs_6th_time_entry.get(),
                                            self.var_cs_6th_code.get(),
                                            self.var_cs_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_cs_6th_ia_schedule()
                                        con.close()
                    def fetch_cs_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_6th_schedule')
                            rows=cur.fetchall()
                            tree_cs_6th_treeview.delete(*tree_cs_6th_treeview.get_children())
                            for row in rows:
                                tree_cs_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_cs_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from cs_6th_schedule where cs_6th_subjects=?',(self.var_cs_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from cs_6th_schedule where cs_6th_subjects=? ',(self.var_cs_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_cs_6th_all()
                                    fetch_cs_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_cs_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update cs_6th_schedule set cs_6th_date=?,cs_6th_time=?,cs_6th_code=?,semisters=?,branch=?  where cs_6th_subjects=?',(
                                self.var_cs_6th_date_entry.get(),
                                self.var_cs_6th_time_entry.get(),
                                self.var_cs_6th_code.get(),
                                self.var_cs_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_cs_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_cs_6th_ia_schedule()
                                clear_cs_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_cs_6th_all():
                        fetch_cs_6th_ia_schedule()
                        self.var_cs_6th_subjects_entry.set("")
                        self.var_cs_6th_date_entry.set("")
                        self.var_cs_6th_time_entry.set("")
                        self.var_cs_6th_code.set("")
                        self.var_cs_6th_semister.set("")
                        self.var_serach_cs_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_cs_6th_ia_schedule(ev):
                        read=tree_cs_6th_treeview.focus()
                        content=tree_cs_6th_treeview.item(read)
                        row=content['values']

                        self.var_cs_6th_subjects_entry.set(row[1])
                        self.var_cs_6th_date_entry.set(row[2])
                        self.var_cs_6th_time_entry.set(row[3])
                        self.var_cs_6th_code.set(row[4])
                        self.var_cs_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_cs_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_cs_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from cs_6th_schedule where cs_6th_subjects=?",(self.var_serach_cs_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_cs_6th_treeview.delete(*tree_cs_6th_treeview.get_children())
                                for row in rows:
                                    tree_cs_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_cs_6th_subjects()
                    cs_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_cs_6th_subjects_entry,values=cs_6th_subjects_list).place(x=87,y=14)

                    cs_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_cs_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    cs_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_6th_time_entry).place(x=569,y=14)

                    cs_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_cs_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_cs_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_cs_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_cs_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_cs_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_cs_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_cs_6th_treeview=ttk.Treeview(tree_frame1,columns=('cs_6th_subjects','cs_6th_date','cs_6th_time','cs_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_cs_6th_treeview.xview)
                    scrolly.configure(command=tree_cs_6th_treeview.yview)

                    tree_cs_6th_treeview.heading('cs_6th_subjects',text="Subjects")
                    tree_cs_6th_treeview.heading('cs_6th_date',text="Date")
                    tree_cs_6th_treeview.heading('cs_6th_time',text="Time")
                    tree_cs_6th_treeview.heading('cs_6th_code',text="Code")
                    tree_cs_6th_treeview.heading('semisters',text="Semister")
                    tree_cs_6th_treeview.heading('branch',text="Branch")

                    tree_cs_6th_treeview.column('cs_6th_subjects',width=200)
                    tree_cs_6th_treeview.column('cs_6th_date',width=150)
                    tree_cs_6th_treeview.column('cs_6th_time',width=150)
                    tree_cs_6th_treeview.column('cs_6th_code',width=150)
                    tree_cs_6th_treeview.column('semisters',width=150)
                    tree_cs_6th_treeview.column('branch',width=200)

                    tree_cs_6th_treeview['show']='headings'
                
                    tree_cs_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_cs_6th_ia_schedule()
                    tree_cs_6th_treeview.bind('<ButtonRelease-1>',get_cs_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Computer_Science_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    cs_7th_subjects_list=[]
                    def fetch_cs_7th_subjects():
                        #all_cs_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select cs_7th_subjects from all_cs_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    cs_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_cs_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_cs_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_cs_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_cs_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_cs_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'cs_7th_subjects','cs_7th_date','cs_7th_time','cs_7th_code','semisters','branch'
                                        cur.execute('insert into cs_7th_schedule(cs_7th_subjects,cs_7th_date,cs_7th_time,cs_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_cs_7th_subjects_entry.get(),
                                            self.var_cs_7th_date_entry.get(),
                                            self.var_cs_7th_time_entry.get(),
                                            self.var_cs_7th_code.get(),
                                            self.var_cs_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_cs_7th_ia_schedule()
                                        con.close()
                    def fetch_cs_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_7th_schedule')
                            rows=cur.fetchall()
                            tree_cs_7th_treeview.delete(*tree_cs_7th_treeview.get_children())
                            for row in rows:
                                tree_cs_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_cs_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from cs_7th_schedule where cs_7th_subjects=?',(self.var_cs_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from cs_7th_schedule where cs_7th_subjects=? ',(self.var_cs_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_cs_7th_all()
                                    fetch_cs_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_cs_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update cs_7th_schedule set cs_7th_date=?,cs_7th_time=?,cs_7th_code=?,semisters=?,branch=?  where cs_7th_subjects=?',(
                                self.var_cs_7th_date_entry.get(),
                                self.var_cs_7th_time_entry.get(),
                                self.var_cs_7th_code.get(),
                                self.var_cs_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_cs_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_cs_7th_ia_schedule()
                                clear_cs_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_cs_7th_all():
                        fetch_cs_7th_ia_schedule()
                        self.var_cs_7th_subjects_entry.set("")
                        self.var_cs_7th_date_entry.set("")
                        self.var_cs_7th_time_entry.set("")
                        self.var_cs_7th_code.set("")
                        self.var_cs_7th_semister.set("")
                        self.var_serach_cs_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_cs_7th_ia_schedule(ev):
                        read=tree_cs_7th_treeview.focus()
                        content=tree_cs_7th_treeview.item(read)
                        row=content['values']

                        self.var_cs_7th_subjects_entry.set(row[1])
                        self.var_cs_7th_date_entry.set(row[2])
                        self.var_cs_7th_time_entry.set(row[3])
                        self.var_cs_7th_code.set(row[4])
                        self.var_cs_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_cs_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_cs_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from cs_7th_schedule where cs_7th_subjects=?",(self.var_serach_cs_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_cs_7th_treeview.delete(*tree_cs_7th_treeview.get_children())
                                for row in rows:
                                    tree_cs_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_cs_7th_subjects()
                    cs_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_cs_7th_subjects_entry,values=cs_7th_subjects_list).place(x=87,y=14)

                    cs_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_cs_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    cs_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_7th_time_entry).place(x=569,y=14)

                    cs_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_cs_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_cs_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_cs_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_cs_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_cs_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_cs_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_cs_7th_treeview=ttk.Treeview(tree_frame1,columns=('cs_7th_subjects','cs_7th_date','cs_7th_time','cs_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_cs_7th_treeview.xview)
                    scrolly.configure(command=tree_cs_7th_treeview.yview)

                    tree_cs_7th_treeview.heading('cs_7th_subjects',text="Subjects")
                    tree_cs_7th_treeview.heading('cs_7th_date',text="Date")
                    tree_cs_7th_treeview.heading('cs_7th_time',text="Time")
                    tree_cs_7th_treeview.heading('cs_7th_code',text="Code")
                    tree_cs_7th_treeview.heading('semisters',text="Semister")
                    tree_cs_7th_treeview.heading('branch',text="Branch")

                    tree_cs_7th_treeview.column('cs_7th_subjects',width=200)
                    tree_cs_7th_treeview.column('cs_7th_date',width=150)
                    tree_cs_7th_treeview.column('cs_7th_time',width=150)
                    tree_cs_7th_treeview.column('cs_7th_code',width=150)
                    tree_cs_7th_treeview.column('semisters',width=150)
                    tree_cs_7th_treeview.column('branch',width=200)

                    tree_cs_7th_treeview['show']='headings'
                
                    tree_cs_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_cs_7th_ia_schedule()
                    tree_cs_7th_treeview.bind('<ButtonRelease-1>',get_cs_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Computer_Science_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    cs_8th_subjects_list=[]
                    def fetch_cs_8th_subjects():
                        #all_cs_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select cs_8th_subjects from all_cs_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    cs_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_cs_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_cs_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_cs_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_cs_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_cs_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'cs_8th_subjects','cs_8th_date','cs_8th_time','cs_8th_code','semisters','branch'
                                        cur.execute('insert into cs_8th_schedule(cs_8th_subjects,cs_8th_date,cs_8th_time,cs_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_cs_8th_subjects_entry.get(),
                                            self.var_cs_8th_date_entry.get(),
                                            self.var_cs_8th_time_entry.get(),
                                            self.var_cs_8th_code.get(),
                                            self.var_cs_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_cs_8th_ia_schedule()
                                        con.close()
                    def fetch_cs_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_8th_schedule')
                            rows=cur.fetchall()
                            tree_cs_8th_treeview.delete(*tree_cs_8th_treeview.get_children())
                            for row in rows:
                                tree_cs_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_cs_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from cs_8th_schedule where cs_8th_subjects=?',(self.var_cs_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from cs_8th_schedule where cs_8th_subjects=? ',(self.var_cs_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_cs_8th_all()
                                    fetch_cs_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_cs_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update cs_8th_schedule set cs_8th_date=?,cs_8th_time=?,cs_8th_code=?,semisters=?,branch=?  where cs_8th_subjects=?',(
                                self.var_cs_8th_date_entry.get(),
                                self.var_cs_8th_time_entry.get(),
                                self.var_cs_8th_code.get(),
                                self.var_cs_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_cs_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_cs_8th_ia_schedule()
                                clear_cs_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_cs_8th_all():
                        fetch_cs_8th_ia_schedule()
                        self.var_cs_8th_subjects_entry.set("")
                        self.var_cs_8th_date_entry.set("")
                        self.var_cs_8th_time_entry.set("")
                        self.var_cs_8th_code.set("")
                        self.var_cs_8th_semister.set("")
                        self.var_serach_cs_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_cs_8th_ia_schedule(ev):
                        read=tree_cs_8th_treeview.focus()
                        content=tree_cs_8th_treeview.item(read)
                        row=content['values']

                        self.var_cs_8th_subjects_entry.set(row[1])
                        self.var_cs_8th_date_entry.set(row[2])
                        self.var_cs_8th_time_entry.set(row[3])
                        self.var_cs_8th_code.set(row[4])
                        self.var_cs_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_cs_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_cs_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from cs_8th_schedule where cs_8th_subjects=?",(self.var_serach_cs_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_cs_8th_treeview.delete(*tree_cs_8th_treeview.get_children())
                                for row in rows:
                                    tree_cs_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_cs_8th_subjects()
                    cs_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_cs_8th_subjects_entry,values=cs_8th_subjects_list).place(x=87,y=14)

                    cs_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_cs_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    cs_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_8th_time_entry).place(x=569,y=14)

                    cs_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_cs_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_cs_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_cs_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_cs_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_cs_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_cs_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_cs_8th_treeview=ttk.Treeview(tree_frame1,columns=('cs_8th_subjects','cs_8th_date','cs_8th_time','cs_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_cs_8th_treeview.xview)
                    scrolly.configure(command=tree_cs_8th_treeview.yview)

                    tree_cs_8th_treeview.heading('cs_8th_subjects',text="Subjects")
                    tree_cs_8th_treeview.heading('cs_8th_date',text="Date")
                    tree_cs_8th_treeview.heading('cs_8th_time',text="Time")
                    tree_cs_8th_treeview.heading('cs_8th_code',text="Code")
                    tree_cs_8th_treeview.heading('semisters',text="Semister")
                    tree_cs_8th_treeview.heading('branch',text="Branch")

                    tree_cs_8th_treeview.column('cs_8th_subjects',width=200)
                    tree_cs_8th_treeview.column('cs_8th_date',width=150)
                    tree_cs_8th_treeview.column('cs_8th_time',width=150)
                    tree_cs_8th_treeview.column('cs_8th_code',width=150)
                    tree_cs_8th_treeview.column('semisters',width=150)
                    tree_cs_8th_treeview.column('branch',width=200)

                    tree_cs_8th_treeview['show']='headings'
                
                    tree_cs_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_cs_8th_ia_schedule()
                    tree_cs_8th_treeview.bind('<ButtonRelease-1>',get_cs_8th_ia_schedule)
        ##########################################################################################################################################################################
        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Information_Science_and_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    ise_3rd_subjects_list=[]
                    def fetch_ise_3rd_subjects():
                        #all_ise_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ise_3rd_subjects from all_ise_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ise_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ise_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ise_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ise_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ise_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ise_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ise_3rd_subjects','ise_3rd_date','ise_3rd_time','ise_3rd_code','semisters','branch'
                                        cur.execute('insert into ise_3rd_schedule(ise_3rd_subjects,ise_3rd_date,ise_3rd_time,ise_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ise_3rd_subjects_entry.get(),
                                            self.var_ise_3rd_date_entry.get(),
                                            self.var_ise_3rd_time_entry.get(),
                                            self.var_ise_3rd_code.get(),
                                            self.var_ise_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ise_3rd_ia_schedule()
                                        con.close()
                    def fetch_ise_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_3rd_schedule')
                            rows=cur.fetchall()
                            tree_ise_3rd_treeview.delete(*tree_ise_3rd_treeview.get_children())
                            for row in rows:
                                tree_ise_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ise_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ise_3rd_schedule where ise_3rd_subjects=?',(self.var_ise_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ise_3rd_schedule where ise_3rd_subjects=? ',(self.var_ise_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ise_3rd_all()
                                    fetch_ise_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ise_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ise_3rd_schedule set ise_3rd_date=?,ise_3rd_time=?,ise_3rd_code=?,semisters=?,branch=?  where ise_3rd_subjects=?',(
                                self.var_ise_3rd_date_entry.get(),
                                self.var_ise_3rd_time_entry.get(),
                                self.var_ise_3rd_code.get(),
                                self.var_ise_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ise_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ise_3rd_ia_schedule()
                                clear_ise_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ise_3rd_all():
                        fetch_ise_3rd_ia_schedule()
                        self.var_ise_3rd_subjects_entry.set("")
                        self.var_ise_3rd_date_entry.set("")
                        self.var_ise_3rd_time_entry.set("")
                        self.var_ise_3rd_code.set("")
                        self.var_ise_3rd_semister.set("")
                        self.var_serach_ise_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ise_3rd_ia_schedule(ev):
                        read=tree_ise_3rd_treeview.focus()
                        content=tree_ise_3rd_treeview.item(read)
                        row=content['values']

                        self.var_ise_3rd_subjects_entry.set(row[1])
                        self.var_ise_3rd_date_entry.set(row[2])
                        self.var_ise_3rd_time_entry.set(row[3])
                        self.var_ise_3rd_code.set(row[4])
                        self.var_ise_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ise_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ise_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ise_3rd_schedule where ise_3rd_subjects=?",(self.var_serach_ise_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ise_3rd_treeview.delete(*tree_ise_3rd_treeview.get_children())
                                for row in rows:
                                    tree_ise_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ise_3rd_subjects()
                    ise_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ise_3rd_subjects_entry,values=ise_3rd_subjects_list).place(x=87,y=14)

                    ise_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ise_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ise_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_3rd_time_entry).place(x=569,y=14)

                    ise_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ise_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ise_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ise_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ise_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ise_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ise_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ise_3rd_treeview=ttk.Treeview(tree_frame1,columns=('ise_3rd_subjects','ise_3rd_date','ise_3rd_time','ise_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ise_3rd_treeview.xview)
                    scrolly.configure(command=tree_ise_3rd_treeview.yview)

                    tree_ise_3rd_treeview.heading('ise_3rd_subjects',text="Subjects")
                    tree_ise_3rd_treeview.heading('ise_3rd_date',text="Date")
                    tree_ise_3rd_treeview.heading('ise_3rd_time',text="Time")
                    tree_ise_3rd_treeview.heading('ise_3rd_code',text="Code")
                    tree_ise_3rd_treeview.heading('semisters',text="Semister")
                    tree_ise_3rd_treeview.heading('branch',text="Branch")

                    tree_ise_3rd_treeview.column('ise_3rd_subjects',width=200)
                    tree_ise_3rd_treeview.column('ise_3rd_date',width=150)
                    tree_ise_3rd_treeview.column('ise_3rd_time',width=150)
                    tree_ise_3rd_treeview.column('ise_3rd_code',width=150)
                    tree_ise_3rd_treeview.column('semisters',width=150)
                    tree_ise_3rd_treeview.column('branch',width=200)

                    tree_ise_3rd_treeview['show']='headings'
                
                    tree_ise_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_ise_3rd_ia_schedule()
                    tree_ise_3rd_treeview.bind('<ButtonRelease-1>',get_ise_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Information_Science_and_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    ise_4th_subjects_list=[]
                    def fetch_ise_4th_subjects():
                        #all_ise_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ise_4th_subjects from all_ise_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ise_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ise_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ise_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ise_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ise_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ise_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ise_4th_subjects','ise_4th_date','ise_4th_time','ise_4th_code','semisters','branch'
                                        cur.execute('insert into ise_4th_schedule(ise_4th_subjects,ise_4th_date,ise_4th_time,ise_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ise_4th_subjects_entry.get(),
                                            self.var_ise_4th_date_entry.get(),
                                            self.var_ise_4th_time_entry.get(),
                                            self.var_ise_4th_code.get(),
                                            self.var_ise_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ise_4th_ia_schedule()
                                        con.close()
                    def fetch_ise_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_4th_schedule')
                            rows=cur.fetchall()
                            tree_ise_4th_treeview.delete(*tree_ise_4th_treeview.get_children())
                            for row in rows:
                                tree_ise_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ise_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ise_4th_schedule where ise_4th_subjects=?',(self.var_ise_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ise_4th_schedule where ise_4th_subjects=? ',(self.var_ise_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ise_4th_all()
                                    fetch_ise_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ise_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ise_4th_schedule set ise_4th_date=?,ise_4th_time=?,ise_4th_code=?,semisters=?,branch=?  where ise_4th_subjects=?',(
                                self.var_ise_4th_date_entry.get(),
                                self.var_ise_4th_time_entry.get(),
                                self.var_ise_4th_code.get(),
                                self.var_ise_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ise_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ise_4th_ia_schedule()
                                clear_ise_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ise_4th_all():
                        fetch_ise_4th_ia_schedule()
                        self.var_ise_4th_subjects_entry.set("")
                        self.var_ise_4th_date_entry.set("")
                        self.var_ise_4th_time_entry.set("")
                        self.var_ise_4th_code.set("")
                        self.var_ise_4th_semister.set("")
                        self.var_serach_ise_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ise_4th_ia_schedule(ev):
                        read=tree_ise_4th_treeview.focus()
                        content=tree_ise_4th_treeview.item(read)
                        row=content['values']

                        self.var_ise_4th_subjects_entry.set(row[1])
                        self.var_ise_4th_date_entry.set(row[2])
                        self.var_ise_4th_time_entry.set(row[3])
                        self.var_ise_4th_code.set(row[4])
                        self.var_ise_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ise_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ise_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ise_4th_schedule where ise_4th_subjects=?",(self.var_serach_ise_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ise_4th_treeview.delete(*tree_ise_4th_treeview.get_children())
                                for row in rows:
                                    tree_ise_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ise_4th_subjects()
                    ise_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ise_4th_subjects_entry,values=ise_4th_subjects_list).place(x=87,y=14)

                    ise_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ise_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ise_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_4th_time_entry).place(x=569,y=14)

                    ise_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ise_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ise_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ise_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ise_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ise_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ise_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ise_4th_treeview=ttk.Treeview(tree_frame1,columns=('ise_4th_subjects','ise_4th_date','ise_4th_time','ise_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ise_4th_treeview.xview)
                    scrolly.configure(command=tree_ise_4th_treeview.yview)

                    tree_ise_4th_treeview.heading('ise_4th_subjects',text="Subjects")
                    tree_ise_4th_treeview.heading('ise_4th_date',text="Date")
                    tree_ise_4th_treeview.heading('ise_4th_time',text="Time")
                    tree_ise_4th_treeview.heading('ise_4th_code',text="Code")
                    tree_ise_4th_treeview.heading('semisters',text="Semister")
                    tree_ise_4th_treeview.heading('branch',text="Branch")

                    tree_ise_4th_treeview.column('ise_4th_subjects',width=200)
                    tree_ise_4th_treeview.column('ise_4th_date',width=150)
                    tree_ise_4th_treeview.column('ise_4th_time',width=150)
                    tree_ise_4th_treeview.column('ise_4th_code',width=150)
                    tree_ise_4th_treeview.column('semisters',width=150)
                    tree_ise_4th_treeview.column('branch',width=200)

                    tree_ise_4th_treeview['show']='headings'
                
                    tree_ise_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ise_4th_ia_schedule()
                    tree_ise_4th_treeview.bind('<ButtonRelease-1>',get_ise_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Information_Science_and_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    ise_5th_subjects_list=[]
                    def fetch_ise_5th_subjects():
                        #all_ise_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ise_5th_subjects from all_ise_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ise_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ise_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ise_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ise_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ise_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ise_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ise_5th_subjects','ise_5th_date','ise_5th_time','ise_5th_code','semisters','branch'
                                        cur.execute('insert into ise_5th_schedule(ise_5th_subjects,ise_5th_date,ise_5th_time,ise_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ise_5th_subjects_entry.get(),
                                            self.var_ise_5th_date_entry.get(),
                                            self.var_ise_5th_time_entry.get(),
                                            self.var_ise_5th_code.get(),
                                            self.var_ise_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ise_5th_ia_schedule()
                                        con.close()
                    def fetch_ise_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_5th_schedule')
                            rows=cur.fetchall()
                            tree_ise_5th_treeview.delete(*tree_ise_5th_treeview.get_children())
                            for row in rows:
                                tree_ise_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ise_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ise_5th_schedule where ise_5th_subjects=?',(self.var_ise_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ise_5th_schedule where ise_5th_subjects=? ',(self.var_ise_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ise_5th_all()
                                    fetch_ise_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ise_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ise_5th_schedule set ise_5th_date=?,ise_5th_time=?,ise_5th_code=?,semisters=?,branch=?  where ise_5th_subjects=?',(
                                self.var_ise_5th_date_entry.get(),
                                self.var_ise_5th_time_entry.get(),
                                self.var_ise_5th_code.get(),
                                self.var_ise_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ise_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ise_5th_ia_schedule()
                                clear_ise_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ise_5th_all():
                        fetch_ise_5th_ia_schedule()
                        self.var_ise_5th_subjects_entry.set("")
                        self.var_ise_5th_date_entry.set("")
                        self.var_ise_5th_time_entry.set("")
                        self.var_ise_5th_code.set("")
                        self.var_ise_5th_semister.set("")
                        self.var_serach_ise_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ise_5th_ia_schedule(ev):
                        read=tree_ise_5th_treeview.focus()
                        content=tree_ise_5th_treeview.item(read)
                        row=content['values']

                        self.var_ise_5th_subjects_entry.set(row[1])
                        self.var_ise_5th_date_entry.set(row[2])
                        self.var_ise_5th_time_entry.set(row[3])
                        self.var_ise_5th_code.set(row[4])
                        self.var_ise_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ise_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ise_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ise_5th_schedule where ise_5th_subjects=?",(self.var_serach_ise_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ise_5th_treeview.delete(*tree_ise_5th_treeview.get_children())
                                for row in rows:
                                    tree_ise_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ise_5th_subjects()
                    ise_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ise_5th_subjects_entry,values=ise_5th_subjects_list).place(x=87,y=14)

                    ise_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ise_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ise_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_5th_time_entry).place(x=569,y=14)

                    ise_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ise_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ise_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ise_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ise_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ise_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ise_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ise_5th_treeview=ttk.Treeview(tree_frame1,columns=('ise_5th_subjects','ise_5th_date','ise_5th_time','ise_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ise_5th_treeview.xview)
                    scrolly.configure(command=tree_ise_5th_treeview.yview)

                    tree_ise_5th_treeview.heading('ise_5th_subjects',text="Subjects")
                    tree_ise_5th_treeview.heading('ise_5th_date',text="Date")
                    tree_ise_5th_treeview.heading('ise_5th_time',text="Time")
                    tree_ise_5th_treeview.heading('ise_5th_code',text="Code")
                    tree_ise_5th_treeview.heading('semisters',text="Semister")
                    tree_ise_5th_treeview.heading('branch',text="Branch")

                    tree_ise_5th_treeview.column('ise_5th_subjects',width=200)
                    tree_ise_5th_treeview.column('ise_5th_date',width=150)
                    tree_ise_5th_treeview.column('ise_5th_time',width=150)
                    tree_ise_5th_treeview.column('ise_5th_code',width=150)
                    tree_ise_5th_treeview.column('semisters',width=150)
                    tree_ise_5th_treeview.column('branch',width=200)

                    tree_ise_5th_treeview['show']='headings'
                
                    tree_ise_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ise_5th_ia_schedule()
                    tree_ise_5th_treeview.bind('<ButtonRelease-1>',get_ise_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Information_Science_and_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    ise_6th_subjects_list=[]
                    def fetch_ise_6th_subjects():
                        #all_ise_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ise_6th_subjects from all_ise_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ise_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ise_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ise_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ise_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ise_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ise_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ise_6th_subjects','ise_6th_date','ise_6th_time','ise_6th_code','semisters','branch'
                                        cur.execute('insert into ise_6th_schedule(ise_6th_subjects,ise_6th_date,ise_6th_time,ise_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ise_6th_subjects_entry.get(),
                                            self.var_ise_6th_date_entry.get(),
                                            self.var_ise_6th_time_entry.get(),
                                            self.var_ise_6th_code.get(),
                                            self.var_ise_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ise_6th_ia_schedule()
                                        con.close()
                    def fetch_ise_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_6th_schedule')
                            rows=cur.fetchall()
                            tree_ise_6th_treeview.delete(*tree_ise_6th_treeview.get_children())
                            for row in rows:
                                tree_ise_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ise_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ise_6th_schedule where ise_6th_subjects=?',(self.var_ise_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ise_6th_schedule where ise_6th_subjects=? ',(self.var_ise_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ise_6th_all()
                                    fetch_ise_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ise_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ise_6th_schedule set ise_6th_date=?,ise_6th_time=?,ise_6th_code=?,semisters=?,branch=?  where ise_6th_subjects=?',(
                                self.var_ise_6th_date_entry.get(),
                                self.var_ise_6th_time_entry.get(),
                                self.var_ise_6th_code.get(),
                                self.var_ise_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ise_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ise_6th_ia_schedule()
                                clear_ise_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ise_6th_all():
                        fetch_ise_6th_ia_schedule()
                        self.var_ise_6th_subjects_entry.set("")
                        self.var_ise_6th_date_entry.set("")
                        self.var_ise_6th_time_entry.set("")
                        self.var_ise_6th_code.set("")
                        self.var_ise_6th_semister.set("")
                        self.var_serach_ise_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ise_6th_ia_schedule(ev):
                        read=tree_ise_6th_treeview.focus()
                        content=tree_ise_6th_treeview.item(read)
                        row=content['values']

                        self.var_ise_6th_subjects_entry.set(row[1])
                        self.var_ise_6th_date_entry.set(row[2])
                        self.var_ise_6th_time_entry.set(row[3])
                        self.var_ise_6th_code.set(row[4])
                        self.var_ise_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ise_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ise_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ise_6th_schedule where ise_6th_subjects=?",(self.var_serach_ise_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ise_6th_treeview.delete(*tree_ise_6th_treeview.get_children())
                                for row in rows:
                                    tree_ise_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ise_6th_subjects()
                    ise_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ise_6th_subjects_entry,values=ise_6th_subjects_list).place(x=87,y=14)

                    ise_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ise_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ise_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_6th_time_entry).place(x=569,y=14)

                    ise_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ise_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ise_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ise_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ise_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ise_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ise_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ise_6th_treeview=ttk.Treeview(tree_frame1,columns=('ise_6th_subjects','ise_6th_date','ise_6th_time','ise_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ise_6th_treeview.xview)
                    scrolly.configure(command=tree_ise_6th_treeview.yview)

                    tree_ise_6th_treeview.heading('ise_6th_subjects',text="Subjects")
                    tree_ise_6th_treeview.heading('ise_6th_date',text="Date")
                    tree_ise_6th_treeview.heading('ise_6th_time',text="Time")
                    tree_ise_6th_treeview.heading('ise_6th_code',text="Code")
                    tree_ise_6th_treeview.heading('semisters',text="Semister")
                    tree_ise_6th_treeview.heading('branch',text="Branch")

                    tree_ise_6th_treeview.column('ise_6th_subjects',width=200)
                    tree_ise_6th_treeview.column('ise_6th_date',width=150)
                    tree_ise_6th_treeview.column('ise_6th_time',width=150)
                    tree_ise_6th_treeview.column('ise_6th_code',width=150)
                    tree_ise_6th_treeview.column('semisters',width=150)
                    tree_ise_6th_treeview.column('branch',width=200)

                    tree_ise_6th_treeview['show']='headings'
                
                    tree_ise_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ise_6th_ia_schedule()
                    tree_ise_6th_treeview.bind('<ButtonRelease-1>',get_ise_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Information_Science_and_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    ise_7th_subjects_list=[]
                    def fetch_ise_7th_subjects():
                        #all_ise_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ise_7th_subjects from all_ise_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ise_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ise_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ise_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ise_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ise_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ise_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ise_7th_subjects','ise_7th_date','ise_7th_time','ise_7th_code','semisters','branch'
                                        cur.execute('insert into ise_7th_schedule(ise_7th_subjects,ise_7th_date,ise_7th_time,ise_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ise_7th_subjects_entry.get(),
                                            self.var_ise_7th_date_entry.get(),
                                            self.var_ise_7th_time_entry.get(),
                                            self.var_ise_7th_code.get(),
                                            self.var_ise_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ise_7th_ia_schedule()
                                        con.close()
                    def fetch_ise_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_7th_schedule')
                            rows=cur.fetchall()
                            tree_ise_7th_treeview.delete(*tree_ise_7th_treeview.get_children())
                            for row in rows:
                                tree_ise_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ise_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ise_7th_schedule where ise_7th_subjects=?',(self.var_ise_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ise_7th_schedule where ise_7th_subjects=? ',(self.var_ise_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ise_7th_all()
                                    fetch_ise_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ise_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ise_7th_schedule set ise_7th_date=?,ise_7th_time=?,ise_7th_code=?,semisters=?,branch=?  where ise_7th_subjects=?',(
                                self.var_ise_7th_date_entry.get(),
                                self.var_ise_7th_time_entry.get(),
                                self.var_ise_7th_code.get(),
                                self.var_ise_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ise_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ise_7th_ia_schedule()
                                clear_ise_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ise_7th_all():
                        fetch_ise_7th_ia_schedule()
                        self.var_ise_7th_subjects_entry.set("")
                        self.var_ise_7th_date_entry.set("")
                        self.var_ise_7th_time_entry.set("")
                        self.var_ise_7th_code.set("")
                        self.var_ise_7th_semister.set("")
                        self.var_serach_ise_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ise_7th_ia_schedule(ev):
                        read=tree_ise_7th_treeview.focus()
                        content=tree_ise_7th_treeview.item(read)
                        row=content['values']

                        self.var_ise_7th_subjects_entry.set(row[1])
                        self.var_ise_7th_date_entry.set(row[2])
                        self.var_ise_7th_time_entry.set(row[3])
                        self.var_ise_7th_code.set(row[4])
                        self.var_ise_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ise_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ise_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ise_7th_schedule where ise_7th_subjects=?",(self.var_serach_ise_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ise_7th_treeview.delete(*tree_ise_7th_treeview.get_children())
                                for row in rows:
                                    tree_ise_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ise_7th_subjects()
                    ise_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ise_7th_subjects_entry,values=ise_7th_subjects_list).place(x=87,y=14)

                    ise_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ise_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ise_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_7th_time_entry).place(x=569,y=14)

                    ise_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ise_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ise_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ise_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ise_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ise_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ise_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ise_7th_treeview=ttk.Treeview(tree_frame1,columns=('ise_7th_subjects','ise_7th_date','ise_7th_time','ise_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ise_7th_treeview.xview)
                    scrolly.configure(command=tree_ise_7th_treeview.yview)

                    tree_ise_7th_treeview.heading('ise_7th_subjects',text="Subjects")
                    tree_ise_7th_treeview.heading('ise_7th_date',text="Date")
                    tree_ise_7th_treeview.heading('ise_7th_time',text="Time")
                    tree_ise_7th_treeview.heading('ise_7th_code',text="Code")
                    tree_ise_7th_treeview.heading('semisters',text="Semister")
                    tree_ise_7th_treeview.heading('branch',text="Branch")

                    tree_ise_7th_treeview.column('ise_7th_subjects',width=200)
                    tree_ise_7th_treeview.column('ise_7th_date',width=150)
                    tree_ise_7th_treeview.column('ise_7th_time',width=150)
                    tree_ise_7th_treeview.column('ise_7th_code',width=150)
                    tree_ise_7th_treeview.column('semisters',width=150)
                    tree_ise_7th_treeview.column('branch',width=200)

                    tree_ise_7th_treeview['show']='headings'
                
                    tree_ise_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ise_7th_ia_schedule()
                    tree_ise_7th_treeview.bind('<ButtonRelease-1>',get_ise_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Information_Science_and_Engineering":
                if self.var_ia_select.get()=='IA_1':
                    ise_8th_subjects_list=[]
                    def fetch_ise_8th_subjects():
                        #all_ise_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ise_8th_subjects from all_ise_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ise_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ise_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ise_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ise_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ise_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ise_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ise_8th_subjects','ise_8th_date','ise_8th_time','ise_8th_code','semisters','branch'
                                        cur.execute('insert into ise_8th_schedule(ise_8th_subjects,ise_8th_date,ise_8th_time,ise_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ise_8th_subjects_entry.get(),
                                            self.var_ise_8th_date_entry.get(),
                                            self.var_ise_8th_time_entry.get(),
                                            self.var_ise_8th_code.get(),
                                            self.var_ise_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ise_8th_ia_schedule()
                                        con.close()
                    def fetch_ise_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_8th_schedule')
                            rows=cur.fetchall()
                            tree_ise_8th_treeview.delete(*tree_ise_8th_treeview.get_children())
                            for row in rows:
                                tree_ise_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ise_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ise_8th_schedule where ise_8th_subjects=?',(self.var_ise_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ise_8th_schedule where ise_8th_subjects=? ',(self.var_ise_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ise_8th_all()
                                    fetch_ise_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ise_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ise_8th_schedule set ise_8th_date=?,ise_8th_time=?,ise_8th_code=?,semisters=?,branch=?  where ise_8th_subjects=?',(
                                self.var_ise_8th_date_entry.get(),
                                self.var_ise_8th_time_entry.get(),
                                self.var_ise_8th_code.get(),
                                self.var_ise_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ise_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ise_8th_ia_schedule()
                                clear_ise_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ise_8th_all():
                        fetch_ise_8th_ia_schedule()
                        self.var_ise_8th_subjects_entry.set("")
                        self.var_ise_8th_date_entry.set("")
                        self.var_ise_8th_time_entry.set("")
                        self.var_ise_8th_code.set("")
                        self.var_ise_8th_semister.set("")
                        self.var_serach_ise_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ise_8th_ia_schedule(ev):
                        read=tree_ise_8th_treeview.focus()
                        content=tree_ise_8th_treeview.item(read)
                        row=content['values']

                        self.var_ise_8th_subjects_entry.set(row[1])
                        self.var_ise_8th_date_entry.set(row[2])
                        self.var_ise_8th_time_entry.set(row[3])
                        self.var_ise_8th_code.set(row[4])
                        self.var_ise_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ise_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ise_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ise_8th_schedule where ise_8th_subjects=?",(self.var_serach_ise_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ise_8th_treeview.delete(*tree_ise_8th_treeview.get_children())
                                for row in rows:
                                    tree_ise_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame1)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ise_8th_subjects()
                    ise_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ise_8th_subjects_entry,values=ise_8th_subjects_list).place(x=87,y=14)

                    ise_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ise_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ise_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_8th_time_entry).place(x=569,y=14)

                    ise_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ise_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ise_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ise_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ise_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ise_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ise_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ise_8th_treeview=ttk.Treeview(tree_frame1,columns=('ise_8th_subjects','ise_8th_date','ise_8th_time','ise_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ise_8th_treeview.xview)
                    scrolly.configure(command=tree_ise_8th_treeview.yview)

                    tree_ise_8th_treeview.heading('ise_8th_subjects',text="Subjects")
                    tree_ise_8th_treeview.heading('ise_8th_date',text="Date")
                    tree_ise_8th_treeview.heading('ise_8th_time',text="Time")
                    tree_ise_8th_treeview.heading('ise_8th_code',text="Code")
                    tree_ise_8th_treeview.heading('semisters',text="Semister")
                    tree_ise_8th_treeview.heading('branch',text="Branch")

                    tree_ise_8th_treeview.column('ise_8th_subjects',width=200)
                    tree_ise_8th_treeview.column('ise_8th_date',width=150)
                    tree_ise_8th_treeview.column('ise_8th_time',width=150)
                    tree_ise_8th_treeview.column('ise_8th_code',width=150)
                    tree_ise_8th_treeview.column('semisters',width=150)
                    tree_ise_8th_treeview.column('branch',width=200)

                    tree_ise_8th_treeview['show']='headings'
                
                    tree_ise_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ise_8th_ia_schedule()
                    tree_ise_8th_treeview.bind('<ButtonRelease-1>',get_ise_8th_ia_schedule)


            ###########################################################################################################################################
            #################################################################################################################################
            ############################################################################################################################################3
            ########################################################################################################################################
            ######################################################################################################################################3
            ##################################################################################################################################333
            ###############################33333333333333333333333#############################################################################33333333333333333
            ############3333333333333333333333#########################################################################3
    
        if self.var_student_semister_select.get()=='CHEMISTRY_cycle':
            if self.var_student_branch_select.get()=="1st_semister":
                if self.var_ia_select.get()=='IA_2':
                    che_ia2_subjects_list=[]
                    def fetch_che_ia2_subjects():
                        #all_che_ia2_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select che_subjects from all_che_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    che_ia2_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_che_ia2_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_che_ia2_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_che_ia2_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_che_ia2_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_che_ia2_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'che_ia2_subjects','che_ia2_date','che_ia2_time','che_ia2_code','semisters','branch'
                                        cur.execute('insert into che_ia2_schedule(che_ia2_subjects,che_ia2_date,che_ia2_time,che_ia2_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_che_ia2_subjects_entry.get(),
                                            self.var_che_ia2_date_entry.get(),
                                            self.var_che_ia2_time_entry.get(),
                                            self.var_che_ia2_code.get(),
                                            self.var_che_ia2_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_che_ia2_ia_schedule()
                                        con.close()
                    def fetch_che_ia2_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from che_ia2_schedule')
                            rows=cur.fetchall()
                            tree_che_ia2_treeview.delete(*tree_che_ia2_treeview.get_children())
                            for row in rows:
                                tree_che_ia2_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerr('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_che_ia2_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_che_ia2_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from che_ia2_schedule where che_ia2_subjects=?',(self.var_che_ia2_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from che_ia2_schedule where che_ia2_subjects=? ',(self.var_che_ia2_subjects_entry.get(),))
                                        messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                        con.commit()
                                        clear_che_ia2_all()
                                        fetch_che_ia2_ia_schedule()
                                        con.close()
                                    
                                    if option==False:
                                        messagebox.showinfo('Info','the data is not deleted.',parent=frame)
                                
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_che_ia2_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_che_ia2_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update che_ia2_schedule set che_ia2_date=?,che_ia2_time=?,che_ia2_code=?,semisters=?,branch=?  where che_ia2_subjects=?',(
                                self.var_che_ia2_date_entry.get(),
                                self.var_che_ia2_time_entry.get(),
                                self.var_che_ia2_code.get(),
                                self.var_che_ia2_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_che_ia2_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_che_ia2_ia_schedule()
                                clear_che_ia2_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_che_ia2_all():
                        fetch_che_ia2_ia_schedule()
                        self.var_che_ia2_subjects_entry.set("")
                        self.var_che_ia2_date_entry.set("")
                        self.var_che_ia2_time_entry.set("")
                        self.var_che_ia2_code.set("")
                        self.var_che_ia2_semister.set("")
                        self.var_serach_che_ia2_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_che_ia2_ia_schedule(ev):
                        read=tree_che_ia2_treeview.focus()
                        content=tree_che_ia2_treeview.item(read)
                        row=content['values']

                        self.var_che_ia2_subjects_entry.set(row[1])
                        self.var_che_ia2_date_entry.set(row[2])
                        self.var_che_ia2_time_entry.set(row[3])
                        self.var_che_ia2_code.set(row[4])
                        self.var_che_ia2_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_che_ia2_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_che_ia2_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from che_ia2_schedule where che_ia2_subjects=?",(self.var_serach_che_ia2_semisters.get(),))
                                rows=cur.fetchall()
                                tree_che_ia2_treeview.delete(*tree_che_ia2_treeview.get_children())
                                for row in rows:
                                    tree_che_ia2_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_che_ia2_subjects()
                    che_ia2_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_che_ia2_subjects_entry,values=che_ia2_subjects_list).place(x=87,y=14)

                    che_ia2_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_che_ia2_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    che_ia2_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_che_ia2_time_entry).place(x=569,y=14)

                    che_ia2_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_che_ia2_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_che_ia2_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_che_ia2_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_che_ia2_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_che_ia2_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_che_ia2_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_che_ia2_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_che_ia2_treeview=ttk.Treeview(tree_frame1,columns=('che_ia2_subjects','che_ia2_date','che_ia2_time','che_ia2_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_che_ia2_treeview.xview)
                    scrolly.configure(command=tree_che_ia2_treeview.yview)

                    tree_che_ia2_treeview.heading('che_ia2_subjects',text="Subjects")
                    tree_che_ia2_treeview.heading('che_ia2_date',text="Date")
                    tree_che_ia2_treeview.heading('che_ia2_time',text="Time")
                    tree_che_ia2_treeview.heading('che_ia2_code',text="Code")
                    tree_che_ia2_treeview.heading('semisters',text="Semister")
                    tree_che_ia2_treeview.heading('branch',text="Branch")

                    tree_che_ia2_treeview.column('che_ia2_subjects',width=200)
                    tree_che_ia2_treeview.column('che_ia2_date',width=150)
                    tree_che_ia2_treeview.column('che_ia2_time',width=150)
                    tree_che_ia2_treeview.column('che_ia2_code',width=150)
                    tree_che_ia2_treeview.column('semisters',width=150)
                    tree_che_ia2_treeview.column('branch',width=200)

                    tree_che_ia2_treeview['show']='headings'
                
                    tree_che_ia2_treeview.pack(fill=BOTH,expand=1)
                    fetch_che_ia2_ia_schedule()
                    tree_che_ia2_treeview.bind('<ButtonRelease-1>',get_che_ia2_ia_schedule)
        if self.var_student_semister_select.get()=='PHYSICS_cycle':
            if self.var_ia_select.get()=='IA_2':
                if self.var_student_branch_select.get()=="2nd_semister":
                    phy_ia2_subjects_list=[]
                    def fetch_phy_ia2_subjects():
                        #all_phy_ia2_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select phy_subjects from all_phy_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    phy_ia2_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_phy_ia2_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_phy_ia2_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_phy_ia2_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_phy_ia2_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_phy_ia2_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'phy_ia2_subjects','phy_ia2_date','phy_ia2_time','phy_ia2_code','semisters','branch'
                                        cur.execute('insert into phy_ia2_schedule(phy_ia2_subjects,phy_ia2_date,phy_ia2_time,phy_ia2_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_phy_ia2_subjects_entry.get(),
                                            self.var_phy_ia2_date_entry.get(),
                                            self.var_phy_ia2_time_entry.get(),
                                            self.var_phy_ia2_code.get(),
                                            self.var_phy_ia2_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_phy_ia2_ia_schedule()
                                        con.close()
                    def fetch_phy_ia2_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from phy_ia2_schedule')
                            rows=cur.fetchall()
                            tree_phy_ia2_treeview.delete(*tree_phy_ia2_treeview.get_children())
                            for row in rows:
                                tree_phy_ia2_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_phy_ia2_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_phy_ia2_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from phy_ia2_schedule where phy_ia2_subjects=?',(self.var_phy_ia2_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from phy_ia2_schedule where phy_ia2_subjects=? ',(self.var_phy_ia2_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_phy_ia2_all()
                                    fetch_phy_ia2_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_phy_ia2_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_phy_ia2_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update phy_ia2_schedule set phy_ia2_date=?,phy_ia2_time=?,phy_ia2_code=?,semisters=?,branch=?  where phy_ia2_subjects=?',(
                                self.var_phy_ia2_date_entry.get(),
                                self.var_phy_ia2_time_entry.get(),
                                self.var_phy_ia2_code.get(),
                                self.var_phy_ia2_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_phy_ia2_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_phy_ia2_ia_schedule()
                                clear_phy_ia2_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_phy_ia2_all():
                        fetch_phy_ia2_ia_schedule()
                        self.var_phy_ia2_subjects_entry.set("")
                        self.var_phy_ia2_date_entry.set("")
                        self.var_phy_ia2_time_entry.set("")
                        self.var_phy_ia2_code.set("")
                        self.var_phy_ia2_semister.set("")
                        self.var_serach_phy_ia2_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_phy_ia2_ia_schedule(ev):
                        read=tree_phy_ia2_treeview.focus()
                        content=tree_phy_ia2_treeview.item(read)
                        row=content['values']

                        self.var_phy_ia2_subjects_entry.set(row[1])
                        self.var_phy_ia2_date_entry.set(row[2])
                        self.var_phy_ia2_time_entry.set(row[3])
                        self.var_phy_ia2_code.set(row[4])
                        self.var_phy_ia2_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_phy_ia2_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_phy_ia2_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from phy_ia2_schedule where phy_ia2_subjects=?",(self.var_serach_phy_ia2_semisters.get(),))
                                rows=cur.fetchall()
                                tree_phy_ia2_treeview.delete(*tree_phy_ia2_treeview.get_children())
                                for row in rows:
                                    tree_phy_ia2_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_phy_ia2_subjects()
                    phy_ia2_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_phy_ia2_subjects_entry,values=phy_ia2_subjects_list).place(x=87,y=14)

                    phy_ia2_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_phy_ia2_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    phy_ia2_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_phy_ia2_time_entry).place(x=569,y=14)

                    phy_ia2_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_phy_ia2_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_phy_ia2_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_phy_ia2_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_phy_ia2_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_phy_ia2_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_phy_ia2_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_phy_ia2_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_phy_ia2_treeview=ttk.Treeview(tree_frame1,columns=('phy_ia2_subjects','phy_ia2_date','phy_ia2_time','phy_ia2_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_phy_ia2_treeview.xview)
                    scrolly.configure(command=tree_phy_ia2_treeview.yview)

                    tree_phy_ia2_treeview.heading('phy_ia2_subjects',text="Subjects")
                    tree_phy_ia2_treeview.heading('phy_ia2_date',text="Date")
                    tree_phy_ia2_treeview.heading('phy_ia2_time',text="Time")
                    tree_phy_ia2_treeview.heading('phy_ia2_code',text="Code")
                    tree_phy_ia2_treeview.heading('semisters',text="Semister")
                    tree_phy_ia2_treeview.heading('branch',text="Branch")

                    tree_phy_ia2_treeview.column('phy_ia2_subjects',width=200)
                    tree_phy_ia2_treeview.column('phy_ia2_date',width=150)
                    tree_phy_ia2_treeview.column('phy_ia2_time',width=150)
                    tree_phy_ia2_treeview.column('phy_ia2_code',width=150)
                    tree_phy_ia2_treeview.column('semisters',width=150)
                    tree_phy_ia2_treeview.column('branch',width=200)

                    tree_phy_ia2_treeview['show']='headings'
                
                    tree_phy_ia2_treeview.pack(fill=BOTH,expand=1)
                    fetch_phy_ia2_ia_schedule()
                    tree_phy_ia2_treeview.bind('<ButtonRelease-1>',get_phy_ia2_ia_schedule)

        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Civil_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    civil_ia2_3rd_subjects_list=[]
                    def fetch_civil_ia2_3rd_subjects():
                        #all_civil_ia2_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select civil_3rd_subjects from all_civil_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    civil_ia2_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_civil_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_civil_ia2_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_civil_ia2_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_civil_ia2_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_civil_ia2_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'civil_ia2_3rd_subjects','civil_ia2_3rd_date','civil_ia2_3rd_time','civil_ia2_3rd_code','semisters','branch'
                                        cur.execute('insert into civil_ia2_3rd_schedule(civil_ia2_3rd_subjects,civil_ia2_3rd_date,civil_ia2_3rd_time,civil_ia2_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_civil_ia2_3rd_subjects_entry.get(),
                                            self.var_civil_ia2_3rd_date_entry.get(),
                                            self.var_civil_ia2_3rd_time_entry.get(),
                                            self.var_civil_ia2_3rd_code.get(),
                                            self.var_civil_ia2_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_civil_ia2_3rd_ia_schedule()
                                        con.close()
                    def fetch_civil_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_ia2_3rd_schedule')
                            rows=cur.fetchall()
                            tree_civil_ia2_3rd_treeview.delete(*tree_civil_ia2_3rd_treeview.get_children())
                            for row in rows:
                                tree_civil_ia2_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_civil_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia2_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from civil_ia2_3rd_schedule where civil_ia2_3rd_subjects=?',(self.var_civil_ia2_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from civil_ia2_3rd_schedule where civil_ia2_3rd_subjects=? ',(self.var_civil_ia2_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_civil_ia2_3rd_all()
                                    fetch_civil_ia2_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_civil_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia2_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update civil_ia2_3rd_schedule set civil_ia2_3rd_date=?,civil_ia2_3rd_time=?,civil_ia2_3rd_code=?,semisters=?,branch=?  where civil_ia2_3rd_subjects=?',(
                                self.var_civil_ia2_3rd_date_entry.get(),
                                self.var_civil_ia2_3rd_time_entry.get(),
                                self.var_civil_ia2_3rd_code.get(),
                                self.var_civil_ia2_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_civil_ia2_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_civil_ia2_3rd_ia_schedule()
                                clear_civil_ia2_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_civil_ia2_3rd_all():
                        fetch_civil_ia2_3rd_ia_schedule()
                        self.var_civil_ia2_3rd_subjects_entry.set("")
                        self.var_civil_ia2_3rd_date_entry.set("")
                        self.var_civil_ia2_3rd_time_entry.set("")
                        self.var_civil_ia2_3rd_code.set("")
                        self.var_civil_ia2_3rd_semister.set("")
                        self.var_serach_civil_ia2_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_civil_ia2_3rd_ia_schedule(ev):
                        read=tree_civil_ia2_3rd_treeview.focus()
                        content=tree_civil_ia2_3rd_treeview.item(read)
                        row=content['values']

                        self.var_civil_ia2_3rd_subjects_entry.set(row[1])
                        self.var_civil_ia2_3rd_date_entry.set(row[2])
                        self.var_civil_ia2_3rd_time_entry.set(row[3])
                        self.var_civil_ia2_3rd_code.set(row[4])
                        self.var_civil_ia2_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_civil_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_civil_ia2_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from civil_ia2_3rd_schedule where civil_ia2_3rd_subjects=?",(self.var_serach_civil_ia2_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_civil_ia2_3rd_treeview.delete(*tree_civil_ia2_3rd_treeview.get_children())
                                for row in rows:
                                    tree_civil_ia2_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_civil_ia2_3rd_subjects()
                    civil_ia2_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_civil_ia2_3rd_subjects_entry,values=civil_ia2_3rd_subjects_list).place(x=87,y=14)

                    civil_ia2_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_civil_ia2_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    civil_ia2_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia2_3rd_time_entry).place(x=569,y=14)

                    civil_ia2_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia2_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_civil_ia2_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_civil_ia2_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_civil_ia2_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_civil_ia2_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_civil_ia2_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_civil_ia2_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_civil_ia2_3rd_treeview=ttk.Treeview(tree_frame1,columns=('civil_ia2_3rd_subjects','civil_ia2_3rd_date','civil_ia2_3rd_time','civil_ia2_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_civil_ia2_3rd_treeview.xview)
                    scrolly.configure(command=tree_civil_ia2_3rd_treeview.yview)

                    tree_civil_ia2_3rd_treeview.heading('civil_ia2_3rd_subjects',text="Subjects")
                    tree_civil_ia2_3rd_treeview.heading('civil_ia2_3rd_date',text="Date")
                    tree_civil_ia2_3rd_treeview.heading('civil_ia2_3rd_time',text="Time")
                    tree_civil_ia2_3rd_treeview.heading('civil_ia2_3rd_code',text="Code")
                    tree_civil_ia2_3rd_treeview.heading('semisters',text="Semister")
                    tree_civil_ia2_3rd_treeview.heading('branch',text="Branch")

                    tree_civil_ia2_3rd_treeview.column('civil_ia2_3rd_subjects',width=200)
                    tree_civil_ia2_3rd_treeview.column('civil_ia2_3rd_date',width=150)
                    tree_civil_ia2_3rd_treeview.column('civil_ia2_3rd_time',width=150)
                    tree_civil_ia2_3rd_treeview.column('civil_ia2_3rd_code',width=150)
                    tree_civil_ia2_3rd_treeview.column('semisters',width=150)
                    tree_civil_ia2_3rd_treeview.column('branch',width=200)

                    tree_civil_ia2_3rd_treeview['show']='headings'
                
                    tree_civil_ia2_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_civil_ia2_3rd_ia_schedule()
                    tree_civil_ia2_3rd_treeview.bind('<ButtonRelease-1>',get_civil_ia2_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Civil_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    civil_ia2_4th_subjects_list=[]
                    def fetch_civil_ia2_4th_subjects():
                        #all_civil_ia2_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select civil_4th_subjects from all_civil_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    civil_ia2_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_civil_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_civil_ia2_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_civil_ia2_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_civil_ia2_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_civil_ia2_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'civil_ia2_4th_subjects','civil_ia2_4th_date','civil_ia2_4th_time','civil_ia2_4th_code','semisters','branch'
                                        cur.execute('insert into civil_ia2_4th_schedule(civil_ia2_4th_subjects,civil_ia2_4th_date,civil_ia2_4th_time,civil_ia2_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_civil_ia2_4th_subjects_entry.get(),
                                            self.var_civil_ia2_4th_date_entry.get(),
                                            self.var_civil_ia2_4th_time_entry.get(),
                                            self.var_civil_ia2_4th_code.get(),
                                            self.var_civil_ia2_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_civil_ia2_4th_ia_schedule()
                                        con.close()
                    def fetch_civil_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_ia2_4th_schedule')
                            rows=cur.fetchall()
                            tree_civil_ia2_4th_treeview.delete(*tree_civil_ia2_4th_treeview.get_children())
                            for row in rows:
                                tree_civil_ia2_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_civil_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia2_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from civil_ia2_4th_schedule where civil_ia2_4th_subjects=?',(self.var_civil_ia2_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from civil_ia2_4th_schedule where civil_ia2_4th_subjects=? ',(self.var_civil_ia2_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_civil_ia2_4th_all()
                                    fetch_civil_ia2_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_civil_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia2_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update civil_ia2_4th_schedule set civil_ia2_4th_date=?,civil_ia2_4th_time=?,civil_ia2_4th_code=?,semisters=?,branch=?  where civil_ia2_4th_subjects=?',(
                                self.var_civil_ia2_4th_date_entry.get(),
                                self.var_civil_ia2_4th_time_entry.get(),
                                self.var_civil_ia2_4th_code.get(),
                                self.var_civil_ia2_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_civil_ia2_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_civil_ia2_4th_ia_schedule()
                                clear_civil_ia2_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_civil_ia2_4th_all():
                        fetch_civil_ia2_4th_ia_schedule()
                        self.var_civil_ia2_4th_subjects_entry.set("")
                        self.var_civil_ia2_4th_date_entry.set("")
                        self.var_civil_ia2_4th_time_entry.set("")
                        self.var_civil_ia2_4th_code.set("")
                        self.var_civil_ia2_4th_semister.set("")
                        self.var_serach_civil_ia2_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_civil_ia2_4th_ia_schedule(ev):
                        read=tree_civil_ia2_4th_treeview.focus()
                        content=tree_civil_ia2_4th_treeview.item(read)
                        row=content['values']

                        self.var_civil_ia2_4th_subjects_entry.set(row[1])
                        self.var_civil_ia2_4th_date_entry.set(row[2])
                        self.var_civil_ia2_4th_time_entry.set(row[3])
                        self.var_civil_ia2_4th_code.set(row[4])
                        self.var_civil_ia2_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_civil_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_civil_ia2_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from civil_ia2_4th_schedule where civil_ia2_4th_subjects=?",(self.var_serach_civil_ia2_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_civil_ia2_4th_treeview.delete(*tree_civil_ia2_4th_treeview.get_children())
                                for row in rows:
                                    tree_civil_ia2_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_civil_ia2_4th_subjects()
                    civil_ia2_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_civil_ia2_4th_subjects_entry,values=civil_ia2_4th_subjects_list).place(x=87,y=14)

                    civil_ia2_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_civil_ia2_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    civil_ia2_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia2_4th_time_entry).place(x=569,y=14)

                    civil_ia2_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia2_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_civil_ia2_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_civil_ia2_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_civil_ia2_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_civil_ia2_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_civil_ia2_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_civil_ia2_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_civil_ia2_4th_treeview=ttk.Treeview(tree_frame1,columns=('civil_ia2_4th_subjects','civil_ia2_4th_date','civil_ia2_4th_time','civil_ia2_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_civil_ia2_4th_treeview.xview)
                    scrolly.configure(command=tree_civil_ia2_4th_treeview.yview)

                    tree_civil_ia2_4th_treeview.heading('civil_ia2_4th_subjects',text="Subjects")
                    tree_civil_ia2_4th_treeview.heading('civil_ia2_4th_date',text="Date")
                    tree_civil_ia2_4th_treeview.heading('civil_ia2_4th_time',text="Time")
                    tree_civil_ia2_4th_treeview.heading('civil_ia2_4th_code',text="Code")
                    tree_civil_ia2_4th_treeview.heading('semisters',text="Semister")
                    tree_civil_ia2_4th_treeview.heading('branch',text="Branch")

                    tree_civil_ia2_4th_treeview.column('civil_ia2_4th_subjects',width=200)
                    tree_civil_ia2_4th_treeview.column('civil_ia2_4th_date',width=150)
                    tree_civil_ia2_4th_treeview.column('civil_ia2_4th_time',width=150)
                    tree_civil_ia2_4th_treeview.column('civil_ia2_4th_code',width=150)
                    tree_civil_ia2_4th_treeview.column('semisters',width=150)
                    tree_civil_ia2_4th_treeview.column('branch',width=200)

                    tree_civil_ia2_4th_treeview['show']='headings'
                
                    tree_civil_ia2_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_civil_ia2_4th_ia_schedule()
                    tree_civil_ia2_4th_treeview.bind('<ButtonRelease-1>',get_civil_ia2_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Civil_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    civil_ia2_5th_subjects_list=[]
                    def fetch_civil_ia2_5th_subjects():
                        #all_civil_ia2_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select civil_5th_subjects from all_civil_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    civil_ia2_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_civil_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_civil_ia2_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_civil_ia2_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_civil_ia2_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_civil_ia2_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'civil_ia2_5th_subjects','civil_ia2_5th_date','civil_ia2_5th_time','civil_ia2_5th_code','semisters','branch'
                                        cur.execute('insert into civil_ia2_5th_schedule(civil_ia2_5th_subjects,civil_ia2_5th_date,civil_ia2_5th_time,civil_ia2_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_civil_ia2_5th_subjects_entry.get(),
                                            self.var_civil_ia2_5th_date_entry.get(),
                                            self.var_civil_ia2_5th_time_entry.get(),
                                            self.var_civil_ia2_5th_code.get(),
                                            self.var_civil_ia2_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_civil_ia2_5th_ia_schedule()
                                        con.close()
                    def fetch_civil_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_ia2_5th_schedule')
                            rows=cur.fetchall()
                            tree_civil_ia2_5th_treeview.delete(*tree_civil_ia2_5th_treeview.get_children())
                            for row in rows:
                                tree_civil_ia2_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_civil_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia2_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from civil_ia2_5th_schedule where civil_ia2_5th_subjects=?',(self.var_civil_ia2_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from civil_ia2_5th_schedule where civil_ia2_5th_subjects=? ',(self.var_civil_ia2_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_civil_ia2_5th_all()
                                    fetch_civil_ia2_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_civil_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia2_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update civil_ia2_5th_schedule set civil_ia2_5th_date=?,civil_ia2_5th_time=?,civil_ia2_5th_code=?,semisters=?,branch=?  where civil_ia2_5th_subjects=?',(
                                self.var_civil_ia2_5th_date_entry.get(),
                                self.var_civil_ia2_5th_time_entry.get(),
                                self.var_civil_ia2_5th_code.get(),
                                self.var_civil_ia2_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_civil_ia2_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_civil_ia2_5th_ia_schedule()
                                clear_civil_ia2_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_civil_ia2_5th_all():
                        fetch_civil_ia2_5th_ia_schedule()
                        self.var_civil_ia2_5th_subjects_entry.set("")
                        self.var_civil_ia2_5th_date_entry.set("")
                        self.var_civil_ia2_5th_time_entry.set("")
                        self.var_civil_ia2_5th_code.set("")
                        self.var_civil_ia2_5th_semister.set("")
                        self.var_serach_civil_ia2_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_civil_ia2_5th_ia_schedule(ev):
                        read=tree_civil_ia2_5th_treeview.focus()
                        content=tree_civil_ia2_5th_treeview.item(read)
                        row=content['values']

                        self.var_civil_ia2_5th_subjects_entry.set(row[1])
                        self.var_civil_ia2_5th_date_entry.set(row[2])
                        self.var_civil_ia2_5th_time_entry.set(row[3])
                        self.var_civil_ia2_5th_code.set(row[4])
                        self.var_civil_ia2_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_civil_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_civil_ia2_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from civil_ia2_5th_schedule where civil_ia2_5th_subjects=?",(self.var_serach_civil_ia2_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_civil_ia2_5th_treeview.delete(*tree_civil_ia2_5th_treeview.get_children())
                                for row in rows:
                                    tree_civil_ia2_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_civil_ia2_5th_subjects()
                    civil_ia2_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_civil_ia2_5th_subjects_entry,values=civil_ia2_5th_subjects_list).place(x=87,y=14)

                    civil_ia2_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_civil_ia2_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    civil_ia2_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia2_5th_time_entry).place(x=569,y=14)

                    civil_ia2_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia2_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_civil_ia2_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_civil_ia2_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_civil_ia2_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_civil_ia2_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_civil_ia2_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_civil_ia2_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_civil_ia2_5th_treeview=ttk.Treeview(tree_frame1,columns=('civil_ia2_5th_subjects','civil_ia2_5th_date','civil_ia2_5th_time','civil_ia2_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_civil_ia2_5th_treeview.xview)
                    scrolly.configure(command=tree_civil_ia2_5th_treeview.yview)

                    tree_civil_ia2_5th_treeview.heading('civil_ia2_5th_subjects',text="Subjects")
                    tree_civil_ia2_5th_treeview.heading('civil_ia2_5th_date',text="Date")
                    tree_civil_ia2_5th_treeview.heading('civil_ia2_5th_time',text="Time")
                    tree_civil_ia2_5th_treeview.heading('civil_ia2_5th_code',text="Code")
                    tree_civil_ia2_5th_treeview.heading('semisters',text="Semister")
                    tree_civil_ia2_5th_treeview.heading('branch',text="Branch")

                    tree_civil_ia2_5th_treeview.column('civil_ia2_5th_subjects',width=200)
                    tree_civil_ia2_5th_treeview.column('civil_ia2_5th_date',width=150)
                    tree_civil_ia2_5th_treeview.column('civil_ia2_5th_time',width=150)
                    tree_civil_ia2_5th_treeview.column('civil_ia2_5th_code',width=150)
                    tree_civil_ia2_5th_treeview.column('semisters',width=150)
                    tree_civil_ia2_5th_treeview.column('branch',width=200)

                    tree_civil_ia2_5th_treeview['show']='headings'
                
                    tree_civil_ia2_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_civil_ia2_5th_ia_schedule()
                    tree_civil_ia2_5th_treeview.bind('<ButtonRelease-1>',get_civil_ia2_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Civil_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    civil_ia2_6th_subjects_list=[]
                    def fetch_civil_ia2_6th_subjects():
                        #all_civil_ia2_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select civil_6th_subjects from all_civil_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    civil_ia2_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_civil_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_civil_ia2_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_civil_ia2_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_civil_ia2_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_civil_ia2_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'civil_ia2_6th_subjects','civil_ia2_6th_date','civil_ia2_6th_time','civil_ia2_6th_code','semisters','branch'
                                        cur.execute('insert into civil_ia2_6th_schedule(civil_ia2_6th_subjects,civil_ia2_6th_date,civil_ia2_6th_time,civil_ia2_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_civil_ia2_6th_subjects_entry.get(),
                                            self.var_civil_ia2_6th_date_entry.get(),
                                            self.var_civil_ia2_6th_time_entry.get(),
                                            self.var_civil_ia2_6th_code.get(),
                                            self.var_civil_ia2_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_civil_ia2_6th_ia_schedule()
                                        con.close()
                    def fetch_civil_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_ia2_6th_schedule')
                            rows=cur.fetchall()
                            tree_civil_ia2_6th_treeview.delete(*tree_civil_ia2_6th_treeview.get_children())
                            for row in rows:
                                tree_civil_ia2_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_civil_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia2_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from civil_ia2_6th_schedule where civil_ia2_6th_subjects=?',(self.var_civil_ia2_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from civil_ia2_6th_schedule where civil_ia2_6th_subjects=? ',(self.var_civil_ia2_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_civil_ia2_6th_all()
                                    fetch_civil_ia2_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_civil_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia2_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update civil_ia2_6th_schedule set civil_ia2_6th_date=?,civil_ia2_6th_time=?,civil_ia2_6th_code=?,semisters=?,branch=?  where civil_ia2_6th_subjects=?',(
                                self.var_civil_ia2_6th_date_entry.get(),
                                self.var_civil_ia2_6th_time_entry.get(),
                                self.var_civil_ia2_6th_code.get(),
                                self.var_civil_ia2_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_civil_ia2_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_civil_ia2_6th_ia_schedule()
                                clear_civil_ia2_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_civil_ia2_6th_all():
                        fetch_civil_ia2_6th_ia_schedule()
                        self.var_civil_ia2_6th_subjects_entry.set("")
                        self.var_civil_ia2_6th_date_entry.set("")
                        self.var_civil_ia2_6th_time_entry.set("")
                        self.var_civil_ia2_6th_code.set("")
                        self.var_civil_ia2_6th_semister.set("")
                        self.var_serach_civil_ia2_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_civil_ia2_6th_ia_schedule(ev):
                        read=tree_civil_ia2_6th_treeview.focus()
                        content=tree_civil_ia2_6th_treeview.item(read)
                        row=content['values']

                        self.var_civil_ia2_6th_subjects_entry.set(row[1])
                        self.var_civil_ia2_6th_date_entry.set(row[2])
                        self.var_civil_ia2_6th_time_entry.set(row[3])
                        self.var_civil_ia2_6th_code.set(row[4])
                        self.var_civil_ia2_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_civil_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_civil_ia2_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from civil_ia2_6th_schedule where civil_ia2_6th_subjects=?",(self.var_serach_civil_ia2_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_civil_ia2_6th_treeview.delete(*tree_civil_ia2_6th_treeview.get_children())
                                for row in rows:
                                    tree_civil_ia2_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_civil_ia2_6th_subjects()
                    civil_ia2_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_civil_ia2_6th_subjects_entry,values=civil_ia2_6th_subjects_list).place(x=87,y=14)

                    civil_ia2_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_civil_ia2_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    civil_ia2_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia2_6th_time_entry).place(x=569,y=14)

                    civil_ia2_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia2_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_civil_ia2_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_civil_ia2_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_civil_ia2_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_civil_ia2_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_civil_ia2_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_civil_ia2_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_civil_ia2_6th_treeview=ttk.Treeview(tree_frame1,columns=('civil_ia2_6th_subjects','civil_ia2_6th_date','civil_ia2_6th_time','civil_ia2_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_civil_ia2_6th_treeview.xview)
                    scrolly.configure(command=tree_civil_ia2_6th_treeview.yview)

                    tree_civil_ia2_6th_treeview.heading('civil_ia2_6th_subjects',text="Subjects")
                    tree_civil_ia2_6th_treeview.heading('civil_ia2_6th_date',text="Date")
                    tree_civil_ia2_6th_treeview.heading('civil_ia2_6th_time',text="Time")
                    tree_civil_ia2_6th_treeview.heading('civil_ia2_6th_code',text="Code")
                    tree_civil_ia2_6th_treeview.heading('semisters',text="Semister")
                    tree_civil_ia2_6th_treeview.heading('branch',text="Branch")

                    tree_civil_ia2_6th_treeview.column('civil_ia2_6th_subjects',width=200)
                    tree_civil_ia2_6th_treeview.column('civil_ia2_6th_date',width=150)
                    tree_civil_ia2_6th_treeview.column('civil_ia2_6th_time',width=150)
                    tree_civil_ia2_6th_treeview.column('civil_ia2_6th_code',width=150)
                    tree_civil_ia2_6th_treeview.column('semisters',width=150)
                    tree_civil_ia2_6th_treeview.column('branch',width=200)

                    tree_civil_ia2_6th_treeview['show']='headings'
                
                    tree_civil_ia2_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_civil_ia2_6th_ia_schedule()
                    tree_civil_ia2_6th_treeview.bind('<ButtonRelease-1>',get_civil_ia2_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Civil_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    civil_ia2_7th_subjects_list=[]
                    def fetch_civil_ia2_7th_subjects():
                        #all_civil_ia2_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select civil_7th_subjects from all_civil_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    civil_ia2_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_civil_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_civil_ia2_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_civil_ia2_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_civil_ia2_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_civil_ia2_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'civil_ia2_7th_subjects','civil_ia2_7th_date','civil_ia2_7th_time','civil_ia2_7th_code','semisters','branch'
                                        cur.execute('insert into civil_ia2_7th_schedule(civil_ia2_7th_subjects,civil_ia2_7th_date,civil_ia2_7th_time,civil_ia2_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_civil_ia2_7th_subjects_entry.get(),
                                            self.var_civil_ia2_7th_date_entry.get(),
                                            self.var_civil_ia2_7th_time_entry.get(),
                                            self.var_civil_ia2_7th_code.get(),
                                            self.var_civil_ia2_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_civil_ia2_7th_ia_schedule()
                                        con.close()
                    def fetch_civil_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_ia2_7th_schedule')
                            rows=cur.fetchall()
                            tree_civil_ia2_7th_treeview.delete(*tree_civil_ia2_7th_treeview.get_children())
                            for row in rows:
                                tree_civil_ia2_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_civil_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia2_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from civil_ia2_7th_schedule where civil_ia2_7th_subjects=?',(self.var_civil_ia2_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from civil_ia2_7th_schedule where civil_ia2_7th_subjects=? ',(self.var_civil_ia2_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_civil_ia2_7th_all()
                                    fetch_civil_ia2_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_civil_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia2_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update civil_ia2_7th_schedule set civil_ia2_7th_date=?,civil_ia2_7th_time=?,civil_ia2_7th_code=?,semisters=?,branch=?  where civil_ia2_7th_subjects=?',(
                                self.var_civil_ia2_7th_date_entry.get(),
                                self.var_civil_ia2_7th_time_entry.get(),
                                self.var_civil_ia2_7th_code.get(),
                                self.var_civil_ia2_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_civil_ia2_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_civil_ia2_7th_ia_schedule()
                                clear_civil_ia2_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_civil_ia2_7th_all():
                        fetch_civil_ia2_7th_ia_schedule()
                        self.var_civil_ia2_7th_subjects_entry.set("")
                        self.var_civil_ia2_7th_date_entry.set("")
                        self.var_civil_ia2_7th_time_entry.set("")
                        self.var_civil_ia2_7th_code.set("")
                        self.var_civil_ia2_7th_semister.set("")
                        self.var_serach_civil_ia2_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_civil_ia2_7th_ia_schedule(ev):
                        read=tree_civil_ia2_7th_treeview.focus()
                        content=tree_civil_ia2_7th_treeview.item(read)
                        row=content['values']

                        self.var_civil_ia2_7th_subjects_entry.set(row[1])
                        self.var_civil_ia2_7th_date_entry.set(row[2])
                        self.var_civil_ia2_7th_time_entry.set(row[3])
                        self.var_civil_ia2_7th_code.set(row[4])
                        self.var_civil_ia2_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_civil_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_civil_ia2_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from civil_ia2_7th_schedule where civil_ia2_7th_subjects=?",(self.var_serach_civil_ia2_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_civil_ia2_7th_treeview.delete(*tree_civil_ia2_7th_treeview.get_children())
                                for row in rows:
                                    tree_civil_ia2_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_civil_ia2_7th_subjects()
                    civil_ia2_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_civil_ia2_7th_subjects_entry,values=civil_ia2_7th_subjects_list).place(x=87,y=14)

                    civil_ia2_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_civil_ia2_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    civil_ia2_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia2_7th_time_entry).place(x=569,y=14)

                    civil_ia2_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia2_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_civil_ia2_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_civil_ia2_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_civil_ia2_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_civil_ia2_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_civil_ia2_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_civil_ia2_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_civil_ia2_7th_treeview=ttk.Treeview(tree_frame1,columns=('civil_ia2_7th_subjects','civil_ia2_7th_date','civil_ia2_7th_time','civil_ia2_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_civil_ia2_7th_treeview.xview)
                    scrolly.configure(command=tree_civil_ia2_7th_treeview.yview)

                    tree_civil_ia2_7th_treeview.heading('civil_ia2_7th_subjects',text="Subjects")
                    tree_civil_ia2_7th_treeview.heading('civil_ia2_7th_date',text="Date")
                    tree_civil_ia2_7th_treeview.heading('civil_ia2_7th_time',text="Time")
                    tree_civil_ia2_7th_treeview.heading('civil_ia2_7th_code',text="Code")
                    tree_civil_ia2_7th_treeview.heading('semisters',text="Semister")
                    tree_civil_ia2_7th_treeview.heading('branch',text="Branch")

                    tree_civil_ia2_7th_treeview.column('civil_ia2_7th_subjects',width=200)
                    tree_civil_ia2_7th_treeview.column('civil_ia2_7th_date',width=150)
                    tree_civil_ia2_7th_treeview.column('civil_ia2_7th_time',width=150)
                    tree_civil_ia2_7th_treeview.column('civil_ia2_7th_code',width=150)
                    tree_civil_ia2_7th_treeview.column('semisters',width=150)
                    tree_civil_ia2_7th_treeview.column('branch',width=200)

                    tree_civil_ia2_7th_treeview['show']='headings'
                
                    tree_civil_ia2_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_civil_ia2_7th_ia_schedule()
                    tree_civil_ia2_7th_treeview.bind('<ButtonRelease-1>',get_civil_ia2_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Civil_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    civil_ia2_8th_subjects_list=[]
                    def fetch_civil_ia2_8th_subjects():
                        #all_civil_ia2_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select civil_8th_subjects from all_civil_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    civil_ia2_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_civil_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_civil_ia2_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_civil_ia2_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_civil_ia2_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_civil_ia2_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'civil_ia2_8th_subjects','civil_ia2_8th_date','civil_ia2_8th_time','civil_ia2_8th_code','semisters','branch'
                                        cur.execute('insert into civil_ia2_8th_schedule(civil_ia2_8th_subjects,civil_ia2_8th_date,civil_ia2_8th_time,civil_ia2_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_civil_ia2_8th_subjects_entry.get(),
                                            self.var_civil_ia2_8th_date_entry.get(),
                                            self.var_civil_ia2_8th_time_entry.get(),
                                            self.var_civil_ia2_8th_code.get(),
                                            self.var_civil_ia2_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_civil_ia2_8th_ia_schedule()
                                        con.close()
                    def fetch_civil_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_ia2_8th_schedule')
                            rows=cur.fetchall()
                            tree_civil_ia2_8th_treeview.delete(*tree_civil_ia2_8th_treeview.get_children())
                            for row in rows:
                                tree_civil_ia2_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_civil_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia2_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from civil_ia2_8th_schedule where civil_ia2_8th_subjects=?',(self.var_civil_ia2_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from civil_ia2_8th_schedule where civil_ia2_8th_subjects=? ',(self.var_civil_ia2_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_civil_ia2_8th_all()
                                    fetch_civil_ia2_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_civil_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia2_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update civil_ia2_8th_schedule set civil_ia2_8th_date=?,civil_ia2_8th_time=?,civil_ia2_8th_code=?,semisters=?,branch=?  where civil_ia2_8th_subjects=?',(
                                self.var_civil_ia2_8th_date_entry.get(),
                                self.var_civil_ia2_8th_time_entry.get(),
                                self.var_civil_ia2_8th_code.get(),
                                self.var_civil_ia2_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_civil_ia2_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_civil_ia2_8th_ia_schedule()
                                clear_civil_ia2_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_civil_ia2_8th_all():
                        fetch_civil_ia2_8th_ia_schedule()
                        self.var_civil_ia2_8th_subjects_entry.set("")
                        self.var_civil_ia2_8th_date_entry.set("")
                        self.var_civil_ia2_8th_time_entry.set("")
                        self.var_civil_ia2_8th_code.set("")
                        self.var_civil_ia2_8th_semister.set("")
                        self.var_serach_civil_ia2_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_civil_ia2_8th_ia_schedule(ev):
                        read=tree_civil_ia2_8th_treeview.focus()
                        content=tree_civil_ia2_8th_treeview.item(read)
                        row=content['values']

                        self.var_civil_ia2_8th_subjects_entry.set(row[1])
                        self.var_civil_ia2_8th_date_entry.set(row[2])
                        self.var_civil_ia2_8th_time_entry.set(row[3])
                        self.var_civil_ia2_8th_code.set(row[4])
                        self.var_civil_ia2_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_civil_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_civil_ia2_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from civil_ia2_8th_schedule where civil_ia2_8th_subjects=?",(self.var_serach_civil_ia2_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_civil_ia2_8th_treeview.delete(*tree_civil_ia2_8th_treeview.get_children())
                                for row in rows:
                                    tree_civil_ia2_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_civil_ia2_8th_subjects()
                    civil_ia2_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_civil_ia2_8th_subjects_entry,values=civil_ia2_8th_subjects_list).place(x=87,y=14)

                    civil_ia2_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_civil_ia2_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    civil_ia2_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia2_8th_time_entry).place(x=569,y=14)

                    civil_ia2_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia2_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_civil_ia2_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_civil_ia2_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_civil_ia2_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_civil_ia2_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_civil_ia2_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_civil_ia2_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_civil_ia2_8th_treeview=ttk.Treeview(tree_frame1,columns=('civil_ia2_8th_subjects','civil_ia2_8th_date','civil_ia2_8th_time','civil_ia2_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_civil_ia2_8th_treeview.xview)
                    scrolly.configure(command=tree_civil_ia2_8th_treeview.yview)

                    tree_civil_ia2_8th_treeview.heading('civil_ia2_8th_subjects',text="Subjects")
                    tree_civil_ia2_8th_treeview.heading('civil_ia2_8th_date',text="Date")
                    tree_civil_ia2_8th_treeview.heading('civil_ia2_8th_time',text="Time")
                    tree_civil_ia2_8th_treeview.heading('civil_ia2_8th_code',text="Code")
                    tree_civil_ia2_8th_treeview.heading('semisters',text="Semister")
                    tree_civil_ia2_8th_treeview.heading('branch',text="Branch")

                    tree_civil_ia2_8th_treeview.column('civil_ia2_8th_subjects',width=200)
                    tree_civil_ia2_8th_treeview.column('civil_ia2_8th_date',width=150)
                    tree_civil_ia2_8th_treeview.column('civil_ia2_8th_time',width=150)
                    tree_civil_ia2_8th_treeview.column('civil_ia2_8th_code',width=150)
                    tree_civil_ia2_8th_treeview.column('semisters',width=150)
                    tree_civil_ia2_8th_treeview.column('branch',width=200)

                    tree_civil_ia2_8th_treeview['show']='headings'
                
                    tree_civil_ia2_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_civil_ia2_8th_ia_schedule()
                    tree_civil_ia2_8th_treeview.bind('<ButtonRelease-1>',get_civil_ia2_8th_ia_schedule)

                ############################################################################################################
        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Mechanical_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    mech_ia2_3rd_subjects_list=[]
                    def fetch_mech_ia2_3rd_subjects():
                        #all_mech_ia2_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select mech_3rd_subjects from all_mech_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    mech_ia2_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_mech_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_mech_ia2_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_mech_ia2_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_mech_ia2_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_mech_ia2_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'mech_ia2_3rd_subjects','mech_ia2_3rd_date','mech_ia2_3rd_time','mech_ia2_3rd_code','semisters','branch'
                                        cur.execute('insert into mech_ia2_3rd_schedule(mech_ia2_3rd_subjects,mech_ia2_3rd_date,mech_ia2_3rd_time,mech_ia2_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_mech_ia2_3rd_subjects_entry.get(),
                                            self.var_mech_ia2_3rd_date_entry.get(),
                                            self.var_mech_ia2_3rd_time_entry.get(),
                                            self.var_mech_ia2_3rd_code.get(),
                                            self.var_mech_ia2_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_mech_ia2_3rd_ia_schedule()
                                        con.close()
                    def fetch_mech_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_ia2_3rd_schedule')
                            rows=cur.fetchall()
                            tree_mech_ia2_3rd_treeview.delete(*tree_mech_ia2_3rd_treeview.get_children())
                            for row in rows:
                                tree_mech_ia2_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_mech_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia2_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from mech_ia2_3rd_schedule where mech_ia2_3rd_subjects=?',(self.var_mech_ia2_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from mech_ia2_3rd_schedule where mech_ia2_3rd_subjects=? ',(self.var_mech_ia2_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_mech_ia2_3rd_all()
                                    fetch_mech_ia2_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_mech_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia2_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update mech_ia2_3rd_schedule set mech_ia2_3rd_date=?,mech_ia2_3rd_time=?,mech_ia2_3rd_code=?,semisters=?,branch=?  where mech_ia2_3rd_subjects=?',(
                                self.var_mech_ia2_3rd_date_entry.get(),
                                self.var_mech_ia2_3rd_time_entry.get(),
                                self.var_mech_ia2_3rd_code.get(),
                                self.var_mech_ia2_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_mech_ia2_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_mech_ia2_3rd_ia_schedule()
                                clear_mech_ia2_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_mech_ia2_3rd_all():
                        fetch_mech_ia2_3rd_ia_schedule()
                        self.var_mech_ia2_3rd_subjects_entry.set("")
                        self.var_mech_ia2_3rd_date_entry.set("")
                        self.var_mech_ia2_3rd_time_entry.set("")
                        self.var_mech_ia2_3rd_code.set("")
                        self.var_mech_ia2_3rd_semister.set("")
                        self.var_serach_mech_ia2_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_mech_ia2_3rd_ia_schedule(ev):
                        read=tree_mech_ia2_3rd_treeview.focus()
                        content=tree_mech_ia2_3rd_treeview.item(read)
                        row=content['values']

                        self.var_mech_ia2_3rd_subjects_entry.set(row[1])
                        self.var_mech_ia2_3rd_date_entry.set(row[2])
                        self.var_mech_ia2_3rd_time_entry.set(row[3])
                        self.var_mech_ia2_3rd_code.set(row[4])
                        self.var_mech_ia2_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_mech_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_mech_ia2_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from mech_ia2_3rd_schedule where mech_ia2_3rd_subjects=?",(self.var_serach_mech_ia2_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_mech_ia2_3rd_treeview.delete(*tree_mech_ia2_3rd_treeview.get_children())
                                for row in rows:
                                    tree_mech_ia2_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_mech_ia2_3rd_subjects()
                    mech_ia2_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_mech_ia2_3rd_subjects_entry,values=mech_ia2_3rd_subjects_list).place(x=87,y=14)

                    mech_ia2_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_mech_ia2_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    mech_ia2_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia2_3rd_time_entry).place(x=569,y=14)

                    mech_ia2_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia2_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_mech_ia2_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_mech_ia2_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_mech_ia2_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_mech_ia2_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_mech_ia2_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_mech_ia2_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_mech_ia2_3rd_treeview=ttk.Treeview(tree_frame1,columns=('mech_ia2_3rd_subjects','mech_ia2_3rd_date','mech_ia2_3rd_time','mech_ia2_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_mech_ia2_3rd_treeview.xview)
                    scrolly.configure(command=tree_mech_ia2_3rd_treeview.yview)

                    tree_mech_ia2_3rd_treeview.heading('mech_ia2_3rd_subjects',text="Subjects")
                    tree_mech_ia2_3rd_treeview.heading('mech_ia2_3rd_date',text="Date")
                    tree_mech_ia2_3rd_treeview.heading('mech_ia2_3rd_time',text="Time")
                    tree_mech_ia2_3rd_treeview.heading('mech_ia2_3rd_code',text="Code")
                    tree_mech_ia2_3rd_treeview.heading('semisters',text="Semister")
                    tree_mech_ia2_3rd_treeview.heading('branch',text="Branch")

                    tree_mech_ia2_3rd_treeview.column('mech_ia2_3rd_subjects',width=200)
                    tree_mech_ia2_3rd_treeview.column('mech_ia2_3rd_date',width=150)
                    tree_mech_ia2_3rd_treeview.column('mech_ia2_3rd_time',width=150)
                    tree_mech_ia2_3rd_treeview.column('mech_ia2_3rd_code',width=150)
                    tree_mech_ia2_3rd_treeview.column('semisters',width=150)
                    tree_mech_ia2_3rd_treeview.column('branch',width=200)

                    tree_mech_ia2_3rd_treeview['show']='headings'
                
                    tree_mech_ia2_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_mech_ia2_3rd_ia_schedule()
                    tree_mech_ia2_3rd_treeview.bind('<ButtonRelease-1>',get_mech_ia2_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Mechanical_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    mech_ia2_4th_subjects_list=[]
                    def fetch_mech_ia2_4th_subjects():
                        #all_mech_ia2_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select mech_4th_subjects from all_mech_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    mech_ia2_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_mech_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_mech_ia2_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_mech_ia2_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_mech_ia2_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_mech_ia2_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'mech_ia2_4th_subjects','mech_ia2_4th_date','mech_ia2_4th_time','mech_ia2_4th_code','semisters','branch'
                                        cur.execute('insert into mech_ia2_4th_schedule(mech_ia2_4th_subjects,mech_ia2_4th_date,mech_ia2_4th_time,mech_ia2_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_mech_ia2_4th_subjects_entry.get(),
                                            self.var_mech_ia2_4th_date_entry.get(),
                                            self.var_mech_ia2_4th_time_entry.get(),
                                            self.var_mech_ia2_4th_code.get(),
                                            self.var_mech_ia2_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_mech_ia2_4th_ia_schedule()
                                        con.close()
                    def fetch_mech_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_ia2_4th_schedule')
                            rows=cur.fetchall()
                            tree_mech_ia2_4th_treeview.delete(*tree_mech_ia2_4th_treeview.get_children())
                            for row in rows:
                                tree_mech_ia2_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_mech_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia2_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from mech_ia2_4th_schedule where mech_ia2_4th_subjects=?',(self.var_mech_ia2_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from mech_ia2_4th_schedule where mech_ia2_4th_subjects=? ',(self.var_mech_ia2_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_mech_ia2_4th_all()
                                    fetch_mech_ia2_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_mech_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia2_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update mech_ia2_4th_schedule set mech_ia2_4th_date=?,mech_ia2_4th_time=?,mech_ia2_4th_code=?,semisters=?,branch=?  where mech_ia2_4th_subjects=?',(
                                self.var_mech_ia2_4th_date_entry.get(),
                                self.var_mech_ia2_4th_time_entry.get(),
                                self.var_mech_ia2_4th_code.get(),
                                self.var_mech_ia2_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_mech_ia2_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_mech_ia2_4th_ia_schedule()
                                clear_mech_ia2_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_mech_ia2_4th_all():
                        fetch_mech_ia2_4th_ia_schedule()
                        self.var_mech_ia2_4th_subjects_entry.set("")
                        self.var_mech_ia2_4th_date_entry.set("")
                        self.var_mech_ia2_4th_time_entry.set("")
                        self.var_mech_ia2_4th_code.set("")
                        self.var_mech_ia2_4th_semister.set("")
                        self.var_serach_mech_ia2_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_mech_ia2_4th_ia_schedule(ev):
                        read=tree_mech_ia2_4th_treeview.focus()
                        content=tree_mech_ia2_4th_treeview.item(read)
                        row=content['values']

                        self.var_mech_ia2_4th_subjects_entry.set(row[1])
                        self.var_mech_ia2_4th_date_entry.set(row[2])
                        self.var_mech_ia2_4th_time_entry.set(row[3])
                        self.var_mech_ia2_4th_code.set(row[4])
                        self.var_mech_ia2_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_mech_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_mech_ia2_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from mech_ia2_4th_schedule where mech_ia2_4th_subjects=?",(self.var_serach_mech_ia2_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_mech_ia2_4th_treeview.delete(*tree_mech_ia2_4th_treeview.get_children())
                                for row in rows:
                                    tree_mech_ia2_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_mech_ia2_4th_subjects()
                    mech_ia2_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_mech_ia2_4th_subjects_entry,values=mech_ia2_4th_subjects_list).place(x=87,y=14)

                    mech_ia2_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_mech_ia2_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    mech_ia2_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia2_4th_time_entry).place(x=569,y=14)

                    mech_ia2_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia2_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_mech_ia2_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_mech_ia2_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_mech_ia2_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_mech_ia2_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_mech_ia2_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_mech_ia2_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_mech_ia2_4th_treeview=ttk.Treeview(tree_frame1,columns=('mech_ia2_4th_subjects','mech_ia2_4th_date','mech_ia2_4th_time','mech_ia2_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_mech_ia2_4th_treeview.xview)
                    scrolly.configure(command=tree_mech_ia2_4th_treeview.yview)

                    tree_mech_ia2_4th_treeview.heading('mech_ia2_4th_subjects',text="Subjects")
                    tree_mech_ia2_4th_treeview.heading('mech_ia2_4th_date',text="Date")
                    tree_mech_ia2_4th_treeview.heading('mech_ia2_4th_time',text="Time")
                    tree_mech_ia2_4th_treeview.heading('mech_ia2_4th_code',text="Code")
                    tree_mech_ia2_4th_treeview.heading('semisters',text="Semister")
                    tree_mech_ia2_4th_treeview.heading('branch',text="Branch")

                    tree_mech_ia2_4th_treeview.column('mech_ia2_4th_subjects',width=200)
                    tree_mech_ia2_4th_treeview.column('mech_ia2_4th_date',width=150)
                    tree_mech_ia2_4th_treeview.column('mech_ia2_4th_time',width=150)
                    tree_mech_ia2_4th_treeview.column('mech_ia2_4th_code',width=150)
                    tree_mech_ia2_4th_treeview.column('semisters',width=150)
                    tree_mech_ia2_4th_treeview.column('branch',width=200)

                    tree_mech_ia2_4th_treeview['show']='headings'
                
                    tree_mech_ia2_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_mech_ia2_4th_ia_schedule()
                    tree_mech_ia2_4th_treeview.bind('<ButtonRelease-1>',get_mech_ia2_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Mechanical_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    mech_ia2_5th_subjects_list=[]
                    def fetch_mech_ia2_5th_subjects():
                        #all_mech_ia2_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select mech_5th_subjects from all_mech_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    mech_ia2_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_mech_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_mech_ia2_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_mech_ia2_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_mech_ia2_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_mech_ia2_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'mech_ia2_5th_subjects','mech_ia2_5th_date','mech_ia2_5th_time','mech_ia2_5th_code','semisters','branch'
                                        cur.execute('insert into mech_ia2_5th_schedule(mech_ia2_5th_subjects,mech_ia2_5th_date,mech_ia2_5th_time,mech_ia2_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_mech_ia2_5th_subjects_entry.get(),
                                            self.var_mech_ia2_5th_date_entry.get(),
                                            self.var_mech_ia2_5th_time_entry.get(),
                                            self.var_mech_ia2_5th_code.get(),
                                            self.var_mech_ia2_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_mech_ia2_5th_ia_schedule()
                                        con.close()
                    def fetch_mech_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_ia2_5th_schedule')
                            rows=cur.fetchall()
                            tree_mech_ia2_5th_treeview.delete(*tree_mech_ia2_5th_treeview.get_children())
                            for row in rows:
                                tree_mech_ia2_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_mech_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia2_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from mech_ia2_5th_schedule where mech_ia2_5th_subjects=?',(self.var_mech_ia2_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from mech_ia2_5th_schedule where mech_ia2_5th_subjects=? ',(self.var_mech_ia2_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_mech_ia2_5th_all()
                                    fetch_mech_ia2_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_mech_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia2_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update mech_ia2_5th_schedule set mech_ia2_5th_date=?,mech_ia2_5th_time=?,mech_ia2_5th_code=?,semisters=?,branch=?  where mech_ia2_5th_subjects=?',(
                                self.var_mech_ia2_5th_date_entry.get(),
                                self.var_mech_ia2_5th_time_entry.get(),
                                self.var_mech_ia2_5th_code.get(),
                                self.var_mech_ia2_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_mech_ia2_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_mech_ia2_5th_ia_schedule()
                                clear_mech_ia2_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_mech_ia2_5th_all():
                        fetch_mech_ia2_5th_ia_schedule()
                        self.var_mech_ia2_5th_subjects_entry.set("")
                        self.var_mech_ia2_5th_date_entry.set("")
                        self.var_mech_ia2_5th_time_entry.set("")
                        self.var_mech_ia2_5th_code.set("")
                        self.var_mech_ia2_5th_semister.set("")
                        self.var_serach_mech_ia2_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_mech_ia2_5th_ia_schedule(ev):
                        read=tree_mech_ia2_5th_treeview.focus()
                        content=tree_mech_ia2_5th_treeview.item(read)
                        row=content['values']

                        self.var_mech_ia2_5th_subjects_entry.set(row[1])
                        self.var_mech_ia2_5th_date_entry.set(row[2])
                        self.var_mech_ia2_5th_time_entry.set(row[3])
                        self.var_mech_ia2_5th_code.set(row[4])
                        self.var_mech_ia2_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_mech_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_mech_ia2_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from mech_ia2_5th_schedule where mech_ia2_5th_subjects=?",(self.var_serach_mech_ia2_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_mech_ia2_5th_treeview.delete(*tree_mech_ia2_5th_treeview.get_children())
                                for row in rows:
                                    tree_mech_ia2_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_mech_ia2_5th_subjects()
                    mech_ia2_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_mech_ia2_5th_subjects_entry,values=mech_ia2_5th_subjects_list).place(x=87,y=14)

                    mech_ia2_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_mech_ia2_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    mech_ia2_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia2_5th_time_entry).place(x=569,y=14)

                    mech_ia2_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia2_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_mech_ia2_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_mech_ia2_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_mech_ia2_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_mech_ia2_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_mech_ia2_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_mech_ia2_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_mech_ia2_5th_treeview=ttk.Treeview(tree_frame1,columns=('mech_ia2_5th_subjects','mech_ia2_5th_date','mech_ia2_5th_time','mech_ia2_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_mech_ia2_5th_treeview.xview)
                    scrolly.configure(command=tree_mech_ia2_5th_treeview.yview)

                    tree_mech_ia2_5th_treeview.heading('mech_ia2_5th_subjects',text="Subjects")
                    tree_mech_ia2_5th_treeview.heading('mech_ia2_5th_date',text="Date")
                    tree_mech_ia2_5th_treeview.heading('mech_ia2_5th_time',text="Time")
                    tree_mech_ia2_5th_treeview.heading('mech_ia2_5th_code',text="Code")
                    tree_mech_ia2_5th_treeview.heading('semisters',text="Semister")
                    tree_mech_ia2_5th_treeview.heading('branch',text="Branch")

                    tree_mech_ia2_5th_treeview.column('mech_ia2_5th_subjects',width=200)
                    tree_mech_ia2_5th_treeview.column('mech_ia2_5th_date',width=150)
                    tree_mech_ia2_5th_treeview.column('mech_ia2_5th_time',width=150)
                    tree_mech_ia2_5th_treeview.column('mech_ia2_5th_code',width=150)
                    tree_mech_ia2_5th_treeview.column('semisters',width=150)
                    tree_mech_ia2_5th_treeview.column('branch',width=200)

                    tree_mech_ia2_5th_treeview['show']='headings'
                
                    tree_mech_ia2_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_mech_ia2_5th_ia_schedule()
                    tree_mech_ia2_5th_treeview.bind('<ButtonRelease-1>',get_mech_ia2_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Mechanical_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    mech_ia2_6th_subjects_list=[]
                    def fetch_mech_ia2_6th_subjects():
                        #all_mech_ia2_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select mech_6th_subjects from all_mech_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    mech_ia2_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_mech_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_mech_ia2_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_mech_ia2_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_mech_ia2_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_mech_ia2_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'mech_ia2_6th_subjects','mech_ia2_6th_date','mech_ia2_6th_time','mech_ia2_6th_code','semisters','branch'
                                        cur.execute('insert into mech_ia2_6th_schedule(mech_ia2_6th_subjects,mech_ia2_6th_date,mech_ia2_6th_time,mech_ia2_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_mech_ia2_6th_subjects_entry.get(),
                                            self.var_mech_ia2_6th_date_entry.get(),
                                            self.var_mech_ia2_6th_time_entry.get(),
                                            self.var_mech_ia2_6th_code.get(),
                                            self.var_mech_ia2_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_mech_ia2_6th_ia_schedule()
                                        con.close()
                    def fetch_mech_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_ia2_6th_schedule')
                            rows=cur.fetchall()
                            tree_mech_ia2_6th_treeview.delete(*tree_mech_ia2_6th_treeview.get_children())
                            for row in rows:
                                tree_mech_ia2_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_mech_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia2_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from mech_ia2_6th_schedule where mech_ia2_6th_subjects=?',(self.var_mech_ia2_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from mech_ia2_6th_schedule where mech_ia2_6th_subjects=? ',(self.var_mech_ia2_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_mech_ia2_6th_all()
                                    fetch_mech_ia2_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_mech_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia2_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update mech_ia2_6th_schedule set mech_ia2_6th_date=?,mech_ia2_6th_time=?,mech_ia2_6th_code=?,semisters=?,branch=?  where mech_ia2_6th_subjects=?',(
                                self.var_mech_ia2_6th_date_entry.get(),
                                self.var_mech_ia2_6th_time_entry.get(),
                                self.var_mech_ia2_6th_code.get(),
                                self.var_mech_ia2_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_mech_ia2_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_mech_ia2_6th_ia_schedule()
                                clear_mech_ia2_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_mech_ia2_6th_all():
                        fetch_mech_ia2_6th_ia_schedule()
                        self.var_mech_ia2_6th_subjects_entry.set("")
                        self.var_mech_ia2_6th_date_entry.set("")
                        self.var_mech_ia2_6th_time_entry.set("")
                        self.var_mech_ia2_6th_code.set("")
                        self.var_mech_ia2_6th_semister.set("")
                        self.var_serach_mech_ia2_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_mech_ia2_6th_ia_schedule(ev):
                        read=tree_mech_ia2_6th_treeview.focus()
                        content=tree_mech_ia2_6th_treeview.item(read)
                        row=content['values']

                        self.var_mech_ia2_6th_subjects_entry.set(row[1])
                        self.var_mech_ia2_6th_date_entry.set(row[2])
                        self.var_mech_ia2_6th_time_entry.set(row[3])
                        self.var_mech_ia2_6th_code.set(row[4])
                        self.var_mech_ia2_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_mech_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_mech_ia2_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from mech_ia2_6th_schedule where mech_ia2_6th_subjects=?",(self.var_serach_mech_ia2_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_mech_ia2_6th_treeview.delete(*tree_mech_ia2_6th_treeview.get_children())
                                for row in rows:
                                    tree_mech_ia2_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_mech_ia2_6th_subjects()
                    mech_ia2_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_mech_ia2_6th_subjects_entry,values=mech_ia2_6th_subjects_list).place(x=87,y=14)

                    mech_ia2_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_mech_ia2_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    mech_ia2_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia2_6th_time_entry).place(x=569,y=14)

                    mech_ia2_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia2_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_mech_ia2_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_mech_ia2_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_mech_ia2_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_mech_ia2_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_mech_ia2_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_mech_ia2_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_mech_ia2_6th_treeview=ttk.Treeview(tree_frame1,columns=('mech_ia2_6th_subjects','mech_ia2_6th_date','mech_ia2_6th_time','mech_ia2_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_mech_ia2_6th_treeview.xview)
                    scrolly.configure(command=tree_mech_ia2_6th_treeview.yview)

                    tree_mech_ia2_6th_treeview.heading('mech_ia2_6th_subjects',text="Subjects")
                    tree_mech_ia2_6th_treeview.heading('mech_ia2_6th_date',text="Date")
                    tree_mech_ia2_6th_treeview.heading('mech_ia2_6th_time',text="Time")
                    tree_mech_ia2_6th_treeview.heading('mech_ia2_6th_code',text="Code")
                    tree_mech_ia2_6th_treeview.heading('semisters',text="Semister")
                    tree_mech_ia2_6th_treeview.heading('branch',text="Branch")

                    tree_mech_ia2_6th_treeview.column('mech_ia2_6th_subjects',width=200)
                    tree_mech_ia2_6th_treeview.column('mech_ia2_6th_date',width=150)
                    tree_mech_ia2_6th_treeview.column('mech_ia2_6th_time',width=150)
                    tree_mech_ia2_6th_treeview.column('mech_ia2_6th_code',width=150)
                    tree_mech_ia2_6th_treeview.column('semisters',width=150)
                    tree_mech_ia2_6th_treeview.column('branch',width=200)

                    tree_mech_ia2_6th_treeview['show']='headings'
                
                    tree_mech_ia2_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_mech_ia2_6th_ia_schedule()
                    tree_mech_ia2_6th_treeview.bind('<ButtonRelease-1>',get_mech_ia2_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Mechanical_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    mech_ia2_7th_subjects_list=[]
                    def fetch_mech_ia2_7th_subjects():
                        #all_mech_ia2_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select mech_7th_subjects from all_mech_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    mech_ia2_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_mech_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_mech_ia2_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_mech_ia2_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_mech_ia2_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_mech_ia2_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'mech_ia2_7th_subjects','mech_ia2_7th_date','mech_ia2_7th_time','mech_ia2_7th_code','semisters','branch'
                                        cur.execute('insert into mech_ia2_7th_schedule(mech_ia2_7th_subjects,mech_ia2_7th_date,mech_ia2_7th_time,mech_ia2_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_mech_ia2_7th_subjects_entry.get(),
                                            self.var_mech_ia2_7th_date_entry.get(),
                                            self.var_mech_ia2_7th_time_entry.get(),
                                            self.var_mech_ia2_7th_code.get(),
                                            self.var_mech_ia2_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_mech_ia2_7th_ia_schedule()
                                        con.close()
                    def fetch_mech_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_ia2_7th_schedule')
                            rows=cur.fetchall()
                            tree_mech_ia2_7th_treeview.delete(*tree_mech_ia2_7th_treeview.get_children())
                            for row in rows:
                                tree_mech_ia2_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_mech_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia2_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from mech_ia2_7th_schedule where mech_ia2_7th_subjects=?',(self.var_mech_ia2_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from mech_ia2_7th_schedule where mech_ia2_7th_subjects=? ',(self.var_mech_ia2_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_mech_ia2_7th_all()
                                    fetch_mech_ia2_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_mech_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia2_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update mech_ia2_7th_schedule set mech_ia2_7th_date=?,mech_ia2_7th_time=?,mech_ia2_7th_code=?,semisters=?,branch=?  where mech_ia2_7th_subjects=?',(
                                self.var_mech_ia2_7th_date_entry.get(),
                                self.var_mech_ia2_7th_time_entry.get(),
                                self.var_mech_ia2_7th_code.get(),
                                self.var_mech_ia2_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_mech_ia2_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_mech_ia2_7th_ia_schedule()
                                clear_mech_ia2_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_mech_ia2_7th_all():
                        fetch_mech_ia2_7th_ia_schedule()
                        self.var_mech_ia2_7th_subjects_entry.set("")
                        self.var_mech_ia2_7th_date_entry.set("")
                        self.var_mech_ia2_7th_time_entry.set("")
                        self.var_mech_ia2_7th_code.set("")
                        self.var_mech_ia2_7th_semister.set("")
                        self.var_serach_mech_ia2_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_mech_ia2_7th_ia_schedule(ev):
                        read=tree_mech_ia2_7th_treeview.focus()
                        content=tree_mech_ia2_7th_treeview.item(read)
                        row=content['values']

                        self.var_mech_ia2_7th_subjects_entry.set(row[1])
                        self.var_mech_ia2_7th_date_entry.set(row[2])
                        self.var_mech_ia2_7th_time_entry.set(row[3])
                        self.var_mech_ia2_7th_code.set(row[4])
                        self.var_mech_ia2_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_mech_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_mech_ia2_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from mech_ia2_7th_schedule where mech_ia2_7th_subjects=?",(self.var_serach_mech_ia2_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_mech_ia2_7th_treeview.delete(*tree_mech_ia2_7th_treeview.get_children())
                                for row in rows:
                                    tree_mech_ia2_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_mech_ia2_7th_subjects()
                    mech_ia2_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_mech_ia2_7th_subjects_entry,values=mech_ia2_7th_subjects_list).place(x=87,y=14)

                    mech_ia2_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_mech_ia2_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    mech_ia2_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia2_7th_time_entry).place(x=569,y=14)

                    mech_ia2_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia2_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_mech_ia2_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_mech_ia2_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_mech_ia2_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_mech_ia2_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_mech_ia2_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_mech_ia2_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_mech_ia2_7th_treeview=ttk.Treeview(tree_frame1,columns=('mech_ia2_7th_subjects','mech_ia2_7th_date','mech_ia2_7th_time','mech_ia2_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_mech_ia2_7th_treeview.xview)
                    scrolly.configure(command=tree_mech_ia2_7th_treeview.yview)

                    tree_mech_ia2_7th_treeview.heading('mech_ia2_7th_subjects',text="Subjects")
                    tree_mech_ia2_7th_treeview.heading('mech_ia2_7th_date',text="Date")
                    tree_mech_ia2_7th_treeview.heading('mech_ia2_7th_time',text="Time")
                    tree_mech_ia2_7th_treeview.heading('mech_ia2_7th_code',text="Code")
                    tree_mech_ia2_7th_treeview.heading('semisters',text="Semister")
                    tree_mech_ia2_7th_treeview.heading('branch',text="Branch")

                    tree_mech_ia2_7th_treeview.column('mech_ia2_7th_subjects',width=200)
                    tree_mech_ia2_7th_treeview.column('mech_ia2_7th_date',width=150)
                    tree_mech_ia2_7th_treeview.column('mech_ia2_7th_time',width=150)
                    tree_mech_ia2_7th_treeview.column('mech_ia2_7th_code',width=150)
                    tree_mech_ia2_7th_treeview.column('semisters',width=150)
                    tree_mech_ia2_7th_treeview.column('branch',width=200)

                    tree_mech_ia2_7th_treeview['show']='headings'
                
                    tree_mech_ia2_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_mech_ia2_7th_ia_schedule()
                    tree_mech_ia2_7th_treeview.bind('<ButtonRelease-1>',get_mech_ia2_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Mechanical_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    mech_ia2_8th_subjects_list=[]
                    def fetch_mech_ia2_8th_subjects():
                        #all_mech_ia2_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select mech_8th_subjects from all_mech_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    mech_ia2_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_mech_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_mech_ia2_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_mech_ia2_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_mech_ia2_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_mech_ia2_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'mech_ia2_8th_subjects','mech_ia2_8th_date','mech_ia2_8th_time','mech_ia2_8th_code','semisters','branch'
                                        cur.execute('insert into mech_ia2_8th_schedule(mech_ia2_8th_subjects,mech_ia2_8th_date,mech_ia2_8th_time,mech_ia2_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_mech_ia2_8th_subjects_entry.get(),
                                            self.var_mech_ia2_8th_date_entry.get(),
                                            self.var_mech_ia2_8th_time_entry.get(),
                                            self.var_mech_ia2_8th_code.get(),
                                            self.var_mech_ia2_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_mech_ia2_8th_ia_schedule()
                                        con.close()
                    def fetch_mech_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_ia2_8th_schedule')
                            rows=cur.fetchall()
                            tree_mech_ia2_8th_treeview.delete(*tree_mech_ia2_8th_treeview.get_children())
                            for row in rows:
                                tree_mech_ia2_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_mech_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia2_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from mech_ia2_8th_schedule where mech_ia2_8th_subjects=?',(self.var_mech_ia2_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from mech_ia2_8th_schedule where mech_ia2_8th_subjects=? ',(self.var_mech_ia2_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_mech_ia2_8th_all()
                                    fetch_mech_ia2_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_mech_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia2_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update mech_ia2_8th_schedule set mech_ia2_8th_date=?,mech_ia2_8th_time=?,mech_ia2_8th_code=?,semisters=?,branch=?  where mech_ia2_8th_subjects=?',(
                                self.var_mech_ia2_8th_date_entry.get(),
                                self.var_mech_ia2_8th_time_entry.get(),
                                self.var_mech_ia2_8th_code.get(),
                                self.var_mech_ia2_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_mech_ia2_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_mech_ia2_8th_ia_schedule()
                                clear_mech_ia2_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_mech_ia2_8th_all():
                        fetch_mech_ia2_8th_ia_schedule()
                        self.var_mech_ia2_8th_subjects_entry.set("")
                        self.var_mech_ia2_8th_date_entry.set("")
                        self.var_mech_ia2_8th_time_entry.set("")
                        self.var_mech_ia2_8th_code.set("")
                        self.var_mech_ia2_8th_semister.set("")
                        self.var_serach_mech_ia2_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_mech_ia2_8th_ia_schedule(ev):
                        read=tree_mech_ia2_8th_treeview.focus()
                        content=tree_mech_ia2_8th_treeview.item(read)
                        row=content['values']

                        self.var_mech_ia2_8th_subjects_entry.set(row[1])
                        self.var_mech_ia2_8th_date_entry.set(row[2])
                        self.var_mech_ia2_8th_time_entry.set(row[3])
                        self.var_mech_ia2_8th_code.set(row[4])
                        self.var_mech_ia2_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_mech_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_mech_ia2_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from mech_ia2_8th_schedule where mech_ia2_8th_subjects=?",(self.var_serach_mech_ia2_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_mech_ia2_8th_treeview.delete(*tree_mech_ia2_8th_treeview.get_children())
                                for row in rows:
                                    tree_mech_ia2_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_mech_ia2_8th_subjects()
                    mech_ia2_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_mech_ia2_8th_subjects_entry,values=mech_ia2_8th_subjects_list).place(x=87,y=14)

                    mech_ia2_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_mech_ia2_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    mech_ia2_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia2_8th_time_entry).place(x=569,y=14)

                    mech_ia2_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia2_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_mech_ia2_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_mech_ia2_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_mech_ia2_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_mech_ia2_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_mech_ia2_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_mech_ia2_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_mech_ia2_8th_treeview=ttk.Treeview(tree_frame1,columns=('mech_ia2_8th_subjects','mech_ia2_8th_date','mech_ia2_8th_time','mech_ia2_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_mech_ia2_8th_treeview.xview)
                    scrolly.configure(command=tree_mech_ia2_8th_treeview.yview)

                    tree_mech_ia2_8th_treeview.heading('mech_ia2_8th_subjects',text="Subjects")
                    tree_mech_ia2_8th_treeview.heading('mech_ia2_8th_date',text="Date")
                    tree_mech_ia2_8th_treeview.heading('mech_ia2_8th_time',text="Time")
                    tree_mech_ia2_8th_treeview.heading('mech_ia2_8th_code',text="Code")
                    tree_mech_ia2_8th_treeview.heading('semisters',text="Semister")
                    tree_mech_ia2_8th_treeview.heading('branch',text="Branch")

                    tree_mech_ia2_8th_treeview.column('mech_ia2_8th_subjects',width=200)
                    tree_mech_ia2_8th_treeview.column('mech_ia2_8th_date',width=150)
                    tree_mech_ia2_8th_treeview.column('mech_ia2_8th_time',width=150)
                    tree_mech_ia2_8th_treeview.column('mech_ia2_8th_code',width=150)
                    tree_mech_ia2_8th_treeview.column('semisters',width=150)
                    tree_mech_ia2_8th_treeview.column('branch',width=200)

                    tree_mech_ia2_8th_treeview['show']='headings'
                
                    tree_mech_ia2_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_mech_ia2_8th_ia_schedule()
                    tree_mech_ia2_8th_treeview.bind('<ButtonRelease-1>',get_mech_ia2_8th_ia_schedule)
        #########################################################################################################################################################################
        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Electrical_And_Electronic_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    eee_ia2_3rd_subjects_list=[]
                    def fetch_eee_ia2_3rd_subjects():
                        #all_eee_ia2_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select eee_3rd_subjects from all_eee_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    eee_ia2_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_eee_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_eee_ia2_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_eee_ia2_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_eee_ia2_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_eee_ia2_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'eee_ia2_3rd_subjects','eee_ia2_3rd_date','eee_ia2_3rd_time','eee_ia2_3rd_code','semisters','branch'
                                        cur.execute('insert into eee_ia2_3rd_schedule(eee_ia2_3rd_subjects,eee_ia2_3rd_date,eee_ia2_3rd_time,eee_ia2_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_eee_ia2_3rd_subjects_entry.get(),
                                            self.var_eee_ia2_3rd_date_entry.get(),
                                            self.var_eee_ia2_3rd_time_entry.get(),
                                            self.var_eee_ia2_3rd_code.get(),
                                            self.var_eee_ia2_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_eee_ia2_3rd_ia_schedule()
                                        con.close()
                    def fetch_eee_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_ia2_3rd_schedule')
                            rows=cur.fetchall()
                            tree_eee_ia2_3rd_treeview.delete(*tree_eee_ia2_3rd_treeview.get_children())
                            for row in rows:
                                tree_eee_ia2_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_eee_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia2_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from eee_ia2_3rd_schedule where eee_ia2_3rd_subjects=?',(self.var_eee_ia2_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from eee_ia2_3rd_schedule where eee_ia2_3rd_subjects=? ',(self.var_eee_ia2_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_eee_ia2_3rd_all()
                                    fetch_eee_ia2_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_eee_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia2_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update eee_ia2_3rd_schedule set eee_ia2_3rd_date=?,eee_ia2_3rd_time=?,eee_ia2_3rd_code=?,semisters=?,branch=?  where eee_ia2_3rd_subjects=?',(
                                self.var_eee_ia2_3rd_date_entry.get(),
                                self.var_eee_ia2_3rd_time_entry.get(),
                                self.var_eee_ia2_3rd_code.get(),
                                self.var_eee_ia2_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_eee_ia2_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_eee_ia2_3rd_ia_schedule()
                                clear_eee_ia2_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_eee_ia2_3rd_all():
                        fetch_eee_ia2_3rd_ia_schedule()
                        self.var_eee_ia2_3rd_subjects_entry.set("")
                        self.var_eee_ia2_3rd_date_entry.set("")
                        self.var_eee_ia2_3rd_time_entry.set("")
                        self.var_eee_ia2_3rd_code.set("")
                        self.var_eee_ia2_3rd_semister.set("")
                        self.var_serach_eee_ia2_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_eee_ia2_3rd_ia_schedule(ev):
                        read=tree_eee_ia2_3rd_treeview.focus()
                        content=tree_eee_ia2_3rd_treeview.item(read)
                        row=content['values']

                        self.var_eee_ia2_3rd_subjects_entry.set(row[1])
                        self.var_eee_ia2_3rd_date_entry.set(row[2])
                        self.var_eee_ia2_3rd_time_entry.set(row[3])
                        self.var_eee_ia2_3rd_code.set(row[4])
                        self.var_eee_ia2_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_eee_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_eee_ia2_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from eee_ia2_3rd_schedule where eee_ia2_3rd_subjects=?",(self.var_serach_eee_ia2_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_eee_ia2_3rd_treeview.delete(*tree_eee_ia2_3rd_treeview.get_children())
                                for row in rows:
                                    tree_eee_ia2_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_eee_ia2_3rd_subjects()
                    eee_ia2_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_eee_ia2_3rd_subjects_entry,values=eee_ia2_3rd_subjects_list).place(x=87,y=14)

                    eee_ia2_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_eee_ia2_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    eee_ia2_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia2_3rd_time_entry).place(x=569,y=14)

                    eee_ia2_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia2_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_eee_ia2_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_eee_ia2_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_eee_ia2_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_eee_ia2_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_eee_ia2_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_eee_ia2_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_eee_ia2_3rd_treeview=ttk.Treeview(tree_frame1,columns=('eee_ia2_3rd_subjects','eee_ia2_3rd_date','eee_ia2_3rd_time','eee_ia2_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_eee_ia2_3rd_treeview.xview)
                    scrolly.configure(command=tree_eee_ia2_3rd_treeview.yview)

                    tree_eee_ia2_3rd_treeview.heading('eee_ia2_3rd_subjects',text="Subjects")
                    tree_eee_ia2_3rd_treeview.heading('eee_ia2_3rd_date',text="Date")
                    tree_eee_ia2_3rd_treeview.heading('eee_ia2_3rd_time',text="Time")
                    tree_eee_ia2_3rd_treeview.heading('eee_ia2_3rd_code',text="Code")
                    tree_eee_ia2_3rd_treeview.heading('semisters',text="Semister")
                    tree_eee_ia2_3rd_treeview.heading('branch',text="Branch")

                    tree_eee_ia2_3rd_treeview.column('eee_ia2_3rd_subjects',width=200)
                    tree_eee_ia2_3rd_treeview.column('eee_ia2_3rd_date',width=150)
                    tree_eee_ia2_3rd_treeview.column('eee_ia2_3rd_time',width=150)
                    tree_eee_ia2_3rd_treeview.column('eee_ia2_3rd_code',width=150)
                    tree_eee_ia2_3rd_treeview.column('semisters',width=150)
                    tree_eee_ia2_3rd_treeview.column('branch',width=200)

                    tree_eee_ia2_3rd_treeview['show']='headings'
                
                    tree_eee_ia2_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_eee_ia2_3rd_ia_schedule()
                    tree_eee_ia2_3rd_treeview.bind('<ButtonRelease-1>',get_eee_ia2_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Electrical_And_Electronic_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    eee_ia2_4th_subjects_list=[]
                    def fetch_eee_ia2_4th_subjects():
                        #all_eee_ia2_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select eee_4th_subjects from all_eee_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    eee_ia2_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_eee_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_eee_ia2_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_eee_ia2_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_eee_ia2_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_eee_ia2_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'eee_ia2_4th_subjects','eee_ia2_4th_date','eee_ia2_4th_time','eee_ia2_4th_code','semisters','branch'
                                        cur.execute('insert into eee_ia2_4th_schedule(eee_ia2_4th_subjects,eee_ia2_4th_date,eee_ia2_4th_time,eee_ia2_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_eee_ia2_4th_subjects_entry.get(),
                                            self.var_eee_ia2_4th_date_entry.get(),
                                            self.var_eee_ia2_4th_time_entry.get(),
                                            self.var_eee_ia2_4th_code.get(),
                                            self.var_eee_ia2_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_eee_ia2_4th_ia_schedule()
                                        con.close()
                    def fetch_eee_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_ia2_4th_schedule')
                            rows=cur.fetchall()
                            tree_eee_ia2_4th_treeview.delete(*tree_eee_ia2_4th_treeview.get_children())
                            for row in rows:
                                tree_eee_ia2_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_eee_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia2_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from eee_ia2_4th_schedule where eee_ia2_4th_subjects=?',(self.var_eee_ia2_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from eee_ia2_4th_schedule where eee_ia2_4th_subjects=? ',(self.var_eee_ia2_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_eee_ia2_4th_all()
                                    fetch_eee_ia2_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_eee_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia2_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update eee_ia2_4th_schedule set eee_ia2_4th_date=?,eee_ia2_4th_time=?,eee_ia2_4th_code=?,semisters=?,branch=?  where eee_ia2_4th_subjects=?',(
                                self.var_eee_ia2_4th_date_entry.get(),
                                self.var_eee_ia2_4th_time_entry.get(),
                                self.var_eee_ia2_4th_code.get(),
                                self.var_eee_ia2_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_eee_ia2_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_eee_ia2_4th_ia_schedule()
                                clear_eee_ia2_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_eee_ia2_4th_all():
                        fetch_eee_ia2_4th_ia_schedule()
                        self.var_eee_ia2_4th_subjects_entry.set("")
                        self.var_eee_ia2_4th_date_entry.set("")
                        self.var_eee_ia2_4th_time_entry.set("")
                        self.var_eee_ia2_4th_code.set("")
                        self.var_eee_ia2_4th_semister.set("")
                        self.var_serach_eee_ia2_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_eee_ia2_4th_ia_schedule(ev):
                        read=tree_eee_ia2_4th_treeview.focus()
                        content=tree_eee_ia2_4th_treeview.item(read)
                        row=content['values']

                        self.var_eee_ia2_4th_subjects_entry.set(row[1])
                        self.var_eee_ia2_4th_date_entry.set(row[2])
                        self.var_eee_ia2_4th_time_entry.set(row[3])
                        self.var_eee_ia2_4th_code.set(row[4])
                        self.var_eee_ia2_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_eee_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_eee_ia2_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from eee_ia2_4th_schedule where eee_ia2_4th_subjects=?",(self.var_serach_eee_ia2_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_eee_ia2_4th_treeview.delete(*tree_eee_ia2_4th_treeview.get_children())
                                for row in rows:
                                    tree_eee_ia2_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_eee_ia2_4th_subjects()
                    eee_ia2_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_eee_ia2_4th_subjects_entry,values=eee_ia2_4th_subjects_list).place(x=87,y=14)

                    eee_ia2_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_eee_ia2_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    eee_ia2_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia2_4th_time_entry).place(x=569,y=14)

                    eee_ia2_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia2_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_eee_ia2_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_eee_ia2_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_eee_ia2_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_eee_ia2_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_eee_ia2_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_eee_ia2_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_eee_ia2_4th_treeview=ttk.Treeview(tree_frame1,columns=('eee_ia2_4th_subjects','eee_ia2_4th_date','eee_ia2_4th_time','eee_ia2_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_eee_ia2_4th_treeview.xview)
                    scrolly.configure(command=tree_eee_ia2_4th_treeview.yview)

                    tree_eee_ia2_4th_treeview.heading('eee_ia2_4th_subjects',text="Subjects")
                    tree_eee_ia2_4th_treeview.heading('eee_ia2_4th_date',text="Date")
                    tree_eee_ia2_4th_treeview.heading('eee_ia2_4th_time',text="Time")
                    tree_eee_ia2_4th_treeview.heading('eee_ia2_4th_code',text="Code")
                    tree_eee_ia2_4th_treeview.heading('semisters',text="Semister")
                    tree_eee_ia2_4th_treeview.heading('branch',text="Branch")

                    tree_eee_ia2_4th_treeview.column('eee_ia2_4th_subjects',width=200)
                    tree_eee_ia2_4th_treeview.column('eee_ia2_4th_date',width=150)
                    tree_eee_ia2_4th_treeview.column('eee_ia2_4th_time',width=150)
                    tree_eee_ia2_4th_treeview.column('eee_ia2_4th_code',width=150)
                    tree_eee_ia2_4th_treeview.column('semisters',width=150)
                    tree_eee_ia2_4th_treeview.column('branch',width=200)

                    tree_eee_ia2_4th_treeview['show']='headings'
                
                    tree_eee_ia2_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_eee_ia2_4th_ia_schedule()
                    tree_eee_ia2_4th_treeview.bind('<ButtonRelease-1>',get_eee_ia2_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Electrical_And_Electronic_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    eee_ia2_5th_subjects_list=[]
                    def fetch_eee_ia2_5th_subjects():
                        #all_eee_ia2_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select eee_5th_subjects from all_eee_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    eee_ia2_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_eee_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_eee_ia2_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_eee_ia2_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_eee_ia2_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_eee_ia2_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'eee_ia2_5th_subjects','eee_ia2_5th_date','eee_ia2_5th_time','eee_ia2_5th_code','semisters','branch'
                                        cur.execute('insert into eee_ia2_5th_schedule(eee_ia2_5th_subjects,eee_ia2_5th_date,eee_ia2_5th_time,eee_ia2_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_eee_ia2_5th_subjects_entry.get(),
                                            self.var_eee_ia2_5th_date_entry.get(),
                                            self.var_eee_ia2_5th_time_entry.get(),
                                            self.var_eee_ia2_5th_code.get(),
                                            self.var_eee_ia2_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_eee_ia2_5th_ia_schedule()
                                        con.close()
                    def fetch_eee_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_ia2_5th_schedule')
                            rows=cur.fetchall()
                            tree_eee_ia2_5th_treeview.delete(*tree_eee_ia2_5th_treeview.get_children())
                            for row in rows:
                                tree_eee_ia2_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_eee_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia2_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from eee_ia2_5th_schedule where eee_ia2_5th_subjects=?',(self.var_eee_ia2_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from eee_ia2_5th_schedule where eee_ia2_5th_subjects=? ',(self.var_eee_ia2_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_eee_ia2_5th_all()
                                    fetch_eee_ia2_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_eee_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia2_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update eee_ia2_5th_schedule set eee_ia2_5th_date=?,eee_ia2_5th_time=?,eee_ia2_5th_code=?,semisters=?,branch=?  where eee_ia2_5th_subjects=?',(
                                self.var_eee_ia2_5th_date_entry.get(),
                                self.var_eee_ia2_5th_time_entry.get(),
                                self.var_eee_ia2_5th_code.get(),
                                self.var_eee_ia2_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_eee_ia2_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_eee_ia2_5th_ia_schedule()
                                clear_eee_ia2_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_eee_ia2_5th_all():
                        fetch_eee_ia2_5th_ia_schedule()
                        self.var_eee_ia2_5th_subjects_entry.set("")
                        self.var_eee_ia2_5th_date_entry.set("")
                        self.var_eee_ia2_5th_time_entry.set("")
                        self.var_eee_ia2_5th_code.set("")
                        self.var_eee_ia2_5th_semister.set("")
                        self.var_serach_eee_ia2_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_eee_ia2_5th_ia_schedule(ev):
                        read=tree_eee_ia2_5th_treeview.focus()
                        content=tree_eee_ia2_5th_treeview.item(read)
                        row=content['values']

                        self.var_eee_ia2_5th_subjects_entry.set(row[1])
                        self.var_eee_ia2_5th_date_entry.set(row[2])
                        self.var_eee_ia2_5th_time_entry.set(row[3])
                        self.var_eee_ia2_5th_code.set(row[4])
                        self.var_eee_ia2_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_eee_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_eee_ia2_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from eee_ia2_5th_schedule where eee_ia2_5th_subjects=?",(self.var_serach_eee_ia2_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_eee_ia2_5th_treeview.delete(*tree_eee_ia2_5th_treeview.get_children())
                                for row in rows:
                                    tree_eee_ia2_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_eee_ia2_5th_subjects()
                    eee_ia2_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_eee_ia2_5th_subjects_entry,values=eee_ia2_5th_subjects_list).place(x=87,y=14)

                    eee_ia2_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_eee_ia2_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    eee_ia2_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia2_5th_time_entry).place(x=569,y=14)

                    eee_ia2_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia2_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_eee_ia2_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_eee_ia2_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_eee_ia2_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_eee_ia2_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_eee_ia2_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_eee_ia2_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_eee_ia2_5th_treeview=ttk.Treeview(tree_frame1,columns=('eee_ia2_5th_subjects','eee_ia2_5th_date','eee_ia2_5th_time','eee_ia2_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_eee_ia2_5th_treeview.xview)
                    scrolly.configure(command=tree_eee_ia2_5th_treeview.yview)

                    tree_eee_ia2_5th_treeview.heading('eee_ia2_5th_subjects',text="Subjects")
                    tree_eee_ia2_5th_treeview.heading('eee_ia2_5th_date',text="Date")
                    tree_eee_ia2_5th_treeview.heading('eee_ia2_5th_time',text="Time")
                    tree_eee_ia2_5th_treeview.heading('eee_ia2_5th_code',text="Code")
                    tree_eee_ia2_5th_treeview.heading('semisters',text="Semister")
                    tree_eee_ia2_5th_treeview.heading('branch',text="Branch")

                    tree_eee_ia2_5th_treeview.column('eee_ia2_5th_subjects',width=200)
                    tree_eee_ia2_5th_treeview.column('eee_ia2_5th_date',width=150)
                    tree_eee_ia2_5th_treeview.column('eee_ia2_5th_time',width=150)
                    tree_eee_ia2_5th_treeview.column('eee_ia2_5th_code',width=150)
                    tree_eee_ia2_5th_treeview.column('semisters',width=150)
                    tree_eee_ia2_5th_treeview.column('branch',width=200)

                    tree_eee_ia2_5th_treeview['show']='headings'
                
                    tree_eee_ia2_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_eee_ia2_5th_ia_schedule()
                    tree_eee_ia2_5th_treeview.bind('<ButtonRelease-1>',get_eee_ia2_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Electrical_And_Electronic_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    eee_ia2_6th_subjects_list=[]
                    def fetch_eee_ia2_6th_subjects():
                        #all_eee_ia2_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select eee_6th_subjects from all_eee_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    eee_ia2_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_eee_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_eee_ia2_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_eee_ia2_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_eee_ia2_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_eee_ia2_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'eee_ia2_6th_subjects','eee_ia2_6th_date','eee_ia2_6th_time','eee_ia2_6th_code','semisters','branch'
                                        cur.execute('insert into eee_ia2_6th_schedule(eee_ia2_6th_subjects,eee_ia2_6th_date,eee_ia2_6th_time,eee_ia2_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_eee_ia2_6th_subjects_entry.get(),
                                            self.var_eee_ia2_6th_date_entry.get(),
                                            self.var_eee_ia2_6th_time_entry.get(),
                                            self.var_eee_ia2_6th_code.get(),
                                            self.var_eee_ia2_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_eee_ia2_6th_ia_schedule()
                                        con.close()
                    def fetch_eee_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_ia2_6th_schedule')
                            rows=cur.fetchall()
                            tree_eee_ia2_6th_treeview.delete(*tree_eee_ia2_6th_treeview.get_children())
                            for row in rows:
                                tree_eee_ia2_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_eee_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia2_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from eee_ia2_6th_schedule where eee_ia2_6th_subjects=?',(self.var_eee_ia2_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from eee_ia2_6th_schedule where eee_ia2_6th_subjects=? ',(self.var_eee_ia2_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_eee_ia2_6th_all()
                                    fetch_eee_ia2_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_eee_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia2_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update eee_ia2_6th_schedule set eee_ia2_6th_date=?,eee_ia2_6th_time=?,eee_ia2_6th_code=?,semisters=?,branch=?  where eee_ia2_6th_subjects=?',(
                                self.var_eee_ia2_6th_date_entry.get(),
                                self.var_eee_ia2_6th_time_entry.get(),
                                self.var_eee_ia2_6th_code.get(),
                                self.var_eee_ia2_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_eee_ia2_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_eee_ia2_6th_ia_schedule()
                                clear_eee_ia2_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_eee_ia2_6th_all():
                        fetch_eee_ia2_6th_ia_schedule()
                        self.var_eee_ia2_6th_subjects_entry.set("")
                        self.var_eee_ia2_6th_date_entry.set("")
                        self.var_eee_ia2_6th_time_entry.set("")
                        self.var_eee_ia2_6th_code.set("")
                        self.var_eee_ia2_6th_semister.set("")
                        self.var_serach_eee_ia2_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_eee_ia2_6th_ia_schedule(ev):
                        read=tree_eee_ia2_6th_treeview.focus()
                        content=tree_eee_ia2_6th_treeview.item(read)
                        row=content['values']

                        self.var_eee_ia2_6th_subjects_entry.set(row[1])
                        self.var_eee_ia2_6th_date_entry.set(row[2])
                        self.var_eee_ia2_6th_time_entry.set(row[3])
                        self.var_eee_ia2_6th_code.set(row[4])
                        self.var_eee_ia2_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_eee_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_eee_ia2_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from eee_ia2_6th_schedule where eee_ia2_6th_subjects=?",(self.var_serach_eee_ia2_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_eee_ia2_6th_treeview.delete(*tree_eee_ia2_6th_treeview.get_children())
                                for row in rows:
                                    tree_eee_ia2_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_eee_ia2_6th_subjects()
                    eee_ia2_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_eee_ia2_6th_subjects_entry,values=eee_ia2_6th_subjects_list).place(x=87,y=14)

                    eee_ia2_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_eee_ia2_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    eee_ia2_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia2_6th_time_entry).place(x=569,y=14)

                    eee_ia2_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia2_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_eee_ia2_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_eee_ia2_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_eee_ia2_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_eee_ia2_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_eee_ia2_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_eee_ia2_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_eee_ia2_6th_treeview=ttk.Treeview(tree_frame1,columns=('eee_ia2_6th_subjects','eee_ia2_6th_date','eee_ia2_6th_time','eee_ia2_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_eee_ia2_6th_treeview.xview)
                    scrolly.configure(command=tree_eee_ia2_6th_treeview.yview)

                    tree_eee_ia2_6th_treeview.heading('eee_ia2_6th_subjects',text="Subjects")
                    tree_eee_ia2_6th_treeview.heading('eee_ia2_6th_date',text="Date")
                    tree_eee_ia2_6th_treeview.heading('eee_ia2_6th_time',text="Time")
                    tree_eee_ia2_6th_treeview.heading('eee_ia2_6th_code',text="Code")
                    tree_eee_ia2_6th_treeview.heading('semisters',text="Semister")
                    tree_eee_ia2_6th_treeview.heading('branch',text="Branch")

                    tree_eee_ia2_6th_treeview.column('eee_ia2_6th_subjects',width=200)
                    tree_eee_ia2_6th_treeview.column('eee_ia2_6th_date',width=150)
                    tree_eee_ia2_6th_treeview.column('eee_ia2_6th_time',width=150)
                    tree_eee_ia2_6th_treeview.column('eee_ia2_6th_code',width=150)
                    tree_eee_ia2_6th_treeview.column('semisters',width=150)
                    tree_eee_ia2_6th_treeview.column('branch',width=200)

                    tree_eee_ia2_6th_treeview['show']='headings'
                
                    tree_eee_ia2_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_eee_ia2_6th_ia_schedule()
                    tree_eee_ia2_6th_treeview.bind('<ButtonRelease-1>',get_eee_ia2_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Electrical_And_Electronic_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    eee_ia2_7th_subjects_list=[]
                    def fetch_eee_ia2_7th_subjects():
                        #all_eee_ia2_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select eee_7th_subjects from all_eee_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    eee_ia2_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_eee_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_eee_ia2_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_eee_ia2_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_eee_ia2_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_eee_ia2_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'eee_ia2_7th_subjects','eee_ia2_7th_date','eee_ia2_7th_time','eee_ia2_7th_code','semisters','branch'
                                        cur.execute('insert into eee_ia2_7th_schedule(eee_ia2_7th_subjects,eee_ia2_7th_date,eee_ia2_7th_time,eee_ia2_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_eee_ia2_7th_subjects_entry.get(),
                                            self.var_eee_ia2_7th_date_entry.get(),
                                            self.var_eee_ia2_7th_time_entry.get(),
                                            self.var_eee_ia2_7th_code.get(),
                                            self.var_eee_ia2_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_eee_ia2_7th_ia_schedule()
                                        con.close()
                    def fetch_eee_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_ia2_7th_schedule')
                            rows=cur.fetchall()
                            tree_eee_ia2_7th_treeview.delete(*tree_eee_ia2_7th_treeview.get_children())
                            for row in rows:
                                tree_eee_ia2_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_eee_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia2_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from eee_ia2_7th_schedule where eee_ia2_7th_subjects=?',(self.var_eee_ia2_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from eee_ia2_7th_schedule where eee_ia2_7th_subjects=? ',(self.var_eee_ia2_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_eee_ia2_7th_all()
                                    fetch_eee_ia2_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_eee_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia2_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update eee_ia2_7th_schedule set eee_ia2_7th_date=?,eee_ia2_7th_time=?,eee_ia2_7th_code=?,semisters=?,branch=?  where eee_ia2_7th_subjects=?',(
                                self.var_eee_ia2_7th_date_entry.get(),
                                self.var_eee_ia2_7th_time_entry.get(),
                                self.var_eee_ia2_7th_code.get(),
                                self.var_eee_ia2_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_eee_ia2_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_eee_ia2_7th_ia_schedule()
                                clear_eee_ia2_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_eee_ia2_7th_all():
                        fetch_eee_ia2_7th_ia_schedule()
                        self.var_eee_ia2_7th_subjects_entry.set("")
                        self.var_eee_ia2_7th_date_entry.set("")
                        self.var_eee_ia2_7th_time_entry.set("")
                        self.var_eee_ia2_7th_code.set("")
                        self.var_eee_ia2_7th_semister.set("")
                        self.var_serach_eee_ia2_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_eee_ia2_7th_ia_schedule(ev):
                        read=tree_eee_ia2_7th_treeview.focus()
                        content=tree_eee_ia2_7th_treeview.item(read)
                        row=content['values']

                        self.var_eee_ia2_7th_subjects_entry.set(row[1])
                        self.var_eee_ia2_7th_date_entry.set(row[2])
                        self.var_eee_ia2_7th_time_entry.set(row[3])
                        self.var_eee_ia2_7th_code.set(row[4])
                        self.var_eee_ia2_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_eee_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_eee_ia2_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from eee_ia2_7th_schedule where eee_ia2_7th_subjects=?",(self.var_serach_eee_ia2_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_eee_ia2_7th_treeview.delete(*tree_eee_ia2_7th_treeview.get_children())
                                for row in rows:
                                    tree_eee_ia2_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_eee_ia2_7th_subjects()
                    eee_ia2_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_eee_ia2_7th_subjects_entry,values=eee_ia2_7th_subjects_list).place(x=87,y=14)

                    eee_ia2_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_eee_ia2_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    eee_ia2_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia2_7th_time_entry).place(x=569,y=14)

                    eee_ia2_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia2_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_eee_ia2_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_eee_ia2_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_eee_ia2_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_eee_ia2_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_eee_ia2_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_eee_ia2_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_eee_ia2_7th_treeview=ttk.Treeview(tree_frame1,columns=('eee_ia2_7th_subjects','eee_ia2_7th_date','eee_ia2_7th_time','eee_ia2_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_eee_ia2_7th_treeview.xview)
                    scrolly.configure(command=tree_eee_ia2_7th_treeview.yview)

                    tree_eee_ia2_7th_treeview.heading('eee_ia2_7th_subjects',text="Subjects")
                    tree_eee_ia2_7th_treeview.heading('eee_ia2_7th_date',text="Date")
                    tree_eee_ia2_7th_treeview.heading('eee_ia2_7th_time',text="Time")
                    tree_eee_ia2_7th_treeview.heading('eee_ia2_7th_code',text="Code")
                    tree_eee_ia2_7th_treeview.heading('semisters',text="Semister")
                    tree_eee_ia2_7th_treeview.heading('branch',text="Branch")

                    tree_eee_ia2_7th_treeview.column('eee_ia2_7th_subjects',width=200)
                    tree_eee_ia2_7th_treeview.column('eee_ia2_7th_date',width=150)
                    tree_eee_ia2_7th_treeview.column('eee_ia2_7th_time',width=150)
                    tree_eee_ia2_7th_treeview.column('eee_ia2_7th_code',width=150)
                    tree_eee_ia2_7th_treeview.column('semisters',width=150)
                    tree_eee_ia2_7th_treeview.column('branch',width=200)

                    tree_eee_ia2_7th_treeview['show']='headings'
                
                    tree_eee_ia2_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_eee_ia2_7th_ia_schedule()
                    tree_eee_ia2_7th_treeview.bind('<ButtonRelease-1>',get_eee_ia2_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Electrical_And_Electronic_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    eee_ia2_8th_subjects_list=[]
                    def fetch_eee_ia2_8th_subjects():
                        #all_eee_ia2_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select eee_8th_subjects from all_eee_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    eee_ia2_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_eee_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_eee_ia2_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_eee_ia2_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_eee_ia2_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_eee_ia2_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'eee_ia2_8th_subjects','eee_ia2_8th_date','eee_ia2_8th_time','eee_ia2_8th_code','semisters','branch'
                                        cur.execute('insert into eee_ia2_8th_schedule(eee_ia2_8th_subjects,eee_ia2_8th_date,eee_ia2_8th_time,eee_ia2_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_eee_ia2_8th_subjects_entry.get(),
                                            self.var_eee_ia2_8th_date_entry.get(),
                                            self.var_eee_ia2_8th_time_entry.get(),
                                            self.var_eee_ia2_8th_code.get(),
                                            self.var_eee_ia2_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_eee_ia2_8th_ia_schedule()
                                        con.close()
                    def fetch_eee_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_ia2_8th_schedule')
                            rows=cur.fetchall()
                            tree_eee_ia2_8th_treeview.delete(*tree_eee_ia2_8th_treeview.get_children())
                            for row in rows:
                                tree_eee_ia2_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_eee_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia2_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from eee_ia2_8th_schedule where eee_ia2_8th_subjects=?',(self.var_eee_ia2_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from eee_ia2_8th_schedule where eee_ia2_8th_subjects=? ',(self.var_eee_ia2_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_eee_ia2_8th_all()
                                    fetch_eee_ia2_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_eee_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia2_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update eee_ia2_8th_schedule set eee_ia2_8th_date=?,eee_ia2_8th_time=?,eee_ia2_8th_code=?,semisters=?,branch=?  where eee_ia2_8th_subjects=?',(
                                self.var_eee_ia2_8th_date_entry.get(),
                                self.var_eee_ia2_8th_time_entry.get(),
                                self.var_eee_ia2_8th_code.get(),
                                self.var_eee_ia2_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_eee_ia2_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_eee_ia2_8th_ia_schedule()
                                clear_eee_ia2_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_eee_ia2_8th_all():
                        fetch_eee_ia2_8th_ia_schedule()
                        self.var_eee_ia2_8th_subjects_entry.set("")
                        self.var_eee_ia2_8th_date_entry.set("")
                        self.var_eee_ia2_8th_time_entry.set("")
                        self.var_eee_ia2_8th_code.set("")
                        self.var_eee_ia2_8th_semister.set("")
                        self.var_serach_eee_ia2_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_eee_ia2_8th_ia_schedule(ev):
                        read=tree_eee_ia2_8th_treeview.focus()
                        content=tree_eee_ia2_8th_treeview.item(read)
                        row=content['values']

                        self.var_eee_ia2_8th_subjects_entry.set(row[1])
                        self.var_eee_ia2_8th_date_entry.set(row[2])
                        self.var_eee_ia2_8th_time_entry.set(row[3])
                        self.var_eee_ia2_8th_code.set(row[4])
                        self.var_eee_ia2_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_eee_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_eee_ia2_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from eee_ia2_8th_schedule where eee_ia2_8th_subjects=?",(self.var_serach_eee_ia2_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_eee_ia2_8th_treeview.delete(*tree_eee_ia2_8th_treeview.get_children())
                                for row in rows:
                                    tree_eee_ia2_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_eee_ia2_8th_subjects()
                    eee_ia2_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_eee_ia2_8th_subjects_entry,values=eee_ia2_8th_subjects_list).place(x=87,y=14)

                    eee_ia2_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_eee_ia2_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    eee_ia2_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia2_8th_time_entry).place(x=569,y=14)

                    eee_ia2_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia2_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_eee_ia2_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_eee_ia2_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_eee_ia2_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_eee_ia2_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_eee_ia2_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_eee_ia2_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_eee_ia2_8th_treeview=ttk.Treeview(tree_frame1,columns=('eee_ia2_8th_subjects','eee_ia2_8th_date','eee_ia2_8th_time','eee_ia2_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_eee_ia2_8th_treeview.xview)
                    scrolly.configure(command=tree_eee_ia2_8th_treeview.yview)

                    tree_eee_ia2_8th_treeview.heading('eee_ia2_8th_subjects',text="Subjects")
                    tree_eee_ia2_8th_treeview.heading('eee_ia2_8th_date',text="Date")
                    tree_eee_ia2_8th_treeview.heading('eee_ia2_8th_time',text="Time")
                    tree_eee_ia2_8th_treeview.heading('eee_ia2_8th_code',text="Code")
                    tree_eee_ia2_8th_treeview.heading('semisters',text="Semister")
                    tree_eee_ia2_8th_treeview.heading('branch',text="Branch")

                    tree_eee_ia2_8th_treeview.column('eee_ia2_8th_subjects',width=200)
                    tree_eee_ia2_8th_treeview.column('eee_ia2_8th_date',width=150)
                    tree_eee_ia2_8th_treeview.column('eee_ia2_8th_time',width=150)
                    tree_eee_ia2_8th_treeview.column('eee_ia2_8th_code',width=150)
                    tree_eee_ia2_8th_treeview.column('semisters',width=150)
                    tree_eee_ia2_8th_treeview.column('branch',width=200)

                    tree_eee_ia2_8th_treeview['show']='headings'
                
                    tree_eee_ia2_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_eee_ia2_8th_ia_schedule()
                    tree_eee_ia2_8th_treeview.bind('<ButtonRelease-1>',get_eee_ia2_8th_ia_schedule)
        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Communication_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    ece_ia2_3rd_subjects_list=[]
                    def fetch_ece_ia2_3rd_subjects():
                        #all_ece_ia2_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ece_3rd_subjects from all_ece_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ece_ia2_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ece_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ece_ia2_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ece_ia2_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ece_ia2_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ece_ia2_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ece_ia2_3rd_subjects','ece_ia2_3rd_date','ece_ia2_3rd_time','ece_ia2_3rd_code','semisters','branch'
                                        cur.execute('insert into ece_ia2_3rd_schedule(ece_ia2_3rd_subjects,ece_ia2_3rd_date,ece_ia2_3rd_time,ece_ia2_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ece_ia2_3rd_subjects_entry.get(),
                                            self.var_ece_ia2_3rd_date_entry.get(),
                                            self.var_ece_ia2_3rd_time_entry.get(),
                                            self.var_ece_ia2_3rd_code.get(),
                                            self.var_ece_ia2_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ece_ia2_3rd_ia_schedule()
                                        con.close()
                    def fetch_ece_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_ia2_3rd_schedule')
                            rows=cur.fetchall()
                            tree_ece_ia2_3rd_treeview.delete(*tree_ece_ia2_3rd_treeview.get_children())
                            for row in rows:
                                tree_ece_ia2_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ece_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia2_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ece_ia2_3rd_schedule where ece_ia2_3rd_subjects=?',(self.var_ece_ia2_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ece_ia2_3rd_schedule where ece_ia2_3rd_subjects=? ',(self.var_ece_ia2_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ece_ia2_3rd_all()
                                    fetch_ece_ia2_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ece_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia2_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ece_ia2_3rd_schedule set ece_ia2_3rd_date=?,ece_ia2_3rd_time=?,ece_ia2_3rd_code=?,semisters=?,branch=?  where ece_ia2_3rd_subjects=?',(
                                self.var_ece_ia2_3rd_date_entry.get(),
                                self.var_ece_ia2_3rd_time_entry.get(),
                                self.var_ece_ia2_3rd_code.get(),
                                self.var_ece_ia2_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ece_ia2_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ece_ia2_3rd_ia_schedule()
                                clear_ece_ia2_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ece_ia2_3rd_all():
                        fetch_ece_ia2_3rd_ia_schedule()
                        self.var_ece_ia2_3rd_subjects_entry.set("")
                        self.var_ece_ia2_3rd_date_entry.set("")
                        self.var_ece_ia2_3rd_time_entry.set("")
                        self.var_ece_ia2_3rd_code.set("")
                        self.var_ece_ia2_3rd_semister.set("")
                        self.var_serach_ece_ia2_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ece_ia2_3rd_ia_schedule(ev):
                        read=tree_ece_ia2_3rd_treeview.focus()
                        content=tree_ece_ia2_3rd_treeview.item(read)
                        row=content['values']

                        self.var_ece_ia2_3rd_subjects_entry.set(row[1])
                        self.var_ece_ia2_3rd_date_entry.set(row[2])
                        self.var_ece_ia2_3rd_time_entry.set(row[3])
                        self.var_ece_ia2_3rd_code.set(row[4])
                        self.var_ece_ia2_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ece_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ece_ia2_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ece_ia2_3rd_schedule where ece_ia2_3rd_subjects=?",(self.var_serach_ece_ia2_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ece_ia2_3rd_treeview.delete(*tree_ece_ia2_3rd_treeview.get_children())
                                for row in rows:
                                    tree_ece_ia2_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ece_ia2_3rd_subjects()
                    ece_ia2_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ece_ia2_3rd_subjects_entry,values=ece_ia2_3rd_subjects_list).place(x=87,y=14)

                    ece_ia2_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ece_ia2_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ece_ia2_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia2_3rd_time_entry).place(x=569,y=14)

                    ece_ia2_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia2_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ece_ia2_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ece_ia2_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ece_ia2_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ece_ia2_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ece_ia2_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ece_ia2_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ece_ia2_3rd_treeview=ttk.Treeview(tree_frame1,columns=('ece_ia2_3rd_subjects','ece_ia2_3rd_date','ece_ia2_3rd_time','ece_ia2_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ece_ia2_3rd_treeview.xview)
                    scrolly.configure(command=tree_ece_ia2_3rd_treeview.yview)

                    tree_ece_ia2_3rd_treeview.heading('ece_ia2_3rd_subjects',text="Subjects")
                    tree_ece_ia2_3rd_treeview.heading('ece_ia2_3rd_date',text="Date")
                    tree_ece_ia2_3rd_treeview.heading('ece_ia2_3rd_time',text="Time")
                    tree_ece_ia2_3rd_treeview.heading('ece_ia2_3rd_code',text="Code")
                    tree_ece_ia2_3rd_treeview.heading('semisters',text="Semister")
                    tree_ece_ia2_3rd_treeview.heading('branch',text="Branch")

                    tree_ece_ia2_3rd_treeview.column('ece_ia2_3rd_subjects',width=200)
                    tree_ece_ia2_3rd_treeview.column('ece_ia2_3rd_date',width=150)
                    tree_ece_ia2_3rd_treeview.column('ece_ia2_3rd_time',width=150)
                    tree_ece_ia2_3rd_treeview.column('ece_ia2_3rd_code',width=150)
                    tree_ece_ia2_3rd_treeview.column('semisters',width=150)
                    tree_ece_ia2_3rd_treeview.column('branch',width=200)

                    tree_ece_ia2_3rd_treeview['show']='headings'
                
                    tree_ece_ia2_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_ece_ia2_3rd_ia_schedule()
                    tree_ece_ia2_3rd_treeview.bind('<ButtonRelease-1>',get_ece_ia2_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Communication_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    ece_ia2_4th_subjects_list=[]
                    def fetch_ece_ia2_4th_subjects():
                        #all_ece_ia2_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ece_4th_subjects from all_ece_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ece_ia2_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ece_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ece_ia2_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ece_ia2_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ece_ia2_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ece_ia2_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ece_ia2_4th_subjects','ece_ia2_4th_date','ece_ia2_4th_time','ece_ia2_4th_code','semisters','branch'
                                        cur.execute('insert into ece_ia2_4th_schedule(ece_ia2_4th_subjects,ece_ia2_4th_date,ece_ia2_4th_time,ece_ia2_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ece_ia2_4th_subjects_entry.get(),
                                            self.var_ece_ia2_4th_date_entry.get(),
                                            self.var_ece_ia2_4th_time_entry.get(),
                                            self.var_ece_ia2_4th_code.get(),
                                            self.var_ece_ia2_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ece_ia2_4th_ia_schedule()
                                        con.close()
                    def fetch_ece_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_ia2_4th_schedule')
                            rows=cur.fetchall()
                            tree_ece_ia2_4th_treeview.delete(*tree_ece_ia2_4th_treeview.get_children())
                            for row in rows:
                                tree_ece_ia2_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ece_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia2_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ece_ia2_4th_schedule where ece_ia2_4th_subjects=?',(self.var_ece_ia2_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ece_ia2_4th_schedule where ece_ia2_4th_subjects=? ',(self.var_ece_ia2_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ece_ia2_4th_all()
                                    fetch_ece_ia2_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ece_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia2_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ece_ia2_4th_schedule set ece_ia2_4th_date=?,ece_ia2_4th_time=?,ece_ia2_4th_code=?,semisters=?,branch=?  where ece_ia2_4th_subjects=?',(
                                self.var_ece_ia2_4th_date_entry.get(),
                                self.var_ece_ia2_4th_time_entry.get(),
                                self.var_ece_ia2_4th_code.get(),
                                self.var_ece_ia2_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ece_ia2_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ece_ia2_4th_ia_schedule()
                                clear_ece_ia2_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ece_ia2_4th_all():
                        fetch_ece_ia2_4th_ia_schedule()
                        self.var_ece_ia2_4th_subjects_entry.set("")
                        self.var_ece_ia2_4th_date_entry.set("")
                        self.var_ece_ia2_4th_time_entry.set("")
                        self.var_ece_ia2_4th_code.set("")
                        self.var_ece_ia2_4th_semister.set("")
                        self.var_serach_ece_ia2_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ece_ia2_4th_ia_schedule(ev):
                        read=tree_ece_ia2_4th_treeview.focus()
                        content=tree_ece_ia2_4th_treeview.item(read)
                        row=content['values']

                        self.var_ece_ia2_4th_subjects_entry.set(row[1])
                        self.var_ece_ia2_4th_date_entry.set(row[2])
                        self.var_ece_ia2_4th_time_entry.set(row[3])
                        self.var_ece_ia2_4th_code.set(row[4])
                        self.var_ece_ia2_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ece_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ece_ia2_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ece_ia2_4th_schedule where ece_ia2_4th_subjects=?",(self.var_serach_ece_ia2_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ece_ia2_4th_treeview.delete(*tree_ece_ia2_4th_treeview.get_children())
                                for row in rows:
                                    tree_ece_ia2_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ece_ia2_4th_subjects()
                    ece_ia2_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ece_ia2_4th_subjects_entry,values=ece_ia2_4th_subjects_list).place(x=87,y=14)

                    ece_ia2_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ece_ia2_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ece_ia2_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia2_4th_time_entry).place(x=569,y=14)

                    ece_ia2_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia2_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ece_ia2_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ece_ia2_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ece_ia2_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ece_ia2_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ece_ia2_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ece_ia2_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ece_ia2_4th_treeview=ttk.Treeview(tree_frame1,columns=('ece_ia2_4th_subjects','ece_ia2_4th_date','ece_ia2_4th_time','ece_ia2_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ece_ia2_4th_treeview.xview)
                    scrolly.configure(command=tree_ece_ia2_4th_treeview.yview)

                    tree_ece_ia2_4th_treeview.heading('ece_ia2_4th_subjects',text="Subjects")
                    tree_ece_ia2_4th_treeview.heading('ece_ia2_4th_date',text="Date")
                    tree_ece_ia2_4th_treeview.heading('ece_ia2_4th_time',text="Time")
                    tree_ece_ia2_4th_treeview.heading('ece_ia2_4th_code',text="Code")
                    tree_ece_ia2_4th_treeview.heading('semisters',text="Semister")
                    tree_ece_ia2_4th_treeview.heading('branch',text="Branch")

                    tree_ece_ia2_4th_treeview.column('ece_ia2_4th_subjects',width=200)
                    tree_ece_ia2_4th_treeview.column('ece_ia2_4th_date',width=150)
                    tree_ece_ia2_4th_treeview.column('ece_ia2_4th_time',width=150)
                    tree_ece_ia2_4th_treeview.column('ece_ia2_4th_code',width=150)
                    tree_ece_ia2_4th_treeview.column('semisters',width=150)
                    tree_ece_ia2_4th_treeview.column('branch',width=200)

                    tree_ece_ia2_4th_treeview['show']='headings'
                
                    tree_ece_ia2_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ece_ia2_4th_ia_schedule()
                    tree_ece_ia2_4th_treeview.bind('<ButtonRelease-1>',get_ece_ia2_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Communication_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    ece_ia2_5th_subjects_list=[]
                    def fetch_ece_ia2_5th_subjects():
                        #all_ece_ia2_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ece_5th_subjects from all_ece_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ece_ia2_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ece_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ece_ia2_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ece_ia2_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ece_ia2_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ece_ia2_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ece_ia2_5th_subjects','ece_ia2_5th_date','ece_ia2_5th_time','ece_ia2_5th_code','semisters','branch'
                                        cur.execute('insert into ece_ia2_5th_schedule(ece_ia2_5th_subjects,ece_ia2_5th_date,ece_ia2_5th_time,ece_ia2_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ece_ia2_5th_subjects_entry.get(),
                                            self.var_ece_ia2_5th_date_entry.get(),
                                            self.var_ece_ia2_5th_time_entry.get(),
                                            self.var_ece_ia2_5th_code.get(),
                                            self.var_ece_ia2_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ece_ia2_5th_ia_schedule()
                                        con.close()
                    def fetch_ece_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_ia2_5th_schedule')
                            rows=cur.fetchall()
                            tree_ece_ia2_5th_treeview.delete(*tree_ece_ia2_5th_treeview.get_children())
                            for row in rows:
                                tree_ece_ia2_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ece_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia2_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ece_ia2_5th_schedule where ece_ia2_5th_subjects=?',(self.var_ece_ia2_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ece_ia2_5th_schedule where ece_ia2_5th_subjects=? ',(self.var_ece_ia2_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ece_ia2_5th_all()
                                    fetch_ece_ia2_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ece_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia2_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ece_ia2_5th_schedule set ece_ia2_5th_date=?,ece_ia2_5th_time=?,ece_ia2_5th_code=?,semisters=?,branch=?  where ece_ia2_5th_subjects=?',(
                                self.var_ece_ia2_5th_date_entry.get(),
                                self.var_ece_ia2_5th_time_entry.get(),
                                self.var_ece_ia2_5th_code.get(),
                                self.var_ece_ia2_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ece_ia2_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ece_ia2_5th_ia_schedule()
                                clear_ece_ia2_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ece_ia2_5th_all():
                        fetch_ece_ia2_5th_ia_schedule()
                        self.var_ece_ia2_5th_subjects_entry.set("")
                        self.var_ece_ia2_5th_date_entry.set("")
                        self.var_ece_ia2_5th_time_entry.set("")
                        self.var_ece_ia2_5th_code.set("")
                        self.var_ece_ia2_5th_semister.set("")
                        self.var_serach_ece_ia2_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ece_ia2_5th_ia_schedule(ev):
                        read=tree_ece_ia2_5th_treeview.focus()
                        content=tree_ece_ia2_5th_treeview.item(read)
                        row=content['values']

                        self.var_ece_ia2_5th_subjects_entry.set(row[1])
                        self.var_ece_ia2_5th_date_entry.set(row[2])
                        self.var_ece_ia2_5th_time_entry.set(row[3])
                        self.var_ece_ia2_5th_code.set(row[4])
                        self.var_ece_ia2_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ece_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ece_ia2_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ece_ia2_5th_schedule where ece_ia2_5th_subjects=?",(self.var_serach_ece_ia2_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ece_ia2_5th_treeview.delete(*tree_ece_ia2_5th_treeview.get_children())
                                for row in rows:
                                    tree_ece_ia2_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ece_ia2_5th_subjects()
                    ece_ia2_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ece_ia2_5th_subjects_entry,values=ece_ia2_5th_subjects_list).place(x=87,y=14)

                    ece_ia2_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ece_ia2_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ece_ia2_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia2_5th_time_entry).place(x=569,y=14)

                    ece_ia2_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia2_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ece_ia2_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ece_ia2_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ece_ia2_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ece_ia2_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ece_ia2_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ece_ia2_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ece_ia2_5th_treeview=ttk.Treeview(tree_frame1,columns=('ece_ia2_5th_subjects','ece_ia2_5th_date','ece_ia2_5th_time','ece_ia2_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ece_ia2_5th_treeview.xview)
                    scrolly.configure(command=tree_ece_ia2_5th_treeview.yview)

                    tree_ece_ia2_5th_treeview.heading('ece_ia2_5th_subjects',text="Subjects")
                    tree_ece_ia2_5th_treeview.heading('ece_ia2_5th_date',text="Date")
                    tree_ece_ia2_5th_treeview.heading('ece_ia2_5th_time',text="Time")
                    tree_ece_ia2_5th_treeview.heading('ece_ia2_5th_code',text="Code")
                    tree_ece_ia2_5th_treeview.heading('semisters',text="Semister")
                    tree_ece_ia2_5th_treeview.heading('branch',text="Branch")

                    tree_ece_ia2_5th_treeview.column('ece_ia2_5th_subjects',width=200)
                    tree_ece_ia2_5th_treeview.column('ece_ia2_5th_date',width=150)
                    tree_ece_ia2_5th_treeview.column('ece_ia2_5th_time',width=150)
                    tree_ece_ia2_5th_treeview.column('ece_ia2_5th_code',width=150)
                    tree_ece_ia2_5th_treeview.column('semisters',width=150)
                    tree_ece_ia2_5th_treeview.column('branch',width=200)

                    tree_ece_ia2_5th_treeview['show']='headings'
                
                    tree_ece_ia2_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ece_ia2_5th_ia_schedule()
                    tree_ece_ia2_5th_treeview.bind('<ButtonRelease-1>',get_ece_ia2_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Communication_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    ece_ia2_6th_subjects_list=[]
                    def fetch_ece_ia2_6th_subjects():
                        #all_ece_ia2_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ece_6th_subjects from all_ece_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ece_ia2_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ece_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ece_ia2_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ece_ia2_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ece_ia2_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ece_ia2_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ece_ia2_6th_subjects','ece_ia2_6th_date','ece_ia2_6th_time','ece_ia2_6th_code','semisters','branch'
                                        cur.execute('insert into ece_ia2_6th_schedule(ece_ia2_6th_subjects,ece_ia2_6th_date,ece_ia2_6th_time,ece_ia2_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ece_ia2_6th_subjects_entry.get(),
                                            self.var_ece_ia2_6th_date_entry.get(),
                                            self.var_ece_ia2_6th_time_entry.get(),
                                            self.var_ece_ia2_6th_code.get(),
                                            self.var_ece_ia2_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ece_ia2_6th_ia_schedule()
                                        con.close()
                    def fetch_ece_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_ia2_6th_schedule')
                            rows=cur.fetchall()
                            tree_ece_ia2_6th_treeview.delete(*tree_ece_ia2_6th_treeview.get_children())
                            for row in rows:
                                tree_ece_ia2_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ece_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia2_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ece_ia2_6th_schedule where ece_ia2_6th_subjects=?',(self.var_ece_ia2_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ece_ia2_6th_schedule where ece_ia2_6th_subjects=? ',(self.var_ece_ia2_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ece_ia2_6th_all()
                                    fetch_ece_ia2_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ece_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia2_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ece_ia2_6th_schedule set ece_ia2_6th_date=?,ece_ia2_6th_time=?,ece_ia2_6th_code=?,semisters=?,branch=?  where ece_ia2_6th_subjects=?',(
                                self.var_ece_ia2_6th_date_entry.get(),
                                self.var_ece_ia2_6th_time_entry.get(),
                                self.var_ece_ia2_6th_code.get(),
                                self.var_ece_ia2_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ece_ia2_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ece_ia2_6th_ia_schedule()
                                clear_ece_ia2_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ece_ia2_6th_all():
                        fetch_ece_ia2_6th_ia_schedule()
                        self.var_ece_ia2_6th_subjects_entry.set("")
                        self.var_ece_ia2_6th_date_entry.set("")
                        self.var_ece_ia2_6th_time_entry.set("")
                        self.var_ece_ia2_6th_code.set("")
                        self.var_ece_ia2_6th_semister.set("")
                        self.var_serach_ece_ia2_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ece_ia2_6th_ia_schedule(ev):
                        read=tree_ece_ia2_6th_treeview.focus()
                        content=tree_ece_ia2_6th_treeview.item(read)
                        row=content['values']

                        self.var_ece_ia2_6th_subjects_entry.set(row[1])
                        self.var_ece_ia2_6th_date_entry.set(row[2])
                        self.var_ece_ia2_6th_time_entry.set(row[3])
                        self.var_ece_ia2_6th_code.set(row[4])
                        self.var_ece_ia2_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ece_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ece_ia2_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ece_ia2_6th_schedule where ece_ia2_6th_subjects=?",(self.var_serach_ece_ia2_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ece_ia2_6th_treeview.delete(*tree_ece_ia2_6th_treeview.get_children())
                                for row in rows:
                                    tree_ece_ia2_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ece_ia2_6th_subjects()
                    ece_ia2_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ece_ia2_6th_subjects_entry,values=ece_ia2_6th_subjects_list).place(x=87,y=14)

                    ece_ia2_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ece_ia2_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ece_ia2_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia2_6th_time_entry).place(x=569,y=14)

                    ece_ia2_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia2_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ece_ia2_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ece_ia2_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ece_ia2_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ece_ia2_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ece_ia2_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ece_ia2_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ece_ia2_6th_treeview=ttk.Treeview(tree_frame1,columns=('ece_ia2_6th_subjects','ece_ia2_6th_date','ece_ia2_6th_time','ece_ia2_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ece_ia2_6th_treeview.xview)
                    scrolly.configure(command=tree_ece_ia2_6th_treeview.yview)

                    tree_ece_ia2_6th_treeview.heading('ece_ia2_6th_subjects',text="Subjects")
                    tree_ece_ia2_6th_treeview.heading('ece_ia2_6th_date',text="Date")
                    tree_ece_ia2_6th_treeview.heading('ece_ia2_6th_time',text="Time")
                    tree_ece_ia2_6th_treeview.heading('ece_ia2_6th_code',text="Code")
                    tree_ece_ia2_6th_treeview.heading('semisters',text="Semister")
                    tree_ece_ia2_6th_treeview.heading('branch',text="Branch")

                    tree_ece_ia2_6th_treeview.column('ece_ia2_6th_subjects',width=200)
                    tree_ece_ia2_6th_treeview.column('ece_ia2_6th_date',width=150)
                    tree_ece_ia2_6th_treeview.column('ece_ia2_6th_time',width=150)
                    tree_ece_ia2_6th_treeview.column('ece_ia2_6th_code',width=150)
                    tree_ece_ia2_6th_treeview.column('semisters',width=150)
                    tree_ece_ia2_6th_treeview.column('branch',width=200)

                    tree_ece_ia2_6th_treeview['show']='headings'
                
                    tree_ece_ia2_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ece_ia2_6th_ia_schedule()
                    tree_ece_ia2_6th_treeview.bind('<ButtonRelease-1>',get_ece_ia2_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Communication_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    ece_ia2_7th_subjects_list=[]
                    def fetch_ece_ia2_7th_subjects():
                        #all_ece_ia2_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ece_7th_subjects from all_ece_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ece_ia2_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ece_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ece_ia2_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ece_ia2_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ece_ia2_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ece_ia2_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ece_ia2_7th_subjects','ece_ia2_7th_date','ece_ia2_7th_time','ece_ia2_7th_code','semisters','branch'
                                        cur.execute('insert into ece_ia2_7th_schedule(ece_ia2_7th_subjects,ece_ia2_7th_date,ece_ia2_7th_time,ece_ia2_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ece_ia2_7th_subjects_entry.get(),
                                            self.var_ece_ia2_7th_date_entry.get(),
                                            self.var_ece_ia2_7th_time_entry.get(),
                                            self.var_ece_ia2_7th_code.get(),
                                            self.var_ece_ia2_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ece_ia2_7th_ia_schedule()
                                        con.close()
                    def fetch_ece_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_ia2_7th_schedule')
                            rows=cur.fetchall()
                            tree_ece_ia2_7th_treeview.delete(*tree_ece_ia2_7th_treeview.get_children())
                            for row in rows:
                                tree_ece_ia2_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ece_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia2_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ece_ia2_7th_schedule where ece_ia2_7th_subjects=?',(self.var_ece_ia2_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ece_ia2_7th_schedule where ece_ia2_7th_subjects=? ',(self.var_ece_ia2_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ece_ia2_7th_all()
                                    fetch_ece_ia2_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ece_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia2_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ece_ia2_7th_schedule set ece_ia2_7th_date=?,ece_ia2_7th_time=?,ece_ia2_7th_code=?,semisters=?,branch=?  where ece_ia2_7th_subjects=?',(
                                self.var_ece_ia2_7th_date_entry.get(),
                                self.var_ece_ia2_7th_time_entry.get(),
                                self.var_ece_ia2_7th_code.get(),
                                self.var_ece_ia2_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ece_ia2_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ece_ia2_7th_ia_schedule()
                                clear_ece_ia2_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ece_ia2_7th_all():
                        fetch_ece_ia2_7th_ia_schedule()
                        self.var_ece_ia2_7th_subjects_entry.set("")
                        self.var_ece_ia2_7th_date_entry.set("")
                        self.var_ece_ia2_7th_time_entry.set("")
                        self.var_ece_ia2_7th_code.set("")
                        self.var_ece_ia2_7th_semister.set("")
                        self.var_serach_ece_ia2_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ece_ia2_7th_ia_schedule(ev):
                        read=tree_ece_ia2_7th_treeview.focus()
                        content=tree_ece_ia2_7th_treeview.item(read)
                        row=content['values']

                        self.var_ece_ia2_7th_subjects_entry.set(row[1])
                        self.var_ece_ia2_7th_date_entry.set(row[2])
                        self.var_ece_ia2_7th_time_entry.set(row[3])
                        self.var_ece_ia2_7th_code.set(row[4])
                        self.var_ece_ia2_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ece_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ece_ia2_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ece_ia2_7th_schedule where ece_ia2_7th_subjects=?",(self.var_serach_ece_ia2_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ece_ia2_7th_treeview.delete(*tree_ece_ia2_7th_treeview.get_children())
                                for row in rows:
                                    tree_ece_ia2_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ece_ia2_7th_subjects()
                    ece_ia2_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ece_ia2_7th_subjects_entry,values=ece_ia2_7th_subjects_list).place(x=87,y=14)

                    ece_ia2_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ece_ia2_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ece_ia2_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia2_7th_time_entry).place(x=569,y=14)

                    ece_ia2_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia2_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ece_ia2_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ece_ia2_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ece_ia2_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ece_ia2_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ece_ia2_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ece_ia2_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ece_ia2_7th_treeview=ttk.Treeview(tree_frame1,columns=('ece_ia2_7th_subjects','ece_ia2_7th_date','ece_ia2_7th_time','ece_ia2_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ece_ia2_7th_treeview.xview)
                    scrolly.configure(command=tree_ece_ia2_7th_treeview.yview)

                    tree_ece_ia2_7th_treeview.heading('ece_ia2_7th_subjects',text="Subjects")
                    tree_ece_ia2_7th_treeview.heading('ece_ia2_7th_date',text="Date")
                    tree_ece_ia2_7th_treeview.heading('ece_ia2_7th_time',text="Time")
                    tree_ece_ia2_7th_treeview.heading('ece_ia2_7th_code',text="Code")
                    tree_ece_ia2_7th_treeview.heading('semisters',text="Semister")
                    tree_ece_ia2_7th_treeview.heading('branch',text="Branch")

                    tree_ece_ia2_7th_treeview.column('ece_ia2_7th_subjects',width=200)
                    tree_ece_ia2_7th_treeview.column('ece_ia2_7th_date',width=150)
                    tree_ece_ia2_7th_treeview.column('ece_ia2_7th_time',width=150)
                    tree_ece_ia2_7th_treeview.column('ece_ia2_7th_code',width=150)
                    tree_ece_ia2_7th_treeview.column('semisters',width=150)
                    tree_ece_ia2_7th_treeview.column('branch',width=200)

                    tree_ece_ia2_7th_treeview['show']='headings'
                
                    tree_ece_ia2_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ece_ia2_7th_ia_schedule()
                    tree_ece_ia2_7th_treeview.bind('<ButtonRelease-1>',get_ece_ia2_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Communication_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    ece_ia2_8th_subjects_list=[]
                    def fetch_ece_ia2_8th_subjects():
                        #all_ece_ia2_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ece_8th_subjects from all_ece_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ece_ia2_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ece_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ece_ia2_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ece_ia2_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ece_ia2_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ece_ia2_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ece_ia2_8th_subjects','ece_ia2_8th_date','ece_ia2_8th_time','ece_ia2_8th_code','semisters','branch'
                                        cur.execute('insert into ece_ia2_8th_schedule(ece_ia2_8th_subjects,ece_ia2_8th_date,ece_ia2_8th_time,ece_ia2_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ece_ia2_8th_subjects_entry.get(),
                                            self.var_ece_ia2_8th_date_entry.get(),
                                            self.var_ece_ia2_8th_time_entry.get(),
                                            self.var_ece_ia2_8th_code.get(),
                                            self.var_ece_ia2_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ece_ia2_8th_ia_schedule()
                                        con.close()
                    def fetch_ece_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_ia2_8th_schedule')
                            rows=cur.fetchall()
                            tree_ece_ia2_8th_treeview.delete(*tree_ece_ia2_8th_treeview.get_children())
                            for row in rows:
                                tree_ece_ia2_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ece_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia2_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ece_ia2_8th_schedule where ece_ia2_8th_subjects=?',(self.var_ece_ia2_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ece_ia2_8th_schedule where ece_ia2_8th_subjects=? ',(self.var_ece_ia2_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ece_ia2_8th_all()
                                    fetch_ece_ia2_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ece_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia2_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ece_ia2_8th_schedule set ece_ia2_8th_date=?,ece_ia2_8th_time=?,ece_ia2_8th_code=?,semisters=?,branch=?  where ece_ia2_8th_subjects=?',(
                                self.var_ece_ia2_8th_date_entry.get(),
                                self.var_ece_ia2_8th_time_entry.get(),
                                self.var_ece_ia2_8th_code.get(),
                                self.var_ece_ia2_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ece_ia2_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ece_ia2_8th_ia_schedule()
                                clear_ece_ia2_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ece_ia2_8th_all():
                        fetch_ece_ia2_8th_ia_schedule()
                        self.var_ece_ia2_8th_subjects_entry.set("")
                        self.var_ece_ia2_8th_date_entry.set("")
                        self.var_ece_ia2_8th_time_entry.set("")
                        self.var_ece_ia2_8th_code.set("")
                        self.var_ece_ia2_8th_semister.set("")
                        self.var_serach_ece_ia2_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ece_ia2_8th_ia_schedule(ev):
                        read=tree_ece_ia2_8th_treeview.focus()
                        content=tree_ece_ia2_8th_treeview.item(read)
                        row=content['values']

                        self.var_ece_ia2_8th_subjects_entry.set(row[1])
                        self.var_ece_ia2_8th_date_entry.set(row[2])
                        self.var_ece_ia2_8th_time_entry.set(row[3])
                        self.var_ece_ia2_8th_code.set(row[4])
                        self.var_ece_ia2_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ece_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ece_ia2_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ece_ia2_8th_schedule where ece_ia2_8th_subjects=?",(self.var_serach_ece_ia2_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ece_ia2_8th_treeview.delete(*tree_ece_ia2_8th_treeview.get_children())
                                for row in rows:
                                    tree_ece_ia2_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ece_ia2_8th_subjects()
                    ece_ia2_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ece_ia2_8th_subjects_entry,values=ece_ia2_8th_subjects_list).place(x=87,y=14)

                    ece_ia2_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ece_ia2_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ece_ia2_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia2_8th_time_entry).place(x=569,y=14)

                    ece_ia2_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia2_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ece_ia2_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ece_ia2_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ece_ia2_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ece_ia2_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ece_ia2_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ece_ia2_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ece_ia2_8th_treeview=ttk.Treeview(tree_frame1,columns=('ece_ia2_8th_subjects','ece_ia2_8th_date','ece_ia2_8th_time','ece_ia2_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ece_ia2_8th_treeview.xview)
                    scrolly.configure(command=tree_ece_ia2_8th_treeview.yview)

                    tree_ece_ia2_8th_treeview.heading('ece_ia2_8th_subjects',text="Subjects")
                    tree_ece_ia2_8th_treeview.heading('ece_ia2_8th_date',text="Date")
                    tree_ece_ia2_8th_treeview.heading('ece_ia2_8th_time',text="Time")
                    tree_ece_ia2_8th_treeview.heading('ece_ia2_8th_code',text="Code")
                    tree_ece_ia2_8th_treeview.heading('semisters',text="Semister")
                    tree_ece_ia2_8th_treeview.heading('branch',text="Branch")

                    tree_ece_ia2_8th_treeview.column('ece_ia2_8th_subjects',width=200)
                    tree_ece_ia2_8th_treeview.column('ece_ia2_8th_date',width=150)
                    tree_ece_ia2_8th_treeview.column('ece_ia2_8th_time',width=150)
                    tree_ece_ia2_8th_treeview.column('ece_ia2_8th_code',width=150)
                    tree_ece_ia2_8th_treeview.column('semisters',width=150)
                    tree_ece_ia2_8th_treeview.column('branch',width=200)

                    tree_ece_ia2_8th_treeview['show']='headings'
                
                    tree_ece_ia2_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ece_ia2_8th_ia_schedule()
                    tree_ece_ia2_8th_treeview.bind('<ButtonRelease-1>',get_ece_ia2_8th_ia_schedule)
        ####################################################################################################################################################################
        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Telecommunication_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    ete_ia2_3rd_subjects_list=[]
                    def fetch_ete_ia2_3rd_subjects():
                        #all_ete_ia2_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ete_3rd_subjects from all_ete_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ete_ia2_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ete_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ete_ia2_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ete_ia2_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ete_ia2_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ete_ia2_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ete_ia2_3rd_subjects','ete_ia2_3rd_date','ete_ia2_3rd_time','ete_ia2_3rd_code','semisters','branch'
                                        cur.execute('insert into ete_ia2_3rd_schedule(ete_ia2_3rd_subjects,ete_ia2_3rd_date,ete_ia2_3rd_time,ete_ia2_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ete_ia2_3rd_subjects_entry.get(),
                                            self.var_ete_ia2_3rd_date_entry.get(),
                                            self.var_ete_ia2_3rd_time_entry.get(),
                                            self.var_ete_ia2_3rd_code.get(),
                                            self.var_ete_ia2_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ete_ia2_3rd_ia_schedule()
                                        con.close()
                    def fetch_ete_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_ia2_3rd_schedule')
                            rows=cur.fetchall()
                            tree_ete_ia2_3rd_treeview.delete(*tree_ete_ia2_3rd_treeview.get_children())
                            for row in rows:
                                tree_ete_ia2_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ete_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia2_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ete_ia2_3rd_schedule where ete_ia2_3rd_subjects=?',(self.var_ete_ia2_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ete_ia2_3rd_schedule where ete_ia2_3rd_subjects=? ',(self.var_ete_ia2_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ete_ia2_3rd_all()
                                    fetch_ete_ia2_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ete_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia2_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ete_ia2_3rd_schedule set ete_ia2_3rd_date=?,ete_ia2_3rd_time=?,ete_ia2_3rd_code=?,semisters=?,branch=?  where ete_ia2_3rd_subjects=?',(
                                self.var_ete_ia2_3rd_date_entry.get(),
                                self.var_ete_ia2_3rd_time_entry.get(),
                                self.var_ete_ia2_3rd_code.get(),
                                self.var_ete_ia2_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ete_ia2_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ete_ia2_3rd_ia_schedule()
                                clear_ete_ia2_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ete_ia2_3rd_all():
                        fetch_ete_ia2_3rd_ia_schedule()
                        self.var_ete_ia2_3rd_subjects_entry.set("")
                        self.var_ete_ia2_3rd_date_entry.set("")
                        self.var_ete_ia2_3rd_time_entry.set("")
                        self.var_ete_ia2_3rd_code.set("")
                        self.var_ete_ia2_3rd_semister.set("")
                        self.var_serach_ete_ia2_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ete_ia2_3rd_ia_schedule(ev):
                        read=tree_ete_ia2_3rd_treeview.focus()
                        content=tree_ete_ia2_3rd_treeview.item(read)
                        row=content['values']

                        self.var_ete_ia2_3rd_subjects_entry.set(row[1])
                        self.var_ete_ia2_3rd_date_entry.set(row[2])
                        self.var_ete_ia2_3rd_time_entry.set(row[3])
                        self.var_ete_ia2_3rd_code.set(row[4])
                        self.var_ete_ia2_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ete_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ete_ia2_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ete_ia2_3rd_schedule where ete_ia2_3rd_subjects=?",(self.var_serach_ete_ia2_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ete_ia2_3rd_treeview.delete(*tree_ete_ia2_3rd_treeview.get_children())
                                for row in rows:
                                    tree_ete_ia2_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ete_ia2_3rd_subjects()
                    ete_ia2_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ete_ia2_3rd_subjects_entry,values=ete_ia2_3rd_subjects_list).place(x=87,y=14)

                    ete_ia2_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ete_ia2_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ete_ia2_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia2_3rd_time_entry).place(x=569,y=14)

                    ete_ia2_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia2_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ete_ia2_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ete_ia2_3rd_ia_schedule).grid(row=1,column=0)
                    delete_ia2_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ete_ia2_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ete_ia2_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ete_ia2_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ete_ia2_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ete_ia2_3rd_treeview=ttk.Treeview(tree_frame1,columns=('ete_ia2_3rd_subjects','ete_ia2_3rd_date','ete_ia2_3rd_time','ete_ia2_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ete_ia2_3rd_treeview.xview)
                    scrolly.configure(command=tree_ete_ia2_3rd_treeview.yview)

                    tree_ete_ia2_3rd_treeview.heading('ete_ia2_3rd_subjects',text="Subjects")
                    tree_ete_ia2_3rd_treeview.heading('ete_ia2_3rd_date',text="Date")
                    tree_ete_ia2_3rd_treeview.heading('ete_ia2_3rd_time',text="Time")
                    tree_ete_ia2_3rd_treeview.heading('ete_ia2_3rd_code',text="Code")
                    tree_ete_ia2_3rd_treeview.heading('semisters',text="Semister")
                    tree_ete_ia2_3rd_treeview.heading('branch',text="Branch")

                    tree_ete_ia2_3rd_treeview.column('ete_ia2_3rd_subjects',width=200)
                    tree_ete_ia2_3rd_treeview.column('ete_ia2_3rd_date',width=150)
                    tree_ete_ia2_3rd_treeview.column('ete_ia2_3rd_time',width=150)
                    tree_ete_ia2_3rd_treeview.column('ete_ia2_3rd_code',width=150)
                    tree_ete_ia2_3rd_treeview.column('semisters',width=150)
                    tree_ete_ia2_3rd_treeview.column('branch',width=200)

                    tree_ete_ia2_3rd_treeview['show']='headings'
                
                    tree_ete_ia2_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_ete_ia2_3rd_ia_schedule()
                    tree_ete_ia2_3rd_treeview.bind('<ButtonRelease-1>',get_ete_ia2_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Telecommunication_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    ete_ia2_4th_subjects_list=[]
                    def fetch_ete_ia2_4th_subjects():
                        #all_ete_ia2_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ete_4th_subjects from all_ete_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ete_ia2_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ete_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ete_ia2_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ete_ia2_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ete_ia2_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ete_ia2_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ete_ia2_4th_subjects','ete_ia2_4th_date','ete_ia2_4th_time','ete_ia2_4th_code','semisters','branch'
                                        cur.execute('insert into ete_ia2_4th_schedule(ete_ia2_4th_subjects,ete_ia2_4th_date,ete_ia2_4th_time,ete_ia2_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ete_ia2_4th_subjects_entry.get(),
                                            self.var_ete_ia2_4th_date_entry.get(),
                                            self.var_ete_ia2_4th_time_entry.get(),
                                            self.var_ete_ia2_4th_code.get(),
                                            self.var_ete_ia2_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ete_ia2_4th_ia_schedule()
                                        con.close()
                    def fetch_ete_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_ia2_4th_schedule')
                            rows=cur.fetchall()
                            tree_ete_ia2_4th_treeview.delete(*tree_ete_ia2_4th_treeview.get_children())
                            for row in rows:
                                tree_ete_ia2_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ete_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia2_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ete_ia2_4th_schedule where ete_ia2_4th_subjects=?',(self.var_ete_ia2_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ete_ia2_4th_schedule where ete_ia2_4th_subjects=? ',(self.var_ete_ia2_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ete_ia2_4th_all()
                                    fetch_ete_ia2_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ete_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia2_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ete_ia2_4th_schedule set ete_ia2_4th_date=?,ete_ia2_4th_time=?,ete_ia2_4th_code=?,semisters=?,branch=?  where ete_ia2_4th_subjects=?',(
                                self.var_ete_ia2_4th_date_entry.get(),
                                self.var_ete_ia2_4th_time_entry.get(),
                                self.var_ete_ia2_4th_code.get(),
                                self.var_ete_ia2_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ete_ia2_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ete_ia2_4th_ia_schedule()
                                clear_ete_ia2_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ete_ia2_4th_all():
                        fetch_ete_ia2_4th_ia_schedule()
                        self.var_ete_ia2_4th_subjects_entry.set("")
                        self.var_ete_ia2_4th_date_entry.set("")
                        self.var_ete_ia2_4th_time_entry.set("")
                        self.var_ete_ia2_4th_code.set("")
                        self.var_ete_ia2_4th_semister.set("")
                        self.var_serach_ete_ia2_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ete_ia2_4th_ia_schedule(ev):
                        read=tree_ete_ia2_4th_treeview.focus()
                        content=tree_ete_ia2_4th_treeview.item(read)
                        row=content['values']

                        self.var_ete_ia2_4th_subjects_entry.set(row[1])
                        self.var_ete_ia2_4th_date_entry.set(row[2])
                        self.var_ete_ia2_4th_time_entry.set(row[3])
                        self.var_ete_ia2_4th_code.set(row[4])
                        self.var_ete_ia2_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ete_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ete_ia2_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ete_ia2_4th_schedule where ete_ia2_4th_subjects=?",(self.var_serach_ete_ia2_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ete_ia2_4th_treeview.delete(*tree_ete_4th_treeview.get_children())
                                for row in rows:
                                    tree_ete_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ete_ia2_4th_subjects()
                    ete_ia2_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ete_ia2_4th_subjects_entry,values=ete_ia2_4th_subjects_list).place(x=87,y=14)

                    ete_ia2_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ete_ia2_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ete_ia2_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia2_4th_time_entry).place(x=569,y=14)

                    ete_ia2_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia2_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ete_ia2_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ete_ia2_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ete_ia2_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ete_ia2_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ete_ia2_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ete_ia2_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ete_ia2_4th_treeview=ttk.Treeview(tree_frame1,columns=('ete_ia2_4th_subjects','ete_ia2_4th_date','ete_ia2_4th_time','ete_ia2_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ete_ia2_4th_treeview.xview)
                    scrolly.configure(command=tree_ete_ia2_4th_treeview.yview)

                    tree_ete_ia2_4th_treeview.heading('ete_ia2_4th_subjects',text="Subjects")
                    tree_ete_ia2_4th_treeview.heading('ete_ia2_4th_date',text="Date")
                    tree_ete_ia2_4th_treeview.heading('ete_ia2_4th_time',text="Time")
                    tree_ete_ia2_4th_treeview.heading('ete_ia2_4th_code',text="Code")
                    tree_ete_ia2_4th_treeview.heading('semisters',text="Semister")
                    tree_ete_ia2_4th_treeview.heading('branch',text="Branch")

                    tree_ete_ia2_4th_treeview.column('ete_ia2_4th_subjects',width=200)
                    tree_ete_ia2_4th_treeview.column('ete_ia2_4th_date',width=150)
                    tree_ete_ia2_4th_treeview.column('ete_ia2_4th_time',width=150)
                    tree_ete_ia2_4th_treeview.column('ete_ia2_4th_code',width=150)
                    tree_ete_ia2_4th_treeview.column('semisters',width=150)
                    tree_ete_ia2_4th_treeview.column('branch',width=200)

                    tree_ete_ia2_4th_treeview['show']='headings'
                
                    tree_ete_ia2_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ete_ia2_4th_ia_schedule()
                    tree_ete_ia2_4th_treeview.bind('<ButtonRelease-1>',get_ete_ia2_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Telecommunication_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    ete_ia2_5th_subjects_list=[]
                    def fetch_ete_ia2_5th_subjects():
                        #all_ete_ia2_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ete_5th_subjects from all_ete_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ete_ia2_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ete_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ete_ia2_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ete_ia2_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ete_ia2_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ete_ia2_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ete_ia2_5th_subjects','ete_ia2_5th_date','ete_ia2_5th_time','ete_ia2_5th_code','semisters','branch'
                                        cur.execute('insert into ete_ia2_5th_schedule(ete_ia2_5th_subjects,ete_ia2_5th_date,ete_ia2_5th_time,ete_ia2_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ete_ia2_5th_subjects_entry.get(),
                                            self.var_ete_ia2_5th_date_entry.get(),
                                            self.var_ete_ia2_5th_time_entry.get(),
                                            self.var_ete_ia2_5th_code.get(),
                                            self.var_ete_ia2_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ete_ia2_5th_ia_schedule()
                                        con.close()
                    def fetch_ete_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_ia2_5th_schedule')
                            rows=cur.fetchall()
                            tree_ete_ia2_5th_treeview.delete(*tree_ete_ia2_5th_treeview.get_children())
                            for row in rows:
                                tree_ete_ia2_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ete_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia2_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ete_ia2_5th_schedule where ete_ia2_5th_subjects=?',(self.var_ete_ia2_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ete_ia2_5th_schedule where ete_ia2_5th_subjects=? ',(self.var_ete_ia2_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ete_ia2_5th_all()
                                    fetch_ete_ia2_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ete_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia2_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ete_ia2_5th_schedule set ete_ia2_5th_date=?,ete_ia2_5th_time=?,ete_ia2_5th_code=?,semisters=?,branch=?  where ete_ia2_5th_subjects=?',(
                                self.var_ete_ia2_5th_date_entry.get(),
                                self.var_ete_ia2_5th_time_entry.get(),
                                self.var_ete_ia2_5th_code.get(),
                                self.var_ete_ia2_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ete_ia2_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ete_ia2_5th_ia_schedule()
                                clear_ete_ia2_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ete_ia2_5th_all():
                        fetch_ete_ia2_5th_ia_schedule()
                        self.var_ete_ia2_5th_subjects_entry.set("")
                        self.var_ete_ia2_5th_date_entry.set("")
                        self.var_ete_ia2_5th_time_entry.set("")
                        self.var_ete_ia2_5th_code.set("")
                        self.var_ete_ia2_5th_semister.set("")
                        self.var_serach_ete_ia2_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ete_ia2_5th_ia_schedule(ev):
                        read=tree_ete_ia2_5th_treeview.focus()
                        content=tree_ete_ia2_5th_treeview.item(read)
                        row=content['values']

                        self.var_ete_ia2_5th_subjects_entry.set(row[1])
                        self.var_ete_ia2_5th_date_entry.set(row[2])
                        self.var_ete_ia2_5th_time_entry.set(row[3])
                        self.var_ete_ia2_5th_code.set(row[4])
                        self.var_ete_ia2_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ete_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ete_ia2_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ete_ia2_5th_schedule where ete_ia2_5th_subjects=?",(self.var_serach_ete_ia2_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ete_ia2_5th_treeview.delete(*tree_ete_ia2_5th_treeview.get_children())
                                for row in rows:
                                    tree_ete_ia2_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ete_ia2_5th_subjects()
                    ete_ia2_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ete_ia2_5th_subjects_entry,values=ete_ia2_5th_subjects_list).place(x=87,y=14)

                    ete_ia2_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ete_ia2_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ete_ia2_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia2_5th_time_entry).place(x=569,y=14)

                    ete_ia2_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia2_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ete_ia2_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ete_ia2_5th_ia_schedule).grid(row=1,column=0)
                    delete_ia2_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ete_ia2_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ete_ia2_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ete_ia2_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ete_ia2_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ete_ia2_5th_treeview=ttk.Treeview(tree_frame1,columns=('ete_ia2_5th_subjects','ete_ia2_5th_date','ete_ia2_5th_time','ete_ia2_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ete_ia2_5th_treeview.xview)
                    scrolly.configure(command=tree_ete_ia2_5th_treeview.yview)

                    tree_ete_ia2_5th_treeview.heading('ete_ia2_5th_subjects',text="Subjects")
                    tree_ete_ia2_5th_treeview.heading('ete_ia2_5th_date',text="Date")
                    tree_ete_ia2_5th_treeview.heading('ete_ia2_5th_time',text="Time")
                    tree_ete_ia2_5th_treeview.heading('ete_ia2_5th_code',text="Code")
                    tree_ete_ia2_5th_treeview.heading('semisters',text="Semister")
                    tree_ete_ia2_5th_treeview.heading('branch',text="Branch")

                    tree_ete_ia2_5th_treeview.column('ete_ia2_5th_subjects',width=200)
                    tree_ete_ia2_5th_treeview.column('ete_ia2_5th_date',width=150)
                    tree_ete_ia2_5th_treeview.column('ete_ia2_5th_time',width=150)
                    tree_ete_ia2_5th_treeview.column('ete_ia2_5th_code',width=150)
                    tree_ete_ia2_5th_treeview.column('semisters',width=150)
                    tree_ete_ia2_5th_treeview.column('branch',width=200)

                    tree_ete_ia2_5th_treeview['show']='headings'
                
                    tree_ete_ia2_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ete_ia2_5th_ia_schedule()
                    tree_ete_ia2_5th_treeview.bind('<ButtonRelease-1>',get_ete_ia2_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Telecommunication_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    ete_ia2_6th_subjects_list=[]
                    def fetch_ete_ia2_6th_subjects():
                        #all_ete_ia2_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ete_6th_subjects from all_ete_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ete_ia2_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ete_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ete_ia2_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ete_ia2_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ete_ia2_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ete_ia2_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ete_ia2_6th_subjects','ete_ia2_6th_date','ete_ia2_6th_time','ete_ia2_6th_code','semisters','branch'
                                        cur.execute('insert into ete_ia2_6th_schedule(ete_ia2_6th_subjects,ete_ia2_6th_date,ete_ia2_6th_time,ete_ia2_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ete_ia2_6th_subjects_entry.get(),
                                            self.var_ete_ia2_6th_date_entry.get(),
                                            self.var_ete_ia2_6th_time_entry.get(),
                                            self.var_ete_ia2_6th_code.get(),
                                            self.var_ete_ia2_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ete_ia2_6th_ia_schedule()
                                        con.close()
                    def fetch_ete_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_ia2_6th_schedule')
                            rows=cur.fetchall()
                            tree_ete_ia2_6th_treeview.delete(*tree_ete_ia2_6th_treeview.get_children())
                            for row in rows:
                                tree_ete_ia2_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ia2_ete_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia2_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ete_ia2_6th_schedule where ete_ia2_6th_subjects=?',(self.var_ete_ia2_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ete_ia2_6th_schedule where ete_ia2_6th_subjects=? ',(self.var_ete_ia2_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is delete_ia2d successflly....',parent=frame)
                                    clear_ete_ia2_6th_all()
                                    fetch_ete_ia2_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ete_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia2_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ete_ia2_6th_schedule set ete_ia2_6th_date=?,ete_ia2_6th_time=?,ete_ia2_6th_code=?,semisters=?,branch=?  where ete_ia2_6th_subjects=?',(
                                self.var_ete_ia2_6th_date_entry.get(),
                                self.var_ete_ia2_6th_time_entry.get(),
                                self.var_ete_ia2_6th_code.get(),
                                self.var_ete_ia2_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ete_ia2_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ete_ia2_6th_ia_schedule()
                                clear_ete_ia2_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ete_ia2_6th_all():
                        fetch_ete_ia2_6th_ia_schedule()
                        self.var_ete_ia2_6th_subjects_entry.set("")
                        self.var_ete_ia2_6th_date_entry.set("")
                        self.var_ete_ia2_6th_time_entry.set("")
                        self.var_ete_ia2_6th_code.set("")
                        self.var_ete_ia2_6th_semister.set("")
                        self.var_serach_ete_ia2_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ete_ia2_6th_ia_schedule(ev):
                        read=tree_ete_ia2_6th_treeview.focus()
                        content=tree_ete_ia2_6th_treeview.item(read)
                        row=content['values']

                        self.var_ete_ia2_6th_subjects_entry.set(row[1])
                        self.var_ete_ia2_6th_date_entry.set(row[2])
                        self.var_ete_ia2_6th_time_entry.set(row[3])
                        self.var_ete_ia2_6th_code.set(row[4])
                        self.var_ete_ia2_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ete_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ete_ia2_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ete_ia2_6th_schedule where ete_ia2_6th_subjects=?",(self.var_serach_ete_ia2_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ete_ia2_6th_treeview.delete(*tree_ete_ia2_6th_treeview.get_children())
                                for row in rows:
                                    tree_ete_ia2_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ete_ia2_6th_subjects()
                    ete_ia2_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ete_ia2_6th_subjects_entry,values=ete_ia2_6th_subjects_list).place(x=87,y=14)

                    ete_ia2_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ete_ia2_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ete_ia2_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia2_6th_time_entry).place(x=569,y=14)

                    ete_ia2_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia2_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ete_ia2_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ete_ia2_6th_ia_schedule).grid(row=1,column=0)
                    delete_ia2_button=ttk.Button(label_frame2,text='Delete_ia2',width=31,command=delete_ia2_ete_ia2_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ete_ia2_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ete_ia2_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ete_ia2_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ete_ia2_6th_treeview=ttk.Treeview(tree_frame1,columns=('ete_ia2_6th_subjects','ete_ia2_6th_date','ete_ia2_6th_time','ete_ia2_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ete_ia2_6th_treeview.xview)
                    scrolly.configure(command=tree_ete_ia2_6th_treeview.yview)

                    tree_ete_ia2_6th_treeview.heading('ete_ia2_6th_subjects',text="Subjects")
                    tree_ete_ia2_6th_treeview.heading('ete_ia2_6th_date',text="Date")
                    tree_ete_ia2_6th_treeview.heading('ete_ia2_6th_time',text="Time")
                    tree_ete_ia2_6th_treeview.heading('ete_ia2_6th_code',text="Code")
                    tree_ete_ia2_6th_treeview.heading('semisters',text="Semister")
                    tree_ete_ia2_6th_treeview.heading('branch',text="Branch")

                    tree_ete_ia2_6th_treeview.column('ete_ia2_6th_subjects',width=200)
                    tree_ete_ia2_6th_treeview.column('ete_ia2_6th_date',width=150)
                    tree_ete_ia2_6th_treeview.column('ete_ia2_6th_time',width=150)
                    tree_ete_ia2_6th_treeview.column('ete_ia2_6th_code',width=150)
                    tree_ete_ia2_6th_treeview.column('semisters',width=150)
                    tree_ete_ia2_6th_treeview.column('branch',width=200)

                    tree_ete_ia2_6th_treeview['show']='headings'
                
                    tree_ete_ia2_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ete_ia2_6th_ia_schedule()
                    tree_ete_ia2_6th_treeview.bind('<ButtonRelease-1>',get_ete_ia2_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Telecommunication_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    ete_ia2_7th_subjects_list=[]
                    def fetch_ete_ia2_7th_subjects():
                        #all_ete_ia2_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ete_7th_subjects from all_ete_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ete_ia2_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ete_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ete_ia2_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ete_ia2_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ete_ia2_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ete_ia2_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ete_ia2_7th_subjects','ete_ia2_7th_date','ete_ia2_7th_time','ete_ia2_7th_code','semisters','branch'
                                        cur.execute('insert into ete_ia2_7th_schedule(ete_ia2_7th_subjects,ete_ia2_7th_date,ete_ia2_7th_time,ete_ia2_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ete_ia2_7th_subjects_entry.get(),
                                            self.var_ete_ia2_7th_date_entry.get(),
                                            self.var_ete_ia2_7th_time_entry.get(),
                                            self.var_ete_ia2_7th_code.get(),
                                            self.var_ete_ia2_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ete_ia2_7th_ia_schedule()
                                        con.close()
                    def fetch_ete_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_ia2_7th_schedule')
                            rows=cur.fetchall()
                            tree_ete_ia2_7th_treeview.delete(*tree_ete_ia2_7th_treeview.get_children())
                            for row in rows:
                                tree_ete_ia2_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ete_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia2_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ete_ia2_7th_schedule where ete_ia2_7th_subjects=?',(self.var_ete_ia2_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ete_ia2_7th_schedule where ete_ia2_7th_subjects=? ',(self.var_ete_ia2_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ete_ia2_7th_all()
                                    fetch_ete_ia2_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ete_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia2_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ete_ia2_7th_schedule set ete_ia2_7th_date=?,ete_ia2_7th_time=?,ete_ia2_7th_code=?,semisters=?,branch=?  where ete_ia2_7th_subjects=?',(
                                self.var_ete_ia2_7th_date_entry.get(),
                                self.var_ete_ia2_7th_time_entry.get(),
                                self.var_ete_ia2_7th_code.get(),
                                self.var_ete_ia2_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ete_ia2_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ete_ia2_7th_ia_schedule()
                                clear_ete_ia2_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ete_ia2_7th_all():
                        fetch_ete_ia2_7th_ia_schedule()
                        self.var_ete_ia2_7th_subjects_entry.set("")
                        self.var_ete_ia2_7th_date_entry.set("")
                        self.var_ete_ia2_7th_time_entry.set("")
                        self.var_ete_ia2_7th_code.set("")
                        self.var_ete_ia2_7th_semister.set("")
                        self.var_serach_ete_ia2_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ete_ia2_7th_ia_schedule(ev):
                        read=tree_ete_ia2_7th_treeview.focus()
                        content=tree_ete_ia2_7th_treeview.item(read)
                        row=content['values']

                        self.var_ete_ia2_7th_subjects_entry.set(row[1])
                        self.var_ete_ia2_7th_date_entry.set(row[2])
                        self.var_ete_ia2_7th_time_entry.set(row[3])
                        self.var_ete_ia2_7th_code.set(row[4])
                        self.var_ete_ia2_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ete_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ete_ia2_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ete_ia2_7th_schedule where ete_ia2_7th_subjects=?",(self.var_serach_ete_ia2_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ete_ia2_7th_treeview.delete(*tree_ete_ia2_7th_treeview.get_children())
                                for row in rows:
                                    tree_ete_ia2_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ete_ia2_7th_subjects()
                    ete_ia2_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ete_ia2_7th_subjects_entry,values=ete_ia2_7th_subjects_list).place(x=87,y=14)

                    ete_ia2_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ete_ia2_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ete_ia2_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia2_7th_time_entry).place(x=569,y=14)

                    ete_ia2_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia2_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ete_ia2_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ete_ia2_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ete_ia2_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ete_ia2_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ete_ia2_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ete_ia2_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ete_ia2_7th_treeview=ttk.Treeview(tree_frame1,columns=('ete_ia2_7th_subjects','ete_ia2_7th_date','ete_ia2_7th_time','ete_ia2_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ete_ia2_7th_treeview.xview)
                    scrolly.configure(command=tree_ete_ia2_7th_treeview.yview)

                    tree_ete_ia2_7th_treeview.heading('ete_ia2_7th_subjects',text="Subjects")
                    tree_ete_ia2_7th_treeview.heading('ete_ia2_7th_date',text="Date")
                    tree_ete_ia2_7th_treeview.heading('ete_ia2_7th_time',text="Time")
                    tree_ete_ia2_7th_treeview.heading('ete_ia2_7th_code',text="Code")
                    tree_ete_ia2_7th_treeview.heading('semisters',text="Semister")
                    tree_ete_ia2_7th_treeview.heading('branch',text="Branch")

                    tree_ete_ia2_7th_treeview.column('ete_ia2_7th_subjects',width=200)
                    tree_ete_ia2_7th_treeview.column('ete_ia2_7th_date',width=150)
                    tree_ete_ia2_7th_treeview.column('ete_ia2_7th_time',width=150)
                    tree_ete_ia2_7th_treeview.column('ete_ia2_7th_code',width=150)
                    tree_ete_ia2_7th_treeview.column('semisters',width=150)
                    tree_ete_ia2_7th_treeview.column('branch',width=200)

                    tree_ete_ia2_7th_treeview['show']='headings'
                
                    tree_ete_ia2_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ete_ia2_7th_ia_schedule()
                    tree_ete_ia2_7th_treeview.bind('<ButtonRelease-1>',get_ete_ia2_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Telecommunication_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    ete_ia2_8th_subjects_list=[]
                    def fetch_ete_ia2_8th_subjects():
                        #all_ete_ia2_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ete_8th_subjects from all_ete_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ete_ia2_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ete_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ete_ia2_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ete_ia2_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ete_ia2_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ete_ia2_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ete_ia2_8th_subjects','ete_ia2_8th_date','ete_ia2_8th_time','ete_ia2_8th_code','semisters','branch'
                                        cur.execute('insert into ete_ia2_8th_schedule(ete_ia2_8th_subjects,ete_ia2_8th_date,ete_ia2_8th_time,ete_ia2_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ete_ia2_8th_subjects_entry.get(),
                                            self.var_ete_ia2_8th_date_entry.get(),
                                            self.var_ete_ia2_8th_time_entry.get(),
                                            self.var_ete_ia2_8th_code.get(),
                                            self.var_ete_ia2_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ete_ia2_8th_ia_schedule()
                                        con.close()
                    def fetch_ete_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_ia2_8th_schedule')
                            rows=cur.fetchall()
                            tree_ete_ia2_8th_treeview.delete(*tree_ete_ia2_8th_treeview.get_children())
                            for row in rows:
                                tree_ete_ia2_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ete_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia2_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ete_ia2_8th_schedule where ete_ia2_8th_subjects=?',(self.var_ete_ia2_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ete_ia2_8th_schedule where ete_ia2_8th_subjects=? ',(self.var_ete_ia2_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ete_ia2_8th_all()
                                    fetch_ete_ia2_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ete_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia2_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ete_ia2_8th_schedule set ete_ia2_8th_date=?,ete_ia2_8th_time=?,ete_ia2_8th_code=?,semisters=?,branch=?  where ete_ia2_8th_subjects=?',(
                                self.var_ete_ia2_8th_date_entry.get(),
                                self.var_ete_ia2_8th_time_entry.get(),
                                self.var_ete_ia2_8th_code.get(),
                                self.var_ete_ia2_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ete_ia2_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ete_ia2_8th_ia_schedule()
                                clear_ete_ia2_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ete_ia2_8th_all():
                        fetch_ete_ia2_8th_ia_schedule()
                        self.var_ete_ia2_8th_subjects_entry.set("")
                        self.var_ete_ia2_8th_date_entry.set("")
                        self.var_ete_ia2_8th_time_entry.set("")
                        self.var_ete_ia2_8th_code.set("")
                        self.var_ete_ia2_8th_semister.set("")
                        self.var_serach_ete_ia2_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ete_ia2_8th_ia_schedule(ev):
                        read=tree_ete_ia2_8th_treeview.focus()
                        content=tree_ete_ia2_8th_treeview.item(read)
                        row=content['values']

                        self.var_ete_ia2_8th_subjects_entry.set(row[1])
                        self.var_ete_ia2_8th_date_entry.set(row[2])
                        self.var_ete_ia2_8th_time_entry.set(row[3])
                        self.var_ete_ia2_8th_code.set(row[4])
                        self.var_ete_ia2_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ete_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ete_ia2_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ete_ia2_8th_schedule where ete_ia2_8th_subjects=?",(self.var_serach_ete_ia2_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ete_ia2_8th_treeview.delete(*tree_ete_ia2_8th_treeview.get_children())
                                for row in rows:
                                    tree_ete_ia2_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ete_ia2_8th_subjects()
                    ete_ia2_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ete_ia2_8th_subjects_entry,values=ete_ia2_8th_subjects_list).place(x=87,y=14)

                    ete_ia2_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ete_ia2_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ete_ia2_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia2_8th_time_entry).place(x=569,y=14)

                    ete_ia2_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia2_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ete_ia2_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ete_ia2_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ete_ia2_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ete_ia2_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ete_ia2_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ete_ia2_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ete_ia2_8th_treeview=ttk.Treeview(tree_frame1,columns=('ete_ia2_8th_subjects','ete_ia2_8th_date','ete_ia2_8th_time','ete_ia2_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ete_ia2_8th_treeview.xview)
                    scrolly.configure(command=tree_ete_ia2_8th_treeview.yview)

                    tree_ete_ia2_8th_treeview.heading('ete_ia2_8th_subjects',text="Subjects")
                    tree_ete_ia2_8th_treeview.heading('ete_ia2_8th_date',text="Date")
                    tree_ete_ia2_8th_treeview.heading('ete_ia2_8th_time',text="Time")
                    tree_ete_ia2_8th_treeview.heading('ete_ia2_8th_code',text="Code")
                    tree_ete_ia2_8th_treeview.heading('semisters',text="Semister")
                    tree_ete_ia2_8th_treeview.heading('branch',text="Branch")

                    tree_ete_ia2_8th_treeview.column('ete_ia2_8th_subjects',width=200)
                    tree_ete_ia2_8th_treeview.column('ete_ia2_8th_date',width=150)
                    tree_ete_ia2_8th_treeview.column('ete_ia2_8th_time',width=150)
                    tree_ete_ia2_8th_treeview.column('ete_ia2_8th_code',width=150)
                    tree_ete_ia2_8th_treeview.column('semisters',width=150)
                    tree_ete_ia2_8th_treeview.column('branch',width=200)

                    tree_ete_ia2_8th_treeview['show']='headings'
                
                    tree_ete_ia2_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ete_ia2_8th_ia_schedule()
                    tree_ete_ia2_8th_treeview.bind('<ButtonRelease-1>',get_ete_ia2_8th_ia_schedule)
        ##################################################################################################################################################################
        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Computer_Science_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    cs_ia2_3rd_subjects_list=[]
                    def fetch_cs_ia2_3rd_subjects():
                        #all_cs_ia2_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select cs_3rd_subjects from all_cs_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    cs_ia2_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_cs_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_cs_ia2_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_cs_ia2_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_cs_ia2_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_cs_ia2_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'cs_ia2_3rd_subjects','cs_ia2_3rd_date','cs_ia2_3rd_time','cs_ia2_3rd_code','semisters','branch'
                                        cur.execute('insert into cs_ia2_3rd_schedule(cs_ia2_3rd_subjects,cs_ia2_3rd_date,cs_ia2_3rd_time,cs_ia2_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_cs_ia2_3rd_subjects_entry.get(),
                                            self.var_cs_ia2_3rd_date_entry.get(),
                                            self.var_cs_ia2_3rd_time_entry.get(),
                                            self.var_cs_ia2_3rd_code.get(),
                                            self.var_cs_ia2_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succs_ia2sfuly....',parent=frame)
                                        fetch_cs_ia2_3rd_ia_schedule()
                                        con.close()
                    def fetch_cs_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_ia2_3rd_schedule')
                            rows=cur.fetchall()
                            tree_cs_ia2_3rd_treeview.delete(*tree_cs_ia2_3rd_treeview.get_children())
                            for row in rows:
                                tree_cs_ia2_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_cs_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia2_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from cs_ia2_3rd_schedule where cs_ia2_3rd_subjects=?',(self.var_cs_ia2_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from cs_ia2_3rd_schedule where cs_ia2_3rd_subjects=? ',(self.var_cs_ia2_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_cs_ia2_3rd_all()
                                    fetch_cs_ia2_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_cs_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia2_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update cs_ia2_3rd_schedule set cs_ia2_3rd_date=?,cs_ia2_3rd_time=?,cs_ia2_3rd_code=?,semisters=?,branch=?  where cs_ia2_3rd_subjects=?',(
                                self.var_cs_ia2_3rd_date_entry.get(),
                                self.var_cs_ia2_3rd_time_entry.get(),
                                self.var_cs_ia2_3rd_code.get(),
                                self.var_cs_ia2_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_cs_ia2_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succs_ia2sflly....',parent=frame)
                                fetch_cs_ia2_3rd_ia_schedule()
                                clear_cs_ia2_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_cs_ia2_3rd_all():
                        fetch_cs_ia2_3rd_ia_schedule()
                        self.var_cs_ia2_3rd_subjects_entry.set("")
                        self.var_cs_ia2_3rd_date_entry.set("")
                        self.var_cs_ia2_3rd_time_entry.set("")
                        self.var_cs_ia2_3rd_code.set("")
                        self.var_cs_ia2_3rd_semister.set("")
                        self.var_serach_cs_ia2_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succs_ia2sfuly.....',parent=frame)

                    def get_cs_ia2_3rd_ia_schedule(ev):
                        read=tree_cs_ia2_3rd_treeview.focus()
                        content=tree_cs_ia2_3rd_treeview.item(read)
                        row=content['values']

                        self.var_cs_ia2_3rd_subjects_entry.set(row[1])
                        self.var_cs_ia2_3rd_date_entry.set(row[2])
                        self.var_cs_ia2_3rd_time_entry.set(row[3])
                        self.var_cs_ia2_3rd_code.set(row[4])
                        self.var_cs_ia2_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succs_ia2sfuly.....',parent=frame)                    
                    def serch_cs_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_cs_ia2_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from cs_ia2_3rd_schedule where cs_ia2_3rd_subjects=?",(self.var_serach_cs_ia2_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_cs_ia2_3rd_treeview.delete(*tree_cs_ia2_3rd_treeview.get_children())
                                for row in rows:
                                    tree_cs_ia2_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_cs_ia2_3rd_subjects()
                    cs_ia2_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_cs_ia2_3rd_subjects_entry,values=cs_ia2_3rd_subjects_list).place(x=87,y=14)

                    cs_ia2_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_cs_ia2_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    cs_ia2_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia2_3rd_time_entry).place(x=569,y=14)

                    cs_ia2_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia2_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_cs_ia2_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_cs_ia2_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_cs_ia2_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_cs_ia2_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_cs_ia2_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_cs_ia2_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_cs_ia2_3rd_treeview=ttk.Treeview(tree_frame1,columns=('cs_ia2_3rd_subjects','cs_ia2_3rd_date','cs_ia2_3rd_time','cs_ia2_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_cs_ia2_3rd_treeview.xview)
                    scrolly.configure(command=tree_cs_ia2_3rd_treeview.yview)

                    tree_cs_ia2_3rd_treeview.heading('cs_ia2_3rd_subjects',text="Subjects")
                    tree_cs_ia2_3rd_treeview.heading('cs_ia2_3rd_date',text="Date")
                    tree_cs_ia2_3rd_treeview.heading('cs_ia2_3rd_time',text="Time")
                    tree_cs_ia2_3rd_treeview.heading('cs_ia2_3rd_code',text="Code")
                    tree_cs_ia2_3rd_treeview.heading('semisters',text="Semister")
                    tree_cs_ia2_3rd_treeview.heading('branch',text="Branch")

                    tree_cs_ia2_3rd_treeview.column('cs_ia2_3rd_subjects',width=200)
                    tree_cs_ia2_3rd_treeview.column('cs_ia2_3rd_date',width=150)
                    tree_cs_ia2_3rd_treeview.column('cs_ia2_3rd_time',width=150)
                    tree_cs_ia2_3rd_treeview.column('cs_ia2_3rd_code',width=150)
                    tree_cs_ia2_3rd_treeview.column('semisters',width=150)
                    tree_cs_ia2_3rd_treeview.column('branch',width=200)

                    tree_cs_ia2_3rd_treeview['show']='headings'
                
                    tree_cs_ia2_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_cs_ia2_3rd_ia_schedule()
                    tree_cs_ia2_3rd_treeview.bind('<ButtonRelease-1>',get_cs_ia2_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Computer_Science_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    cs_ia2_4th_subjects_list=[]
                    def fetch_cs_ia2_4th_subjects():
                        #all_cs_ia2_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select cs_4th_subjects from all_cs_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    cs_ia2_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_cs_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_cs_ia2_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_cs_ia2_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_cs_ia2_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_cs_ia2_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'cs_ia2_4th_subjects','cs_ia2_4th_date','cs_ia2_4th_time','cs_ia2_4th_code','semisters','branch'
                                        cur.execute('insert into cs_ia2_4th_schedule(cs_ia2_4th_subjects,cs_ia2_4th_date,cs_ia2_4th_time,cs_ia2_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_cs_ia2_4th_subjects_entry.get(),
                                            self.var_cs_ia2_4th_date_entry.get(),
                                            self.var_cs_ia2_4th_time_entry.get(),
                                            self.var_cs_ia2_4th_code.get(),
                                            self.var_cs_ia2_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succs_ia2sfuly....',parent=frame)
                                        fetch_cs_ia2_4th_ia_schedule()
                                        con.close()
                    def fetch_cs_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_ia2_4th_schedule')
                            rows=cur.fetchall()
                            tree_cs_ia2_4th_treeview.delete(*tree_cs_ia2_4th_treeview.get_children())
                            for row in rows:
                                tree_cs_ia2_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_cs_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia2_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from cs_ia2_4th_schedule where cs_ia2_4th_subjects=?',(self.var_cs_ia2_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from cs_ia2_4th_schedule where cs_ia2_4th_subjects=? ',(self.var_cs_ia2_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_cs_ia2_4th_all()
                                    fetch_cs_ia2_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_cs_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia2_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update cs_ia2_4th_schedule set cs_ia2_4th_date=?,cs_ia2_4th_time=?,cs_ia2_4th_code=?,semisters=?,branch=?  where cs_ia2_4th_subjects=?',(
                                self.var_cs_ia2_4th_date_entry.get(),
                                self.var_cs_ia2_4th_time_entry.get(),
                                self.var_cs_ia2_4th_code.get(),
                                self.var_cs_ia2_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_cs_ia2_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succs_ia2sflly....',parent=frame)
                                fetch_cs_ia2_4th_ia_schedule()
                                clear_cs_ia2_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_cs_ia2_4th_all():
                        fetch_cs_ia2_4th_ia_schedule()
                        self.var_cs_ia2_4th_subjects_entry.set("")
                        self.var_cs_ia2_4th_date_entry.set("")
                        self.var_cs_ia2_4th_time_entry.set("")
                        self.var_cs_ia2_4th_code.set("")
                        self.var_cs_ia2_4th_semister.set("")
                        self.var_serach_cs_ia2_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succs_ia2sfuly.....',parent=frame)

                    def get_cs_ia2_4th_ia_schedule(ev):
                        read=tree_cs_ia2_4th_treeview.focus()
                        content=tree_cs_ia2_4th_treeview.item(read)
                        row=content['values']

                        self.var_cs_ia2_4th_subjects_entry.set(row[1])
                        self.var_cs_ia2_4th_date_entry.set(row[2])
                        self.var_cs_ia2_4th_time_entry.set(row[3])
                        self.var_cs_ia2_4th_code.set(row[4])
                        self.var_cs_ia2_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succs_ia2sfuly.....',parent=frame)                    
                    def serch_cs_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_cs_ia2_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from cs_ia2_4th_schedule where cs_ia2_4th_subjects=?",(self.var_serach_cs_ia2_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_cs_ia2_4th_treeview.delete(*tree_cs_ia2_4th_treeview.get_children())
                                for row in rows:
                                    tree_cs_ia2_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_cs_ia2_4th_subjects()
                    cs_ia2_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_cs_ia2_4th_subjects_entry,values=cs_ia2_4th_subjects_list).place(x=87,y=14)

                    cs_ia2_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_cs_ia2_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    cs_ia2_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia2_4th_time_entry).place(x=569,y=14)

                    cs_ia2_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia2_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_cs_ia2_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_cs_ia2_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_cs_ia2_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_cs_ia2_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_cs_ia2_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_cs_ia2_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_cs_ia2_4th_treeview=ttk.Treeview(tree_frame1,columns=('cs_ia2_4th_subjects','cs_ia2_4th_date','cs_ia2_4th_time','cs_ia2_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_cs_ia2_4th_treeview.xview)
                    scrolly.configure(command=tree_cs_ia2_4th_treeview.yview)

                    tree_cs_ia2_4th_treeview.heading('cs_ia2_4th_subjects',text="Subjects")
                    tree_cs_ia2_4th_treeview.heading('cs_ia2_4th_date',text="Date")
                    tree_cs_ia2_4th_treeview.heading('cs_ia2_4th_time',text="Time")
                    tree_cs_ia2_4th_treeview.heading('cs_ia2_4th_code',text="Code")
                    tree_cs_ia2_4th_treeview.heading('semisters',text="Semister")
                    tree_cs_ia2_4th_treeview.heading('branch',text="Branch")

                    tree_cs_ia2_4th_treeview.column('cs_ia2_4th_subjects',width=200)
                    tree_cs_ia2_4th_treeview.column('cs_ia2_4th_date',width=150)
                    tree_cs_ia2_4th_treeview.column('cs_ia2_4th_time',width=150)
                    tree_cs_ia2_4th_treeview.column('cs_ia2_4th_code',width=150)
                    tree_cs_ia2_4th_treeview.column('semisters',width=150)
                    tree_cs_ia2_4th_treeview.column('branch',width=200)

                    tree_cs_ia2_4th_treeview['show']='headings'
                
                    tree_cs_ia2_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_cs_ia2_4th_ia_schedule()
                    tree_cs_ia2_4th_treeview.bind('<ButtonRelease-1>',get_cs_ia2_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Computer_Science_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    cs_ia2_5th_subjects_list=[]
                    def fetch_cs_ia2_5th_subjects():
                        #all_cs_ia2_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select cs_5th_subjects from all_cs_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    cs_ia2_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_cs_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_cs_ia2_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_cs_ia2_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_cs_ia2_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_cs_ia2_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'cs_ia2_5th_subjects','cs_ia2_5th_date','cs_ia2_5th_time','cs_ia2_5th_code','semisters','branch'
                                        cur.execute('insert into cs_ia2_5th_schedule(cs_ia2_5th_subjects,cs_ia2_5th_date,cs_ia2_5th_time,cs_ia2_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_cs_ia2_5th_subjects_entry.get(),
                                            self.var_cs_ia2_5th_date_entry.get(),
                                            self.var_cs_ia2_5th_time_entry.get(),
                                            self.var_cs_ia2_5th_code.get(),
                                            self.var_cs_ia2_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succs_ia2sfuly....',parent=frame)
                                        fetch_cs_ia2_5th_ia_schedule()
                                        con.close()
                    def fetch_cs_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_ia2_5th_schedule')
                            rows=cur.fetchall()
                            tree_cs_ia2_5th_treeview.delete(*tree_cs_ia2_5th_treeview.get_children())
                            for row in rows:
                                tree_cs_ia2_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_cs_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia2_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from cs_ia2_5th_schedule where cs_ia2_5th_subjects=?',(self.var_cs_ia2_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from cs_ia2_5th_schedule where cs_ia2_5th_subjects=? ',(self.var_cs_ia2_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_cs_ia2_5th_all()
                                    fetch_cs_ia2_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_cs_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia2_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update cs_ia2_5th_schedule set cs_ia2_5th_date=?,cs_ia2_5th_time=?,cs_ia2_5th_code=?,semisters=?,branch=?  where cs_ia2_5th_subjects=?',(
                                self.var_cs_ia2_5th_date_entry.get(),
                                self.var_cs_ia2_5th_time_entry.get(),
                                self.var_cs_ia2_5th_code.get(),
                                self.var_cs_ia2_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_cs_ia2_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succs_ia2sflly....',parent=frame)
                                fetch_cs_ia2_5th_ia_schedule()
                                clear_cs_ia2_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_cs_ia2_5th_all():
                        fetch_cs_ia2_5th_ia_schedule()
                        self.var_cs_ia2_5th_subjects_entry.set("")
                        self.var_cs_ia2_5th_date_entry.set("")
                        self.var_cs_ia2_5th_time_entry.set("")
                        self.var_cs_ia2_5th_code.set("")
                        self.var_cs_ia2_5th_semister.set("")
                        self.var_serach_cs_ia2_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succs_ia2sfuly.....',parent=frame)

                    def get_cs_ia2_5th_ia_schedule(ev):
                        read=tree_cs_ia2_5th_treeview.focus()
                        content=tree_cs_ia2_5th_treeview.item(read)
                        row=content['values']

                        self.var_cs_ia2_5th_subjects_entry.set(row[1])
                        self.var_cs_ia2_5th_date_entry.set(row[2])
                        self.var_cs_ia2_5th_time_entry.set(row[3])
                        self.var_cs_ia2_5th_code.set(row[4])
                        self.var_cs_ia2_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succs_ia2sfuly.....',parent=frame)                    
                    def serch_cs_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_cs_ia2_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from cs_ia2_5th_schedule where cs_ia2_5th_subjects=?",(self.var_serach_cs_ia2_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_cs_ia2_5th_treeview.delete(*tree_cs_ia2_5th_treeview.get_children())
                                for row in rows:
                                    tree_cs_ia2_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_cs_ia2_5th_subjects()
                    cs_ia2_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_cs_ia2_5th_subjects_entry,values=cs_ia2_5th_subjects_list).place(x=87,y=14)

                    cs_ia2_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_cs_ia2_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    cs_ia2_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia2_5th_time_entry).place(x=569,y=14)

                    cs_ia2_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia2_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_cs_ia2_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_cs_ia2_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_cs_ia2_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_cs_ia2_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_cs_ia2_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_cs_ia2_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_cs_ia2_5th_treeview=ttk.Treeview(tree_frame1,columns=('cs_ia2_5th_subjects','cs_ia2_5th_date','cs_ia2_5th_time','cs_ia2_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_cs_ia2_5th_treeview.xview)
                    scrolly.configure(command=tree_cs_ia2_5th_treeview.yview)

                    tree_cs_ia2_5th_treeview.heading('cs_ia2_5th_subjects',text="Subjects")
                    tree_cs_ia2_5th_treeview.heading('cs_ia2_5th_date',text="Date")
                    tree_cs_ia2_5th_treeview.heading('cs_ia2_5th_time',text="Time")
                    tree_cs_ia2_5th_treeview.heading('cs_ia2_5th_code',text="Code")
                    tree_cs_ia2_5th_treeview.heading('semisters',text="Semister")
                    tree_cs_ia2_5th_treeview.heading('branch',text="Branch")

                    tree_cs_ia2_5th_treeview.column('cs_ia2_5th_subjects',width=200)
                    tree_cs_ia2_5th_treeview.column('cs_ia2_5th_date',width=150)
                    tree_cs_ia2_5th_treeview.column('cs_ia2_5th_time',width=150)
                    tree_cs_ia2_5th_treeview.column('cs_ia2_5th_code',width=150)
                    tree_cs_ia2_5th_treeview.column('semisters',width=150)
                    tree_cs_ia2_5th_treeview.column('branch',width=200)

                    tree_cs_ia2_5th_treeview['show']='headings'
                
                    tree_cs_ia2_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_cs_ia2_5th_ia_schedule()
                    tree_cs_ia2_5th_treeview.bind('<ButtonRelease-1>',get_cs_ia2_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Computer_Science_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    cs_ia2_6th_subjects_list=[]
                    def fetch_cs_ia2_6th_subjects():
                        #all_cs_ia2_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select cs_6th_subjects from all_cs_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    cs_ia2_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_cs_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_cs_ia2_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_cs_ia2_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_cs_ia2_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_cs_ia2_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'cs_ia2_6th_subjects','cs_ia2_6th_date','cs_ia2_6th_time','cs_ia2_6th_code','semisters','branch'
                                        cur.execute('insert into cs_ia2_6th_schedule(cs_ia2_6th_subjects,cs_ia2_6th_date,cs_ia2_6th_time,cs_ia2_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_cs_ia2_6th_subjects_entry.get(),
                                            self.var_cs_ia2_6th_date_entry.get(),
                                            self.var_cs_ia2_6th_time_entry.get(),
                                            self.var_cs_ia2_6th_code.get(),
                                            self.var_cs_ia2_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succs_ia2sfuly....',parent=frame)
                                        fetch_cs_ia2_6th_ia_schedule()
                                        con.close()
                    def fetch_cs_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_ia2_6th_schedule')
                            rows=cur.fetchall()
                            tree_cs_ia2_6th_treeview.delete(*tree_cs_ia2_6th_treeview.get_children())
                            for row in rows:
                                tree_cs_ia2_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_cs_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia2_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from cs_ia2_6th_schedule where cs_ia2_6th_subjects=?',(self.var_cs_ia2_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from cs_ia2_6th_schedule where cs_ia2_6th_subjects=? ',(self.var_cs_ia2_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_cs_ia2_6th_all()
                                    fetch_cs_ia2_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_cs_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia2_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update cs_ia2_6th_schedule set cs_ia2_6th_date=?,cs_ia2_6th_time=?,cs_ia2_6th_code=?,semisters=?,branch=?  where cs_ia2_6th_subjects=?',(
                                self.var_cs_ia2_6th_date_entry.get(),
                                self.var_cs_ia2_6th_time_entry.get(),
                                self.var_cs_ia2_6th_code.get(),
                                self.var_cs_ia2_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_cs_ia2_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succs_ia2sflly....',parent=frame)
                                fetch_cs_ia2_6th_ia_schedule()
                                clear_cs_ia2_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_cs_ia2_6th_all():
                        fetch_cs_ia2_6th_ia_schedule()
                        self.var_cs_ia2_6th_subjects_entry.set("")
                        self.var_cs_ia2_6th_date_entry.set("")
                        self.var_cs_ia2_6th_time_entry.set("")
                        self.var_cs_ia2_6th_code.set("")
                        self.var_cs_ia2_6th_semister.set("")
                        self.var_serach_cs_ia2_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succs_ia2sfuly.....',parent=frame)

                    def get_cs_ia2_6th_ia_schedule(ev):
                        read=tree_cs_ia2_6th_treeview.focus()
                        content=tree_cs_ia2_6th_treeview.item(read)
                        row=content['values']

                        self.var_cs_ia2_6th_subjects_entry.set(row[1])
                        self.var_cs_ia2_6th_date_entry.set(row[2])
                        self.var_cs_ia2_6th_time_entry.set(row[3])
                        self.var_cs_ia2_6th_code.set(row[4])
                        self.var_cs_ia2_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succs_ia2sfuly.....',parent=frame)                    
                    def serch_cs_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_cs_ia2_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from cs_ia2_6th_schedule where cs_ia2_6th_subjects=?",(self.var_serach_cs_ia2_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_cs_ia2_6th_treeview.delete(*tree_cs_ia2_6th_treeview.get_children())
                                for row in rows:
                                    tree_cs_ia2_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_cs_ia2_6th_subjects()
                    cs_ia2_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_cs_ia2_6th_subjects_entry,values=cs_ia2_6th_subjects_list).place(x=87,y=14)

                    cs_ia2_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_cs_ia2_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    cs_ia2_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia2_6th_time_entry).place(x=569,y=14)

                    cs_ia2_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia2_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_cs_ia2_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_cs_ia2_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_cs_ia2_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_cs_ia2_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_cs_ia2_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_cs_ia2_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_cs_ia2_6th_treeview=ttk.Treeview(tree_frame1,columns=('cs_ia2_6th_subjects','cs_ia2_6th_date','cs_ia2_6th_time','cs_ia2_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_cs_ia2_6th_treeview.xview)
                    scrolly.configure(command=tree_cs_ia2_6th_treeview.yview)

                    tree_cs_ia2_6th_treeview.heading('cs_ia2_6th_subjects',text="Subjects")
                    tree_cs_ia2_6th_treeview.heading('cs_ia2_6th_date',text="Date")
                    tree_cs_ia2_6th_treeview.heading('cs_ia2_6th_time',text="Time")
                    tree_cs_ia2_6th_treeview.heading('cs_ia2_6th_code',text="Code")
                    tree_cs_ia2_6th_treeview.heading('semisters',text="Semister")
                    tree_cs_ia2_6th_treeview.heading('branch',text="Branch")

                    tree_cs_ia2_6th_treeview.column('cs_ia2_6th_subjects',width=200)
                    tree_cs_ia2_6th_treeview.column('cs_ia2_6th_date',width=150)
                    tree_cs_ia2_6th_treeview.column('cs_ia2_6th_time',width=150)
                    tree_cs_ia2_6th_treeview.column('cs_ia2_6th_code',width=150)
                    tree_cs_ia2_6th_treeview.column('semisters',width=150)
                    tree_cs_ia2_6th_treeview.column('branch',width=200)

                    tree_cs_ia2_6th_treeview['show']='headings'
                
                    tree_cs_ia2_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_cs_ia2_6th_ia_schedule()
                    tree_cs_ia2_6th_treeview.bind('<ButtonRelease-1>',get_cs_ia2_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Computer_Science_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    cs_ia2_7th_subjects_list=[]
                    def fetch_cs_ia2_7th_subjects():
                        #all_cs_ia2_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select cs_7th_subjects from all_cs_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    cs_ia2_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_cs_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_cs_ia2_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_cs_ia2_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_cs_ia2_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_cs_ia2_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'cs_ia2_7th_subjects','cs_ia2_7th_date','cs_ia2_7th_time','cs_ia2_7th_code','semisters','branch'
                                        cur.execute('insert into cs_ia2_7th_schedule(cs_ia2_7th_subjects,cs_ia2_7th_date,cs_ia2_7th_time,cs_ia2_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_cs_ia2_7th_subjects_entry.get(),
                                            self.var_cs_ia2_7th_date_entry.get(),
                                            self.var_cs_ia2_7th_time_entry.get(),
                                            self.var_cs_ia2_7th_code.get(),
                                            self.var_cs_ia2_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succs_ia2sfuly....',parent=frame)
                                        fetch_cs_ia2_7th_ia_schedule()
                                        con.close()
                    def fetch_cs_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_ia2_7th_schedule')
                            rows=cur.fetchall()
                            tree_cs_ia2_7th_treeview.delete(*tree_cs_ia2_7th_treeview.get_children())
                            for row in rows:
                                tree_cs_ia2_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_cs_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia2_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from cs_ia2_7th_schedule where cs_ia2_7th_subjects=?',(self.var_cs_ia2_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from cs_ia2_7th_schedule where cs_ia2_7th_subjects=? ',(self.var_cs_ia2_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_cs_ia2_7th_all()
                                    fetch_cs_ia2_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_cs_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia2_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update cs_ia2_7th_schedule set cs_ia2_7th_date=?,cs_ia2_7th_time=?,cs_ia2_7th_code=?,semisters=?,branch=?  where cs_ia2_7th_subjects=?',(
                                self.var_cs_ia2_7th_date_entry.get(),
                                self.var_cs_ia2_7th_time_entry.get(),
                                self.var_cs_ia2_7th_code.get(),
                                self.var_cs_ia2_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_cs_ia2_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succs_ia2sflly....',parent=frame)
                                fetch_cs_ia2_7th_ia_schedule()
                                clear_cs_ia2_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_cs_ia2_7th_all():
                        fetch_cs_ia2_7th_ia_schedule()
                        self.var_cs_ia2_7th_subjects_entry.set("")
                        self.var_cs_ia2_7th_date_entry.set("")
                        self.var_cs_ia2_7th_time_entry.set("")
                        self.var_cs_ia2_7th_code.set("")
                        self.var_cs_ia2_7th_semister.set("")
                        self.var_serach_cs_ia2_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succs_ia2sfuly.....',parent=frame)

                    def get_cs_ia2_7th_ia_schedule(ev):
                        read=tree_cs_ia2_7th_treeview.focus()
                        content=tree_cs_ia2_7th_treeview.item(read)
                        row=content['values']

                        self.var_cs_ia2_7th_subjects_entry.set(row[1])
                        self.var_cs_ia2_7th_date_entry.set(row[2])
                        self.var_cs_ia2_7th_time_entry.set(row[3])
                        self.var_cs_ia2_7th_code.set(row[4])
                        self.var_cs_ia2_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succs_ia2sfuly.....',parent=frame)                    
                    def serch_cs_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_cs_ia2_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from cs_ia2_7th_schedule where cs_ia2_7th_subjects=?",(self.var_serach_cs_ia2_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_cs_ia2_7th_treeview.delete(*tree_cs_ia2_7th_treeview.get_children())
                                for row in rows:
                                    tree_cs_ia2_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_cs_ia2_7th_subjects()
                    cs_ia2_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_cs_ia2_7th_subjects_entry,values=cs_ia2_7th_subjects_list).place(x=87,y=14)

                    cs_ia2_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_cs_ia2_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    cs_ia2_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia2_7th_time_entry).place(x=569,y=14)

                    cs_ia2_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia2_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_cs_ia2_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_cs_ia2_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_cs_ia2_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_cs_ia2_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_cs_ia2_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_cs_ia2_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_cs_ia2_7th_treeview=ttk.Treeview(tree_frame1,columns=('cs_ia2_7th_subjects','cs_ia2_7th_date','cs_ia2_7th_time','cs_ia2_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_cs_ia2_7th_treeview.xview)
                    scrolly.configure(command=tree_cs_ia2_7th_treeview.yview)

                    tree_cs_ia2_7th_treeview.heading('cs_ia2_7th_subjects',text="Subjects")
                    tree_cs_ia2_7th_treeview.heading('cs_ia2_7th_date',text="Date")
                    tree_cs_ia2_7th_treeview.heading('cs_ia2_7th_time',text="Time")
                    tree_cs_ia2_7th_treeview.heading('cs_ia2_7th_code',text="Code")
                    tree_cs_ia2_7th_treeview.heading('semisters',text="Semister")
                    tree_cs_ia2_7th_treeview.heading('branch',text="Branch")

                    tree_cs_ia2_7th_treeview.column('cs_ia2_7th_subjects',width=200)
                    tree_cs_ia2_7th_treeview.column('cs_ia2_7th_date',width=150)
                    tree_cs_ia2_7th_treeview.column('cs_ia2_7th_time',width=150)
                    tree_cs_ia2_7th_treeview.column('cs_ia2_7th_code',width=150)
                    tree_cs_ia2_7th_treeview.column('semisters',width=150)
                    tree_cs_ia2_7th_treeview.column('branch',width=200)

                    tree_cs_ia2_7th_treeview['show']='headings'
                
                    tree_cs_ia2_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_cs_ia2_7th_ia_schedule()
                    tree_cs_ia2_7th_treeview.bind('<ButtonRelease-1>',get_cs_ia2_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Computer_Science_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    cs_ia2_8th_subjects_list=[]
                    def fetch_cs_ia2_8th_subjects():
                        #all_cs_ia2_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select cs_8th_subjects from all_cs_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    cs_ia2_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_cs_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_cs_ia2_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_cs_ia2_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_cs_ia2_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_cs_ia2_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'cs_ia2_8th_subjects','cs_ia2_8th_date','cs_ia2_8th_time','cs_ia2_8th_code','semisters','branch'
                                        cur.execute('insert into cs_ia2_8th_schedule(cs_ia2_8th_subjects,cs_ia2_8th_date,cs_ia2_8th_time,cs_ia2_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_cs_ia2_8th_subjects_entry.get(),
                                            self.var_cs_ia2_8th_date_entry.get(),
                                            self.var_cs_ia2_8th_time_entry.get(),
                                            self.var_cs_ia2_8th_code.get(),
                                            self.var_cs_ia2_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succs_ia2sfuly....',parent=frame)
                                        fetch_cs_ia2_8th_ia_schedule()
                                        con.close()
                    def fetch_cs_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_ia2_8th_schedule')
                            rows=cur.fetchall()
                            tree_cs_ia2_8th_treeview.delete(*tree_cs_ia2_8th_treeview.get_children())
                            for row in rows:
                                tree_cs_ia2_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_cs_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia2_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from cs_ia2_8th_schedule where cs_ia2_8th_subjects=?',(self.var_cs_ia2_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from cs_ia2_8th_schedule where cs_ia2_8th_subjects=? ',(self.var_cs_ia2_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_cs_ia2_8th_all()
                                    fetch_cs_ia2_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_cs_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia2_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update cs_ia2_8th_schedule set cs_ia2_8th_date=?,cs_ia2_8th_time=?,cs_ia2_8th_code=?,semisters=?,branch=?  where cs_ia2_8th_subjects=?',(
                                self.var_cs_ia2_8th_date_entry.get(),
                                self.var_cs_ia2_8th_time_entry.get(),
                                self.var_cs_ia2_8th_code.get(),
                                self.var_cs_ia2_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_cs_ia2_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succs_ia2sflly....',parent=frame)
                                fetch_cs_ia2_8th_ia_schedule()
                                clear_cs_ia2_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_cs_ia2_8th_all():
                        fetch_cs_ia2_8th_ia_schedule()
                        self.var_cs_ia2_8th_subjects_entry.set("")
                        self.var_cs_ia2_8th_date_entry.set("")
                        self.var_cs_ia2_8th_time_entry.set("")
                        self.var_cs_ia2_8th_code.set("")
                        self.var_cs_ia2_8th_semister.set("")
                        self.var_serach_cs_ia2_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succs_ia2sfuly.....',parent=frame)

                    def get_cs_ia2_8th_ia_schedule(ev):
                        read=tree_cs_ia2_8th_treeview.focus()
                        content=tree_cs_ia2_8th_treeview.item(read)
                        row=content['values']

                        self.var_cs_ia2_8th_subjects_entry.set(row[1])
                        self.var_cs_ia2_8th_date_entry.set(row[2])
                        self.var_cs_ia2_8th_time_entry.set(row[3])
                        self.var_cs_ia2_8th_code.set(row[4])
                        self.var_cs_ia2_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succs_ia2sfuly.....',parent=frame)                    
                    def serch_cs_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_cs_ia2_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from cs_ia2_8th_schedule where cs_ia2_8th_subjects=?",(self.var_serach_cs_ia2_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_cs_ia2_8th_treeview.delete(*tree_cs_ia2_8th_treeview.get_children())
                                for row in rows:
                                    tree_cs_ia2_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_cs_ia2_8th_subjects()
                    cs_ia2_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_cs_ia2_8th_subjects_entry,values=cs_ia2_8th_subjects_list).place(x=87,y=14)

                    cs_ia2_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_cs_ia2_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    cs_ia2_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia2_8th_time_entry).place(x=569,y=14)

                    cs_ia2_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia2_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_cs_ia2_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_cs_ia2_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_cs_ia2_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_cs_ia2_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_cs_ia2_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_cs_ia2_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_cs_ia2_8th_treeview=ttk.Treeview(tree_frame1,columns=('cs_ia2_8th_subjects','cs_ia2_8th_date','cs_ia2_8th_time','cs_ia2_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_cs_ia2_8th_treeview.xview)
                    scrolly.configure(command=tree_cs_ia2_8th_treeview.yview)

                    tree_cs_ia2_8th_treeview.heading('cs_ia2_8th_subjects',text="Subjects")
                    tree_cs_ia2_8th_treeview.heading('cs_ia2_8th_date',text="Date")
                    tree_cs_ia2_8th_treeview.heading('cs_ia2_8th_time',text="Time")
                    tree_cs_ia2_8th_treeview.heading('cs_ia2_8th_code',text="Code")
                    tree_cs_ia2_8th_treeview.heading('semisters',text="Semister")
                    tree_cs_ia2_8th_treeview.heading('branch',text="Branch")

                    tree_cs_ia2_8th_treeview.column('cs_ia2_8th_subjects',width=200)
                    tree_cs_ia2_8th_treeview.column('cs_ia2_8th_date',width=150)
                    tree_cs_ia2_8th_treeview.column('cs_ia2_8th_time',width=150)
                    tree_cs_ia2_8th_treeview.column('cs_ia2_8th_code',width=150)
                    tree_cs_ia2_8th_treeview.column('semisters',width=150)
                    tree_cs_ia2_8th_treeview.column('branch',width=200)

                    tree_cs_ia2_8th_treeview['show']='headings'
                
                    tree_cs_ia2_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_cs_ia2_8th_ia_schedule()
                    tree_cs_ia2_8th_treeview.bind('<ButtonRelease-1>',get_cs_ia2_8th_ia_schedule)
        ##########################################################################################################################################################################
        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Information_Science_and_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    ise_ia2_3rd_subjects_list=[]
                    def fetch_ise_ia2_3rd_subjects():
                        #all_ise_ia2_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ise_3rd_subjects from all_ise_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ise_ia2_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ise_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ise_ia2_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ise_ia2_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ise_ia2_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ise_ia2_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ise_ia2_3rd_subjects','ise_ia2_3rd_date','ise_ia2_3rd_time','ise_ia2_3rd_code','semisters','branch'
                                        cur.execute('insert into ise_ia2_3rd_schedule(ise_ia2_3rd_subjects,ise_ia2_3rd_date,ise_ia2_3rd_time,ise_ia2_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ise_ia2_3rd_subjects_entry.get(),
                                            self.var_ise_ia2_3rd_date_entry.get(),
                                            self.var_ise_ia2_3rd_time_entry.get(),
                                            self.var_ise_ia2_3rd_code.get(),
                                            self.var_ise_ia2_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ise_ia2_3rd_ia_schedule()
                                        con.close()
                    def fetch_ise_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_ia2_3rd_schedule')
                            rows=cur.fetchall()
                            tree_ise_ia2_3rd_treeview.delete(*tree_ise_ia2_3rd_treeview.get_children())
                            for row in rows:
                                tree_ise_ia2_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ise_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia2_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ise_ia2_3rd_schedule where ise_ia2_3rd_subjects=?',(self.var_ise_ia2_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ise_ia2_3rd_schedule where ise_ia2_3rd_subjects=? ',(self.var_ise_ia2_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ise_ia2_3rd_all()
                                    fetch_ise_ia2_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ise_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia2_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ise_ia2_3rd_schedule set ise_ia2_3rd_date=?,ise_ia2_3rd_time=?,ise_ia2_3rd_code=?,semisters=?,branch=?  where ise_ia2_3rd_subjects=?',(
                                self.var_ise_ia2_3rd_date_entry.get(),
                                self.var_ise_ia2_3rd_time_entry.get(),
                                self.var_ise_ia2_3rd_code.get(),
                                self.var_ise_ia2_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ise_ia2_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ise_ia2_3rd_ia_schedule()
                                clear_ise_ia2_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ise_ia2_3rd_all():
                        fetch_ise_ia2_3rd_ia_schedule()
                        self.var_ise_ia2_3rd_subjects_entry.set("")
                        self.var_ise_ia2_3rd_date_entry.set("")
                        self.var_ise_ia2_3rd_time_entry.set("")
                        self.var_ise_ia2_3rd_code.set("")
                        self.var_ise_ia2_3rd_semister.set("")
                        self.var_serach_ise_ia2_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ise_ia2_3rd_ia_schedule(ev):
                        read=tree_ise_ia2_3rd_treeview.focus()
                        content=tree_ise_ia2_3rd_treeview.item(read)
                        row=content['values']

                        self.var_ise_ia2_3rd_subjects_entry.set(row[1])
                        self.var_ise_ia2_3rd_date_entry.set(row[2])
                        self.var_ise_ia2_3rd_time_entry.set(row[3])
                        self.var_ise_ia2_3rd_code.set(row[4])
                        self.var_ise_ia2_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ise_ia2_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ise_ia2_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ise_ia2_3rd_schedule where ise_ia2_3rd_subjects=?",(self.var_serach_ise_ia2_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ise_ia2_3rd_treeview.delete(*tree_ise_ia2_3rd_treeview.get_children())
                                for row in rows:
                                    tree_ise_ia2_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ise_ia2_3rd_subjects()
                    ise_ia2_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ise_ia2_3rd_subjects_entry,values=ise_ia2_3rd_subjects_list).place(x=87,y=14)

                    ise_ia2_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ise_ia2_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ise_ia2_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia2_3rd_time_entry).place(x=569,y=14)

                    ise_ia2_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia2_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ise_ia2_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ise_ia2_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ise_ia2_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ise_ia2_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ise_ia2_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ise_ia2_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ise_ia2_3rd_treeview=ttk.Treeview(tree_frame1,columns=('ise_ia2_3rd_subjects','ise_ia2_3rd_date','ise_ia2_3rd_time','ise_ia2_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ise_ia2_3rd_treeview.xview)
                    scrolly.configure(command=tree_ise_ia2_3rd_treeview.yview)

                    tree_ise_ia2_3rd_treeview.heading('ise_ia2_3rd_subjects',text="Subjects")
                    tree_ise_ia2_3rd_treeview.heading('ise_ia2_3rd_date',text="Date")
                    tree_ise_ia2_3rd_treeview.heading('ise_ia2_3rd_time',text="Time")
                    tree_ise_ia2_3rd_treeview.heading('ise_ia2_3rd_code',text="Code")
                    tree_ise_ia2_3rd_treeview.heading('semisters',text="Semister")
                    tree_ise_ia2_3rd_treeview.heading('branch',text="Branch")

                    tree_ise_ia2_3rd_treeview.column('ise_ia2_3rd_subjects',width=200)
                    tree_ise_ia2_3rd_treeview.column('ise_ia2_3rd_date',width=150)
                    tree_ise_ia2_3rd_treeview.column('ise_ia2_3rd_time',width=150)
                    tree_ise_ia2_3rd_treeview.column('ise_ia2_3rd_code',width=150)
                    tree_ise_ia2_3rd_treeview.column('semisters',width=150)
                    tree_ise_ia2_3rd_treeview.column('branch',width=200)

                    tree_ise_ia2_3rd_treeview['show']='headings'
                
                    tree_ise_ia2_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_ise_ia2_3rd_ia_schedule()
                    tree_ise_ia2_3rd_treeview.bind('<ButtonRelease-1>',get_ise_ia2_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Information_Science_and_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    ise_ia2_4th_subjects_list=[]
                    def fetch_ise_ia2_4th_subjects():
                        #all_ise_ia2_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ise_4th_subjects from all_ise_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ise_ia2_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ise_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ise_ia2_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ise_ia2_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ise_ia2_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ise_ia2_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ise_ia2_4th_subjects','ise_ia2_4th_date','ise_ia2_4th_time','ise_ia2_4th_code','semisters','branch'
                                        cur.execute('insert into ise_ia2_4th_schedule(ise_ia2_4th_subjects,ise_ia2_4th_date,ise_ia2_4th_time,ise_ia2_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ise_ia2_4th_subjects_entry.get(),
                                            self.var_ise_ia2_4th_date_entry.get(),
                                            self.var_ise_ia2_4th_time_entry.get(),
                                            self.var_ise_ia2_4th_code.get(),
                                            self.var_ise_ia2_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ise_ia2_4th_ia_schedule()
                                        con.close()
                    def fetch_ise_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_ia2_4th_schedule')
                            rows=cur.fetchall()
                            tree_ise_ia2_4th_treeview.delete(*tree_ise_ia2_4th_treeview.get_children())
                            for row in rows:
                                tree_ise_ia2_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ise_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia2_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ise_ia2_4th_schedule where ise_ia2_4th_subjects=?',(self.var_ise_ia2_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ise_ia2_4th_schedule where ise_ia2_4th_subjects=? ',(self.var_ise_ia2_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ise_ia2_4th_all()
                                    fetch_ise_ia2_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ise_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia2_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ise_ia2_4th_schedule set ise_ia2_4th_date=?,ise_ia2_4th_time=?,ise_ia2_4th_code=?,semisters=?,branch=?  where ise_ia2_4th_subjects=?',(
                                self.var_ise_ia2_4th_date_entry.get(),
                                self.var_ise_ia2_4th_time_entry.get(),
                                self.var_ise_ia2_4th_code.get(),
                                self.var_ise_ia2_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ise_ia2_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ise_ia2_4th_ia_schedule()
                                clear_ise_ia2_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ise_ia2_4th_all():
                        fetch_ise_ia2_4th_ia_schedule()
                        self.var_ise_ia2_4th_subjects_entry.set("")
                        self.var_ise_ia2_4th_date_entry.set("")
                        self.var_ise_ia2_4th_time_entry.set("")
                        self.var_ise_ia2_4th_code.set("")
                        self.var_ise_ia2_4th_semister.set("")
                        self.var_serach_ise_ia2_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ise_ia2_4th_ia_schedule(ev):
                        read=tree_ise_ia2_4th_treeview.focus()
                        content=tree_ise_ia2_4th_treeview.item(read)
                        row=content['values']

                        self.var_ise_ia2_4th_subjects_entry.set(row[1])
                        self.var_ise_ia2_4th_date_entry.set(row[2])
                        self.var_ise_ia2_4th_time_entry.set(row[3])
                        self.var_ise_ia2_4th_code.set(row[4])
                        self.var_ise_ia2_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ise_ia2_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ise_ia2_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ise_ia2_4th_schedule where ise_ia2_4th_subjects=?",(self.var_serach_ise_ia2_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ise_ia2_4th_treeview.delete(*tree_ise_ia2_4th_treeview.get_children())
                                for row in rows:
                                    tree_ise_ia2_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ise_ia2_4th_subjects()
                    ise_ia2_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ise_ia2_4th_subjects_entry,values=ise_ia2_4th_subjects_list).place(x=87,y=14)

                    ise_ia2_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ise_ia2_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ise_ia2_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia2_4th_time_entry).place(x=569,y=14)

                    ise_ia2_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia2_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ise_ia2_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ise_ia2_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ise_ia2_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ise_ia2_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ise_ia2_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ise_ia2_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ise_ia2_4th_treeview=ttk.Treeview(tree_frame1,columns=('ise_ia2_4th_subjects','ise_ia2_4th_date','ise_ia2_4th_time','ise_ia2_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ise_ia2_4th_treeview.xview)
                    scrolly.configure(command=tree_ise_ia2_4th_treeview.yview)

                    tree_ise_ia2_4th_treeview.heading('ise_ia2_4th_subjects',text="Subjects")
                    tree_ise_ia2_4th_treeview.heading('ise_ia2_4th_date',text="Date")
                    tree_ise_ia2_4th_treeview.heading('ise_ia2_4th_time',text="Time")
                    tree_ise_ia2_4th_treeview.heading('ise_ia2_4th_code',text="Code")
                    tree_ise_ia2_4th_treeview.heading('semisters',text="Semister")
                    tree_ise_ia2_4th_treeview.heading('branch',text="Branch")

                    tree_ise_ia2_4th_treeview.column('ise_ia2_4th_subjects',width=200)
                    tree_ise_ia2_4th_treeview.column('ise_ia2_4th_date',width=150)
                    tree_ise_ia2_4th_treeview.column('ise_ia2_4th_time',width=150)
                    tree_ise_ia2_4th_treeview.column('ise_ia2_4th_code',width=150)
                    tree_ise_ia2_4th_treeview.column('semisters',width=150)
                    tree_ise_ia2_4th_treeview.column('branch',width=200)

                    tree_ise_ia2_4th_treeview['show']='headings'
                
                    tree_ise_ia2_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ise_ia2_4th_ia_schedule()
                    tree_ise_ia2_4th_treeview.bind('<ButtonRelease-1>',get_ise_ia2_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Information_Science_and_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    ise_ia2_5th_subjects_list=[]
                    def fetch_ise_ia2_5th_subjects():
                        #all_ise_ia2_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ise_5th_subjects from all_ise_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ise_ia2_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ise_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ise_ia2_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ise_ia2_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ise_ia2_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ise_ia2_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ise_ia2_5th_subjects','ise_ia2_5th_date','ise_ia2_5th_time','ise_ia2_5th_code','semisters','branch'
                                        cur.execute('insert into ise_ia2_5th_schedule(ise_ia2_5th_subjects,ise_ia2_5th_date,ise_ia2_5th_time,ise_ia2_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ise_ia2_5th_subjects_entry.get(),
                                            self.var_ise_ia2_5th_date_entry.get(),
                                            self.var_ise_ia2_5th_time_entry.get(),
                                            self.var_ise_ia2_5th_code.get(),
                                            self.var_ise_ia2_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ise_ia2_5th_ia_schedule()
                                        con.close()
                    def fetch_ise_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_ia2_5th_schedule')
                            rows=cur.fetchall()
                            tree_ise_ia2_5th_treeview.delete(*tree_ise_ia2_5th_treeview.get_children())
                            for row in rows:
                                tree_ise_ia2_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ise_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia2_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ise_ia2_5th_schedule where ise_ia2_5th_subjects=?',(self.var_ise_ia2_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ise_ia2_5th_schedule where ise_ia2_5th_subjects=? ',(self.var_ise_ia2_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ise_ia2_5th_all()
                                    fetch_ise_ia2_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ise_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia2_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ise_ia2_5th_schedule set ise_ia2_5th_date=?,ise_ia2_5th_time=?,ise_ia2_5th_code=?,semisters=?,branch=?  where ise_ia2_5th_subjects=?',(
                                self.var_ise_ia2_5th_date_entry.get(),
                                self.var_ise_ia2_5th_time_entry.get(),
                                self.var_ise_ia2_5th_code.get(),
                                self.var_ise_ia2_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ise_ia2_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ise_ia2_5th_ia_schedule()
                                clear_ise_ia2_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ise_ia2_5th_all():
                        fetch_ise_ia2_5th_ia_schedule()
                        self.var_ise_ia2_5th_subjects_entry.set("")
                        self.var_ise_ia2_5th_date_entry.set("")
                        self.var_ise_ia2_5th_time_entry.set("")
                        self.var_ise_ia2_5th_code.set("")
                        self.var_ise_ia2_5th_semister.set("")
                        self.var_serach_ise_ia2_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ise_ia2_5th_ia_schedule(ev):
                        read=tree_ise_ia2_5th_treeview.focus()
                        content=tree_ise_ia2_5th_treeview.item(read)
                        row=content['values']

                        self.var_ise_ia2_5th_subjects_entry.set(row[1])
                        self.var_ise_ia2_5th_date_entry.set(row[2])
                        self.var_ise_ia2_5th_time_entry.set(row[3])
                        self.var_ise_ia2_5th_code.set(row[4])
                        self.var_ise_ia2_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ise_ia2_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ise_ia2_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ise_ia2_5th_schedule where ise_ia2_5th_subjects=?",(self.var_serach_ise_ia2_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ise_ia2_5th_treeview.delete(*tree_ise_ia2_5th_treeview.get_children())
                                for row in rows:
                                    tree_ise_ia2_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ise_ia2_5th_subjects()
                    ise_ia2_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ise_ia2_5th_subjects_entry,values=ise_ia2_5th_subjects_list).place(x=87,y=14)

                    ise_ia2_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ise_ia2_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ise_ia2_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia2_5th_time_entry).place(x=569,y=14)

                    ise_ia2_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia2_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ise_ia2_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ise_ia2_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ise_ia2_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ise_ia2_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ise_ia2_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ise_ia2_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ise_ia2_5th_treeview=ttk.Treeview(tree_frame1,columns=('ise_ia2_5th_subjects','ise_ia2_5th_date','ise_ia2_5th_time','ise_ia2_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ise_ia2_5th_treeview.xview)
                    scrolly.configure(command=tree_ise_ia2_5th_treeview.yview)

                    tree_ise_ia2_5th_treeview.heading('ise_ia2_5th_subjects',text="Subjects")
                    tree_ise_ia2_5th_treeview.heading('ise_ia2_5th_date',text="Date")
                    tree_ise_ia2_5th_treeview.heading('ise_ia2_5th_time',text="Time")
                    tree_ise_ia2_5th_treeview.heading('ise_ia2_5th_code',text="Code")
                    tree_ise_ia2_5th_treeview.heading('semisters',text="Semister")
                    tree_ise_ia2_5th_treeview.heading('branch',text="Branch")

                    tree_ise_ia2_5th_treeview.column('ise_ia2_5th_subjects',width=200)
                    tree_ise_ia2_5th_treeview.column('ise_ia2_5th_date',width=150)
                    tree_ise_ia2_5th_treeview.column('ise_ia2_5th_time',width=150)
                    tree_ise_ia2_5th_treeview.column('ise_ia2_5th_code',width=150)
                    tree_ise_ia2_5th_treeview.column('semisters',width=150)
                    tree_ise_ia2_5th_treeview.column('branch',width=200)

                    tree_ise_ia2_5th_treeview['show']='headings'
                
                    tree_ise_ia2_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ise_ia2_5th_ia_schedule()
                    tree_ise_ia2_5th_treeview.bind('<ButtonRelease-1>',get_ise_ia2_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Information_Science_and_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    ise_ia2_6th_subjects_list=[]
                    def fetch_ise_ia2_6th_subjects():
                        #all_ise_ia2_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ise_6th_subjects from all_ise_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ise_ia2_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ise_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ise_ia2_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ise_ia2_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ise_ia2_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ise_ia2_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ise_ia2_6th_subjects','ise_ia2_6th_date','ise_ia2_6th_time','ise_ia2_6th_code','semisters','branch'
                                        cur.execute('insert into ise_ia2_6th_schedule(ise_ia2_6th_subjects,ise_ia2_6th_date,ise_ia2_6th_time,ise_ia2_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ise_ia2_6th_subjects_entry.get(),
                                            self.var_ise_ia2_6th_date_entry.get(),
                                            self.var_ise_ia2_6th_time_entry.get(),
                                            self.var_ise_ia2_6th_code.get(),
                                            self.var_ise_ia2_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ise_ia2_6th_ia_schedule()
                                        con.close()
                    def fetch_ise_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_ia2_6th_schedule')
                            rows=cur.fetchall()
                            tree_ise_ia2_6th_treeview.delete(*tree_ise_ia2_6th_treeview.get_children())
                            for row in rows:
                                tree_ise_ia2_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ise_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia2_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ise_ia2_6th_schedule where ise_ia2_6th_subjects=?',(self.var_ise_ia2_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ise_ia2_6th_schedule where ise_ia2_6th_subjects=? ',(self.var_ise_ia2_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ise_ia2_6th_all()
                                    fetch_ise_ia2_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ise_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia2_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ise_ia2_6th_schedule set ise_ia2_6th_date=?,ise_ia2_6th_time=?,ise_ia2_6th_code=?,semisters=?,branch=?  where ise_ia2_6th_subjects=?',(
                                self.var_ise_ia2_6th_date_entry.get(),
                                self.var_ise_ia2_6th_time_entry.get(),
                                self.var_ise_ia2_6th_code.get(),
                                self.var_ise_ia2_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ise_ia2_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ise_ia2_6th_ia_schedule()
                                clear_ise_ia2_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ise_ia2_6th_all():
                        fetch_ise_ia2_6th_ia_schedule()
                        self.var_ise_ia2_6th_subjects_entry.set("")
                        self.var_ise_ia2_6th_date_entry.set("")
                        self.var_ise_ia2_6th_time_entry.set("")
                        self.var_ise_ia2_6th_code.set("")
                        self.var_ise_ia2_6th_semister.set("")
                        self.var_serach_ise_ia2_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ise_ia2_6th_ia_schedule(ev):
                        read=tree_ise_ia2_6th_treeview.focus()
                        content=tree_ise_ia2_6th_treeview.item(read)
                        row=content['values']

                        self.var_ise_ia2_6th_subjects_entry.set(row[1])
                        self.var_ise_ia2_6th_date_entry.set(row[2])
                        self.var_ise_ia2_6th_time_entry.set(row[3])
                        self.var_ise_ia2_6th_code.set(row[4])
                        self.var_ise_ia2_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ise_ia2_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ise_ia2_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ise_ia2_6th_schedule where ise_ia2_6th_subjects=?",(self.var_serach_ise_ia2_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ise_ia2_6th_treeview.delete(*tree_ise_ia2_6th_treeview.get_children())
                                for row in rows:
                                    tree_ise_ia2_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ise_ia2_6th_subjects()
                    ise_ia2_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ise_ia2_6th_subjects_entry,values=ise_ia2_6th_subjects_list).place(x=87,y=14)

                    ise_ia2_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ise_ia2_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ise_ia2_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia2_6th_time_entry).place(x=569,y=14)

                    ise_ia2_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia2_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ise_ia2_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ise_ia2_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ise_ia2_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ise_ia2_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ise_ia2_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ise_ia2_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ise_ia2_6th_treeview=ttk.Treeview(tree_frame1,columns=('ise_ia2_6th_subjects','ise_ia2_6th_date','ise_ia2_6th_time','ise_ia2_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ise_ia2_6th_treeview.xview)
                    scrolly.configure(command=tree_ise_ia2_6th_treeview.yview)

                    tree_ise_ia2_6th_treeview.heading('ise_ia2_6th_subjects',text="Subjects")
                    tree_ise_ia2_6th_treeview.heading('ise_ia2_6th_date',text="Date")
                    tree_ise_ia2_6th_treeview.heading('ise_ia2_6th_time',text="Time")
                    tree_ise_ia2_6th_treeview.heading('ise_ia2_6th_code',text="Code")
                    tree_ise_ia2_6th_treeview.heading('semisters',text="Semister")
                    tree_ise_ia2_6th_treeview.heading('branch',text="Branch")

                    tree_ise_ia2_6th_treeview.column('ise_ia2_6th_subjects',width=200)
                    tree_ise_ia2_6th_treeview.column('ise_ia2_6th_date',width=150)
                    tree_ise_ia2_6th_treeview.column('ise_ia2_6th_time',width=150)
                    tree_ise_ia2_6th_treeview.column('ise_ia2_6th_code',width=150)
                    tree_ise_ia2_6th_treeview.column('semisters',width=150)
                    tree_ise_ia2_6th_treeview.column('branch',width=200)

                    tree_ise_ia2_6th_treeview['show']='headings'
                
                    tree_ise_ia2_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ise_ia2_6th_ia_schedule()
                    tree_ise_ia2_6th_treeview.bind('<ButtonRelease-1>',get_ise_ia2_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Information_Science_and_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    ise_ia2_7th_subjects_list=[]
                    def fetch_ise_ia2_7th_subjects():
                        #all_ise_ia2_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ise_7th_subjects from all_ise_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ise_ia2_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ise_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ise_ia2_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ise_ia2_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ise_ia2_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ise_ia2_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ise_ia2_7th_subjects','ise_ia2_7th_date','ise_ia2_7th_time','ise_ia2_7th_code','semisters','branch'
                                        cur.execute('insert into ise_ia2_7th_schedule(ise_ia2_7th_subjects,ise_ia2_7th_date,ise_ia2_7th_time,ise_ia2_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ise_ia2_7th_subjects_entry.get(),
                                            self.var_ise_ia2_7th_date_entry.get(),
                                            self.var_ise_ia2_7th_time_entry.get(),
                                            self.var_ise_ia2_7th_code.get(),
                                            self.var_ise_ia2_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ise_ia2_7th_ia_schedule()
                                        con.close()
                    def fetch_ise_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_ia2_7th_schedule')
                            rows=cur.fetchall()
                            tree_ise_ia2_7th_treeview.delete(*tree_ise_ia2_7th_treeview.get_children())
                            for row in rows:
                                tree_ise_ia2_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ise_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia2_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ise_ia2_7th_schedule where ise_ia2_7th_subjects=?',(self.var_ise_ia2_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ise_ia2_7th_schedule where ise_ia2_7th_subjects=? ',(self.var_ise_ia2_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ise_ia2_7th_all()
                                    fetch_ise_ia2_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ise_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia2_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ise_ia2_7th_schedule set ise_ia2_7th_date=?,ise_ia2_7th_time=?,ise_ia2_7th_code=?,semisters=?,branch=?  where ise_ia2_7th_subjects=?',(
                                self.var_ise_ia2_7th_date_entry.get(),
                                self.var_ise_ia2_7th_time_entry.get(),
                                self.var_ise_ia2_7th_code.get(),
                                self.var_ise_ia2_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ise_ia2_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ise_ia2_7th_ia_schedule()
                                clear_ise_ia2_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ise_ia2_7th_all():
                        fetch_ise_ia2_7th_ia_schedule()
                        self.var_ise_ia2_7th_subjects_entry.set("")
                        self.var_ise_ia2_7th_date_entry.set("")
                        self.var_ise_ia2_7th_time_entry.set("")
                        self.var_ise_ia2_7th_code.set("")
                        self.var_ise_ia2_7th_semister.set("")
                        self.var_serach_ise_ia2_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ise_ia2_7th_ia_schedule(ev):
                        read=tree_ise_ia2_7th_treeview.focus()
                        content=tree_ise_ia2_7th_treeview.item(read)
                        row=content['values']

                        self.var_ise_ia2_7th_subjects_entry.set(row[1])
                        self.var_ise_ia2_7th_date_entry.set(row[2])
                        self.var_ise_ia2_7th_time_entry.set(row[3])
                        self.var_ise_ia2_7th_code.set(row[4])
                        self.var_ise_ia2_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ise_ia2_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ise_ia2_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ise_ia2_7th_schedule where ise_ia2_7th_subjects=?",(self.var_serach_ise_ia2_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ise_ia2_7th_treeview.delete(*tree_ise_ia2_7th_treeview.get_children())
                                for row in rows:
                                    tree_ise_ia2_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ise_ia2_7th_subjects()
                    ise_ia2_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ise_ia2_7th_subjects_entry,values=ise_ia2_7th_subjects_list).place(x=87,y=14)

                    ise_ia2_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ise_ia2_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ise_ia2_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia2_7th_time_entry).place(x=569,y=14)

                    ise_ia2_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia2_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ise_ia2_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ise_ia2_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ise_ia2_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ise_ia2_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ise_ia2_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ise_ia2_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ise_ia2_7th_treeview=ttk.Treeview(tree_frame1,columns=('ise_ia2_7th_subjects','ise_ia2_7th_date','ise_ia2_7th_time','ise_ia2_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ise_ia2_7th_treeview.xview)
                    scrolly.configure(command=tree_ise_ia2_7th_treeview.yview)

                    tree_ise_ia2_7th_treeview.heading('ise_ia2_7th_subjects',text="Subjects")
                    tree_ise_ia2_7th_treeview.heading('ise_ia2_7th_date',text="Date")
                    tree_ise_ia2_7th_treeview.heading('ise_ia2_7th_time',text="Time")
                    tree_ise_ia2_7th_treeview.heading('ise_ia2_7th_code',text="Code")
                    tree_ise_ia2_7th_treeview.heading('semisters',text="Semister")
                    tree_ise_ia2_7th_treeview.heading('branch',text="Branch")

                    tree_ise_ia2_7th_treeview.column('ise_ia2_7th_subjects',width=200)
                    tree_ise_ia2_7th_treeview.column('ise_ia2_7th_date',width=150)
                    tree_ise_ia2_7th_treeview.column('ise_ia2_7th_time',width=150)
                    tree_ise_ia2_7th_treeview.column('ise_ia2_7th_code',width=150)
                    tree_ise_ia2_7th_treeview.column('semisters',width=150)
                    tree_ise_ia2_7th_treeview.column('branch',width=200)

                    tree_ise_ia2_7th_treeview['show']='headings'
                
                    tree_ise_ia2_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ise_ia2_7th_ia_schedule()
                    tree_ise_ia2_7th_treeview.bind('<ButtonRelease-1>',get_ise_ia2_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Information_Science_and_Engineering":
                if self.var_ia_select.get()=='IA_2':
                    ise_ia2_8th_subjects_list=[]
                    def fetch_ise_ia2_8th_subjects():
                        #all_ise_ia2_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ise_8th_subjects from all_ise_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ise_ia2_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ise_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ise_ia2_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ise_ia2_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ise_ia2_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ise_ia2_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ise_ia2_8th_subjects','ise_ia2_8th_date','ise_ia2_8th_time','ise_ia2_8th_code','semisters','branch'
                                        cur.execute('insert into ise_ia2_8th_schedule(ise_ia2_8th_subjects,ise_ia2_8th_date,ise_ia2_8th_time,ise_ia2_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ise_ia2_8th_subjects_entry.get(),
                                            self.var_ise_ia2_8th_date_entry.get(),
                                            self.var_ise_ia2_8th_time_entry.get(),
                                            self.var_ise_ia2_8th_code.get(),
                                            self.var_ise_ia2_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ise_ia2_8th_ia_schedule()
                                        con.close()
                    def fetch_ise_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_ia2_8th_schedule')
                            rows=cur.fetchall()
                            tree_ise_ia2_8th_treeview.delete(*tree_ise_ia2_8th_treeview.get_children())
                            for row in rows:
                                tree_ise_ia2_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ise_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia2_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ise_ia2_8th_schedule where ise_ia2_8th_subjects=?',(self.var_ise_ia2_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ise_ia2_8th_schedule where ise_ia2_8th_subjects=? ',(self.var_ise_ia2_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ise_ia2_8th_all()
                                    fetch_ise_ia2_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ise_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia2_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ise_ia2_8th_schedule set ise_ia2_8th_date=?,ise_ia2_8th_time=?,ise_ia2_8th_code=?,semisters=?,branch=?  where ise_ia2_8th_subjects=?',(
                                self.var_ise_ia2_8th_date_entry.get(),
                                self.var_ise_ia2_8th_time_entry.get(),
                                self.var_ise_ia2_8th_code.get(),
                                self.var_ise_ia2_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ise_ia2_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ise_ia2_8th_ia_schedule()
                                clear_ise_ia2_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ise_ia2_8th_all():
                        fetch_ise_ia2_8th_ia_schedule()
                        self.var_ise_ia2_8th_subjects_entry.set("")
                        self.var_ise_ia2_8th_date_entry.set("")
                        self.var_ise_ia2_8th_time_entry.set("")
                        self.var_ise_ia2_8th_code.set("")
                        self.var_ise_ia2_8th_semister.set("")
                        self.var_serach_ise_ia2_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ise_ia2_8th_ia_schedule(ev):
                        read=tree_ise_ia2_8th_treeview.focus()
                        content=tree_ise_ia2_8th_treeview.item(read)
                        row=content['values']

                        self.var_ise_ia2_8th_subjects_entry.set(row[1])
                        self.var_ise_ia2_8th_date_entry.set(row[2])
                        self.var_ise_ia2_8th_time_entry.set(row[3])
                        self.var_ise_ia2_8th_code.set(row[4])
                        self.var_ise_ia2_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ise_ia2_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ise_ia2_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ise_ia2_8th_schedule where ise_ia2_8th_subjects=?",(self.var_serach_ise_ia2_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ise_ia2_8th_treeview.delete(*tree_ise_ia2_8th_treeview.get_children())
                                for row in rows:
                                    tree_ise_ia2_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame2)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ise_ia2_8th_subjects()
                    ise_ia2_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ise_ia2_8th_subjects_entry,values=ise_ia2_8th_subjects_list).place(x=87,y=14)

                    ise_ia2_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ise_ia2_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ise_ia2_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia2_8th_time_entry).place(x=569,y=14)

                    ise_ia2_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia2_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ise_ia2_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ise_ia2_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ise_ia2_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ise_ia2_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ise_ia2_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ise_ia2_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ise_ia2_8th_treeview=ttk.Treeview(tree_frame1,columns=('ise_ia2_8th_subjects','ise_ia2_8th_date','ise_ia2_8th_time','ise_ia2_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ise_ia2_8th_treeview.xview)
                    scrolly.configure(command=tree_ise_ia2_8th_treeview.yview)

                    tree_ise_ia2_8th_treeview.heading('ise_ia2_8th_subjects',text="Subjects")
                    tree_ise_ia2_8th_treeview.heading('ise_ia2_8th_date',text="Date")
                    tree_ise_ia2_8th_treeview.heading('ise_ia2_8th_time',text="Time")
                    tree_ise_ia2_8th_treeview.heading('ise_ia2_8th_code',text="Code")
                    tree_ise_ia2_8th_treeview.heading('semisters',text="Semister")
                    tree_ise_ia2_8th_treeview.heading('branch',text="Branch")

                    tree_ise_ia2_8th_treeview.column('ise_ia2_8th_subjects',width=200)
                    tree_ise_ia2_8th_treeview.column('ise_ia2_8th_date',width=150)
                    tree_ise_ia2_8th_treeview.column('ise_ia2_8th_time',width=150)
                    tree_ise_ia2_8th_treeview.column('ise_ia2_8th_code',width=150)
                    tree_ise_ia2_8th_treeview.column('semisters',width=150)
                    tree_ise_ia2_8th_treeview.column('branch',width=200)

                    tree_ise_ia2_8th_treeview['show']='headings'
                
                    tree_ise_ia2_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ise_ia2_8th_ia_schedule()
                    tree_ise_ia2_8th_treeview.bind('<ButtonRelease-1>',get_ise_ia2_8th_ia_schedule)

            ###########################################################################################################################################
            #################################################################################################################################
            ############################################################################################################################################3
            ########################################################################################################################################
            ######################################################################################################################################3
            ##################################################################################################################################333
            ###############################33333333333333333333333#############################################################################33333333333333333
            ############3333333333333333333333#########################################################################3
    
        if self.var_student_semister_select.get()=='CHEMISTRY_cycle':
            if self.var_student_branch_select.get()=="1st_semister":
                if self.var_ia_select.get()=='IA_3':
                    che_ia3_subjects_list=[]
                    def fetch_che_ia3_subjects():
                        #all_che_ia3_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select che_subjects from all_che_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    che_ia3_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_che_ia3_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_che_ia3_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_che_ia3_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_che_ia3_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_che_ia3_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'che_ia3_subjects','che_ia3_date','che_ia3_time','che_ia3_code','semisters','branch'
                                        cur.execute('insert into che_ia3_schedule(che_ia3_subjects,che_ia3_date,che_ia3_time,che_ia3_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_che_ia3_subjects_entry.get(),
                                            self.var_che_ia3_date_entry.get(),
                                            self.var_che_ia3_time_entry.get(),
                                            self.var_che_ia3_code.get(),
                                            self.var_che_ia3_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_che_ia3_ia_schedule()
                                        con.close()
                    def fetch_che_ia3_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from che_ia3_schedule')
                            rows=cur.fetchall()
                            tree_che_ia3_treeview.delete(*tree_che_ia3_treeview.get_children())
                            for row in rows:
                                tree_che_ia3_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerr('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_che_ia3_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_che_ia3_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from che_ia3_schedule where che_ia3_subjects=?',(self.var_che_ia3_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from che_ia3_schedule where che_ia3_subjects=? ',(self.var_che_ia3_subjects_entry.get(),))
                                        messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                        con.commit()
                                        clear_che_ia3_all()
                                        fetch_che_ia3_ia_schedule()
                                        con.close()
                                    
                                    if option==False:
                                        messagebox.showinfo('Info','the data is not deleted.',parent=frame)
                                
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_che_ia3_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_che_ia3_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update che_ia3_schedule set che_ia3_date=?,che_ia3_time=?,che_ia3_code=?,semisters=?,branch=?  where che_ia3_subjects=?',(
                                self.var_che_ia3_date_entry.get(),
                                self.var_che_ia3_time_entry.get(),
                                self.var_che_ia3_code.get(),
                                self.var_che_ia3_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_che_ia3_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_che_ia3_ia_schedule()
                                clear_che_ia3_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_che_ia3_all():
                        fetch_che_ia3_ia_schedule()
                        self.var_che_ia3_subjects_entry.set("")
                        self.var_che_ia3_date_entry.set("")
                        self.var_che_ia3_time_entry.set("")
                        self.var_che_ia3_code.set("")
                        self.var_che_ia3_semister.set("")
                        self.var_serach_che_ia3_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_che_ia3_ia_schedule(ev):
                        read=tree_che_ia3_treeview.focus()
                        content=tree_che_ia3_treeview.item(read)
                        row=content['values']

                        self.var_che_ia3_subjects_entry.set(row[1])
                        self.var_che_ia3_date_entry.set(row[2])
                        self.var_che_ia3_time_entry.set(row[3])
                        self.var_che_ia3_code.set(row[4])
                        self.var_che_ia3_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_che_ia3_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_che_ia3_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from che_ia3_schedule where che_ia3_subjects=?",(self.var_serach_che_ia3_semisters.get(),))
                                rows=cur.fetchall()
                                tree_che_ia3_treeview.delete(*tree_che_ia3_treeview.get_children())
                                for row in rows:
                                    tree_che_ia3_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_che_ia3_subjects()
                    che_ia3_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_che_ia3_subjects_entry,values=che_ia3_subjects_list).place(x=87,y=14)

                    che_ia3_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_che_ia3_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    che_ia3_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_che_ia3_time_entry).place(x=569,y=14)

                    che_ia3_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_che_ia3_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_che_ia3_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_che_ia3_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_che_ia3_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_che_ia3_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_che_ia3_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_che_ia3_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_che_ia3_treeview=ttk.Treeview(tree_frame1,columns=('che_ia3_subjects','che_ia3_date','che_ia3_time','che_ia3_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_che_ia3_treeview.xview)
                    scrolly.configure(command=tree_che_ia3_treeview.yview)

                    tree_che_ia3_treeview.heading('che_ia3_subjects',text="Subjects")
                    tree_che_ia3_treeview.heading('che_ia3_date',text="Date")
                    tree_che_ia3_treeview.heading('che_ia3_time',text="Time")
                    tree_che_ia3_treeview.heading('che_ia3_code',text="Code")
                    tree_che_ia3_treeview.heading('semisters',text="Semister")
                    tree_che_ia3_treeview.heading('branch',text="Branch")

                    tree_che_ia3_treeview.column('che_ia3_subjects',width=200)
                    tree_che_ia3_treeview.column('che_ia3_date',width=150)
                    tree_che_ia3_treeview.column('che_ia3_time',width=150)
                    tree_che_ia3_treeview.column('che_ia3_code',width=150)
                    tree_che_ia3_treeview.column('semisters',width=150)
                    tree_che_ia3_treeview.column('branch',width=200)

                    tree_che_ia3_treeview['show']='headings'
                
                    tree_che_ia3_treeview.pack(fill=BOTH,expand=1)
                    fetch_che_ia3_ia_schedule()
                    tree_che_ia3_treeview.bind('<ButtonRelease-1>',get_che_ia3_ia_schedule)
        if self.var_student_semister_select.get()=='PHYSICS_cycle':
            if self.var_ia_select.get()=='IA_3':
                if self.var_student_branch_select.get()=="2nd_semister":
                    phy_ia3_subjects_list=[]
                    def fetch_phy_ia3_subjects():
                        #all_phy_ia3_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select phy_subjects from all_phy_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    phy_ia3_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_phy_ia3_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_phy_ia3_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_phy_ia3_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_phy_ia3_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_phy_ia3_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'phy_ia3_subjects','phy_ia3_date','phy_ia3_time','phy_ia3_code','semisters','branch'
                                        cur.execute('insert into phy_ia3_schedule(phy_ia3_subjects,phy_ia3_date,phy_ia3_time,phy_ia3_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_phy_ia3_subjects_entry.get(),
                                            self.var_phy_ia3_date_entry.get(),
                                            self.var_phy_ia3_time_entry.get(),
                                            self.var_phy_ia3_code.get(),
                                            self.var_phy_ia3_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_phy_ia3_ia_schedule()
                                        con.close()
                    def fetch_phy_ia3_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from phy_ia3_schedule')
                            rows=cur.fetchall()
                            tree_phy_ia3_treeview.delete(*tree_phy_ia3_treeview.get_children())
                            for row in rows:
                                tree_phy_ia3_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_phy_ia3_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_phy_ia3_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from phy_ia3_schedule where phy_ia3_subjects=?',(self.var_phy_ia3_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from phy_ia3_schedule where phy_ia3_subjects=? ',(self.var_phy_ia3_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_phy_ia3_all()
                                    fetch_phy_ia3_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_phy_ia3_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_phy_ia3_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update phy_ia3_schedule set phy_ia3_date=?,phy_ia3_time=?,phy_ia3_code=?,semisters=?,branch=?  where phy_ia3_subjects=?',(
                                self.var_phy_ia3_date_entry.get(),
                                self.var_phy_ia3_time_entry.get(),
                                self.var_phy_ia3_code.get(),
                                self.var_phy_ia3_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_phy_ia3_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_phy_ia3_ia_schedule()
                                clear_phy_ia3_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_phy_ia3_all():
                        fetch_phy_ia3_ia_schedule()
                        self.var_phy_ia3_subjects_entry.set("")
                        self.var_phy_ia3_date_entry.set("")
                        self.var_phy_ia3_time_entry.set("")
                        self.var_phy_ia3_code.set("")
                        self.var_phy_ia3_semister.set("")
                        self.var_serach_phy_ia3_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_phy_ia3_ia_schedule(ev):
                        read=tree_phy_ia3_treeview.focus()
                        content=tree_phy_ia3_treeview.item(read)
                        row=content['values']

                        self.var_phy_ia3_subjects_entry.set(row[1])
                        self.var_phy_ia3_date_entry.set(row[2])
                        self.var_phy_ia3_time_entry.set(row[3])
                        self.var_phy_ia3_code.set(row[4])
                        self.var_phy_ia3_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_phy_ia3_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_phy_ia3_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from phy_ia3_schedule where phy_ia3_subjects=?",(self.var_serach_phy_ia3_semisters.get(),))
                                rows=cur.fetchall()
                                tree_phy_ia3_treeview.delete(*tree_phy_ia3_treeview.get_children())
                                for row in rows:
                                    tree_phy_ia3_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_phy_ia3_subjects()
                    phy_ia3_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_phy_ia3_subjects_entry,values=phy_ia3_subjects_list).place(x=87,y=14)

                    phy_ia3_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_phy_ia3_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    phy_ia3_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_phy_ia3_time_entry).place(x=569,y=14)

                    phy_ia3_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_phy_ia3_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_phy_ia3_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_phy_ia3_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_phy_ia3_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_phy_ia3_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_phy_ia3_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_phy_ia3_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_phy_ia3_treeview=ttk.Treeview(tree_frame1,columns=('phy_ia3_subjects','phy_ia3_date','phy_ia3_time','phy_ia3_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_phy_ia3_treeview.xview)
                    scrolly.configure(command=tree_phy_ia3_treeview.yview)

                    tree_phy_ia3_treeview.heading('phy_ia3_subjects',text="Subjects")
                    tree_phy_ia3_treeview.heading('phy_ia3_date',text="Date")
                    tree_phy_ia3_treeview.heading('phy_ia3_time',text="Time")
                    tree_phy_ia3_treeview.heading('phy_ia3_code',text="Code")
                    tree_phy_ia3_treeview.heading('semisters',text="Semister")
                    tree_phy_ia3_treeview.heading('branch',text="Branch")

                    tree_phy_ia3_treeview.column('phy_ia3_subjects',width=200)
                    tree_phy_ia3_treeview.column('phy_ia3_date',width=150)
                    tree_phy_ia3_treeview.column('phy_ia3_time',width=150)
                    tree_phy_ia3_treeview.column('phy_ia3_code',width=150)
                    tree_phy_ia3_treeview.column('semisters',width=150)
                    tree_phy_ia3_treeview.column('branch',width=200)

                    tree_phy_ia3_treeview['show']='headings'
                
                    tree_phy_ia3_treeview.pack(fill=BOTH,expand=1)
                    fetch_phy_ia3_ia_schedule()
                    tree_phy_ia3_treeview.bind('<ButtonRelease-1>',get_phy_ia3_ia_schedule)

        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Civil_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    civil_ia3_3rd_subjects_list=[]
                    def fetch_civil_ia3_3rd_subjects():
                        #all_civil_ia3_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select civil_3rd_subjects from all_civil_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    civil_ia3_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_civil_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_civil_ia3_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_civil_ia3_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_civil_ia3_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_civil_ia3_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'civil_ia3_3rd_subjects','civil_ia3_3rd_date','civil_ia3_3rd_time','civil_ia3_3rd_code','semisters','branch'
                                        cur.execute('insert into civil_ia3_3rd_schedule(civil_ia3_3rd_subjects,civil_ia3_3rd_date,civil_ia3_3rd_time,civil_ia3_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_civil_ia3_3rd_subjects_entry.get(),
                                            self.var_civil_ia3_3rd_date_entry.get(),
                                            self.var_civil_ia3_3rd_time_entry.get(),
                                            self.var_civil_ia3_3rd_code.get(),
                                            self.var_civil_ia3_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_civil_ia3_3rd_ia_schedule()
                                        con.close()
                    def fetch_civil_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_ia3_3rd_schedule')
                            rows=cur.fetchall()
                            tree_civil_ia3_3rd_treeview.delete(*tree_civil_ia3_3rd_treeview.get_children())
                            for row in rows:
                                tree_civil_ia3_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_civil_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia3_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from civil_ia3_3rd_schedule where civil_ia3_3rd_subjects=?',(self.var_civil_ia3_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from civil_ia3_3rd_schedule where civil_ia3_3rd_subjects=? ',(self.var_civil_ia3_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_civil_ia3_3rd_all()
                                    fetch_civil_ia3_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_civil_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia3_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update civil_ia3_3rd_schedule set civil_ia3_3rd_date=?,civil_ia3_3rd_time=?,civil_ia3_3rd_code=?,semisters=?,branch=?  where civil_ia3_3rd_subjects=?',(
                                self.var_civil_ia3_3rd_date_entry.get(),
                                self.var_civil_ia3_3rd_time_entry.get(),
                                self.var_civil_ia3_3rd_code.get(),
                                self.var_civil_ia3_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_civil_ia3_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_civil_ia3_3rd_ia_schedule()
                                clear_civil_ia3_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_civil_ia3_3rd_all():
                        fetch_civil_ia3_3rd_ia_schedule()
                        self.var_civil_ia3_3rd_subjects_entry.set("")
                        self.var_civil_ia3_3rd_date_entry.set("")
                        self.var_civil_ia3_3rd_time_entry.set("")
                        self.var_civil_ia3_3rd_code.set("")
                        self.var_civil_ia3_3rd_semister.set("")
                        self.var_serach_civil_ia3_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_civil_ia3_3rd_ia_schedule(ev):
                        read=tree_civil_ia3_3rd_treeview.focus()
                        content=tree_civil_ia3_3rd_treeview.item(read)
                        row=content['values']

                        self.var_civil_ia3_3rd_subjects_entry.set(row[1])
                        self.var_civil_ia3_3rd_date_entry.set(row[2])
                        self.var_civil_ia3_3rd_time_entry.set(row[3])
                        self.var_civil_ia3_3rd_code.set(row[4])
                        self.var_civil_ia3_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_civil_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_civil_ia3_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from civil_ia3_3rd_schedule where civil_ia3_3rd_subjects=?",(self.var_serach_civil_ia3_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_civil_ia3_3rd_treeview.delete(*tree_civil_ia3_3rd_treeview.get_children())
                                for row in rows:
                                    tree_civil_ia3_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_civil_ia3_3rd_subjects()
                    civil_ia3_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_civil_ia3_3rd_subjects_entry,values=civil_ia3_3rd_subjects_list).place(x=87,y=14)

                    civil_ia3_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_civil_ia3_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    civil_ia3_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia3_3rd_time_entry).place(x=569,y=14)

                    civil_ia3_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia3_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_civil_ia3_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_civil_ia3_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_civil_ia3_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_civil_ia3_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_civil_ia3_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_civil_ia3_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_civil_ia3_3rd_treeview=ttk.Treeview(tree_frame1,columns=('civil_ia3_3rd_subjects','civil_ia3_3rd_date','civil_ia3_3rd_time','civil_ia3_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_civil_ia3_3rd_treeview.xview)
                    scrolly.configure(command=tree_civil_ia3_3rd_treeview.yview)

                    tree_civil_ia3_3rd_treeview.heading('civil_ia3_3rd_subjects',text="Subjects")
                    tree_civil_ia3_3rd_treeview.heading('civil_ia3_3rd_date',text="Date")
                    tree_civil_ia3_3rd_treeview.heading('civil_ia3_3rd_time',text="Time")
                    tree_civil_ia3_3rd_treeview.heading('civil_ia3_3rd_code',text="Code")
                    tree_civil_ia3_3rd_treeview.heading('semisters',text="Semister")
                    tree_civil_ia3_3rd_treeview.heading('branch',text="Branch")

                    tree_civil_ia3_3rd_treeview.column('civil_ia3_3rd_subjects',width=200)
                    tree_civil_ia3_3rd_treeview.column('civil_ia3_3rd_date',width=150)
                    tree_civil_ia3_3rd_treeview.column('civil_ia3_3rd_time',width=150)
                    tree_civil_ia3_3rd_treeview.column('civil_ia3_3rd_code',width=150)
                    tree_civil_ia3_3rd_treeview.column('semisters',width=150)
                    tree_civil_ia3_3rd_treeview.column('branch',width=200)

                    tree_civil_ia3_3rd_treeview['show']='headings'
                
                    tree_civil_ia3_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_civil_ia3_3rd_ia_schedule()
                    tree_civil_ia3_3rd_treeview.bind('<ButtonRelease-1>',get_civil_ia3_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Civil_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    civil_ia3_4th_subjects_list=[]
                    def fetch_civil_ia3_4th_subjects():
                        #all_civil_ia3_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select civil_4th_subjects from all_civil_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    civil_ia3_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_civil_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_civil_ia3_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_civil_ia3_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_civil_ia3_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_civil_ia3_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'civil_ia3_4th_subjects','civil_ia3_4th_date','civil_ia3_4th_time','civil_ia3_4th_code','semisters','branch'
                                        cur.execute('insert into civil_ia3_4th_schedule(civil_ia3_4th_subjects,civil_ia3_4th_date,civil_ia3_4th_time,civil_ia3_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_civil_ia3_4th_subjects_entry.get(),
                                            self.var_civil_ia3_4th_date_entry.get(),
                                            self.var_civil_ia3_4th_time_entry.get(),
                                            self.var_civil_ia3_4th_code.get(),
                                            self.var_civil_ia3_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_civil_ia3_4th_ia_schedule()
                                        con.close()
                    def fetch_civil_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_ia3_4th_schedule')
                            rows=cur.fetchall()
                            tree_civil_ia3_4th_treeview.delete(*tree_civil_ia3_4th_treeview.get_children())
                            for row in rows:
                                tree_civil_ia3_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_civil_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia3_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from civil_ia3_4th_schedule where civil_ia3_4th_subjects=?',(self.var_civil_ia3_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from civil_ia3_4th_schedule where civil_ia3_4th_subjects=? ',(self.var_civil_ia3_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_civil_ia3_4th_all()
                                    fetch_civil_ia3_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_civil_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia3_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update civil_ia3_4th_schedule set civil_ia3_4th_date=?,civil_ia3_4th_time=?,civil_ia3_4th_code=?,semisters=?,branch=?  where civil_ia3_4th_subjects=?',(
                                self.var_civil_ia3_4th_date_entry.get(),
                                self.var_civil_ia3_4th_time_entry.get(),
                                self.var_civil_ia3_4th_code.get(),
                                self.var_civil_ia3_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_civil_ia3_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_civil_ia3_4th_ia_schedule()
                                clear_civil_ia3_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_civil_ia3_4th_all():
                        fetch_civil_ia3_4th_ia_schedule()
                        self.var_civil_ia3_4th_subjects_entry.set("")
                        self.var_civil_ia3_4th_date_entry.set("")
                        self.var_civil_ia3_4th_time_entry.set("")
                        self.var_civil_ia3_4th_code.set("")
                        self.var_civil_ia3_4th_semister.set("")
                        self.var_serach_civil_ia3_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_civil_ia3_4th_ia_schedule(ev):
                        read=tree_civil_ia3_4th_treeview.focus()
                        content=tree_civil_ia3_4th_treeview.item(read)
                        row=content['values']

                        self.var_civil_ia3_4th_subjects_entry.set(row[1])
                        self.var_civil_ia3_4th_date_entry.set(row[2])
                        self.var_civil_ia3_4th_time_entry.set(row[3])
                        self.var_civil_ia3_4th_code.set(row[4])
                        self.var_civil_ia3_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_civil_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_civil_ia3_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from civil_ia3_4th_schedule where civil_ia3_4th_subjects=?",(self.var_serach_civil_ia3_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_civil_ia3_4th_treeview.delete(*tree_civil_ia3_4th_treeview.get_children())
                                for row in rows:
                                    tree_civil_ia3_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_civil_ia3_4th_subjects()
                    civil_ia3_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_civil_ia3_4th_subjects_entry,values=civil_ia3_4th_subjects_list).place(x=87,y=14)

                    civil_ia3_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_civil_ia3_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    civil_ia3_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia3_4th_time_entry).place(x=569,y=14)

                    civil_ia3_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia3_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_civil_ia3_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_civil_ia3_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_civil_ia3_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_civil_ia3_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_civil_ia3_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_civil_ia3_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_civil_ia3_4th_treeview=ttk.Treeview(tree_frame1,columns=('civil_ia3_4th_subjects','civil_ia3_4th_date','civil_ia3_4th_time','civil_ia3_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_civil_ia3_4th_treeview.xview)
                    scrolly.configure(command=tree_civil_ia3_4th_treeview.yview)

                    tree_civil_ia3_4th_treeview.heading('civil_ia3_4th_subjects',text="Subjects")
                    tree_civil_ia3_4th_treeview.heading('civil_ia3_4th_date',text="Date")
                    tree_civil_ia3_4th_treeview.heading('civil_ia3_4th_time',text="Time")
                    tree_civil_ia3_4th_treeview.heading('civil_ia3_4th_code',text="Code")
                    tree_civil_ia3_4th_treeview.heading('semisters',text="Semister")
                    tree_civil_ia3_4th_treeview.heading('branch',text="Branch")

                    tree_civil_ia3_4th_treeview.column('civil_ia3_4th_subjects',width=200)
                    tree_civil_ia3_4th_treeview.column('civil_ia3_4th_date',width=150)
                    tree_civil_ia3_4th_treeview.column('civil_ia3_4th_time',width=150)
                    tree_civil_ia3_4th_treeview.column('civil_ia3_4th_code',width=150)
                    tree_civil_ia3_4th_treeview.column('semisters',width=150)
                    tree_civil_ia3_4th_treeview.column('branch',width=200)

                    tree_civil_ia3_4th_treeview['show']='headings'
                
                    tree_civil_ia3_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_civil_ia3_4th_ia_schedule()
                    tree_civil_ia3_4th_treeview.bind('<ButtonRelease-1>',get_civil_ia3_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Civil_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    civil_ia3_5th_subjects_list=[]
                    def fetch_civil_ia3_5th_subjects():
                        #all_civil_ia3_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select civil_5th_subjects from all_civil_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    civil_ia3_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_civil_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_civil_ia3_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_civil_ia3_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_civil_ia3_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_civil_ia3_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'civil_ia3_5th_subjects','civil_ia3_5th_date','civil_ia3_5th_time','civil_ia3_5th_code','semisters','branch'
                                        cur.execute('insert into civil_ia3_5th_schedule(civil_ia3_5th_subjects,civil_ia3_5th_date,civil_ia3_5th_time,civil_ia3_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_civil_ia3_5th_subjects_entry.get(),
                                            self.var_civil_ia3_5th_date_entry.get(),
                                            self.var_civil_ia3_5th_time_entry.get(),
                                            self.var_civil_ia3_5th_code.get(),
                                            self.var_civil_ia3_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_civil_ia3_5th_ia_schedule()
                                        con.close()
                    def fetch_civil_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_ia3_5th_schedule')
                            rows=cur.fetchall()
                            tree_civil_ia3_5th_treeview.delete(*tree_civil_ia3_5th_treeview.get_children())
                            for row in rows:
                                tree_civil_ia3_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_civil_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia3_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from civil_ia3_5th_schedule where civil_ia3_5th_subjects=?',(self.var_civil_ia3_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from civil_ia3_5th_schedule where civil_ia3_5th_subjects=? ',(self.var_civil_ia3_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_civil_ia3_5th_all()
                                    fetch_civil_ia3_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_civil_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia3_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update civil_ia3_5th_schedule set civil_ia3_5th_date=?,civil_ia3_5th_time=?,civil_ia3_5th_code=?,semisters=?,branch=?  where civil_ia3_5th_subjects=?',(
                                self.var_civil_ia3_5th_date_entry.get(),
                                self.var_civil_ia3_5th_time_entry.get(),
                                self.var_civil_ia3_5th_code.get(),
                                self.var_civil_ia3_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_civil_ia3_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_civil_ia3_5th_ia_schedule()
                                clear_civil_ia3_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_civil_ia3_5th_all():
                        fetch_civil_ia3_5th_ia_schedule()
                        self.var_civil_ia3_5th_subjects_entry.set("")
                        self.var_civil_ia3_5th_date_entry.set("")
                        self.var_civil_ia3_5th_time_entry.set("")
                        self.var_civil_ia3_5th_code.set("")
                        self.var_civil_ia3_5th_semister.set("")
                        self.var_serach_civil_ia3_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_civil_ia3_5th_ia_schedule(ev):
                        read=tree_civil_ia3_5th_treeview.focus()
                        content=tree_civil_ia3_5th_treeview.item(read)
                        row=content['values']

                        self.var_civil_ia3_5th_subjects_entry.set(row[1])
                        self.var_civil_ia3_5th_date_entry.set(row[2])
                        self.var_civil_ia3_5th_time_entry.set(row[3])
                        self.var_civil_ia3_5th_code.set(row[4])
                        self.var_civil_ia3_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_civil_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_civil_ia3_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from civil_ia3_5th_schedule where civil_ia3_5th_subjects=?",(self.var_serach_civil_ia3_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_civil_ia3_5th_treeview.delete(*tree_civil_ia3_5th_treeview.get_children())
                                for row in rows:
                                    tree_civil_ia3_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_civil_ia3_5th_subjects()
                    civil_ia3_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_civil_ia3_5th_subjects_entry,values=civil_ia3_5th_subjects_list).place(x=87,y=14)

                    civil_ia3_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_civil_ia3_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    civil_ia3_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia3_5th_time_entry).place(x=569,y=14)

                    civil_ia3_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia3_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_civil_ia3_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_civil_ia3_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_civil_ia3_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_civil_ia3_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_civil_ia3_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_civil_ia3_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_civil_ia3_5th_treeview=ttk.Treeview(tree_frame1,columns=('civil_ia3_5th_subjects','civil_ia3_5th_date','civil_ia3_5th_time','civil_ia3_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_civil_ia3_5th_treeview.xview)
                    scrolly.configure(command=tree_civil_ia3_5th_treeview.yview)

                    tree_civil_ia3_5th_treeview.heading('civil_ia3_5th_subjects',text="Subjects")
                    tree_civil_ia3_5th_treeview.heading('civil_ia3_5th_date',text="Date")
                    tree_civil_ia3_5th_treeview.heading('civil_ia3_5th_time',text="Time")
                    tree_civil_ia3_5th_treeview.heading('civil_ia3_5th_code',text="Code")
                    tree_civil_ia3_5th_treeview.heading('semisters',text="Semister")
                    tree_civil_ia3_5th_treeview.heading('branch',text="Branch")

                    tree_civil_ia3_5th_treeview.column('civil_ia3_5th_subjects',width=200)
                    tree_civil_ia3_5th_treeview.column('civil_ia3_5th_date',width=150)
                    tree_civil_ia3_5th_treeview.column('civil_ia3_5th_time',width=150)
                    tree_civil_ia3_5th_treeview.column('civil_ia3_5th_code',width=150)
                    tree_civil_ia3_5th_treeview.column('semisters',width=150)
                    tree_civil_ia3_5th_treeview.column('branch',width=200)

                    tree_civil_ia3_5th_treeview['show']='headings'
                
                    tree_civil_ia3_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_civil_ia3_5th_ia_schedule()
                    tree_civil_ia3_5th_treeview.bind('<ButtonRelease-1>',get_civil_ia3_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Civil_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    civil_ia3_6th_subjects_list=[]
                    def fetch_civil_ia3_6th_subjects():
                        #all_civil_ia3_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select civil_6th_subjects from all_civil_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    civil_ia3_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_civil_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_civil_ia3_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_civil_ia3_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_civil_ia3_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_civil_ia3_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'civil_ia3_6th_subjects','civil_ia3_6th_date','civil_ia3_6th_time','civil_ia3_6th_code','semisters','branch'
                                        cur.execute('insert into civil_ia3_6th_schedule(civil_ia3_6th_subjects,civil_ia3_6th_date,civil_ia3_6th_time,civil_ia3_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_civil_ia3_6th_subjects_entry.get(),
                                            self.var_civil_ia3_6th_date_entry.get(),
                                            self.var_civil_ia3_6th_time_entry.get(),
                                            self.var_civil_ia3_6th_code.get(),
                                            self.var_civil_ia3_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_civil_ia3_6th_ia_schedule()
                                        con.close()
                    def fetch_civil_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_ia3_6th_schedule')
                            rows=cur.fetchall()
                            tree_civil_ia3_6th_treeview.delete(*tree_civil_ia3_6th_treeview.get_children())
                            for row in rows:
                                tree_civil_ia3_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_civil_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia3_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from civil_ia3_6th_schedule where civil_ia3_6th_subjects=?',(self.var_civil_ia3_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from civil_ia3_6th_schedule where civil_ia3_6th_subjects=? ',(self.var_civil_ia3_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_civil_ia3_6th_all()
                                    fetch_civil_ia3_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_civil_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia3_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update civil_ia3_6th_schedule set civil_ia3_6th_date=?,civil_ia3_6th_time=?,civil_ia3_6th_code=?,semisters=?,branch=?  where civil_ia3_6th_subjects=?',(
                                self.var_civil_ia3_6th_date_entry.get(),
                                self.var_civil_ia3_6th_time_entry.get(),
                                self.var_civil_ia3_6th_code.get(),
                                self.var_civil_ia3_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_civil_ia3_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_civil_ia3_6th_ia_schedule()
                                clear_civil_ia3_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_civil_ia3_6th_all():
                        fetch_civil_ia3_6th_ia_schedule()
                        self.var_civil_ia3_6th_subjects_entry.set("")
                        self.var_civil_ia3_6th_date_entry.set("")
                        self.var_civil_ia3_6th_time_entry.set("")
                        self.var_civil_ia3_6th_code.set("")
                        self.var_civil_ia3_6th_semister.set("")
                        self.var_serach_civil_ia3_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_civil_ia3_6th_ia_schedule(ev):
                        read=tree_civil_ia3_6th_treeview.focus()
                        content=tree_civil_ia3_6th_treeview.item(read)
                        row=content['values']

                        self.var_civil_ia3_6th_subjects_entry.set(row[1])
                        self.var_civil_ia3_6th_date_entry.set(row[2])
                        self.var_civil_ia3_6th_time_entry.set(row[3])
                        self.var_civil_ia3_6th_code.set(row[4])
                        self.var_civil_ia3_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_civil_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_civil_ia3_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from civil_ia3_6th_schedule where civil_ia3_6th_subjects=?",(self.var_serach_civil_ia3_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_civil_ia3_6th_treeview.delete(*tree_civil_ia3_6th_treeview.get_children())
                                for row in rows:
                                    tree_civil_ia3_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_civil_ia3_6th_subjects()
                    civil_ia3_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_civil_ia3_6th_subjects_entry,values=civil_ia3_6th_subjects_list).place(x=87,y=14)

                    civil_ia3_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_civil_ia3_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    civil_ia3_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia3_6th_time_entry).place(x=569,y=14)

                    civil_ia3_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia3_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_civil_ia3_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_civil_ia3_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_civil_ia3_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_civil_ia3_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_civil_ia3_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_civil_ia3_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_civil_ia3_6th_treeview=ttk.Treeview(tree_frame1,columns=('civil_ia3_6th_subjects','civil_ia3_6th_date','civil_ia3_6th_time','civil_ia3_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_civil_ia3_6th_treeview.xview)
                    scrolly.configure(command=tree_civil_ia3_6th_treeview.yview)

                    tree_civil_ia3_6th_treeview.heading('civil_ia3_6th_subjects',text="Subjects")
                    tree_civil_ia3_6th_treeview.heading('civil_ia3_6th_date',text="Date")
                    tree_civil_ia3_6th_treeview.heading('civil_ia3_6th_time',text="Time")
                    tree_civil_ia3_6th_treeview.heading('civil_ia3_6th_code',text="Code")
                    tree_civil_ia3_6th_treeview.heading('semisters',text="Semister")
                    tree_civil_ia3_6th_treeview.heading('branch',text="Branch")

                    tree_civil_ia3_6th_treeview.column('civil_ia3_6th_subjects',width=200)
                    tree_civil_ia3_6th_treeview.column('civil_ia3_6th_date',width=150)
                    tree_civil_ia3_6th_treeview.column('civil_ia3_6th_time',width=150)
                    tree_civil_ia3_6th_treeview.column('civil_ia3_6th_code',width=150)
                    tree_civil_ia3_6th_treeview.column('semisters',width=150)
                    tree_civil_ia3_6th_treeview.column('branch',width=200)

                    tree_civil_ia3_6th_treeview['show']='headings'
                
                    tree_civil_ia3_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_civil_ia3_6th_ia_schedule()
                    tree_civil_ia3_6th_treeview.bind('<ButtonRelease-1>',get_civil_ia3_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Civil_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    civil_ia3_7th_subjects_list=[]
                    def fetch_civil_ia3_7th_subjects():
                        #all_civil_ia3_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select civil_7th_subjects from all_civil_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    civil_ia3_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_civil_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_civil_ia3_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_civil_ia3_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_civil_ia3_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_civil_ia3_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'civil_ia3_7th_subjects','civil_ia3_7th_date','civil_ia3_7th_time','civil_ia3_7th_code','semisters','branch'
                                        cur.execute('insert into civil_ia3_7th_schedule(civil_ia3_7th_subjects,civil_ia3_7th_date,civil_ia3_7th_time,civil_ia3_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_civil_ia3_7th_subjects_entry.get(),
                                            self.var_civil_ia3_7th_date_entry.get(),
                                            self.var_civil_ia3_7th_time_entry.get(),
                                            self.var_civil_ia3_7th_code.get(),
                                            self.var_civil_ia3_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_civil_ia3_7th_ia_schedule()
                                        con.close()
                    def fetch_civil_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_ia3_7th_schedule')
                            rows=cur.fetchall()
                            tree_civil_ia3_7th_treeview.delete(*tree_civil_ia3_7th_treeview.get_children())
                            for row in rows:
                                tree_civil_ia3_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_civil_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia3_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from civil_ia3_7th_schedule where civil_ia3_7th_subjects=?',(self.var_civil_ia3_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from civil_ia3_7th_schedule where civil_ia3_7th_subjects=? ',(self.var_civil_ia3_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_civil_ia3_7th_all()
                                    fetch_civil_ia3_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_civil_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia3_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update civil_ia3_7th_schedule set civil_ia3_7th_date=?,civil_ia3_7th_time=?,civil_ia3_7th_code=?,semisters=?,branch=?  where civil_ia3_7th_subjects=?',(
                                self.var_civil_ia3_7th_date_entry.get(),
                                self.var_civil_ia3_7th_time_entry.get(),
                                self.var_civil_ia3_7th_code.get(),
                                self.var_civil_ia3_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_civil_ia3_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_civil_ia3_7th_ia_schedule()
                                clear_civil_ia3_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_civil_ia3_7th_all():
                        fetch_civil_ia3_7th_ia_schedule()
                        self.var_civil_ia3_7th_subjects_entry.set("")
                        self.var_civil_ia3_7th_date_entry.set("")
                        self.var_civil_ia3_7th_time_entry.set("")
                        self.var_civil_ia3_7th_code.set("")
                        self.var_civil_ia3_7th_semister.set("")
                        self.var_serach_civil_ia3_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_civil_ia3_7th_ia_schedule(ev):
                        read=tree_civil_ia3_7th_treeview.focus()
                        content=tree_civil_ia3_7th_treeview.item(read)
                        row=content['values']

                        self.var_civil_ia3_7th_subjects_entry.set(row[1])
                        self.var_civil_ia3_7th_date_entry.set(row[2])
                        self.var_civil_ia3_7th_time_entry.set(row[3])
                        self.var_civil_ia3_7th_code.set(row[4])
                        self.var_civil_ia3_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_civil_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_civil_ia3_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from civil_ia3_7th_schedule where civil_ia3_7th_subjects=?",(self.var_serach_civil_ia3_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_civil_ia3_7th_treeview.delete(*tree_civil_ia3_7th_treeview.get_children())
                                for row in rows:
                                    tree_civil_ia3_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_civil_ia3_7th_subjects()
                    civil_ia3_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_civil_ia3_7th_subjects_entry,values=civil_ia3_7th_subjects_list).place(x=87,y=14)

                    civil_ia3_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_civil_ia3_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    civil_ia3_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia3_7th_time_entry).place(x=569,y=14)

                    civil_ia3_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia3_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_civil_ia3_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_civil_ia3_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_civil_ia3_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_civil_ia3_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_civil_ia3_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_civil_ia3_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_civil_ia3_7th_treeview=ttk.Treeview(tree_frame1,columns=('civil_ia3_7th_subjects','civil_ia3_7th_date','civil_ia3_7th_time','civil_ia3_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_civil_ia3_7th_treeview.xview)
                    scrolly.configure(command=tree_civil_ia3_7th_treeview.yview)

                    tree_civil_ia3_7th_treeview.heading('civil_ia3_7th_subjects',text="Subjects")
                    tree_civil_ia3_7th_treeview.heading('civil_ia3_7th_date',text="Date")
                    tree_civil_ia3_7th_treeview.heading('civil_ia3_7th_time',text="Time")
                    tree_civil_ia3_7th_treeview.heading('civil_ia3_7th_code',text="Code")
                    tree_civil_ia3_7th_treeview.heading('semisters',text="Semister")
                    tree_civil_ia3_7th_treeview.heading('branch',text="Branch")

                    tree_civil_ia3_7th_treeview.column('civil_ia3_7th_subjects',width=200)
                    tree_civil_ia3_7th_treeview.column('civil_ia3_7th_date',width=150)
                    tree_civil_ia3_7th_treeview.column('civil_ia3_7th_time',width=150)
                    tree_civil_ia3_7th_treeview.column('civil_ia3_7th_code',width=150)
                    tree_civil_ia3_7th_treeview.column('semisters',width=150)
                    tree_civil_ia3_7th_treeview.column('branch',width=200)

                    tree_civil_ia3_7th_treeview['show']='headings'
                
                    tree_civil_ia3_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_civil_ia3_7th_ia_schedule()
                    tree_civil_ia3_7th_treeview.bind('<ButtonRelease-1>',get_civil_ia3_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Civil_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    civil_ia3_8th_subjects_list=[]
                    def fetch_civil_ia3_8th_subjects():
                        #all_civil_ia3_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select civil_8th_subjects from all_civil_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    civil_ia3_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_civil_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_civil_ia3_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_civil_ia3_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_civil_ia3_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_civil_ia3_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'civil_ia3_8th_subjects','civil_ia3_8th_date','civil_ia3_8th_time','civil_ia3_8th_code','semisters','branch'
                                        cur.execute('insert into civil_ia3_8th_schedule(civil_ia3_8th_subjects,civil_ia3_8th_date,civil_ia3_8th_time,civil_ia3_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_civil_ia3_8th_subjects_entry.get(),
                                            self.var_civil_ia3_8th_date_entry.get(),
                                            self.var_civil_ia3_8th_time_entry.get(),
                                            self.var_civil_ia3_8th_code.get(),
                                            self.var_civil_ia3_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_civil_ia3_8th_ia_schedule()
                                        con.close()
                    def fetch_civil_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_ia3_8th_schedule')
                            rows=cur.fetchall()
                            tree_civil_ia3_8th_treeview.delete(*tree_civil_ia3_8th_treeview.get_children())
                            for row in rows:
                                tree_civil_ia3_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_civil_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia3_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from civil_ia3_8th_schedule where civil_ia3_8th_subjects=?',(self.var_civil_ia3_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from civil_ia3_8th_schedule where civil_ia3_8th_subjects=? ',(self.var_civil_ia3_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_civil_ia3_8th_all()
                                    fetch_civil_ia3_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_civil_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_civil_ia3_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update civil_ia3_8th_schedule set civil_ia3_8th_date=?,civil_ia3_8th_time=?,civil_ia3_8th_code=?,semisters=?,branch=?  where civil_ia3_8th_subjects=?',(
                                self.var_civil_ia3_8th_date_entry.get(),
                                self.var_civil_ia3_8th_time_entry.get(),
                                self.var_civil_ia3_8th_code.get(),
                                self.var_civil_ia3_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_civil_ia3_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_civil_ia3_8th_ia_schedule()
                                clear_civil_ia3_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_civil_ia3_8th_all():
                        fetch_civil_ia3_8th_ia_schedule()
                        self.var_civil_ia3_8th_subjects_entry.set("")
                        self.var_civil_ia3_8th_date_entry.set("")
                        self.var_civil_ia3_8th_time_entry.set("")
                        self.var_civil_ia3_8th_code.set("")
                        self.var_civil_ia3_8th_semister.set("")
                        self.var_serach_civil_ia3_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_civil_ia3_8th_ia_schedule(ev):
                        read=tree_civil_ia3_8th_treeview.focus()
                        content=tree_civil_ia3_8th_treeview.item(read)
                        row=content['values']

                        self.var_civil_ia3_8th_subjects_entry.set(row[1])
                        self.var_civil_ia3_8th_date_entry.set(row[2])
                        self.var_civil_ia3_8th_time_entry.set(row[3])
                        self.var_civil_ia3_8th_code.set(row[4])
                        self.var_civil_ia3_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_civil_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_civil_ia3_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from civil_ia3_8th_schedule where civil_ia3_8th_subjects=?",(self.var_serach_civil_ia3_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_civil_ia3_8th_treeview.delete(*tree_civil_ia3_8th_treeview.get_children())
                                for row in rows:
                                    tree_civil_ia3_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_civil_ia3_8th_subjects()
                    civil_ia3_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_civil_ia3_8th_subjects_entry,values=civil_ia3_8th_subjects_list).place(x=87,y=14)

                    civil_ia3_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_civil_ia3_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    civil_ia3_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia3_8th_time_entry).place(x=569,y=14)

                    civil_ia3_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_civil_ia3_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_civil_ia3_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_civil_ia3_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_civil_ia3_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_civil_ia3_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_civil_ia3_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_civil_ia3_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_civil_ia3_8th_treeview=ttk.Treeview(tree_frame1,columns=('civil_ia3_8th_subjects','civil_ia3_8th_date','civil_ia3_8th_time','civil_ia3_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_civil_ia3_8th_treeview.xview)
                    scrolly.configure(command=tree_civil_ia3_8th_treeview.yview)

                    tree_civil_ia3_8th_treeview.heading('civil_ia3_8th_subjects',text="Subjects")
                    tree_civil_ia3_8th_treeview.heading('civil_ia3_8th_date',text="Date")
                    tree_civil_ia3_8th_treeview.heading('civil_ia3_8th_time',text="Time")
                    tree_civil_ia3_8th_treeview.heading('civil_ia3_8th_code',text="Code")
                    tree_civil_ia3_8th_treeview.heading('semisters',text="Semister")
                    tree_civil_ia3_8th_treeview.heading('branch',text="Branch")

                    tree_civil_ia3_8th_treeview.column('civil_ia3_8th_subjects',width=200)
                    tree_civil_ia3_8th_treeview.column('civil_ia3_8th_date',width=150)
                    tree_civil_ia3_8th_treeview.column('civil_ia3_8th_time',width=150)
                    tree_civil_ia3_8th_treeview.column('civil_ia3_8th_code',width=150)
                    tree_civil_ia3_8th_treeview.column('semisters',width=150)
                    tree_civil_ia3_8th_treeview.column('branch',width=200)

                    tree_civil_ia3_8th_treeview['show']='headings'
                
                    tree_civil_ia3_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_civil_ia3_8th_ia_schedule()
                    tree_civil_ia3_8th_treeview.bind('<ButtonRelease-1>',get_civil_ia3_8th_ia_schedule)

                ############################################################################################################
        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Mechanical_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    mech_ia3_3rd_subjects_list=[]
                    def fetch_mech_ia3_3rd_subjects():
                        #all_mech_ia3_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select mech_3rd_subjects from all_mech_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    mech_ia3_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_mech_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_mech_ia3_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_mech_ia3_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_mech_ia3_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_mech_ia3_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'mech_ia3_3rd_subjects','mech_ia3_3rd_date','mech_ia3_3rd_time','mech_ia3_3rd_code','semisters','branch'
                                        cur.execute('insert into mech_ia3_3rd_schedule(mech_ia3_3rd_subjects,mech_ia3_3rd_date,mech_ia3_3rd_time,mech_ia3_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_mech_ia3_3rd_subjects_entry.get(),
                                            self.var_mech_ia3_3rd_date_entry.get(),
                                            self.var_mech_ia3_3rd_time_entry.get(),
                                            self.var_mech_ia3_3rd_code.get(),
                                            self.var_mech_ia3_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_mech_ia3_3rd_ia_schedule()
                                        con.close()
                    def fetch_mech_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_ia3_3rd_schedule')
                            rows=cur.fetchall()
                            tree_mech_ia3_3rd_treeview.delete(*tree_mech_ia3_3rd_treeview.get_children())
                            for row in rows:
                                tree_mech_ia3_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_mech_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia3_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from mech_ia3_3rd_schedule where mech_ia3_3rd_subjects=?',(self.var_mech_ia3_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from mech_ia3_3rd_schedule where mech_ia3_3rd_subjects=? ',(self.var_mech_ia3_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_mech_ia3_3rd_all()
                                    fetch_mech_ia3_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_mech_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia3_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update mech_ia3_3rd_schedule set mech_ia3_3rd_date=?,mech_ia3_3rd_time=?,mech_ia3_3rd_code=?,semisters=?,branch=?  where mech_ia3_3rd_subjects=?',(
                                self.var_mech_ia3_3rd_date_entry.get(),
                                self.var_mech_ia3_3rd_time_entry.get(),
                                self.var_mech_ia3_3rd_code.get(),
                                self.var_mech_ia3_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_mech_ia3_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_mech_ia3_3rd_ia_schedule()
                                clear_mech_ia3_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_mech_ia3_3rd_all():
                        fetch_mech_ia3_3rd_ia_schedule()
                        self.var_mech_ia3_3rd_subjects_entry.set("")
                        self.var_mech_ia3_3rd_date_entry.set("")
                        self.var_mech_ia3_3rd_time_entry.set("")
                        self.var_mech_ia3_3rd_code.set("")
                        self.var_mech_ia3_3rd_semister.set("")
                        self.var_serach_mech_ia3_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_mech_ia3_3rd_ia_schedule(ev):
                        read=tree_mech_ia3_3rd_treeview.focus()
                        content=tree_mech_ia3_3rd_treeview.item(read)
                        row=content['values']

                        self.var_mech_ia3_3rd_subjects_entry.set(row[1])
                        self.var_mech_ia3_3rd_date_entry.set(row[2])
                        self.var_mech_ia3_3rd_time_entry.set(row[3])
                        self.var_mech_ia3_3rd_code.set(row[4])
                        self.var_mech_ia3_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_mech_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_mech_ia3_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from mech_ia3_3rd_schedule where mech_ia3_3rd_subjects=?",(self.var_serach_mech_ia3_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_mech_ia3_3rd_treeview.delete(*tree_mech_ia3_3rd_treeview.get_children())
                                for row in rows:
                                    tree_mech_ia3_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_mech_ia3_3rd_subjects()
                    mech_ia3_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_mech_ia3_3rd_subjects_entry,values=mech_ia3_3rd_subjects_list).place(x=87,y=14)

                    mech_ia3_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_mech_ia3_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    mech_ia3_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia3_3rd_time_entry).place(x=569,y=14)

                    mech_ia3_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia3_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_mech_ia3_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_mech_ia3_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_mech_ia3_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_mech_ia3_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_mech_ia3_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_mech_ia3_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_mech_ia3_3rd_treeview=ttk.Treeview(tree_frame1,columns=('mech_ia3_3rd_subjects','mech_ia3_3rd_date','mech_ia3_3rd_time','mech_ia3_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_mech_ia3_3rd_treeview.xview)
                    scrolly.configure(command=tree_mech_ia3_3rd_treeview.yview)

                    tree_mech_ia3_3rd_treeview.heading('mech_ia3_3rd_subjects',text="Subjects")
                    tree_mech_ia3_3rd_treeview.heading('mech_ia3_3rd_date',text="Date")
                    tree_mech_ia3_3rd_treeview.heading('mech_ia3_3rd_time',text="Time")
                    tree_mech_ia3_3rd_treeview.heading('mech_ia3_3rd_code',text="Code")
                    tree_mech_ia3_3rd_treeview.heading('semisters',text="Semister")
                    tree_mech_ia3_3rd_treeview.heading('branch',text="Branch")

                    tree_mech_ia3_3rd_treeview.column('mech_ia3_3rd_subjects',width=200)
                    tree_mech_ia3_3rd_treeview.column('mech_ia3_3rd_date',width=150)
                    tree_mech_ia3_3rd_treeview.column('mech_ia3_3rd_time',width=150)
                    tree_mech_ia3_3rd_treeview.column('mech_ia3_3rd_code',width=150)
                    tree_mech_ia3_3rd_treeview.column('semisters',width=150)
                    tree_mech_ia3_3rd_treeview.column('branch',width=200)

                    tree_mech_ia3_3rd_treeview['show']='headings'
                
                    tree_mech_ia3_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_mech_ia3_3rd_ia_schedule()
                    tree_mech_ia3_3rd_treeview.bind('<ButtonRelease-1>',get_mech_ia3_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Mechanical_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    mech_ia3_4th_subjects_list=[]
                    def fetch_mech_ia3_4th_subjects():
                        #all_mech_ia3_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select mech_4th_subjects from all_mech_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    mech_ia3_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_mech_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_mech_ia3_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_mech_ia3_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_mech_ia3_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_mech_ia3_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'mech_ia3_4th_subjects','mech_ia3_4th_date','mech_ia3_4th_time','mech_ia3_4th_code','semisters','branch'
                                        cur.execute('insert into mech_ia3_4th_schedule(mech_ia3_4th_subjects,mech_ia3_4th_date,mech_ia3_4th_time,mech_ia3_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_mech_ia3_4th_subjects_entry.get(),
                                            self.var_mech_ia3_4th_date_entry.get(),
                                            self.var_mech_ia3_4th_time_entry.get(),
                                            self.var_mech_ia3_4th_code.get(),
                                            self.var_mech_ia3_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_mech_ia3_4th_ia_schedule()
                                        con.close()
                    def fetch_mech_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_ia3_4th_schedule')
                            rows=cur.fetchall()
                            tree_mech_ia3_4th_treeview.delete(*tree_mech_ia3_4th_treeview.get_children())
                            for row in rows:
                                tree_mech_ia3_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_mech_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia3_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from mech_ia3_4th_schedule where mech_ia3_4th_subjects=?',(self.var_mech_ia3_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from mech_ia3_4th_schedule where mech_ia3_4th_subjects=? ',(self.var_mech_ia3_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_mech_ia3_4th_all()
                                    fetch_mech_ia3_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_mech_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia3_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update mech_ia3_4th_schedule set mech_ia3_4th_date=?,mech_ia3_4th_time=?,mech_ia3_4th_code=?,semisters=?,branch=?  where mech_ia3_4th_subjects=?',(
                                self.var_mech_ia3_4th_date_entry.get(),
                                self.var_mech_ia3_4th_time_entry.get(),
                                self.var_mech_ia3_4th_code.get(),
                                self.var_mech_ia3_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_mech_ia3_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_mech_ia3_4th_ia_schedule()
                                clear_mech_ia3_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_mech_ia3_4th_all():
                        fetch_mech_ia3_4th_ia_schedule()
                        self.var_mech_ia3_4th_subjects_entry.set("")
                        self.var_mech_ia3_4th_date_entry.set("")
                        self.var_mech_ia3_4th_time_entry.set("")
                        self.var_mech_ia3_4th_code.set("")
                        self.var_mech_ia3_4th_semister.set("")
                        self.var_serach_mech_ia3_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_mech_ia3_4th_ia_schedule(ev):
                        read=tree_mech_ia3_4th_treeview.focus()
                        content=tree_mech_ia3_4th_treeview.item(read)
                        row=content['values']

                        self.var_mech_ia3_4th_subjects_entry.set(row[1])
                        self.var_mech_ia3_4th_date_entry.set(row[2])
                        self.var_mech_ia3_4th_time_entry.set(row[3])
                        self.var_mech_ia3_4th_code.set(row[4])
                        self.var_mech_ia3_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_mech_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_mech_ia3_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from mech_ia3_4th_schedule where mech_ia3_4th_subjects=?",(self.var_serach_mech_ia3_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_mech_ia3_4th_treeview.delete(*tree_mech_ia3_4th_treeview.get_children())
                                for row in rows:
                                    tree_mech_ia3_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_mech_ia3_4th_subjects()
                    mech_ia3_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_mech_ia3_4th_subjects_entry,values=mech_ia3_4th_subjects_list).place(x=87,y=14)

                    mech_ia3_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_mech_ia3_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    mech_ia3_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia3_4th_time_entry).place(x=569,y=14)

                    mech_ia3_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia3_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_mech_ia3_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_mech_ia3_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_mech_ia3_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_mech_ia3_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_mech_ia3_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_mech_ia3_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_mech_ia3_4th_treeview=ttk.Treeview(tree_frame1,columns=('mech_ia3_4th_subjects','mech_ia3_4th_date','mech_ia3_4th_time','mech_ia3_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_mech_ia3_4th_treeview.xview)
                    scrolly.configure(command=tree_mech_ia3_4th_treeview.yview)

                    tree_mech_ia3_4th_treeview.heading('mech_ia3_4th_subjects',text="Subjects")
                    tree_mech_ia3_4th_treeview.heading('mech_ia3_4th_date',text="Date")
                    tree_mech_ia3_4th_treeview.heading('mech_ia3_4th_time',text="Time")
                    tree_mech_ia3_4th_treeview.heading('mech_ia3_4th_code',text="Code")
                    tree_mech_ia3_4th_treeview.heading('semisters',text="Semister")
                    tree_mech_ia3_4th_treeview.heading('branch',text="Branch")

                    tree_mech_ia3_4th_treeview.column('mech_ia3_4th_subjects',width=200)
                    tree_mech_ia3_4th_treeview.column('mech_ia3_4th_date',width=150)
                    tree_mech_ia3_4th_treeview.column('mech_ia3_4th_time',width=150)
                    tree_mech_ia3_4th_treeview.column('mech_ia3_4th_code',width=150)
                    tree_mech_ia3_4th_treeview.column('semisters',width=150)
                    tree_mech_ia3_4th_treeview.column('branch',width=200)

                    tree_mech_ia3_4th_treeview['show']='headings'
                
                    tree_mech_ia3_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_mech_ia3_4th_ia_schedule()
                    tree_mech_ia3_4th_treeview.bind('<ButtonRelease-1>',get_mech_ia3_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Mechanical_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    mech_ia3_5th_subjects_list=[]
                    def fetch_mech_ia3_5th_subjects():
                        #all_mech_ia3_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select mech_5th_subjects from all_mech_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    mech_ia3_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_mech_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_mech_ia3_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_mech_ia3_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_mech_ia3_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_mech_ia3_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'mech_ia3_5th_subjects','mech_ia3_5th_date','mech_ia3_5th_time','mech_ia3_5th_code','semisters','branch'
                                        cur.execute('insert into mech_ia3_5th_schedule(mech_ia3_5th_subjects,mech_ia3_5th_date,mech_ia3_5th_time,mech_ia3_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_mech_ia3_5th_subjects_entry.get(),
                                            self.var_mech_ia3_5th_date_entry.get(),
                                            self.var_mech_ia3_5th_time_entry.get(),
                                            self.var_mech_ia3_5th_code.get(),
                                            self.var_mech_ia3_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_mech_ia3_5th_ia_schedule()
                                        con.close()
                    def fetch_mech_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_ia3_5th_schedule')
                            rows=cur.fetchall()
                            tree_mech_ia3_5th_treeview.delete(*tree_mech_ia3_5th_treeview.get_children())
                            for row in rows:
                                tree_mech_ia3_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_mech_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia3_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from mech_ia3_5th_schedule where mech_ia3_5th_subjects=?',(self.var_mech_ia3_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from mech_ia3_5th_schedule where mech_ia3_5th_subjects=? ',(self.var_mech_ia3_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_mech_ia3_5th_all()
                                    fetch_mech_ia3_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_mech_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia3_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update mech_ia3_5th_schedule set mech_ia3_5th_date=?,mech_ia3_5th_time=?,mech_ia3_5th_code=?,semisters=?,branch=?  where mech_ia3_5th_subjects=?',(
                                self.var_mech_ia3_5th_date_entry.get(),
                                self.var_mech_ia3_5th_time_entry.get(),
                                self.var_mech_ia3_5th_code.get(),
                                self.var_mech_ia3_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_mech_ia3_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_mech_ia3_5th_ia_schedule()
                                clear_mech_ia3_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_mech_ia3_5th_all():
                        fetch_mech_ia3_5th_ia_schedule()
                        self.var_mech_ia3_5th_subjects_entry.set("")
                        self.var_mech_ia3_5th_date_entry.set("")
                        self.var_mech_ia3_5th_time_entry.set("")
                        self.var_mech_ia3_5th_code.set("")
                        self.var_mech_ia3_5th_semister.set("")
                        self.var_serach_mech_ia3_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_mech_ia3_5th_ia_schedule(ev):
                        read=tree_mech_ia3_5th_treeview.focus()
                        content=tree_mech_ia3_5th_treeview.item(read)
                        row=content['values']

                        self.var_mech_ia3_5th_subjects_entry.set(row[1])
                        self.var_mech_ia3_5th_date_entry.set(row[2])
                        self.var_mech_ia3_5th_time_entry.set(row[3])
                        self.var_mech_ia3_5th_code.set(row[4])
                        self.var_mech_ia3_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_mech_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_mech_ia3_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from mech_ia3_5th_schedule where mech_ia3_5th_subjects=?",(self.var_serach_mech_ia3_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_mech_ia3_5th_treeview.delete(*tree_mech_ia3_5th_treeview.get_children())
                                for row in rows:
                                    tree_mech_ia3_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_mech_ia3_5th_subjects()
                    mech_ia3_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_mech_ia3_5th_subjects_entry,values=mech_ia3_5th_subjects_list).place(x=87,y=14)

                    mech_ia3_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_mech_ia3_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    mech_ia3_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia3_5th_time_entry).place(x=569,y=14)

                    mech_ia3_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia3_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_mech_ia3_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_mech_ia3_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_mech_ia3_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_mech_ia3_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_mech_ia3_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_mech_ia3_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_mech_ia3_5th_treeview=ttk.Treeview(tree_frame1,columns=('mech_ia3_5th_subjects','mech_ia3_5th_date','mech_ia3_5th_time','mech_ia3_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_mech_ia3_5th_treeview.xview)
                    scrolly.configure(command=tree_mech_ia3_5th_treeview.yview)

                    tree_mech_ia3_5th_treeview.heading('mech_ia3_5th_subjects',text="Subjects")
                    tree_mech_ia3_5th_treeview.heading('mech_ia3_5th_date',text="Date")
                    tree_mech_ia3_5th_treeview.heading('mech_ia3_5th_time',text="Time")
                    tree_mech_ia3_5th_treeview.heading('mech_ia3_5th_code',text="Code")
                    tree_mech_ia3_5th_treeview.heading('semisters',text="Semister")
                    tree_mech_ia3_5th_treeview.heading('branch',text="Branch")

                    tree_mech_ia3_5th_treeview.column('mech_ia3_5th_subjects',width=200)
                    tree_mech_ia3_5th_treeview.column('mech_ia3_5th_date',width=150)
                    tree_mech_ia3_5th_treeview.column('mech_ia3_5th_time',width=150)
                    tree_mech_ia3_5th_treeview.column('mech_ia3_5th_code',width=150)
                    tree_mech_ia3_5th_treeview.column('semisters',width=150)
                    tree_mech_ia3_5th_treeview.column('branch',width=200)

                    tree_mech_ia3_5th_treeview['show']='headings'
                
                    tree_mech_ia3_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_mech_ia3_5th_ia_schedule()
                    tree_mech_ia3_5th_treeview.bind('<ButtonRelease-1>',get_mech_ia3_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Mechanical_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    mech_ia3_6th_subjects_list=[]
                    def fetch_mech_ia3_6th_subjects():
                        #all_mech_ia3_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select mech_6th_subjects from all_mech_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    mech_ia3_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_mech_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_mech_ia3_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_mech_ia3_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_mech_ia3_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_mech_ia3_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'mech_ia3_6th_subjects','mech_ia3_6th_date','mech_ia3_6th_time','mech_ia3_6th_code','semisters','branch'
                                        cur.execute('insert into mech_ia3_6th_schedule(mech_ia3_6th_subjects,mech_ia3_6th_date,mech_ia3_6th_time,mech_ia3_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_mech_ia3_6th_subjects_entry.get(),
                                            self.var_mech_ia3_6th_date_entry.get(),
                                            self.var_mech_ia3_6th_time_entry.get(),
                                            self.var_mech_ia3_6th_code.get(),
                                            self.var_mech_ia3_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_mech_ia3_6th_ia_schedule()
                                        con.close()
                    def fetch_mech_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_ia3_6th_schedule')
                            rows=cur.fetchall()
                            tree_mech_ia3_6th_treeview.delete(*tree_mech_ia3_6th_treeview.get_children())
                            for row in rows:
                                tree_mech_ia3_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_mech_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia3_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from mech_ia3_6th_schedule where mech_ia3_6th_subjects=?',(self.var_mech_ia3_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from mech_ia3_6th_schedule where mech_ia3_6th_subjects=? ',(self.var_mech_ia3_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_mech_ia3_6th_all()
                                    fetch_mech_ia3_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_mech_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia3_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update mech_ia3_6th_schedule set mech_ia3_6th_date=?,mech_ia3_6th_time=?,mech_ia3_6th_code=?,semisters=?,branch=?  where mech_ia3_6th_subjects=?',(
                                self.var_mech_ia3_6th_date_entry.get(),
                                self.var_mech_ia3_6th_time_entry.get(),
                                self.var_mech_ia3_6th_code.get(),
                                self.var_mech_ia3_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_mech_ia3_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_mech_ia3_6th_ia_schedule()
                                clear_mech_ia3_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_mech_ia3_6th_all():
                        fetch_mech_ia3_6th_ia_schedule()
                        self.var_mech_ia3_6th_subjects_entry.set("")
                        self.var_mech_ia3_6th_date_entry.set("")
                        self.var_mech_ia3_6th_time_entry.set("")
                        self.var_mech_ia3_6th_code.set("")
                        self.var_mech_ia3_6th_semister.set("")
                        self.var_serach_mech_ia3_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_mech_ia3_6th_ia_schedule(ev):
                        read=tree_mech_ia3_6th_treeview.focus()
                        content=tree_mech_ia3_6th_treeview.item(read)
                        row=content['values']

                        self.var_mech_ia3_6th_subjects_entry.set(row[1])
                        self.var_mech_ia3_6th_date_entry.set(row[2])
                        self.var_mech_ia3_6th_time_entry.set(row[3])
                        self.var_mech_ia3_6th_code.set(row[4])
                        self.var_mech_ia3_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_mech_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_mech_ia3_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from mech_ia3_6th_schedule where mech_ia3_6th_subjects=?",(self.var_serach_mech_ia3_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_mech_ia3_6th_treeview.delete(*tree_mech_ia3_6th_treeview.get_children())
                                for row in rows:
                                    tree_mech_ia3_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_mech_ia3_6th_subjects()
                    mech_ia3_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_mech_ia3_6th_subjects_entry,values=mech_ia3_6th_subjects_list).place(x=87,y=14)

                    mech_ia3_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_mech_ia3_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    mech_ia3_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia3_6th_time_entry).place(x=569,y=14)

                    mech_ia3_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia3_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_mech_ia3_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_mech_ia3_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_mech_ia3_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_mech_ia3_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_mech_ia3_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_mech_ia3_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_mech_ia3_6th_treeview=ttk.Treeview(tree_frame1,columns=('mech_ia3_6th_subjects','mech_ia3_6th_date','mech_ia3_6th_time','mech_ia3_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_mech_ia3_6th_treeview.xview)
                    scrolly.configure(command=tree_mech_ia3_6th_treeview.yview)

                    tree_mech_ia3_6th_treeview.heading('mech_ia3_6th_subjects',text="Subjects")
                    tree_mech_ia3_6th_treeview.heading('mech_ia3_6th_date',text="Date")
                    tree_mech_ia3_6th_treeview.heading('mech_ia3_6th_time',text="Time")
                    tree_mech_ia3_6th_treeview.heading('mech_ia3_6th_code',text="Code")
                    tree_mech_ia3_6th_treeview.heading('semisters',text="Semister")
                    tree_mech_ia3_6th_treeview.heading('branch',text="Branch")

                    tree_mech_ia3_6th_treeview.column('mech_ia3_6th_subjects',width=200)
                    tree_mech_ia3_6th_treeview.column('mech_ia3_6th_date',width=150)
                    tree_mech_ia3_6th_treeview.column('mech_ia3_6th_time',width=150)
                    tree_mech_ia3_6th_treeview.column('mech_ia3_6th_code',width=150)
                    tree_mech_ia3_6th_treeview.column('semisters',width=150)
                    tree_mech_ia3_6th_treeview.column('branch',width=200)

                    tree_mech_ia3_6th_treeview['show']='headings'
                
                    tree_mech_ia3_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_mech_ia3_6th_ia_schedule()
                    tree_mech_ia3_6th_treeview.bind('<ButtonRelease-1>',get_mech_ia3_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Mechanical_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    mech_ia3_7th_subjects_list=[]
                    def fetch_mech_ia3_7th_subjects():
                        #all_mech_ia3_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select mech_7th_subjects from all_mech_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    mech_ia3_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_mech_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_mech_ia3_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_mech_ia3_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_mech_ia3_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_mech_ia3_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'mech_ia3_7th_subjects','mech_ia3_7th_date','mech_ia3_7th_time','mech_ia3_7th_code','semisters','branch'
                                        cur.execute('insert into mech_ia3_7th_schedule(mech_ia3_7th_subjects,mech_ia3_7th_date,mech_ia3_7th_time,mech_ia3_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_mech_ia3_7th_subjects_entry.get(),
                                            self.var_mech_ia3_7th_date_entry.get(),
                                            self.var_mech_ia3_7th_time_entry.get(),
                                            self.var_mech_ia3_7th_code.get(),
                                            self.var_mech_ia3_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_mech_ia3_7th_ia_schedule()
                                        con.close()
                    def fetch_mech_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_ia3_7th_schedule')
                            rows=cur.fetchall()
                            tree_mech_ia3_7th_treeview.delete(*tree_mech_ia3_7th_treeview.get_children())
                            for row in rows:
                                tree_mech_ia3_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_mech_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia3_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from mech_ia3_7th_schedule where mech_ia3_7th_subjects=?',(self.var_mech_ia3_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from mech_ia3_7th_schedule where mech_ia3_7th_subjects=? ',(self.var_mech_ia3_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_mech_ia3_7th_all()
                                    fetch_mech_ia3_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_mech_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia3_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update mech_ia3_7th_schedule set mech_ia3_7th_date=?,mech_ia3_7th_time=?,mech_ia3_7th_code=?,semisters=?,branch=?  where mech_ia3_7th_subjects=?',(
                                self.var_mech_ia3_7th_date_entry.get(),
                                self.var_mech_ia3_7th_time_entry.get(),
                                self.var_mech_ia3_7th_code.get(),
                                self.var_mech_ia3_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_mech_ia3_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_mech_ia3_7th_ia_schedule()
                                clear_mech_ia3_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_mech_ia3_7th_all():
                        fetch_mech_ia3_7th_ia_schedule()
                        self.var_mech_ia3_7th_subjects_entry.set("")
                        self.var_mech_ia3_7th_date_entry.set("")
                        self.var_mech_ia3_7th_time_entry.set("")
                        self.var_mech_ia3_7th_code.set("")
                        self.var_mech_ia3_7th_semister.set("")
                        self.var_serach_mech_ia3_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_mech_ia3_7th_ia_schedule(ev):
                        read=tree_mech_ia3_7th_treeview.focus()
                        content=tree_mech_ia3_7th_treeview.item(read)
                        row=content['values']

                        self.var_mech_ia3_7th_subjects_entry.set(row[1])
                        self.var_mech_ia3_7th_date_entry.set(row[2])
                        self.var_mech_ia3_7th_time_entry.set(row[3])
                        self.var_mech_ia3_7th_code.set(row[4])
                        self.var_mech_ia3_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_mech_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_mech_ia3_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from mech_ia3_7th_schedule where mech_ia3_7th_subjects=?",(self.var_serach_mech_ia3_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_mech_ia3_7th_treeview.delete(*tree_mech_ia3_7th_treeview.get_children())
                                for row in rows:
                                    tree_mech_ia3_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_mech_ia3_7th_subjects()
                    mech_ia3_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_mech_ia3_7th_subjects_entry,values=mech_ia3_7th_subjects_list).place(x=87,y=14)

                    mech_ia3_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_mech_ia3_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    mech_ia3_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia3_7th_time_entry).place(x=569,y=14)

                    mech_ia3_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia3_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_mech_ia3_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_mech_ia3_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_mech_ia3_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_mech_ia3_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_mech_ia3_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_mech_ia3_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_mech_ia3_7th_treeview=ttk.Treeview(tree_frame1,columns=('mech_ia3_7th_subjects','mech_ia3_7th_date','mech_ia3_7th_time','mech_ia3_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_mech_ia3_7th_treeview.xview)
                    scrolly.configure(command=tree_mech_ia3_7th_treeview.yview)

                    tree_mech_ia3_7th_treeview.heading('mech_ia3_7th_subjects',text="Subjects")
                    tree_mech_ia3_7th_treeview.heading('mech_ia3_7th_date',text="Date")
                    tree_mech_ia3_7th_treeview.heading('mech_ia3_7th_time',text="Time")
                    tree_mech_ia3_7th_treeview.heading('mech_ia3_7th_code',text="Code")
                    tree_mech_ia3_7th_treeview.heading('semisters',text="Semister")
                    tree_mech_ia3_7th_treeview.heading('branch',text="Branch")

                    tree_mech_ia3_7th_treeview.column('mech_ia3_7th_subjects',width=200)
                    tree_mech_ia3_7th_treeview.column('mech_ia3_7th_date',width=150)
                    tree_mech_ia3_7th_treeview.column('mech_ia3_7th_time',width=150)
                    tree_mech_ia3_7th_treeview.column('mech_ia3_7th_code',width=150)
                    tree_mech_ia3_7th_treeview.column('semisters',width=150)
                    tree_mech_ia3_7th_treeview.column('branch',width=200)

                    tree_mech_ia3_7th_treeview['show']='headings'
                
                    tree_mech_ia3_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_mech_ia3_7th_ia_schedule()
                    tree_mech_ia3_7th_treeview.bind('<ButtonRelease-1>',get_mech_ia3_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Mechanical_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    mech_ia3_8th_subjects_list=[]
                    def fetch_mech_ia3_8th_subjects():
                        #all_mech_ia3_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select mech_8th_subjects from all_mech_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    mech_ia3_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_mech_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_mech_ia3_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_mech_ia3_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_mech_ia3_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_mech_ia3_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'mech_ia3_8th_subjects','mech_ia3_8th_date','mech_ia3_8th_time','mech_ia3_8th_code','semisters','branch'
                                        cur.execute('insert into mech_ia3_8th_schedule(mech_ia3_8th_subjects,mech_ia3_8th_date,mech_ia3_8th_time,mech_ia3_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_mech_ia3_8th_subjects_entry.get(),
                                            self.var_mech_ia3_8th_date_entry.get(),
                                            self.var_mech_ia3_8th_time_entry.get(),
                                            self.var_mech_ia3_8th_code.get(),
                                            self.var_mech_ia3_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_mech_ia3_8th_ia_schedule()
                                        con.close()
                    def fetch_mech_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_ia3_8th_schedule')
                            rows=cur.fetchall()
                            tree_mech_ia3_8th_treeview.delete(*tree_mech_ia3_8th_treeview.get_children())
                            for row in rows:
                                tree_mech_ia3_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_mech_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia3_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from mech_ia3_8th_schedule where mech_ia3_8th_subjects=?',(self.var_mech_ia3_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from mech_ia3_8th_schedule where mech_ia3_8th_subjects=? ',(self.var_mech_ia3_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_mech_ia3_8th_all()
                                    fetch_mech_ia3_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_mech_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_mech_ia3_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update mech_ia3_8th_schedule set mech_ia3_8th_date=?,mech_ia3_8th_time=?,mech_ia3_8th_code=?,semisters=?,branch=?  where mech_ia3_8th_subjects=?',(
                                self.var_mech_ia3_8th_date_entry.get(),
                                self.var_mech_ia3_8th_time_entry.get(),
                                self.var_mech_ia3_8th_code.get(),
                                self.var_mech_ia3_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_mech_ia3_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_mech_ia3_8th_ia_schedule()
                                clear_mech_ia3_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_mech_ia3_8th_all():
                        fetch_mech_ia3_8th_ia_schedule()
                        self.var_mech_ia3_8th_subjects_entry.set("")
                        self.var_mech_ia3_8th_date_entry.set("")
                        self.var_mech_ia3_8th_time_entry.set("")
                        self.var_mech_ia3_8th_code.set("")
                        self.var_mech_ia3_8th_semister.set("")
                        self.var_serach_mech_ia3_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_mech_ia3_8th_ia_schedule(ev):
                        read=tree_mech_ia3_8th_treeview.focus()
                        content=tree_mech_ia3_8th_treeview.item(read)
                        row=content['values']

                        self.var_mech_ia3_8th_subjects_entry.set(row[1])
                        self.var_mech_ia3_8th_date_entry.set(row[2])
                        self.var_mech_ia3_8th_time_entry.set(row[3])
                        self.var_mech_ia3_8th_code.set(row[4])
                        self.var_mech_ia3_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_mech_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_mech_ia3_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from mech_ia3_8th_schedule where mech_ia3_8th_subjects=?",(self.var_serach_mech_ia3_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_mech_ia3_8th_treeview.delete(*tree_mech_ia3_8th_treeview.get_children())
                                for row in rows:
                                    tree_mech_ia3_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_mech_ia3_8th_subjects()
                    mech_ia3_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_mech_ia3_8th_subjects_entry,values=mech_ia3_8th_subjects_list).place(x=87,y=14)

                    mech_ia3_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_mech_ia3_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    mech_ia3_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia3_8th_time_entry).place(x=569,y=14)

                    mech_ia3_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_mech_ia3_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_mech_ia3_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_mech_ia3_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_mech_ia3_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_mech_ia3_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_mech_ia3_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_mech_ia3_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_mech_ia3_8th_treeview=ttk.Treeview(tree_frame1,columns=('mech_ia3_8th_subjects','mech_ia3_8th_date','mech_ia3_8th_time','mech_ia3_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_mech_ia3_8th_treeview.xview)
                    scrolly.configure(command=tree_mech_ia3_8th_treeview.yview)

                    tree_mech_ia3_8th_treeview.heading('mech_ia3_8th_subjects',text="Subjects")
                    tree_mech_ia3_8th_treeview.heading('mech_ia3_8th_date',text="Date")
                    tree_mech_ia3_8th_treeview.heading('mech_ia3_8th_time',text="Time")
                    tree_mech_ia3_8th_treeview.heading('mech_ia3_8th_code',text="Code")
                    tree_mech_ia3_8th_treeview.heading('semisters',text="Semister")
                    tree_mech_ia3_8th_treeview.heading('branch',text="Branch")

                    tree_mech_ia3_8th_treeview.column('mech_ia3_8th_subjects',width=200)
                    tree_mech_ia3_8th_treeview.column('mech_ia3_8th_date',width=150)
                    tree_mech_ia3_8th_treeview.column('mech_ia3_8th_time',width=150)
                    tree_mech_ia3_8th_treeview.column('mech_ia3_8th_code',width=150)
                    tree_mech_ia3_8th_treeview.column('semisters',width=150)
                    tree_mech_ia3_8th_treeview.column('branch',width=200)

                    tree_mech_ia3_8th_treeview['show']='headings'
                
                    tree_mech_ia3_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_mech_ia3_8th_ia_schedule()
                    tree_mech_ia3_8th_treeview.bind('<ButtonRelease-1>',get_mech_ia3_8th_ia_schedule)
        #########################################################################################################################################################################
        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Electrical_And_Electronic_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    eee_ia3_3rd_subjects_list=[]
                    def fetch_eee_ia3_3rd_subjects():
                        #all_eee_ia3_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select eee_3rd_subjects from all_eee_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    eee_ia3_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_eee_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_eee_ia3_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_eee_ia3_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_eee_ia3_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_eee_ia3_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'eee_ia3_3rd_subjects','eee_ia3_3rd_date','eee_ia3_3rd_time','eee_ia3_3rd_code','semisters','branch'
                                        cur.execute('insert into eee_ia3_3rd_schedule(eee_ia3_3rd_subjects,eee_ia3_3rd_date,eee_ia3_3rd_time,eee_ia3_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_eee_ia3_3rd_subjects_entry.get(),
                                            self.var_eee_ia3_3rd_date_entry.get(),
                                            self.var_eee_ia3_3rd_time_entry.get(),
                                            self.var_eee_ia3_3rd_code.get(),
                                            self.var_eee_ia3_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_eee_ia3_3rd_ia_schedule()
                                        con.close()
                    def fetch_eee_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_ia3_3rd_schedule')
                            rows=cur.fetchall()
                            tree_eee_ia3_3rd_treeview.delete(*tree_eee_ia3_3rd_treeview.get_children())
                            for row in rows:
                                tree_eee_ia3_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_eee_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia3_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from eee_ia3_3rd_schedule where eee_ia3_3rd_subjects=?',(self.var_eee_ia3_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from eee_ia3_3rd_schedule where eee_ia3_3rd_subjects=? ',(self.var_eee_ia3_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_eee_ia3_3rd_all()
                                    fetch_eee_ia3_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_eee_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia3_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update eee_ia3_3rd_schedule set eee_ia3_3rd_date=?,eee_ia3_3rd_time=?,eee_ia3_3rd_code=?,semisters=?,branch=?  where eee_ia3_3rd_subjects=?',(
                                self.var_eee_ia3_3rd_date_entry.get(),
                                self.var_eee_ia3_3rd_time_entry.get(),
                                self.var_eee_ia3_3rd_code.get(),
                                self.var_eee_ia3_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_eee_ia3_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_eee_ia3_3rd_ia_schedule()
                                clear_eee_ia3_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_eee_ia3_3rd_all():
                        fetch_eee_ia3_3rd_ia_schedule()
                        self.var_eee_ia3_3rd_subjects_entry.set("")
                        self.var_eee_ia3_3rd_date_entry.set("")
                        self.var_eee_ia3_3rd_time_entry.set("")
                        self.var_eee_ia3_3rd_code.set("")
                        self.var_eee_ia3_3rd_semister.set("")
                        self.var_serach_eee_ia3_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_eee_ia3_3rd_ia_schedule(ev):
                        read=tree_eee_ia3_3rd_treeview.focus()
                        content=tree_eee_ia3_3rd_treeview.item(read)
                        row=content['values']

                        self.var_eee_ia3_3rd_subjects_entry.set(row[1])
                        self.var_eee_ia3_3rd_date_entry.set(row[2])
                        self.var_eee_ia3_3rd_time_entry.set(row[3])
                        self.var_eee_ia3_3rd_code.set(row[4])
                        self.var_eee_ia3_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_eee_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_eee_ia3_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from eee_ia3_3rd_schedule where eee_ia3_3rd_subjects=?",(self.var_serach_eee_ia3_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_eee_ia3_3rd_treeview.delete(*tree_eee_ia3_3rd_treeview.get_children())
                                for row in rows:
                                    tree_eee_ia3_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_eee_ia3_3rd_subjects()
                    eee_ia3_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_eee_ia3_3rd_subjects_entry,values=eee_ia3_3rd_subjects_list).place(x=87,y=14)

                    eee_ia3_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_eee_ia3_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    eee_ia3_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia3_3rd_time_entry).place(x=569,y=14)

                    eee_ia3_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia3_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_eee_ia3_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_eee_ia3_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_eee_ia3_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_eee_ia3_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_eee_ia3_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_eee_ia3_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_eee_ia3_3rd_treeview=ttk.Treeview(tree_frame1,columns=('eee_ia3_3rd_subjects','eee_ia3_3rd_date','eee_ia3_3rd_time','eee_ia3_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_eee_ia3_3rd_treeview.xview)
                    scrolly.configure(command=tree_eee_ia3_3rd_treeview.yview)

                    tree_eee_ia3_3rd_treeview.heading('eee_ia3_3rd_subjects',text="Subjects")
                    tree_eee_ia3_3rd_treeview.heading('eee_ia3_3rd_date',text="Date")
                    tree_eee_ia3_3rd_treeview.heading('eee_ia3_3rd_time',text="Time")
                    tree_eee_ia3_3rd_treeview.heading('eee_ia3_3rd_code',text="Code")
                    tree_eee_ia3_3rd_treeview.heading('semisters',text="Semister")
                    tree_eee_ia3_3rd_treeview.heading('branch',text="Branch")

                    tree_eee_ia3_3rd_treeview.column('eee_ia3_3rd_subjects',width=200)
                    tree_eee_ia3_3rd_treeview.column('eee_ia3_3rd_date',width=150)
                    tree_eee_ia3_3rd_treeview.column('eee_ia3_3rd_time',width=150)
                    tree_eee_ia3_3rd_treeview.column('eee_ia3_3rd_code',width=150)
                    tree_eee_ia3_3rd_treeview.column('semisters',width=150)
                    tree_eee_ia3_3rd_treeview.column('branch',width=200)

                    tree_eee_ia3_3rd_treeview['show']='headings'
                
                    tree_eee_ia3_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_eee_ia3_3rd_ia_schedule()
                    tree_eee_ia3_3rd_treeview.bind('<ButtonRelease-1>',get_eee_ia3_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Electrical_And_Electronic_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    eee_ia3_4th_subjects_list=[]
                    def fetch_eee_ia3_4th_subjects():
                        #all_eee_ia3_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select eee_4th_subjects from all_eee_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    eee_ia3_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_eee_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_eee_ia3_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_eee_ia3_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_eee_ia3_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_eee_ia3_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'eee_ia3_4th_subjects','eee_ia3_4th_date','eee_ia3_4th_time','eee_ia3_4th_code','semisters','branch'
                                        cur.execute('insert into eee_ia3_4th_schedule(eee_ia3_4th_subjects,eee_ia3_4th_date,eee_ia3_4th_time,eee_ia3_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_eee_ia3_4th_subjects_entry.get(),
                                            self.var_eee_ia3_4th_date_entry.get(),
                                            self.var_eee_ia3_4th_time_entry.get(),
                                            self.var_eee_ia3_4th_code.get(),
                                            self.var_eee_ia3_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_eee_ia3_4th_ia_schedule()
                                        con.close()
                    def fetch_eee_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_ia3_4th_schedule')
                            rows=cur.fetchall()
                            tree_eee_ia3_4th_treeview.delete(*tree_eee_ia3_4th_treeview.get_children())
                            for row in rows:
                                tree_eee_ia3_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_eee_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia3_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from eee_ia3_4th_schedule where eee_ia3_4th_subjects=?',(self.var_eee_ia3_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from eee_ia3_4th_schedule where eee_ia3_4th_subjects=? ',(self.var_eee_ia3_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_eee_ia3_4th_all()
                                    fetch_eee_ia3_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_eee_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia3_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update eee_ia3_4th_schedule set eee_ia3_4th_date=?,eee_ia3_4th_time=?,eee_ia3_4th_code=?,semisters=?,branch=?  where eee_ia3_4th_subjects=?',(
                                self.var_eee_ia3_4th_date_entry.get(),
                                self.var_eee_ia3_4th_time_entry.get(),
                                self.var_eee_ia3_4th_code.get(),
                                self.var_eee_ia3_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_eee_ia3_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_eee_ia3_4th_ia_schedule()
                                clear_eee_ia3_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_eee_ia3_4th_all():
                        fetch_eee_ia3_4th_ia_schedule()
                        self.var_eee_ia3_4th_subjects_entry.set("")
                        self.var_eee_ia3_4th_date_entry.set("")
                        self.var_eee_ia3_4th_time_entry.set("")
                        self.var_eee_ia3_4th_code.set("")
                        self.var_eee_ia3_4th_semister.set("")
                        self.var_serach_eee_ia3_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_eee_ia3_4th_ia_schedule(ev):
                        read=tree_eee_ia3_4th_treeview.focus()
                        content=tree_eee_ia3_4th_treeview.item(read)
                        row=content['values']

                        self.var_eee_ia3_4th_subjects_entry.set(row[1])
                        self.var_eee_ia3_4th_date_entry.set(row[2])
                        self.var_eee_ia3_4th_time_entry.set(row[3])
                        self.var_eee_ia3_4th_code.set(row[4])
                        self.var_eee_ia3_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_eee_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_eee_ia3_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from eee_ia3_4th_schedule where eee_ia3_4th_subjects=?",(self.var_serach_eee_ia3_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_eee_ia3_4th_treeview.delete(*tree_eee_ia3_4th_treeview.get_children())
                                for row in rows:
                                    tree_eee_ia3_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_eee_ia3_4th_subjects()
                    eee_ia3_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_eee_ia3_4th_subjects_entry,values=eee_ia3_4th_subjects_list).place(x=87,y=14)

                    eee_ia3_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_eee_ia3_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    eee_ia3_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia3_4th_time_entry).place(x=569,y=14)

                    eee_ia3_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia3_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_eee_ia3_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_eee_ia3_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_eee_ia3_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_eee_ia3_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_eee_ia3_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_eee_ia3_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_eee_ia3_4th_treeview=ttk.Treeview(tree_frame1,columns=('eee_ia3_4th_subjects','eee_ia3_4th_date','eee_ia3_4th_time','eee_ia3_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_eee_ia3_4th_treeview.xview)
                    scrolly.configure(command=tree_eee_ia3_4th_treeview.yview)

                    tree_eee_ia3_4th_treeview.heading('eee_ia3_4th_subjects',text="Subjects")
                    tree_eee_ia3_4th_treeview.heading('eee_ia3_4th_date',text="Date")
                    tree_eee_ia3_4th_treeview.heading('eee_ia3_4th_time',text="Time")
                    tree_eee_ia3_4th_treeview.heading('eee_ia3_4th_code',text="Code")
                    tree_eee_ia3_4th_treeview.heading('semisters',text="Semister")
                    tree_eee_ia3_4th_treeview.heading('branch',text="Branch")

                    tree_eee_ia3_4th_treeview.column('eee_ia3_4th_subjects',width=200)
                    tree_eee_ia3_4th_treeview.column('eee_ia3_4th_date',width=150)
                    tree_eee_ia3_4th_treeview.column('eee_ia3_4th_time',width=150)
                    tree_eee_ia3_4th_treeview.column('eee_ia3_4th_code',width=150)
                    tree_eee_ia3_4th_treeview.column('semisters',width=150)
                    tree_eee_ia3_4th_treeview.column('branch',width=200)

                    tree_eee_ia3_4th_treeview['show']='headings'
                
                    tree_eee_ia3_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_eee_ia3_4th_ia_schedule()
                    tree_eee_ia3_4th_treeview.bind('<ButtonRelease-1>',get_eee_ia3_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Electrical_And_Electronic_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    eee_ia3_5th_subjects_list=[]
                    def fetch_eee_ia3_5th_subjects():
                        #all_eee_ia3_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select eee_5th_subjects from all_eee_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    eee_ia3_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_eee_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_eee_ia3_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_eee_ia3_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_eee_ia3_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_eee_ia3_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'eee_ia3_5th_subjects','eee_ia3_5th_date','eee_ia3_5th_time','eee_ia3_5th_code','semisters','branch'
                                        cur.execute('insert into eee_ia3_5th_schedule(eee_ia3_5th_subjects,eee_ia3_5th_date,eee_ia3_5th_time,eee_ia3_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_eee_ia3_5th_subjects_entry.get(),
                                            self.var_eee_ia3_5th_date_entry.get(),
                                            self.var_eee_ia3_5th_time_entry.get(),
                                            self.var_eee_ia3_5th_code.get(),
                                            self.var_eee_ia3_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_eee_ia3_5th_ia_schedule()
                                        con.close()
                    def fetch_eee_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_ia3_5th_schedule')
                            rows=cur.fetchall()
                            tree_eee_ia3_5th_treeview.delete(*tree_eee_ia3_5th_treeview.get_children())
                            for row in rows:
                                tree_eee_ia3_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_eee_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia3_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from eee_ia3_5th_schedule where eee_ia3_5th_subjects=?',(self.var_eee_ia3_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from eee_ia3_5th_schedule where eee_ia3_5th_subjects=? ',(self.var_eee_ia3_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_eee_ia3_5th_all()
                                    fetch_eee_ia3_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_eee_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia3_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update eee_ia3_5th_schedule set eee_ia3_5th_date=?,eee_ia3_5th_time=?,eee_ia3_5th_code=?,semisters=?,branch=?  where eee_ia3_5th_subjects=?',(
                                self.var_eee_ia3_5th_date_entry.get(),
                                self.var_eee_ia3_5th_time_entry.get(),
                                self.var_eee_ia3_5th_code.get(),
                                self.var_eee_ia3_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_eee_ia3_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_eee_ia3_5th_ia_schedule()
                                clear_eee_ia3_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_eee_ia3_5th_all():
                        fetch_eee_ia3_5th_ia_schedule()
                        self.var_eee_ia3_5th_subjects_entry.set("")
                        self.var_eee_ia3_5th_date_entry.set("")
                        self.var_eee_ia3_5th_time_entry.set("")
                        self.var_eee_ia3_5th_code.set("")
                        self.var_eee_ia3_5th_semister.set("")
                        self.var_serach_eee_ia3_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_eee_ia3_5th_ia_schedule(ev):
                        read=tree_eee_ia3_5th_treeview.focus()
                        content=tree_eee_ia3_5th_treeview.item(read)
                        row=content['values']

                        self.var_eee_ia3_5th_subjects_entry.set(row[1])
                        self.var_eee_ia3_5th_date_entry.set(row[2])
                        self.var_eee_ia3_5th_time_entry.set(row[3])
                        self.var_eee_ia3_5th_code.set(row[4])
                        self.var_eee_ia3_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_eee_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_eee_ia3_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from eee_ia3_5th_schedule where eee_ia3_5th_subjects=?",(self.var_serach_eee_ia3_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_eee_ia3_5th_treeview.delete(*tree_eee_ia3_5th_treeview.get_children())
                                for row in rows:
                                    tree_eee_ia3_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_eee_ia3_5th_subjects()
                    eee_ia3_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_eee_ia3_5th_subjects_entry,values=eee_ia3_5th_subjects_list).place(x=87,y=14)

                    eee_ia3_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_eee_ia3_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    eee_ia3_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia3_5th_time_entry).place(x=569,y=14)

                    eee_ia3_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia3_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_eee_ia3_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_eee_ia3_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_eee_ia3_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_eee_ia3_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_eee_ia3_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_eee_ia3_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_eee_ia3_5th_treeview=ttk.Treeview(tree_frame1,columns=('eee_ia3_5th_subjects','eee_ia3_5th_date','eee_ia3_5th_time','eee_ia3_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_eee_ia3_5th_treeview.xview)
                    scrolly.configure(command=tree_eee_ia3_5th_treeview.yview)

                    tree_eee_ia3_5th_treeview.heading('eee_ia3_5th_subjects',text="Subjects")
                    tree_eee_ia3_5th_treeview.heading('eee_ia3_5th_date',text="Date")
                    tree_eee_ia3_5th_treeview.heading('eee_ia3_5th_time',text="Time")
                    tree_eee_ia3_5th_treeview.heading('eee_ia3_5th_code',text="Code")
                    tree_eee_ia3_5th_treeview.heading('semisters',text="Semister")
                    tree_eee_ia3_5th_treeview.heading('branch',text="Branch")

                    tree_eee_ia3_5th_treeview.column('eee_ia3_5th_subjects',width=200)
                    tree_eee_ia3_5th_treeview.column('eee_ia3_5th_date',width=150)
                    tree_eee_ia3_5th_treeview.column('eee_ia3_5th_time',width=150)
                    tree_eee_ia3_5th_treeview.column('eee_ia3_5th_code',width=150)
                    tree_eee_ia3_5th_treeview.column('semisters',width=150)
                    tree_eee_ia3_5th_treeview.column('branch',width=200)

                    tree_eee_ia3_5th_treeview['show']='headings'
                
                    tree_eee_ia3_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_eee_ia3_5th_ia_schedule()
                    tree_eee_ia3_5th_treeview.bind('<ButtonRelease-1>',get_eee_ia3_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Electrical_And_Electronic_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    eee_ia3_6th_subjects_list=[]
                    def fetch_eee_ia3_6th_subjects():
                        #all_eee_ia3_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select eee_6th_subjects from all_eee_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    eee_ia3_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_eee_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_eee_ia3_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_eee_ia3_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_eee_ia3_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_eee_ia3_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'eee_ia3_6th_subjects','eee_ia3_6th_date','eee_ia3_6th_time','eee_ia3_6th_code','semisters','branch'
                                        cur.execute('insert into eee_ia3_6th_schedule(eee_ia3_6th_subjects,eee_ia3_6th_date,eee_ia3_6th_time,eee_ia3_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_eee_ia3_6th_subjects_entry.get(),
                                            self.var_eee_ia3_6th_date_entry.get(),
                                            self.var_eee_ia3_6th_time_entry.get(),
                                            self.var_eee_ia3_6th_code.get(),
                                            self.var_eee_ia3_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_eee_ia3_6th_ia_schedule()
                                        con.close()
                    def fetch_eee_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_ia3_6th_schedule')
                            rows=cur.fetchall()
                            tree_eee_ia3_6th_treeview.delete(*tree_eee_ia3_6th_treeview.get_children())
                            for row in rows:
                                tree_eee_ia3_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_eee_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia3_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from eee_ia3_6th_schedule where eee_ia3_6th_subjects=?',(self.var_eee_ia3_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from eee_ia3_6th_schedule where eee_ia3_6th_subjects=? ',(self.var_eee_ia3_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_eee_ia3_6th_all()
                                    fetch_eee_ia3_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_eee_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia3_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update eee_ia3_6th_schedule set eee_ia3_6th_date=?,eee_ia3_6th_time=?,eee_ia3_6th_code=?,semisters=?,branch=?  where eee_ia3_6th_subjects=?',(
                                self.var_eee_ia3_6th_date_entry.get(),
                                self.var_eee_ia3_6th_time_entry.get(),
                                self.var_eee_ia3_6th_code.get(),
                                self.var_eee_ia3_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_eee_ia3_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_eee_ia3_6th_ia_schedule()
                                clear_eee_ia3_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_eee_ia3_6th_all():
                        fetch_eee_ia3_6th_ia_schedule()
                        self.var_eee_ia3_6th_subjects_entry.set("")
                        self.var_eee_ia3_6th_date_entry.set("")
                        self.var_eee_ia3_6th_time_entry.set("")
                        self.var_eee_ia3_6th_code.set("")
                        self.var_eee_ia3_6th_semister.set("")
                        self.var_serach_eee_ia3_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_eee_ia3_6th_ia_schedule(ev):
                        read=tree_eee_ia3_6th_treeview.focus()
                        content=tree_eee_ia3_6th_treeview.item(read)
                        row=content['values']

                        self.var_eee_ia3_6th_subjects_entry.set(row[1])
                        self.var_eee_ia3_6th_date_entry.set(row[2])
                        self.var_eee_ia3_6th_time_entry.set(row[3])
                        self.var_eee_ia3_6th_code.set(row[4])
                        self.var_eee_ia3_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_eee_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_eee_ia3_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from eee_ia3_6th_schedule where eee_ia3_6th_subjects=?",(self.var_serach_eee_ia3_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_eee_ia3_6th_treeview.delete(*tree_eee_ia3_6th_treeview.get_children())
                                for row in rows:
                                    tree_eee_ia3_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_eee_ia3_6th_subjects()
                    eee_ia3_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_eee_ia3_6th_subjects_entry,values=eee_ia3_6th_subjects_list).place(x=87,y=14)

                    eee_ia3_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_eee_ia3_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    eee_ia3_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia3_6th_time_entry).place(x=569,y=14)

                    eee_ia3_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia3_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_eee_ia3_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_eee_ia3_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_eee_ia3_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_eee_ia3_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_eee_ia3_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_eee_ia3_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_eee_ia3_6th_treeview=ttk.Treeview(tree_frame1,columns=('eee_ia3_6th_subjects','eee_ia3_6th_date','eee_ia3_6th_time','eee_ia3_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_eee_ia3_6th_treeview.xview)
                    scrolly.configure(command=tree_eee_ia3_6th_treeview.yview)

                    tree_eee_ia3_6th_treeview.heading('eee_ia3_6th_subjects',text="Subjects")
                    tree_eee_ia3_6th_treeview.heading('eee_ia3_6th_date',text="Date")
                    tree_eee_ia3_6th_treeview.heading('eee_ia3_6th_time',text="Time")
                    tree_eee_ia3_6th_treeview.heading('eee_ia3_6th_code',text="Code")
                    tree_eee_ia3_6th_treeview.heading('semisters',text="Semister")
                    tree_eee_ia3_6th_treeview.heading('branch',text="Branch")

                    tree_eee_ia3_6th_treeview.column('eee_ia3_6th_subjects',width=200)
                    tree_eee_ia3_6th_treeview.column('eee_ia3_6th_date',width=150)
                    tree_eee_ia3_6th_treeview.column('eee_ia3_6th_time',width=150)
                    tree_eee_ia3_6th_treeview.column('eee_ia3_6th_code',width=150)
                    tree_eee_ia3_6th_treeview.column('semisters',width=150)
                    tree_eee_ia3_6th_treeview.column('branch',width=200)

                    tree_eee_ia3_6th_treeview['show']='headings'
                
                    tree_eee_ia3_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_eee_ia3_6th_ia_schedule()
                    tree_eee_ia3_6th_treeview.bind('<ButtonRelease-1>',get_eee_ia3_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Electrical_And_Electronic_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    eee_ia3_7th_subjects_list=[]
                    def fetch_eee_ia3_7th_subjects():
                        #all_eee_ia3_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select eee_7th_subjects from all_eee_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    eee_ia3_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_eee_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_eee_ia3_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_eee_ia3_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_eee_ia3_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_eee_ia3_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'eee_ia3_7th_subjects','eee_ia3_7th_date','eee_ia3_7th_time','eee_ia3_7th_code','semisters','branch'
                                        cur.execute('insert into eee_ia3_7th_schedule(eee_ia3_7th_subjects,eee_ia3_7th_date,eee_ia3_7th_time,eee_ia3_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_eee_ia3_7th_subjects_entry.get(),
                                            self.var_eee_ia3_7th_date_entry.get(),
                                            self.var_eee_ia3_7th_time_entry.get(),
                                            self.var_eee_ia3_7th_code.get(),
                                            self.var_eee_ia3_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_eee_ia3_7th_ia_schedule()
                                        con.close()
                    def fetch_eee_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_ia3_7th_schedule')
                            rows=cur.fetchall()
                            tree_eee_ia3_7th_treeview.delete(*tree_eee_ia3_7th_treeview.get_children())
                            for row in rows:
                                tree_eee_ia3_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_eee_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia3_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from eee_ia3_7th_schedule where eee_ia3_7th_subjects=?',(self.var_eee_ia3_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from eee_ia3_7th_schedule where eee_ia3_7th_subjects=? ',(self.var_eee_ia3_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_eee_ia3_7th_all()
                                    fetch_eee_ia3_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_eee_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia3_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update eee_ia3_7th_schedule set eee_ia3_7th_date=?,eee_ia3_7th_time=?,eee_ia3_7th_code=?,semisters=?,branch=?  where eee_ia3_7th_subjects=?',(
                                self.var_eee_ia3_7th_date_entry.get(),
                                self.var_eee_ia3_7th_time_entry.get(),
                                self.var_eee_ia3_7th_code.get(),
                                self.var_eee_ia3_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_eee_ia3_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_eee_ia3_7th_ia_schedule()
                                clear_eee_ia3_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_eee_ia3_7th_all():
                        fetch_eee_ia3_7th_ia_schedule()
                        self.var_eee_ia3_7th_subjects_entry.set("")
                        self.var_eee_ia3_7th_date_entry.set("")
                        self.var_eee_ia3_7th_time_entry.set("")
                        self.var_eee_ia3_7th_code.set("")
                        self.var_eee_ia3_7th_semister.set("")
                        self.var_serach_eee_ia3_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_eee_ia3_7th_ia_schedule(ev):
                        read=tree_eee_ia3_7th_treeview.focus()
                        content=tree_eee_ia3_7th_treeview.item(read)
                        row=content['values']

                        self.var_eee_ia3_7th_subjects_entry.set(row[1])
                        self.var_eee_ia3_7th_date_entry.set(row[2])
                        self.var_eee_ia3_7th_time_entry.set(row[3])
                        self.var_eee_ia3_7th_code.set(row[4])
                        self.var_eee_ia3_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_eee_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_eee_ia3_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from eee_ia3_7th_schedule where eee_ia3_7th_subjects=?",(self.var_serach_eee_ia3_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_eee_ia3_7th_treeview.delete(*tree_eee_ia3_7th_treeview.get_children())
                                for row in rows:
                                    tree_eee_ia3_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_eee_ia3_7th_subjects()
                    eee_ia3_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_eee_ia3_7th_subjects_entry,values=eee_ia3_7th_subjects_list).place(x=87,y=14)

                    eee_ia3_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_eee_ia3_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    eee_ia3_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia3_7th_time_entry).place(x=569,y=14)

                    eee_ia3_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia3_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_eee_ia3_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_eee_ia3_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_eee_ia3_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_eee_ia3_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_eee_ia3_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_eee_ia3_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_eee_ia3_7th_treeview=ttk.Treeview(tree_frame1,columns=('eee_ia3_7th_subjects','eee_ia3_7th_date','eee_ia3_7th_time','eee_ia3_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_eee_ia3_7th_treeview.xview)
                    scrolly.configure(command=tree_eee_ia3_7th_treeview.yview)

                    tree_eee_ia3_7th_treeview.heading('eee_ia3_7th_subjects',text="Subjects")
                    tree_eee_ia3_7th_treeview.heading('eee_ia3_7th_date',text="Date")
                    tree_eee_ia3_7th_treeview.heading('eee_ia3_7th_time',text="Time")
                    tree_eee_ia3_7th_treeview.heading('eee_ia3_7th_code',text="Code")
                    tree_eee_ia3_7th_treeview.heading('semisters',text="Semister")
                    tree_eee_ia3_7th_treeview.heading('branch',text="Branch")

                    tree_eee_ia3_7th_treeview.column('eee_ia3_7th_subjects',width=200)
                    tree_eee_ia3_7th_treeview.column('eee_ia3_7th_date',width=150)
                    tree_eee_ia3_7th_treeview.column('eee_ia3_7th_time',width=150)
                    tree_eee_ia3_7th_treeview.column('eee_ia3_7th_code',width=150)
                    tree_eee_ia3_7th_treeview.column('semisters',width=150)
                    tree_eee_ia3_7th_treeview.column('branch',width=200)

                    tree_eee_ia3_7th_treeview['show']='headings'
                
                    tree_eee_ia3_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_eee_ia3_7th_ia_schedule()
                    tree_eee_ia3_7th_treeview.bind('<ButtonRelease-1>',get_eee_ia3_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Electrical_And_Electronic_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    eee_ia3_8th_subjects_list=[]
                    def fetch_eee_ia3_8th_subjects():
                        #all_eee_ia3_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select eee_8th_subjects from all_eee_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    eee_ia3_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_eee_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_eee_ia3_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_eee_ia3_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_eee_ia3_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_eee_ia3_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'eee_ia3_8th_subjects','eee_ia3_8th_date','eee_ia3_8th_time','eee_ia3_8th_code','semisters','branch'
                                        cur.execute('insert into eee_ia3_8th_schedule(eee_ia3_8th_subjects,eee_ia3_8th_date,eee_ia3_8th_time,eee_ia3_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_eee_ia3_8th_subjects_entry.get(),
                                            self.var_eee_ia3_8th_date_entry.get(),
                                            self.var_eee_ia3_8th_time_entry.get(),
                                            self.var_eee_ia3_8th_code.get(),
                                            self.var_eee_ia3_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_eee_ia3_8th_ia_schedule()
                                        con.close()
                    def fetch_eee_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_ia3_8th_schedule')
                            rows=cur.fetchall()
                            tree_eee_ia3_8th_treeview.delete(*tree_eee_ia3_8th_treeview.get_children())
                            for row in rows:
                                tree_eee_ia3_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_eee_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia3_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from eee_ia3_8th_schedule where eee_ia3_8th_subjects=?',(self.var_eee_ia3_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from eee_ia3_8th_schedule where eee_ia3_8th_subjects=? ',(self.var_eee_ia3_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_eee_ia3_8th_all()
                                    fetch_eee_ia3_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_eee_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_eee_ia3_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update eee_ia3_8th_schedule set eee_ia3_8th_date=?,eee_ia3_8th_time=?,eee_ia3_8th_code=?,semisters=?,branch=?  where eee_ia3_8th_subjects=?',(
                                self.var_eee_ia3_8th_date_entry.get(),
                                self.var_eee_ia3_8th_time_entry.get(),
                                self.var_eee_ia3_8th_code.get(),
                                self.var_eee_ia3_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_eee_ia3_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_eee_ia3_8th_ia_schedule()
                                clear_eee_ia3_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_eee_ia3_8th_all():
                        fetch_eee_ia3_8th_ia_schedule()
                        self.var_eee_ia3_8th_subjects_entry.set("")
                        self.var_eee_ia3_8th_date_entry.set("")
                        self.var_eee_ia3_8th_time_entry.set("")
                        self.var_eee_ia3_8th_code.set("")
                        self.var_eee_ia3_8th_semister.set("")
                        self.var_serach_eee_ia3_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_eee_ia3_8th_ia_schedule(ev):
                        read=tree_eee_ia3_8th_treeview.focus()
                        content=tree_eee_ia3_8th_treeview.item(read)
                        row=content['values']

                        self.var_eee_ia3_8th_subjects_entry.set(row[1])
                        self.var_eee_ia3_8th_date_entry.set(row[2])
                        self.var_eee_ia3_8th_time_entry.set(row[3])
                        self.var_eee_ia3_8th_code.set(row[4])
                        self.var_eee_ia3_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_eee_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_eee_ia3_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from eee_ia3_8th_schedule where eee_ia3_8th_subjects=?",(self.var_serach_eee_ia3_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_eee_ia3_8th_treeview.delete(*tree_eee_ia3_8th_treeview.get_children())
                                for row in rows:
                                    tree_eee_ia3_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_eee_ia3_8th_subjects()
                    eee_ia3_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_eee_ia3_8th_subjects_entry,values=eee_ia3_8th_subjects_list).place(x=87,y=14)

                    eee_ia3_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_eee_ia3_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    eee_ia3_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia3_8th_time_entry).place(x=569,y=14)

                    eee_ia3_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_eee_ia3_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_eee_ia3_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_eee_ia3_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_eee_ia3_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_eee_ia3_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_eee_ia3_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_eee_ia3_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_eee_ia3_8th_treeview=ttk.Treeview(tree_frame1,columns=('eee_ia3_8th_subjects','eee_ia3_8th_date','eee_ia3_8th_time','eee_ia3_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_eee_ia3_8th_treeview.xview)
                    scrolly.configure(command=tree_eee_ia3_8th_treeview.yview)

                    tree_eee_ia3_8th_treeview.heading('eee_ia3_8th_subjects',text="Subjects")
                    tree_eee_ia3_8th_treeview.heading('eee_ia3_8th_date',text="Date")
                    tree_eee_ia3_8th_treeview.heading('eee_ia3_8th_time',text="Time")
                    tree_eee_ia3_8th_treeview.heading('eee_ia3_8th_code',text="Code")
                    tree_eee_ia3_8th_treeview.heading('semisters',text="Semister")
                    tree_eee_ia3_8th_treeview.heading('branch',text="Branch")

                    tree_eee_ia3_8th_treeview.column('eee_ia3_8th_subjects',width=200)
                    tree_eee_ia3_8th_treeview.column('eee_ia3_8th_date',width=150)
                    tree_eee_ia3_8th_treeview.column('eee_ia3_8th_time',width=150)
                    tree_eee_ia3_8th_treeview.column('eee_ia3_8th_code',width=150)
                    tree_eee_ia3_8th_treeview.column('semisters',width=150)
                    tree_eee_ia3_8th_treeview.column('branch',width=200)

                    tree_eee_ia3_8th_treeview['show']='headings'
                
                    tree_eee_ia3_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_eee_ia3_8th_ia_schedule()
                    tree_eee_ia3_8th_treeview.bind('<ButtonRelease-1>',get_eee_ia3_8th_ia_schedule)
        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Communication_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    ece_ia3_3rd_subjects_list=[]
                    def fetch_ece_ia3_3rd_subjects():
                        #all_ece_ia3_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ece_3rd_subjects from all_ece_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ece_ia3_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ece_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ece_ia3_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ece_ia3_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ece_ia3_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ece_ia3_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ece_ia3_3rd_subjects','ece_ia3_3rd_date','ece_ia3_3rd_time','ece_ia3_3rd_code','semisters','branch'
                                        cur.execute('insert into ece_ia3_3rd_schedule(ece_ia3_3rd_subjects,ece_ia3_3rd_date,ece_ia3_3rd_time,ece_ia3_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ece_ia3_3rd_subjects_entry.get(),
                                            self.var_ece_ia3_3rd_date_entry.get(),
                                            self.var_ece_ia3_3rd_time_entry.get(),
                                            self.var_ece_ia3_3rd_code.get(),
                                            self.var_ece_ia3_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ece_ia3_3rd_ia_schedule()
                                        con.close()
                    def fetch_ece_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_ia3_3rd_schedule')
                            rows=cur.fetchall()
                            tree_ece_ia3_3rd_treeview.delete(*tree_ece_ia3_3rd_treeview.get_children())
                            for row in rows:
                                tree_ece_ia3_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ece_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia3_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ece_ia3_3rd_schedule where ece_ia3_3rd_subjects=?',(self.var_ece_ia3_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ece_ia3_3rd_schedule where ece_ia3_3rd_subjects=? ',(self.var_ece_ia3_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ece_ia3_3rd_all()
                                    fetch_ece_ia3_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ece_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia3_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ece_ia3_3rd_schedule set ece_ia3_3rd_date=?,ece_ia3_3rd_time=?,ece_ia3_3rd_code=?,semisters=?,branch=?  where ece_ia3_3rd_subjects=?',(
                                self.var_ece_ia3_3rd_date_entry.get(),
                                self.var_ece_ia3_3rd_time_entry.get(),
                                self.var_ece_ia3_3rd_code.get(),
                                self.var_ece_ia3_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ece_ia3_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ece_ia3_3rd_ia_schedule()
                                clear_ece_ia3_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ece_ia3_3rd_all():
                        fetch_ece_ia3_3rd_ia_schedule()
                        self.var_ece_ia3_3rd_subjects_entry.set("")
                        self.var_ece_ia3_3rd_date_entry.set("")
                        self.var_ece_ia3_3rd_time_entry.set("")
                        self.var_ece_ia3_3rd_code.set("")
                        self.var_ece_ia3_3rd_semister.set("")
                        self.var_serach_ece_ia3_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ece_ia3_3rd_ia_schedule(ev):
                        read=tree_ece_ia3_3rd_treeview.focus()
                        content=tree_ece_ia3_3rd_treeview.item(read)
                        row=content['values']

                        self.var_ece_ia3_3rd_subjects_entry.set(row[1])
                        self.var_ece_ia3_3rd_date_entry.set(row[2])
                        self.var_ece_ia3_3rd_time_entry.set(row[3])
                        self.var_ece_ia3_3rd_code.set(row[4])
                        self.var_ece_ia3_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ece_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ece_ia3_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ece_ia3_3rd_schedule where ece_ia3_3rd_subjects=?",(self.var_serach_ece_ia3_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ece_ia3_3rd_treeview.delete(*tree_ece_ia3_3rd_treeview.get_children())
                                for row in rows:
                                    tree_ece_ia3_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ece_ia3_3rd_subjects()
                    ece_ia3_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ece_ia3_3rd_subjects_entry,values=ece_ia3_3rd_subjects_list).place(x=87,y=14)

                    ece_ia3_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ece_ia3_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ece_ia3_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia3_3rd_time_entry).place(x=569,y=14)

                    ece_ia3_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia3_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ece_ia3_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ece_ia3_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ece_ia3_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ece_ia3_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ece_ia3_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ece_ia3_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ece_ia3_3rd_treeview=ttk.Treeview(tree_frame1,columns=('ece_ia3_3rd_subjects','ece_ia3_3rd_date','ece_ia3_3rd_time','ece_ia3_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ece_ia3_3rd_treeview.xview)
                    scrolly.configure(command=tree_ece_ia3_3rd_treeview.yview)

                    tree_ece_ia3_3rd_treeview.heading('ece_ia3_3rd_subjects',text="Subjects")
                    tree_ece_ia3_3rd_treeview.heading('ece_ia3_3rd_date',text="Date")
                    tree_ece_ia3_3rd_treeview.heading('ece_ia3_3rd_time',text="Time")
                    tree_ece_ia3_3rd_treeview.heading('ece_ia3_3rd_code',text="Code")
                    tree_ece_ia3_3rd_treeview.heading('semisters',text="Semister")
                    tree_ece_ia3_3rd_treeview.heading('branch',text="Branch")

                    tree_ece_ia3_3rd_treeview.column('ece_ia3_3rd_subjects',width=200)
                    tree_ece_ia3_3rd_treeview.column('ece_ia3_3rd_date',width=150)
                    tree_ece_ia3_3rd_treeview.column('ece_ia3_3rd_time',width=150)
                    tree_ece_ia3_3rd_treeview.column('ece_ia3_3rd_code',width=150)
                    tree_ece_ia3_3rd_treeview.column('semisters',width=150)
                    tree_ece_ia3_3rd_treeview.column('branch',width=200)

                    tree_ece_ia3_3rd_treeview['show']='headings'
                
                    tree_ece_ia3_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_ece_ia3_3rd_ia_schedule()
                    tree_ece_ia3_3rd_treeview.bind('<ButtonRelease-1>',get_ece_ia3_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Communication_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    ece_ia3_4th_subjects_list=[]
                    def fetch_ece_ia3_4th_subjects():
                        #all_ece_ia3_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ece_4th_subjects from all_ece_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ece_ia3_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ece_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ece_ia3_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ece_ia3_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ece_ia3_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ece_ia3_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ece_ia3_4th_subjects','ece_ia3_4th_date','ece_ia3_4th_time','ece_ia3_4th_code','semisters','branch'
                                        cur.execute('insert into ece_ia3_4th_schedule(ece_ia3_4th_subjects,ece_ia3_4th_date,ece_ia3_4th_time,ece_ia3_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ece_ia3_4th_subjects_entry.get(),
                                            self.var_ece_ia3_4th_date_entry.get(),
                                            self.var_ece_ia3_4th_time_entry.get(),
                                            self.var_ece_ia3_4th_code.get(),
                                            self.var_ece_ia3_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ece_ia3_4th_ia_schedule()
                                        con.close()
                    def fetch_ece_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_ia3_4th_schedule')
                            rows=cur.fetchall()
                            tree_ece_ia3_4th_treeview.delete(*tree_ece_ia3_4th_treeview.get_children())
                            for row in rows:
                                tree_ece_ia3_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ece_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia3_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ece_ia3_4th_schedule where ece_ia3_4th_subjects=?',(self.var_ece_ia3_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ece_ia3_4th_schedule where ece_ia3_4th_subjects=? ',(self.var_ece_ia3_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ece_ia3_4th_all()
                                    fetch_ece_ia3_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ece_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia3_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ece_ia3_4th_schedule set ece_ia3_4th_date=?,ece_ia3_4th_time=?,ece_ia3_4th_code=?,semisters=?,branch=?  where ece_ia3_4th_subjects=?',(
                                self.var_ece_ia3_4th_date_entry.get(),
                                self.var_ece_ia3_4th_time_entry.get(),
                                self.var_ece_ia3_4th_code.get(),
                                self.var_ece_ia3_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ece_ia3_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ece_ia3_4th_ia_schedule()
                                clear_ece_ia3_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ece_ia3_4th_all():
                        fetch_ece_ia3_4th_ia_schedule()
                        self.var_ece_ia3_4th_subjects_entry.set("")
                        self.var_ece_ia3_4th_date_entry.set("")
                        self.var_ece_ia3_4th_time_entry.set("")
                        self.var_ece_ia3_4th_code.set("")
                        self.var_ece_ia3_4th_semister.set("")
                        self.var_serach_ece_ia3_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ece_ia3_4th_ia_schedule(ev):
                        read=tree_ece_ia3_4th_treeview.focus()
                        content=tree_ece_ia3_4th_treeview.item(read)
                        row=content['values']

                        self.var_ece_ia3_4th_subjects_entry.set(row[1])
                        self.var_ece_ia3_4th_date_entry.set(row[2])
                        self.var_ece_ia3_4th_time_entry.set(row[3])
                        self.var_ece_ia3_4th_code.set(row[4])
                        self.var_ece_ia3_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ece_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ece_ia3_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ece_ia3_4th_schedule where ece_ia3_4th_subjects=?",(self.var_serach_ece_ia3_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ece_ia3_4th_treeview.delete(*tree_ece_ia3_4th_treeview.get_children())
                                for row in rows:
                                    tree_ece_ia3_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ece_ia3_4th_subjects()
                    ece_ia3_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ece_ia3_4th_subjects_entry,values=ece_ia3_4th_subjects_list).place(x=87,y=14)

                    ece_ia3_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ece_ia3_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ece_ia3_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia3_4th_time_entry).place(x=569,y=14)

                    ece_ia3_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia3_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ece_ia3_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ece_ia3_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ece_ia3_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ece_ia3_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ece_ia3_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ece_ia3_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ece_ia3_4th_treeview=ttk.Treeview(tree_frame1,columns=('ece_ia3_4th_subjects','ece_ia3_4th_date','ece_ia3_4th_time','ece_ia3_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ece_ia3_4th_treeview.xview)
                    scrolly.configure(command=tree_ece_ia3_4th_treeview.yview)

                    tree_ece_ia3_4th_treeview.heading('ece_ia3_4th_subjects',text="Subjects")
                    tree_ece_ia3_4th_treeview.heading('ece_ia3_4th_date',text="Date")
                    tree_ece_ia3_4th_treeview.heading('ece_ia3_4th_time',text="Time")
                    tree_ece_ia3_4th_treeview.heading('ece_ia3_4th_code',text="Code")
                    tree_ece_ia3_4th_treeview.heading('semisters',text="Semister")
                    tree_ece_ia3_4th_treeview.heading('branch',text="Branch")

                    tree_ece_ia3_4th_treeview.column('ece_ia3_4th_subjects',width=200)
                    tree_ece_ia3_4th_treeview.column('ece_ia3_4th_date',width=150)
                    tree_ece_ia3_4th_treeview.column('ece_ia3_4th_time',width=150)
                    tree_ece_ia3_4th_treeview.column('ece_ia3_4th_code',width=150)
                    tree_ece_ia3_4th_treeview.column('semisters',width=150)
                    tree_ece_ia3_4th_treeview.column('branch',width=200)

                    tree_ece_ia3_4th_treeview['show']='headings'
                
                    tree_ece_ia3_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ece_ia3_4th_ia_schedule()
                    tree_ece_ia3_4th_treeview.bind('<ButtonRelease-1>',get_ece_ia3_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Communication_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    ece_ia3_5th_subjects_list=[]
                    def fetch_ece_ia3_5th_subjects():
                        #all_ece_ia3_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ece_5th_subjects from all_ece_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ece_ia3_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ece_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ece_ia3_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ece_ia3_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ece_ia3_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ece_ia3_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ece_ia3_5th_subjects','ece_ia3_5th_date','ece_ia3_5th_time','ece_ia3_5th_code','semisters','branch'
                                        cur.execute('insert into ece_ia3_5th_schedule(ece_ia3_5th_subjects,ece_ia3_5th_date,ece_ia3_5th_time,ece_ia3_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ece_ia3_5th_subjects_entry.get(),
                                            self.var_ece_ia3_5th_date_entry.get(),
                                            self.var_ece_ia3_5th_time_entry.get(),
                                            self.var_ece_ia3_5th_code.get(),
                                            self.var_ece_ia3_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ece_ia3_5th_ia_schedule()
                                        con.close()
                    def fetch_ece_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_ia3_5th_schedule')
                            rows=cur.fetchall()
                            tree_ece_ia3_5th_treeview.delete(*tree_ece_ia3_5th_treeview.get_children())
                            for row in rows:
                                tree_ece_ia3_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ece_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia3_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ece_ia3_5th_schedule where ece_ia3_5th_subjects=?',(self.var_ece_ia3_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ece_ia3_5th_schedule where ece_ia3_5th_subjects=? ',(self.var_ece_ia3_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ece_ia3_5th_all()
                                    fetch_ece_ia3_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ece_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia3_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ece_ia3_5th_schedule set ece_ia3_5th_date=?,ece_ia3_5th_time=?,ece_ia3_5th_code=?,semisters=?,branch=?  where ece_ia3_5th_subjects=?',(
                                self.var_ece_ia3_5th_date_entry.get(),
                                self.var_ece_ia3_5th_time_entry.get(),
                                self.var_ece_ia3_5th_code.get(),
                                self.var_ece_ia3_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ece_ia3_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ece_ia3_5th_ia_schedule()
                                clear_ece_ia3_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ece_ia3_5th_all():
                        fetch_ece_ia3_5th_ia_schedule()
                        self.var_ece_ia3_5th_subjects_entry.set("")
                        self.var_ece_ia3_5th_date_entry.set("")
                        self.var_ece_ia3_5th_time_entry.set("")
                        self.var_ece_ia3_5th_code.set("")
                        self.var_ece_ia3_5th_semister.set("")
                        self.var_serach_ece_ia3_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ece_ia3_5th_ia_schedule(ev):
                        read=tree_ece_ia3_5th_treeview.focus()
                        content=tree_ece_ia3_5th_treeview.item(read)
                        row=content['values']

                        self.var_ece_ia3_5th_subjects_entry.set(row[1])
                        self.var_ece_ia3_5th_date_entry.set(row[2])
                        self.var_ece_ia3_5th_time_entry.set(row[3])
                        self.var_ece_ia3_5th_code.set(row[4])
                        self.var_ece_ia3_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ece_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ece_ia3_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ece_ia3_5th_schedule where ece_ia3_5th_subjects=?",(self.var_serach_ece_ia3_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ece_ia3_5th_treeview.delete(*tree_ece_ia3_5th_treeview.get_children())
                                for row in rows:
                                    tree_ece_ia3_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ece_ia3_5th_subjects()
                    ece_ia3_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ece_ia3_5th_subjects_entry,values=ece_ia3_5th_subjects_list).place(x=87,y=14)

                    ece_ia3_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ece_ia3_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ece_ia3_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia3_5th_time_entry).place(x=569,y=14)

                    ece_ia3_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia3_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ece_ia3_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ece_ia3_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ece_ia3_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ece_ia3_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ece_ia3_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ece_ia3_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ece_ia3_5th_treeview=ttk.Treeview(tree_frame1,columns=('ece_ia3_5th_subjects','ece_ia3_5th_date','ece_ia3_5th_time','ece_ia3_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ece_ia3_5th_treeview.xview)
                    scrolly.configure(command=tree_ece_ia3_5th_treeview.yview)

                    tree_ece_ia3_5th_treeview.heading('ece_ia3_5th_subjects',text="Subjects")
                    tree_ece_ia3_5th_treeview.heading('ece_ia3_5th_date',text="Date")
                    tree_ece_ia3_5th_treeview.heading('ece_ia3_5th_time',text="Time")
                    tree_ece_ia3_5th_treeview.heading('ece_ia3_5th_code',text="Code")
                    tree_ece_ia3_5th_treeview.heading('semisters',text="Semister")
                    tree_ece_ia3_5th_treeview.heading('branch',text="Branch")

                    tree_ece_ia3_5th_treeview.column('ece_ia3_5th_subjects',width=200)
                    tree_ece_ia3_5th_treeview.column('ece_ia3_5th_date',width=150)
                    tree_ece_ia3_5th_treeview.column('ece_ia3_5th_time',width=150)
                    tree_ece_ia3_5th_treeview.column('ece_ia3_5th_code',width=150)
                    tree_ece_ia3_5th_treeview.column('semisters',width=150)
                    tree_ece_ia3_5th_treeview.column('branch',width=200)

                    tree_ece_ia3_5th_treeview['show']='headings'
                
                    tree_ece_ia3_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ece_ia3_5th_ia_schedule()
                    tree_ece_ia3_5th_treeview.bind('<ButtonRelease-1>',get_ece_ia3_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Communication_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    ece_ia3_6th_subjects_list=[]
                    def fetch_ece_ia3_6th_subjects():
                        #all_ece_ia3_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ece_6th_subjects from all_ece_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ece_ia3_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ece_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ece_ia3_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ece_ia3_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ece_ia3_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ece_ia3_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ece_ia3_6th_subjects','ece_ia3_6th_date','ece_ia3_6th_time','ece_ia3_6th_code','semisters','branch'
                                        cur.execute('insert into ece_ia3_6th_schedule(ece_ia3_6th_subjects,ece_ia3_6th_date,ece_ia3_6th_time,ece_ia3_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ece_ia3_6th_subjects_entry.get(),
                                            self.var_ece_ia3_6th_date_entry.get(),
                                            self.var_ece_ia3_6th_time_entry.get(),
                                            self.var_ece_ia3_6th_code.get(),
                                            self.var_ece_ia3_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ece_ia3_6th_ia_schedule()
                                        con.close()
                    def fetch_ece_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_ia3_6th_schedule')
                            rows=cur.fetchall()
                            tree_ece_ia3_6th_treeview.delete(*tree_ece_ia3_6th_treeview.get_children())
                            for row in rows:
                                tree_ece_ia3_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ece_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia3_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ece_ia3_6th_schedule where ece_ia3_6th_subjects=?',(self.var_ece_ia3_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ece_ia3_6th_schedule where ece_ia3_6th_subjects=? ',(self.var_ece_ia3_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ece_ia3_6th_all()
                                    fetch_ece_ia3_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ece_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia3_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ece_ia3_6th_schedule set ece_ia3_6th_date=?,ece_ia3_6th_time=?,ece_ia3_6th_code=?,semisters=?,branch=?  where ece_ia3_6th_subjects=?',(
                                self.var_ece_ia3_6th_date_entry.get(),
                                self.var_ece_ia3_6th_time_entry.get(),
                                self.var_ece_ia3_6th_code.get(),
                                self.var_ece_ia3_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ece_ia3_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ece_ia3_6th_ia_schedule()
                                clear_ece_ia3_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ece_ia3_6th_all():
                        fetch_ece_ia3_6th_ia_schedule()
                        self.var_ece_ia3_6th_subjects_entry.set("")
                        self.var_ece_ia3_6th_date_entry.set("")
                        self.var_ece_ia3_6th_time_entry.set("")
                        self.var_ece_ia3_6th_code.set("")
                        self.var_ece_ia3_6th_semister.set("")
                        self.var_serach_ece_ia3_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ece_ia3_6th_ia_schedule(ev):
                        read=tree_ece_ia3_6th_treeview.focus()
                        content=tree_ece_ia3_6th_treeview.item(read)
                        row=content['values']

                        self.var_ece_ia3_6th_subjects_entry.set(row[1])
                        self.var_ece_ia3_6th_date_entry.set(row[2])
                        self.var_ece_ia3_6th_time_entry.set(row[3])
                        self.var_ece_ia3_6th_code.set(row[4])
                        self.var_ece_ia3_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ece_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ece_ia3_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ece_ia3_6th_schedule where ece_ia3_6th_subjects=?",(self.var_serach_ece_ia3_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ece_ia3_6th_treeview.delete(*tree_ece_ia3_6th_treeview.get_children())
                                for row in rows:
                                    tree_ece_ia3_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ece_ia3_6th_subjects()
                    ece_ia3_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ece_ia3_6th_subjects_entry,values=ece_ia3_6th_subjects_list).place(x=87,y=14)

                    ece_ia3_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ece_ia3_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ece_ia3_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia3_6th_time_entry).place(x=569,y=14)

                    ece_ia3_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia3_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ece_ia3_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ece_ia3_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ece_ia3_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ece_ia3_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ece_ia3_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ece_ia3_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ece_ia3_6th_treeview=ttk.Treeview(tree_frame1,columns=('ece_ia3_6th_subjects','ece_ia3_6th_date','ece_ia3_6th_time','ece_ia3_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ece_ia3_6th_treeview.xview)
                    scrolly.configure(command=tree_ece_ia3_6th_treeview.yview)

                    tree_ece_ia3_6th_treeview.heading('ece_ia3_6th_subjects',text="Subjects")
                    tree_ece_ia3_6th_treeview.heading('ece_ia3_6th_date',text="Date")
                    tree_ece_ia3_6th_treeview.heading('ece_ia3_6th_time',text="Time")
                    tree_ece_ia3_6th_treeview.heading('ece_ia3_6th_code',text="Code")
                    tree_ece_ia3_6th_treeview.heading('semisters',text="Semister")
                    tree_ece_ia3_6th_treeview.heading('branch',text="Branch")

                    tree_ece_ia3_6th_treeview.column('ece_ia3_6th_subjects',width=200)
                    tree_ece_ia3_6th_treeview.column('ece_ia3_6th_date',width=150)
                    tree_ece_ia3_6th_treeview.column('ece_ia3_6th_time',width=150)
                    tree_ece_ia3_6th_treeview.column('ece_ia3_6th_code',width=150)
                    tree_ece_ia3_6th_treeview.column('semisters',width=150)
                    tree_ece_ia3_6th_treeview.column('branch',width=200)

                    tree_ece_ia3_6th_treeview['show']='headings'
                
                    tree_ece_ia3_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ece_ia3_6th_ia_schedule()
                    tree_ece_ia3_6th_treeview.bind('<ButtonRelease-1>',get_ece_ia3_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Communication_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    ece_ia3_7th_subjects_list=[]
                    def fetch_ece_ia3_7th_subjects():
                        #all_ece_ia3_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ece_7th_subjects from all_ece_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ece_ia3_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ece_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ece_ia3_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ece_ia3_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ece_ia3_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ece_ia3_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ece_ia3_7th_subjects','ece_ia3_7th_date','ece_ia3_7th_time','ece_ia3_7th_code','semisters','branch'
                                        cur.execute('insert into ece_ia3_7th_schedule(ece_ia3_7th_subjects,ece_ia3_7th_date,ece_ia3_7th_time,ece_ia3_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ece_ia3_7th_subjects_entry.get(),
                                            self.var_ece_ia3_7th_date_entry.get(),
                                            self.var_ece_ia3_7th_time_entry.get(),
                                            self.var_ece_ia3_7th_code.get(),
                                            self.var_ece_ia3_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ece_ia3_7th_ia_schedule()
                                        con.close()
                    def fetch_ece_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_ia3_7th_schedule')
                            rows=cur.fetchall()
                            tree_ece_ia3_7th_treeview.delete(*tree_ece_ia3_7th_treeview.get_children())
                            for row in rows:
                                tree_ece_ia3_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ece_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia3_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ece_ia3_7th_schedule where ece_ia3_7th_subjects=?',(self.var_ece_ia3_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ece_ia3_7th_schedule where ece_ia3_7th_subjects=? ',(self.var_ece_ia3_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ece_ia3_7th_all()
                                    fetch_ece_ia3_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ece_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia3_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ece_ia3_7th_schedule set ece_ia3_7th_date=?,ece_ia3_7th_time=?,ece_ia3_7th_code=?,semisters=?,branch=?  where ece_ia3_7th_subjects=?',(
                                self.var_ece_ia3_7th_date_entry.get(),
                                self.var_ece_ia3_7th_time_entry.get(),
                                self.var_ece_ia3_7th_code.get(),
                                self.var_ece_ia3_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ece_ia3_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ece_ia3_7th_ia_schedule()
                                clear_ece_ia3_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ece_ia3_7th_all():
                        fetch_ece_ia3_7th_ia_schedule()
                        self.var_ece_ia3_7th_subjects_entry.set("")
                        self.var_ece_ia3_7th_date_entry.set("")
                        self.var_ece_ia3_7th_time_entry.set("")
                        self.var_ece_ia3_7th_code.set("")
                        self.var_ece_ia3_7th_semister.set("")
                        self.var_serach_ece_ia3_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ece_ia3_7th_ia_schedule(ev):
                        read=tree_ece_ia3_7th_treeview.focus()
                        content=tree_ece_ia3_7th_treeview.item(read)
                        row=content['values']

                        self.var_ece_ia3_7th_subjects_entry.set(row[1])
                        self.var_ece_ia3_7th_date_entry.set(row[2])
                        self.var_ece_ia3_7th_time_entry.set(row[3])
                        self.var_ece_ia3_7th_code.set(row[4])
                        self.var_ece_ia3_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ece_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ece_ia3_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ece_ia3_7th_schedule where ece_ia3_7th_subjects=?",(self.var_serach_ece_ia3_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ece_ia3_7th_treeview.delete(*tree_ece_ia3_7th_treeview.get_children())
                                for row in rows:
                                    tree_ece_ia3_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ece_ia3_7th_subjects()
                    ece_ia3_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ece_ia3_7th_subjects_entry,values=ece_ia3_7th_subjects_list).place(x=87,y=14)

                    ece_ia3_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ece_ia3_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ece_ia3_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia3_7th_time_entry).place(x=569,y=14)

                    ece_ia3_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia3_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ece_ia3_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ece_ia3_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ece_ia3_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ece_ia3_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ece_ia3_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ece_ia3_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ece_ia3_7th_treeview=ttk.Treeview(tree_frame1,columns=('ece_ia3_7th_subjects','ece_ia3_7th_date','ece_ia3_7th_time','ece_ia3_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ece_ia3_7th_treeview.xview)
                    scrolly.configure(command=tree_ece_ia3_7th_treeview.yview)

                    tree_ece_ia3_7th_treeview.heading('ece_ia3_7th_subjects',text="Subjects")
                    tree_ece_ia3_7th_treeview.heading('ece_ia3_7th_date',text="Date")
                    tree_ece_ia3_7th_treeview.heading('ece_ia3_7th_time',text="Time")
                    tree_ece_ia3_7th_treeview.heading('ece_ia3_7th_code',text="Code")
                    tree_ece_ia3_7th_treeview.heading('semisters',text="Semister")
                    tree_ece_ia3_7th_treeview.heading('branch',text="Branch")

                    tree_ece_ia3_7th_treeview.column('ece_ia3_7th_subjects',width=200)
                    tree_ece_ia3_7th_treeview.column('ece_ia3_7th_date',width=150)
                    tree_ece_ia3_7th_treeview.column('ece_ia3_7th_time',width=150)
                    tree_ece_ia3_7th_treeview.column('ece_ia3_7th_code',width=150)
                    tree_ece_ia3_7th_treeview.column('semisters',width=150)
                    tree_ece_ia3_7th_treeview.column('branch',width=200)

                    tree_ece_ia3_7th_treeview['show']='headings'
                
                    tree_ece_ia3_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ece_ia3_7th_ia_schedule()
                    tree_ece_ia3_7th_treeview.bind('<ButtonRelease-1>',get_ece_ia3_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Communication_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    ece_ia3_8th_subjects_list=[]
                    def fetch_ece_ia3_8th_subjects():
                        #all_ece_ia3_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ece_8th_subjects from all_ece_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ece_ia3_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ece_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ece_ia3_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ece_ia3_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ece_ia3_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ece_ia3_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ece_ia3_8th_subjects','ece_ia3_8th_date','ece_ia3_8th_time','ece_ia3_8th_code','semisters','branch'
                                        cur.execute('insert into ece_ia3_8th_schedule(ece_ia3_8th_subjects,ece_ia3_8th_date,ece_ia3_8th_time,ece_ia3_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ece_ia3_8th_subjects_entry.get(),
                                            self.var_ece_ia3_8th_date_entry.get(),
                                            self.var_ece_ia3_8th_time_entry.get(),
                                            self.var_ece_ia3_8th_code.get(),
                                            self.var_ece_ia3_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ece_ia3_8th_ia_schedule()
                                        con.close()
                    def fetch_ece_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_ia3_8th_schedule')
                            rows=cur.fetchall()
                            tree_ece_ia3_8th_treeview.delete(*tree_ece_ia3_8th_treeview.get_children())
                            for row in rows:
                                tree_ece_ia3_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ece_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia3_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ece_ia3_8th_schedule where ece_ia3_8th_subjects=?',(self.var_ece_ia3_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ece_ia3_8th_schedule where ece_ia3_8th_subjects=? ',(self.var_ece_ia3_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ece_ia3_8th_all()
                                    fetch_ece_ia3_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ece_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ece_ia3_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ece_ia3_8th_schedule set ece_ia3_8th_date=?,ece_ia3_8th_time=?,ece_ia3_8th_code=?,semisters=?,branch=?  where ece_ia3_8th_subjects=?',(
                                self.var_ece_ia3_8th_date_entry.get(),
                                self.var_ece_ia3_8th_time_entry.get(),
                                self.var_ece_ia3_8th_code.get(),
                                self.var_ece_ia3_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ece_ia3_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ece_ia3_8th_ia_schedule()
                                clear_ece_ia3_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ece_ia3_8th_all():
                        fetch_ece_ia3_8th_ia_schedule()
                        self.var_ece_ia3_8th_subjects_entry.set("")
                        self.var_ece_ia3_8th_date_entry.set("")
                        self.var_ece_ia3_8th_time_entry.set("")
                        self.var_ece_ia3_8th_code.set("")
                        self.var_ece_ia3_8th_semister.set("")
                        self.var_serach_ece_ia3_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ece_ia3_8th_ia_schedule(ev):
                        read=tree_ece_ia3_8th_treeview.focus()
                        content=tree_ece_ia3_8th_treeview.item(read)
                        row=content['values']

                        self.var_ece_ia3_8th_subjects_entry.set(row[1])
                        self.var_ece_ia3_8th_date_entry.set(row[2])
                        self.var_ece_ia3_8th_time_entry.set(row[3])
                        self.var_ece_ia3_8th_code.set(row[4])
                        self.var_ece_ia3_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ece_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ece_ia3_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ece_ia3_8th_schedule where ece_ia3_8th_subjects=?",(self.var_serach_ece_ia3_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ece_ia3_8th_treeview.delete(*tree_ece_ia3_8th_treeview.get_children())
                                for row in rows:
                                    tree_ece_ia3_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ece_ia3_8th_subjects()
                    ece_ia3_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ece_ia3_8th_subjects_entry,values=ece_ia3_8th_subjects_list).place(x=87,y=14)

                    ece_ia3_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ece_ia3_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ece_ia3_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia3_8th_time_entry).place(x=569,y=14)

                    ece_ia3_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ece_ia3_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ece_ia3_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ece_ia3_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ece_ia3_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ece_ia3_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ece_ia3_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ece_ia3_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ece_ia3_8th_treeview=ttk.Treeview(tree_frame1,columns=('ece_ia3_8th_subjects','ece_ia3_8th_date','ece_ia3_8th_time','ece_ia3_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ece_ia3_8th_treeview.xview)
                    scrolly.configure(command=tree_ece_ia3_8th_treeview.yview)

                    tree_ece_ia3_8th_treeview.heading('ece_ia3_8th_subjects',text="Subjects")
                    tree_ece_ia3_8th_treeview.heading('ece_ia3_8th_date',text="Date")
                    tree_ece_ia3_8th_treeview.heading('ece_ia3_8th_time',text="Time")
                    tree_ece_ia3_8th_treeview.heading('ece_ia3_8th_code',text="Code")
                    tree_ece_ia3_8th_treeview.heading('semisters',text="Semister")
                    tree_ece_ia3_8th_treeview.heading('branch',text="Branch")

                    tree_ece_ia3_8th_treeview.column('ece_ia3_8th_subjects',width=200)
                    tree_ece_ia3_8th_treeview.column('ece_ia3_8th_date',width=150)
                    tree_ece_ia3_8th_treeview.column('ece_ia3_8th_time',width=150)
                    tree_ece_ia3_8th_treeview.column('ece_ia3_8th_code',width=150)
                    tree_ece_ia3_8th_treeview.column('semisters',width=150)
                    tree_ece_ia3_8th_treeview.column('branch',width=200)

                    tree_ece_ia3_8th_treeview['show']='headings'
                
                    tree_ece_ia3_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ece_ia3_8th_ia_schedule()
                    tree_ece_ia3_8th_treeview.bind('<ButtonRelease-1>',get_ece_ia3_8th_ia_schedule)
        ####################################################################################################################################################################
        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Telecommunication_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    ete_ia3_3rd_subjects_list=[]
                    def fetch_ete_ia3_3rd_subjects():
                        #all_ete_ia3_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ete_3rd_subjects from all_ete_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ete_ia3_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ete_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ete_ia3_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ete_ia3_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ete_ia3_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ete_ia3_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ete_ia3_3rd_subjects','ete_ia3_3rd_date','ete_ia3_3rd_time','ete_ia3_3rd_code','semisters','branch'
                                        cur.execute('insert into ete_ia3_3rd_schedule(ete_ia3_3rd_subjects,ete_ia3_3rd_date,ete_ia3_3rd_time,ete_ia3_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ete_ia3_3rd_subjects_entry.get(),
                                            self.var_ete_ia3_3rd_date_entry.get(),
                                            self.var_ete_ia3_3rd_time_entry.get(),
                                            self.var_ete_ia3_3rd_code.get(),
                                            self.var_ete_ia3_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ete_ia3_3rd_ia_schedule()
                                        con.close()
                    def fetch_ete_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_ia3_3rd_schedule')
                            rows=cur.fetchall()
                            tree_ete_ia3_3rd_treeview.delete(*tree_ete_ia3_3rd_treeview.get_children())
                            for row in rows:
                                tree_ete_ia3_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ete_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia3_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ete_ia3_3rd_schedule where ete_ia3_3rd_subjects=?',(self.var_ete_ia3_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ete_ia3_3rd_schedule where ete_ia3_3rd_subjects=? ',(self.var_ete_ia3_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ete_ia3_3rd_all()
                                    fetch_ete_ia3_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ete_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia3_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ete_ia3_3rd_schedule set ete_ia3_3rd_date=?,ete_ia3_3rd_time=?,ete_ia3_3rd_code=?,semisters=?,branch=?  where ete_ia3_3rd_subjects=?',(
                                self.var_ete_ia3_3rd_date_entry.get(),
                                self.var_ete_ia3_3rd_time_entry.get(),
                                self.var_ete_ia3_3rd_code.get(),
                                self.var_ete_ia3_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ete_ia3_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ete_ia3_3rd_ia_schedule()
                                clear_ete_ia3_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ete_ia3_3rd_all():
                        fetch_ete_ia3_3rd_ia_schedule()
                        self.var_ete_ia3_3rd_subjects_entry.set("")
                        self.var_ete_ia3_3rd_date_entry.set("")
                        self.var_ete_ia3_3rd_time_entry.set("")
                        self.var_ete_ia3_3rd_code.set("")
                        self.var_ete_ia3_3rd_semister.set("")
                        self.var_serach_ete_ia3_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ete_ia3_3rd_ia_schedule(ev):
                        read=tree_ete_ia3_3rd_treeview.focus()
                        content=tree_ete_ia3_3rd_treeview.item(read)
                        row=content['values']

                        self.var_ete_ia3_3rd_subjects_entry.set(row[1])
                        self.var_ete_ia3_3rd_date_entry.set(row[2])
                        self.var_ete_ia3_3rd_time_entry.set(row[3])
                        self.var_ete_ia3_3rd_code.set(row[4])
                        self.var_ete_ia3_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ete_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ete_ia3_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ete_ia3_3rd_schedule where ete_ia3_3rd_subjects=?",(self.var_serach_ete_ia3_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ete_ia3_3rd_treeview.delete(*tree_ete_ia3_3rd_treeview.get_children())
                                for row in rows:
                                    tree_ete_ia3_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ete_ia3_3rd_subjects()
                    ete_ia3_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ete_ia3_3rd_subjects_entry,values=ete_ia3_3rd_subjects_list).place(x=87,y=14)

                    ete_ia3_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ete_ia3_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ete_ia3_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia3_3rd_time_entry).place(x=569,y=14)

                    ete_ia3_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia3_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ete_ia3_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ete_ia3_3rd_ia_schedule).grid(row=1,column=0)
                    delete_ia3_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ete_ia3_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ete_ia3_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ete_ia3_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ete_ia3_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ete_ia3_3rd_treeview=ttk.Treeview(tree_frame1,columns=('ete_ia3_3rd_subjects','ete_ia3_3rd_date','ete_ia3_3rd_time','ete_ia3_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ete_ia3_3rd_treeview.xview)
                    scrolly.configure(command=tree_ete_ia3_3rd_treeview.yview)

                    tree_ete_ia3_3rd_treeview.heading('ete_ia3_3rd_subjects',text="Subjects")
                    tree_ete_ia3_3rd_treeview.heading('ete_ia3_3rd_date',text="Date")
                    tree_ete_ia3_3rd_treeview.heading('ete_ia3_3rd_time',text="Time")
                    tree_ete_ia3_3rd_treeview.heading('ete_ia3_3rd_code',text="Code")
                    tree_ete_ia3_3rd_treeview.heading('semisters',text="Semister")
                    tree_ete_ia3_3rd_treeview.heading('branch',text="Branch")

                    tree_ete_ia3_3rd_treeview.column('ete_ia3_3rd_subjects',width=200)
                    tree_ete_ia3_3rd_treeview.column('ete_ia3_3rd_date',width=150)
                    tree_ete_ia3_3rd_treeview.column('ete_ia3_3rd_time',width=150)
                    tree_ete_ia3_3rd_treeview.column('ete_ia3_3rd_code',width=150)
                    tree_ete_ia3_3rd_treeview.column('semisters',width=150)
                    tree_ete_ia3_3rd_treeview.column('branch',width=200)

                    tree_ete_ia3_3rd_treeview['show']='headings'
                
                    tree_ete_ia3_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_ete_ia3_3rd_ia_schedule()
                    tree_ete_ia3_3rd_treeview.bind('<ButtonRelease-1>',get_ete_ia3_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Telecommunication_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    ete_ia3_4th_subjects_list=[]
                    def fetch_ete_ia3_4th_subjects():
                        #all_ete_ia3_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ete_4th_subjects from all_ete_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ete_ia3_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ete_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ete_ia3_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ete_ia3_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ete_ia3_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ete_ia3_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ete_ia3_4th_subjects','ete_ia3_4th_date','ete_ia3_4th_time','ete_ia3_4th_code','semisters','branch'
                                        cur.execute('insert into ete_ia3_4th_schedule(ete_ia3_4th_subjects,ete_ia3_4th_date,ete_ia3_4th_time,ete_ia3_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ete_ia3_4th_subjects_entry.get(),
                                            self.var_ete_ia3_4th_date_entry.get(),
                                            self.var_ete_ia3_4th_time_entry.get(),
                                            self.var_ete_ia3_4th_code.get(),
                                            self.var_ete_ia3_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ete_ia3_4th_ia_schedule()
                                        con.close()
                    def fetch_ete_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_ia3_4th_schedule')
                            rows=cur.fetchall()
                            tree_ete_ia3_4th_treeview.delete(*tree_ete_ia3_4th_treeview.get_children())
                            for row in rows:
                                tree_ete_ia3_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ete_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia3_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ete_ia3_4th_schedule where ete_ia3_4th_subjects=?',(self.var_ete_ia3_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ete_ia3_4th_schedule where ete_ia3_4th_subjects=? ',(self.var_ete_ia3_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ete_ia3_4th_all()
                                    fetch_ete_ia3_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ete_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia3_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ete_ia3_4th_schedule set ete_ia3_4th_date=?,ete_ia3_4th_time=?,ete_ia3_4th_code=?,semisters=?,branch=?  where ete_ia3_4th_subjects=?',(
                                self.var_ete_ia3_4th_date_entry.get(),
                                self.var_ete_ia3_4th_time_entry.get(),
                                self.var_ete_ia3_4th_code.get(),
                                self.var_ete_ia3_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ete_ia3_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ete_ia3_4th_ia_schedule()
                                clear_ete_ia3_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ete_ia3_4th_all():
                        fetch_ete_ia3_4th_ia_schedule()
                        self.var_ete_ia3_4th_subjects_entry.set("")
                        self.var_ete_ia3_4th_date_entry.set("")
                        self.var_ete_ia3_4th_time_entry.set("")
                        self.var_ete_ia3_4th_code.set("")
                        self.var_ete_ia3_4th_semister.set("")
                        self.var_serach_ete_ia3_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ete_ia3_4th_ia_schedule(ev):
                        read=tree_ete_ia3_4th_treeview.focus()
                        content=tree_ete_ia3_4th_treeview.item(read)
                        row=content['values']

                        self.var_ete_ia3_4th_subjects_entry.set(row[1])
                        self.var_ete_ia3_4th_date_entry.set(row[2])
                        self.var_ete_ia3_4th_time_entry.set(row[3])
                        self.var_ete_ia3_4th_code.set(row[4])
                        self.var_ete_ia3_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ete_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ete_ia3_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ete_ia3_4th_schedule where ete_ia3_4th_subjects=?",(self.var_serach_ete_ia3_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ete_ia3_4th_treeview.delete(*tree_ete_4th_treeview.get_children())
                                for row in rows:
                                    tree_ete_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ete_ia3_4th_subjects()
                    ete_ia3_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ete_ia3_4th_subjects_entry,values=ete_ia3_4th_subjects_list).place(x=87,y=14)

                    ete_ia3_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ete_ia3_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ete_ia3_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia3_4th_time_entry).place(x=569,y=14)

                    ete_ia3_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia3_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ete_ia3_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ete_ia3_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ete_ia3_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ete_ia3_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ete_ia3_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ete_ia3_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ete_ia3_4th_treeview=ttk.Treeview(tree_frame1,columns=('ete_ia3_4th_subjects','ete_ia3_4th_date','ete_ia3_4th_time','ete_ia3_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ete_ia3_4th_treeview.xview)
                    scrolly.configure(command=tree_ete_ia3_4th_treeview.yview)

                    tree_ete_ia3_4th_treeview.heading('ete_ia3_4th_subjects',text="Subjects")
                    tree_ete_ia3_4th_treeview.heading('ete_ia3_4th_date',text="Date")
                    tree_ete_ia3_4th_treeview.heading('ete_ia3_4th_time',text="Time")
                    tree_ete_ia3_4th_treeview.heading('ete_ia3_4th_code',text="Code")
                    tree_ete_ia3_4th_treeview.heading('semisters',text="Semister")
                    tree_ete_ia3_4th_treeview.heading('branch',text="Branch")

                    tree_ete_ia3_4th_treeview.column('ete_ia3_4th_subjects',width=200)
                    tree_ete_ia3_4th_treeview.column('ete_ia3_4th_date',width=150)
                    tree_ete_ia3_4th_treeview.column('ete_ia3_4th_time',width=150)
                    tree_ete_ia3_4th_treeview.column('ete_ia3_4th_code',width=150)
                    tree_ete_ia3_4th_treeview.column('semisters',width=150)
                    tree_ete_ia3_4th_treeview.column('branch',width=200)

                    tree_ete_ia3_4th_treeview['show']='headings'
                
                    tree_ete_ia3_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ete_ia3_4th_ia_schedule()
                    tree_ete_ia3_4th_treeview.bind('<ButtonRelease-1>',get_ete_ia3_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Telecommunication_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    ete_ia3_5th_subjects_list=[]
                    def fetch_ete_ia3_5th_subjects():
                        #all_ete_ia3_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ete_5th_subjects from all_ete_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ete_ia3_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ete_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ete_ia3_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ete_ia3_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ete_ia3_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ete_ia3_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ete_ia3_5th_subjects','ete_ia3_5th_date','ete_ia3_5th_time','ete_ia3_5th_code','semisters','branch'
                                        cur.execute('insert into ete_ia3_5th_schedule(ete_ia3_5th_subjects,ete_ia3_5th_date,ete_ia3_5th_time,ete_ia3_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ete_ia3_5th_subjects_entry.get(),
                                            self.var_ete_ia3_5th_date_entry.get(),
                                            self.var_ete_ia3_5th_time_entry.get(),
                                            self.var_ete_ia3_5th_code.get(),
                                            self.var_ete_ia3_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ete_ia3_5th_ia_schedule()
                                        con.close()
                    def fetch_ete_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_ia3_5th_schedule')
                            rows=cur.fetchall()
                            tree_ete_ia3_5th_treeview.delete(*tree_ete_ia3_5th_treeview.get_children())
                            for row in rows:
                                tree_ete_ia3_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ete_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia3_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ete_ia3_5th_schedule where ete_ia3_5th_subjects=?',(self.var_ete_ia3_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ete_ia3_5th_schedule where ete_ia3_5th_subjects=? ',(self.var_ete_ia3_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ete_ia3_5th_all()
                                    fetch_ete_ia3_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ete_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia3_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ete_ia3_5th_schedule set ete_ia3_5th_date=?,ete_ia3_5th_time=?,ete_ia3_5th_code=?,semisters=?,branch=?  where ete_ia3_5th_subjects=?',(
                                self.var_ete_ia3_5th_date_entry.get(),
                                self.var_ete_ia3_5th_time_entry.get(),
                                self.var_ete_ia3_5th_code.get(),
                                self.var_ete_ia3_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ete_ia3_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ete_ia3_5th_ia_schedule()
                                clear_ete_ia3_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ete_ia3_5th_all():
                        fetch_ete_ia3_5th_ia_schedule()
                        self.var_ete_ia3_5th_subjects_entry.set("")
                        self.var_ete_ia3_5th_date_entry.set("")
                        self.var_ete_ia3_5th_time_entry.set("")
                        self.var_ete_ia3_5th_code.set("")
                        self.var_ete_ia3_5th_semister.set("")
                        self.var_serach_ete_ia3_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ete_ia3_5th_ia_schedule(ev):
                        read=tree_ete_ia3_5th_treeview.focus()
                        content=tree_ete_ia3_5th_treeview.item(read)
                        row=content['values']

                        self.var_ete_ia3_5th_subjects_entry.set(row[1])
                        self.var_ete_ia3_5th_date_entry.set(row[2])
                        self.var_ete_ia3_5th_time_entry.set(row[3])
                        self.var_ete_ia3_5th_code.set(row[4])
                        self.var_ete_ia3_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ete_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ete_ia3_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ete_ia3_5th_schedule where ete_ia3_5th_subjects=?",(self.var_serach_ete_ia3_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ete_ia3_5th_treeview.delete(*tree_ete_ia3_5th_treeview.get_children())
                                for row in rows:
                                    tree_ete_ia3_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ete_ia3_5th_subjects()
                    ete_ia3_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ete_ia3_5th_subjects_entry,values=ete_ia3_5th_subjects_list).place(x=87,y=14)

                    ete_ia3_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ete_ia3_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ete_ia3_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia3_5th_time_entry).place(x=569,y=14)

                    ete_ia3_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia3_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ete_ia3_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ete_ia3_5th_ia_schedule).grid(row=1,column=0)
                    delete_ia3_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ete_ia3_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ete_ia3_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ete_ia3_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ete_ia3_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ete_ia3_5th_treeview=ttk.Treeview(tree_frame1,columns=('ete_ia3_5th_subjects','ete_ia3_5th_date','ete_ia3_5th_time','ete_ia3_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ete_ia3_5th_treeview.xview)
                    scrolly.configure(command=tree_ete_ia3_5th_treeview.yview)

                    tree_ete_ia3_5th_treeview.heading('ete_ia3_5th_subjects',text="Subjects")
                    tree_ete_ia3_5th_treeview.heading('ete_ia3_5th_date',text="Date")
                    tree_ete_ia3_5th_treeview.heading('ete_ia3_5th_time',text="Time")
                    tree_ete_ia3_5th_treeview.heading('ete_ia3_5th_code',text="Code")
                    tree_ete_ia3_5th_treeview.heading('semisters',text="Semister")
                    tree_ete_ia3_5th_treeview.heading('branch',text="Branch")

                    tree_ete_ia3_5th_treeview.column('ete_ia3_5th_subjects',width=200)
                    tree_ete_ia3_5th_treeview.column('ete_ia3_5th_date',width=150)
                    tree_ete_ia3_5th_treeview.column('ete_ia3_5th_time',width=150)
                    tree_ete_ia3_5th_treeview.column('ete_ia3_5th_code',width=150)
                    tree_ete_ia3_5th_treeview.column('semisters',width=150)
                    tree_ete_ia3_5th_treeview.column('branch',width=200)

                    tree_ete_ia3_5th_treeview['show']='headings'
                
                    tree_ete_ia3_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ete_ia3_5th_ia_schedule()
                    tree_ete_ia3_5th_treeview.bind('<ButtonRelease-1>',get_ete_ia3_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Telecommunication_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    ete_ia3_6th_subjects_list=[]
                    def fetch_ete_ia3_6th_subjects():
                        #all_ete_ia3_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ete_6th_subjects from all_ete_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ete_ia3_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ete_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ete_ia3_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ete_ia3_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ete_ia3_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ete_ia3_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ete_ia3_6th_subjects','ete_ia3_6th_date','ete_ia3_6th_time','ete_ia3_6th_code','semisters','branch'
                                        cur.execute('insert into ete_ia3_6th_schedule(ete_ia3_6th_subjects,ete_ia3_6th_date,ete_ia3_6th_time,ete_ia3_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ete_ia3_6th_subjects_entry.get(),
                                            self.var_ete_ia3_6th_date_entry.get(),
                                            self.var_ete_ia3_6th_time_entry.get(),
                                            self.var_ete_ia3_6th_code.get(),
                                            self.var_ete_ia3_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ete_ia3_6th_ia_schedule()
                                        con.close()
                    def fetch_ete_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_ia3_6th_schedule')
                            rows=cur.fetchall()
                            tree_ete_ia3_6th_treeview.delete(*tree_ete_ia3_6th_treeview.get_children())
                            for row in rows:
                                tree_ete_ia3_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ia3_ete_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia3_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ete_ia3_6th_schedule where ete_ia3_6th_subjects=?',(self.var_ete_ia3_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ete_ia3_6th_schedule where ete_ia3_6th_subjects=? ',(self.var_ete_ia3_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is delete_ia3d successflly....',parent=frame)
                                    clear_ete_ia3_6th_all()
                                    fetch_ete_ia3_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ete_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia3_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ete_ia3_6th_schedule set ete_ia3_6th_date=?,ete_ia3_6th_time=?,ete_ia3_6th_code=?,semisters=?,branch=?  where ete_ia3_6th_subjects=?',(
                                self.var_ete_ia3_6th_date_entry.get(),
                                self.var_ete_ia3_6th_time_entry.get(),
                                self.var_ete_ia3_6th_code.get(),
                                self.var_ete_ia3_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ete_ia3_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ete_ia3_6th_ia_schedule()
                                clear_ete_ia3_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ete_ia3_6th_all():
                        fetch_ete_ia3_6th_ia_schedule()
                        self.var_ete_ia3_6th_subjects_entry.set("")
                        self.var_ete_ia3_6th_date_entry.set("")
                        self.var_ete_ia3_6th_time_entry.set("")
                        self.var_ete_ia3_6th_code.set("")
                        self.var_ete_ia3_6th_semister.set("")
                        self.var_serach_ete_ia3_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ete_ia3_6th_ia_schedule(ev):
                        read=tree_ete_ia3_6th_treeview.focus()
                        content=tree_ete_ia3_6th_treeview.item(read)
                        row=content['values']

                        self.var_ete_ia3_6th_subjects_entry.set(row[1])
                        self.var_ete_ia3_6th_date_entry.set(row[2])
                        self.var_ete_ia3_6th_time_entry.set(row[3])
                        self.var_ete_ia3_6th_code.set(row[4])
                        self.var_ete_ia3_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ete_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ete_ia3_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ete_ia3_6th_schedule where ete_ia3_6th_subjects=?",(self.var_serach_ete_ia3_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ete_ia3_6th_treeview.delete(*tree_ete_ia3_6th_treeview.get_children())
                                for row in rows:
                                    tree_ete_ia3_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ete_ia3_6th_subjects()
                    ete_ia3_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ete_ia3_6th_subjects_entry,values=ete_ia3_6th_subjects_list).place(x=87,y=14)

                    ete_ia3_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ete_ia3_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ete_ia3_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia3_6th_time_entry).place(x=569,y=14)

                    ete_ia3_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia3_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ete_ia3_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ete_ia3_6th_ia_schedule).grid(row=1,column=0)
                    delete_ia3_button=ttk.Button(label_frame2,text='Delete_ia3',width=31,command=delete_ia3_ete_ia3_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ete_ia3_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ete_ia3_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ete_ia3_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ete_ia3_6th_treeview=ttk.Treeview(tree_frame1,columns=('ete_ia3_6th_subjects','ete_ia3_6th_date','ete_ia3_6th_time','ete_ia3_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ete_ia3_6th_treeview.xview)
                    scrolly.configure(command=tree_ete_ia3_6th_treeview.yview)

                    tree_ete_ia3_6th_treeview.heading('ete_ia3_6th_subjects',text="Subjects")
                    tree_ete_ia3_6th_treeview.heading('ete_ia3_6th_date',text="Date")
                    tree_ete_ia3_6th_treeview.heading('ete_ia3_6th_time',text="Time")
                    tree_ete_ia3_6th_treeview.heading('ete_ia3_6th_code',text="Code")
                    tree_ete_ia3_6th_treeview.heading('semisters',text="Semister")
                    tree_ete_ia3_6th_treeview.heading('branch',text="Branch")

                    tree_ete_ia3_6th_treeview.column('ete_ia3_6th_subjects',width=200)
                    tree_ete_ia3_6th_treeview.column('ete_ia3_6th_date',width=150)
                    tree_ete_ia3_6th_treeview.column('ete_ia3_6th_time',width=150)
                    tree_ete_ia3_6th_treeview.column('ete_ia3_6th_code',width=150)
                    tree_ete_ia3_6th_treeview.column('semisters',width=150)
                    tree_ete_ia3_6th_treeview.column('branch',width=200)

                    tree_ete_ia3_6th_treeview['show']='headings'
                
                    tree_ete_ia3_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ete_ia3_6th_ia_schedule()
                    tree_ete_ia3_6th_treeview.bind('<ButtonRelease-1>',get_ete_ia3_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Telecommunication_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    ete_ia3_7th_subjects_list=[]
                    def fetch_ete_ia3_7th_subjects():
                        #all_ete_ia3_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ete_7th_subjects from all_ete_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ete_ia3_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ete_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ete_ia3_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ete_ia3_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ete_ia3_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ete_ia3_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ete_ia3_7th_subjects','ete_ia3_7th_date','ete_ia3_7th_time','ete_ia3_7th_code','semisters','branch'
                                        cur.execute('insert into ete_ia3_7th_schedule(ete_ia3_7th_subjects,ete_ia3_7th_date,ete_ia3_7th_time,ete_ia3_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ete_ia3_7th_subjects_entry.get(),
                                            self.var_ete_ia3_7th_date_entry.get(),
                                            self.var_ete_ia3_7th_time_entry.get(),
                                            self.var_ete_ia3_7th_code.get(),
                                            self.var_ete_ia3_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ete_ia3_7th_ia_schedule()
                                        con.close()
                    def fetch_ete_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_ia3_7th_schedule')
                            rows=cur.fetchall()
                            tree_ete_ia3_7th_treeview.delete(*tree_ete_ia3_7th_treeview.get_children())
                            for row in rows:
                                tree_ete_ia3_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ete_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia3_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ete_ia3_7th_schedule where ete_ia3_7th_subjects=?',(self.var_ete_ia3_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ete_ia3_7th_schedule where ete_ia3_7th_subjects=? ',(self.var_ete_ia3_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ete_ia3_7th_all()
                                    fetch_ete_ia3_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ete_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia3_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ete_ia3_7th_schedule set ete_ia3_7th_date=?,ete_ia3_7th_time=?,ete_ia3_7th_code=?,semisters=?,branch=?  where ete_ia3_7th_subjects=?',(
                                self.var_ete_ia3_7th_date_entry.get(),
                                self.var_ete_ia3_7th_time_entry.get(),
                                self.var_ete_ia3_7th_code.get(),
                                self.var_ete_ia3_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ete_ia3_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ete_ia3_7th_ia_schedule()
                                clear_ete_ia3_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ete_ia3_7th_all():
                        fetch_ete_ia3_7th_ia_schedule()
                        self.var_ete_ia3_7th_subjects_entry.set("")
                        self.var_ete_ia3_7th_date_entry.set("")
                        self.var_ete_ia3_7th_time_entry.set("")
                        self.var_ete_ia3_7th_code.set("")
                        self.var_ete_ia3_7th_semister.set("")
                        self.var_serach_ete_ia3_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ete_ia3_7th_ia_schedule(ev):
                        read=tree_ete_ia3_7th_treeview.focus()
                        content=tree_ete_ia3_7th_treeview.item(read)
                        row=content['values']

                        self.var_ete_ia3_7th_subjects_entry.set(row[1])
                        self.var_ete_ia3_7th_date_entry.set(row[2])
                        self.var_ete_ia3_7th_time_entry.set(row[3])
                        self.var_ete_ia3_7th_code.set(row[4])
                        self.var_ete_ia3_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ete_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ete_ia3_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ete_ia3_7th_schedule where ete_ia3_7th_subjects=?",(self.var_serach_ete_ia3_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ete_ia3_7th_treeview.delete(*tree_ete_ia3_7th_treeview.get_children())
                                for row in rows:
                                    tree_ete_ia3_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ete_ia3_7th_subjects()
                    ete_ia3_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ete_ia3_7th_subjects_entry,values=ete_ia3_7th_subjects_list).place(x=87,y=14)

                    ete_ia3_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ete_ia3_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ete_ia3_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia3_7th_time_entry).place(x=569,y=14)

                    ete_ia3_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia3_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ete_ia3_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ete_ia3_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ete_ia3_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ete_ia3_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ete_ia3_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ete_ia3_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ete_ia3_7th_treeview=ttk.Treeview(tree_frame1,columns=('ete_ia3_7th_subjects','ete_ia3_7th_date','ete_ia3_7th_time','ete_ia3_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ete_ia3_7th_treeview.xview)
                    scrolly.configure(command=tree_ete_ia3_7th_treeview.yview)

                    tree_ete_ia3_7th_treeview.heading('ete_ia3_7th_subjects',text="Subjects")
                    tree_ete_ia3_7th_treeview.heading('ete_ia3_7th_date',text="Date")
                    tree_ete_ia3_7th_treeview.heading('ete_ia3_7th_time',text="Time")
                    tree_ete_ia3_7th_treeview.heading('ete_ia3_7th_code',text="Code")
                    tree_ete_ia3_7th_treeview.heading('semisters',text="Semister")
                    tree_ete_ia3_7th_treeview.heading('branch',text="Branch")

                    tree_ete_ia3_7th_treeview.column('ete_ia3_7th_subjects',width=200)
                    tree_ete_ia3_7th_treeview.column('ete_ia3_7th_date',width=150)
                    tree_ete_ia3_7th_treeview.column('ete_ia3_7th_time',width=150)
                    tree_ete_ia3_7th_treeview.column('ete_ia3_7th_code',width=150)
                    tree_ete_ia3_7th_treeview.column('semisters',width=150)
                    tree_ete_ia3_7th_treeview.column('branch',width=200)

                    tree_ete_ia3_7th_treeview['show']='headings'
                
                    tree_ete_ia3_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ete_ia3_7th_ia_schedule()
                    tree_ete_ia3_7th_treeview.bind('<ButtonRelease-1>',get_ete_ia3_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Electronic_And_Telecommunication_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    ete_ia3_8th_subjects_list=[]
                    def fetch_ete_ia3_8th_subjects():
                        #all_ete_ia3_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ete_8th_subjects from all_ete_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ete_ia3_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ete_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ete_ia3_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ete_ia3_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ete_ia3_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ete_ia3_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ete_ia3_8th_subjects','ete_ia3_8th_date','ete_ia3_8th_time','ete_ia3_8th_code','semisters','branch'
                                        cur.execute('insert into ete_ia3_8th_schedule(ete_ia3_8th_subjects,ete_ia3_8th_date,ete_ia3_8th_time,ete_ia3_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ete_ia3_8th_subjects_entry.get(),
                                            self.var_ete_ia3_8th_date_entry.get(),
                                            self.var_ete_ia3_8th_time_entry.get(),
                                            self.var_ete_ia3_8th_code.get(),
                                            self.var_ete_ia3_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ete_ia3_8th_ia_schedule()
                                        con.close()
                    def fetch_ete_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_ia3_8th_schedule')
                            rows=cur.fetchall()
                            tree_ete_ia3_8th_treeview.delete(*tree_ete_ia3_8th_treeview.get_children())
                            for row in rows:
                                tree_ete_ia3_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ete_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia3_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ete_ia3_8th_schedule where ete_ia3_8th_subjects=?',(self.var_ete_ia3_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ete_ia3_8th_schedule where ete_ia3_8th_subjects=? ',(self.var_ete_ia3_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ete_ia3_8th_all()
                                    fetch_ete_ia3_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ete_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ete_ia3_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ete_ia3_8th_schedule set ete_ia3_8th_date=?,ete_ia3_8th_time=?,ete_ia3_8th_code=?,semisters=?,branch=?  where ete_ia3_8th_subjects=?',(
                                self.var_ete_ia3_8th_date_entry.get(),
                                self.var_ete_ia3_8th_time_entry.get(),
                                self.var_ete_ia3_8th_code.get(),
                                self.var_ete_ia3_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ete_ia3_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ete_ia3_8th_ia_schedule()
                                clear_ete_ia3_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ete_ia3_8th_all():
                        fetch_ete_ia3_8th_ia_schedule()
                        self.var_ete_ia3_8th_subjects_entry.set("")
                        self.var_ete_ia3_8th_date_entry.set("")
                        self.var_ete_ia3_8th_time_entry.set("")
                        self.var_ete_ia3_8th_code.set("")
                        self.var_ete_ia3_8th_semister.set("")
                        self.var_serach_ete_ia3_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ete_ia3_8th_ia_schedule(ev):
                        read=tree_ete_ia3_8th_treeview.focus()
                        content=tree_ete_ia3_8th_treeview.item(read)
                        row=content['values']

                        self.var_ete_ia3_8th_subjects_entry.set(row[1])
                        self.var_ete_ia3_8th_date_entry.set(row[2])
                        self.var_ete_ia3_8th_time_entry.set(row[3])
                        self.var_ete_ia3_8th_code.set(row[4])
                        self.var_ete_ia3_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ete_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ete_ia3_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ete_ia3_8th_schedule where ete_ia3_8th_subjects=?",(self.var_serach_ete_ia3_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ete_ia3_8th_treeview.delete(*tree_ete_ia3_8th_treeview.get_children())
                                for row in rows:
                                    tree_ete_ia3_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ete_ia3_8th_subjects()
                    ete_ia3_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ete_ia3_8th_subjects_entry,values=ete_ia3_8th_subjects_list).place(x=87,y=14)

                    ete_ia3_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ete_ia3_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ete_ia3_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia3_8th_time_entry).place(x=569,y=14)

                    ete_ia3_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ete_ia3_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ete_ia3_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ete_ia3_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ete_ia3_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ete_ia3_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ete_ia3_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ete_ia3_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ete_ia3_8th_treeview=ttk.Treeview(tree_frame1,columns=('ete_ia3_8th_subjects','ete_ia3_8th_date','ete_ia3_8th_time','ete_ia3_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ete_ia3_8th_treeview.xview)
                    scrolly.configure(command=tree_ete_ia3_8th_treeview.yview)

                    tree_ete_ia3_8th_treeview.heading('ete_ia3_8th_subjects',text="Subjects")
                    tree_ete_ia3_8th_treeview.heading('ete_ia3_8th_date',text="Date")
                    tree_ete_ia3_8th_treeview.heading('ete_ia3_8th_time',text="Time")
                    tree_ete_ia3_8th_treeview.heading('ete_ia3_8th_code',text="Code")
                    tree_ete_ia3_8th_treeview.heading('semisters',text="Semister")
                    tree_ete_ia3_8th_treeview.heading('branch',text="Branch")

                    tree_ete_ia3_8th_treeview.column('ete_ia3_8th_subjects',width=200)
                    tree_ete_ia3_8th_treeview.column('ete_ia3_8th_date',width=150)
                    tree_ete_ia3_8th_treeview.column('ete_ia3_8th_time',width=150)
                    tree_ete_ia3_8th_treeview.column('ete_ia3_8th_code',width=150)
                    tree_ete_ia3_8th_treeview.column('semisters',width=150)
                    tree_ete_ia3_8th_treeview.column('branch',width=200)

                    tree_ete_ia3_8th_treeview['show']='headings'
                
                    tree_ete_ia3_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ete_ia3_8th_ia_schedule()
                    tree_ete_ia3_8th_treeview.bind('<ButtonRelease-1>',get_ete_ia3_8th_ia_schedule)
        ##################################################################################################################################################################
        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Computer_Science_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    cs_ia3_3rd_subjects_list=[]
                    def fetch_cs_ia3_3rd_subjects():
                        #all_cs_ia3_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select cs_3rd_subjects from all_cs_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    cs_ia3_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_cs_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_cs_ia3_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_cs_ia3_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_cs_ia3_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_cs_ia3_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'cs_ia3_3rd_subjects','cs_ia3_3rd_date','cs_ia3_3rd_time','cs_ia3_3rd_code','semisters','branch'
                                        cur.execute('insert into cs_ia3_3rd_schedule(cs_ia3_3rd_subjects,cs_ia3_3rd_date,cs_ia3_3rd_time,cs_ia3_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_cs_ia3_3rd_subjects_entry.get(),
                                            self.var_cs_ia3_3rd_date_entry.get(),
                                            self.var_cs_ia3_3rd_time_entry.get(),
                                            self.var_cs_ia3_3rd_code.get(),
                                            self.var_cs_ia3_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succs_ia3sfuly....',parent=frame)
                                        fetch_cs_ia3_3rd_ia_schedule()
                                        con.close()
                    def fetch_cs_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_ia3_3rd_schedule')
                            rows=cur.fetchall()
                            tree_cs_ia3_3rd_treeview.delete(*tree_cs_ia3_3rd_treeview.get_children())
                            for row in rows:
                                tree_cs_ia3_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_cs_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia3_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from cs_ia3_3rd_schedule where cs_ia3_3rd_subjects=?',(self.var_cs_ia3_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from cs_ia3_3rd_schedule where cs_ia3_3rd_subjects=? ',(self.var_cs_ia3_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_cs_ia3_3rd_all()
                                    fetch_cs_ia3_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_cs_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia3_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update cs_ia3_3rd_schedule set cs_ia3_3rd_date=?,cs_ia3_3rd_time=?,cs_ia3_3rd_code=?,semisters=?,branch=?  where cs_ia3_3rd_subjects=?',(
                                self.var_cs_ia3_3rd_date_entry.get(),
                                self.var_cs_ia3_3rd_time_entry.get(),
                                self.var_cs_ia3_3rd_code.get(),
                                self.var_cs_ia3_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_cs_ia3_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succs_ia3sflly....',parent=frame)
                                fetch_cs_ia3_3rd_ia_schedule()
                                clear_cs_ia3_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_cs_ia3_3rd_all():
                        fetch_cs_ia3_3rd_ia_schedule()
                        self.var_cs_ia3_3rd_subjects_entry.set("")
                        self.var_cs_ia3_3rd_date_entry.set("")
                        self.var_cs_ia3_3rd_time_entry.set("")
                        self.var_cs_ia3_3rd_code.set("")
                        self.var_cs_ia3_3rd_semister.set("")
                        self.var_serach_cs_ia3_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succs_ia3sfuly.....',parent=frame)

                    def get_cs_ia3_3rd_ia_schedule(ev):
                        read=tree_cs_ia3_3rd_treeview.focus()
                        content=tree_cs_ia3_3rd_treeview.item(read)
                        row=content['values']

                        self.var_cs_ia3_3rd_subjects_entry.set(row[1])
                        self.var_cs_ia3_3rd_date_entry.set(row[2])
                        self.var_cs_ia3_3rd_time_entry.set(row[3])
                        self.var_cs_ia3_3rd_code.set(row[4])
                        self.var_cs_ia3_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succs_ia3sfuly.....',parent=frame)                    
                    def serch_cs_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_cs_ia3_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from cs_ia3_3rd_schedule where cs_ia3_3rd_subjects=?",(self.var_serach_cs_ia3_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_cs_ia3_3rd_treeview.delete(*tree_cs_ia3_3rd_treeview.get_children())
                                for row in rows:
                                    tree_cs_ia3_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_cs_ia3_3rd_subjects()
                    cs_ia3_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_cs_ia3_3rd_subjects_entry,values=cs_ia3_3rd_subjects_list).place(x=87,y=14)

                    cs_ia3_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_cs_ia3_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    cs_ia3_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia3_3rd_time_entry).place(x=569,y=14)

                    cs_ia3_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia3_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_cs_ia3_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_cs_ia3_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_cs_ia3_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_cs_ia3_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_cs_ia3_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_cs_ia3_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_cs_ia3_3rd_treeview=ttk.Treeview(tree_frame1,columns=('cs_ia3_3rd_subjects','cs_ia3_3rd_date','cs_ia3_3rd_time','cs_ia3_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_cs_ia3_3rd_treeview.xview)
                    scrolly.configure(command=tree_cs_ia3_3rd_treeview.yview)

                    tree_cs_ia3_3rd_treeview.heading('cs_ia3_3rd_subjects',text="Subjects")
                    tree_cs_ia3_3rd_treeview.heading('cs_ia3_3rd_date',text="Date")
                    tree_cs_ia3_3rd_treeview.heading('cs_ia3_3rd_time',text="Time")
                    tree_cs_ia3_3rd_treeview.heading('cs_ia3_3rd_code',text="Code")
                    tree_cs_ia3_3rd_treeview.heading('semisters',text="Semister")
                    tree_cs_ia3_3rd_treeview.heading('branch',text="Branch")

                    tree_cs_ia3_3rd_treeview.column('cs_ia3_3rd_subjects',width=200)
                    tree_cs_ia3_3rd_treeview.column('cs_ia3_3rd_date',width=150)
                    tree_cs_ia3_3rd_treeview.column('cs_ia3_3rd_time',width=150)
                    tree_cs_ia3_3rd_treeview.column('cs_ia3_3rd_code',width=150)
                    tree_cs_ia3_3rd_treeview.column('semisters',width=150)
                    tree_cs_ia3_3rd_treeview.column('branch',width=200)

                    tree_cs_ia3_3rd_treeview['show']='headings'
                
                    tree_cs_ia3_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_cs_ia3_3rd_ia_schedule()
                    tree_cs_ia3_3rd_treeview.bind('<ButtonRelease-1>',get_cs_ia3_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Computer_Science_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    cs_ia3_4th_subjects_list=[]
                    def fetch_cs_ia3_4th_subjects():
                        #all_cs_ia3_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select cs_4th_subjects from all_cs_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    cs_ia3_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_cs_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_cs_ia3_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_cs_ia3_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_cs_ia3_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_cs_ia3_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'cs_ia3_4th_subjects','cs_ia3_4th_date','cs_ia3_4th_time','cs_ia3_4th_code','semisters','branch'
                                        cur.execute('insert into cs_ia3_4th_schedule(cs_ia3_4th_subjects,cs_ia3_4th_date,cs_ia3_4th_time,cs_ia3_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_cs_ia3_4th_subjects_entry.get(),
                                            self.var_cs_ia3_4th_date_entry.get(),
                                            self.var_cs_ia3_4th_time_entry.get(),
                                            self.var_cs_ia3_4th_code.get(),
                                            self.var_cs_ia3_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succs_ia3sfuly....',parent=frame)
                                        fetch_cs_ia3_4th_ia_schedule()
                                        con.close()
                    def fetch_cs_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_ia3_4th_schedule')
                            rows=cur.fetchall()
                            tree_cs_ia3_4th_treeview.delete(*tree_cs_ia3_4th_treeview.get_children())
                            for row in rows:
                                tree_cs_ia3_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_cs_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia3_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from cs_ia3_4th_schedule where cs_ia3_4th_subjects=?',(self.var_cs_ia3_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from cs_ia3_4th_schedule where cs_ia3_4th_subjects=? ',(self.var_cs_ia3_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_cs_ia3_4th_all()
                                    fetch_cs_ia3_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_cs_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia3_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update cs_ia3_4th_schedule set cs_ia3_4th_date=?,cs_ia3_4th_time=?,cs_ia3_4th_code=?,semisters=?,branch=?  where cs_ia3_4th_subjects=?',(
                                self.var_cs_ia3_4th_date_entry.get(),
                                self.var_cs_ia3_4th_time_entry.get(),
                                self.var_cs_ia3_4th_code.get(),
                                self.var_cs_ia3_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_cs_ia3_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succs_ia3sflly....',parent=frame)
                                fetch_cs_ia3_4th_ia_schedule()
                                clear_cs_ia3_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_cs_ia3_4th_all():
                        fetch_cs_ia3_4th_ia_schedule()
                        self.var_cs_ia3_4th_subjects_entry.set("")
                        self.var_cs_ia3_4th_date_entry.set("")
                        self.var_cs_ia3_4th_time_entry.set("")
                        self.var_cs_ia3_4th_code.set("")
                        self.var_cs_ia3_4th_semister.set("")
                        self.var_serach_cs_ia3_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succs_ia3sfuly.....',parent=frame)

                    def get_cs_ia3_4th_ia_schedule(ev):
                        read=tree_cs_ia3_4th_treeview.focus()
                        content=tree_cs_ia3_4th_treeview.item(read)
                        row=content['values']

                        self.var_cs_ia3_4th_subjects_entry.set(row[1])
                        self.var_cs_ia3_4th_date_entry.set(row[2])
                        self.var_cs_ia3_4th_time_entry.set(row[3])
                        self.var_cs_ia3_4th_code.set(row[4])
                        self.var_cs_ia3_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succs_ia3sfuly.....',parent=frame)                    
                    def serch_cs_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_cs_ia3_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from cs_ia3_4th_schedule where cs_ia3_4th_subjects=?",(self.var_serach_cs_ia3_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_cs_ia3_4th_treeview.delete(*tree_cs_ia3_4th_treeview.get_children())
                                for row in rows:
                                    tree_cs_ia3_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_cs_ia3_4th_subjects()
                    cs_ia3_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_cs_ia3_4th_subjects_entry,values=cs_ia3_4th_subjects_list).place(x=87,y=14)

                    cs_ia3_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_cs_ia3_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    cs_ia3_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia3_4th_time_entry).place(x=569,y=14)

                    cs_ia3_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia3_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_cs_ia3_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_cs_ia3_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_cs_ia3_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_cs_ia3_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_cs_ia3_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_cs_ia3_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_cs_ia3_4th_treeview=ttk.Treeview(tree_frame1,columns=('cs_ia3_4th_subjects','cs_ia3_4th_date','cs_ia3_4th_time','cs_ia3_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_cs_ia3_4th_treeview.xview)
                    scrolly.configure(command=tree_cs_ia3_4th_treeview.yview)

                    tree_cs_ia3_4th_treeview.heading('cs_ia3_4th_subjects',text="Subjects")
                    tree_cs_ia3_4th_treeview.heading('cs_ia3_4th_date',text="Date")
                    tree_cs_ia3_4th_treeview.heading('cs_ia3_4th_time',text="Time")
                    tree_cs_ia3_4th_treeview.heading('cs_ia3_4th_code',text="Code")
                    tree_cs_ia3_4th_treeview.heading('semisters',text="Semister")
                    tree_cs_ia3_4th_treeview.heading('branch',text="Branch")

                    tree_cs_ia3_4th_treeview.column('cs_ia3_4th_subjects',width=200)
                    tree_cs_ia3_4th_treeview.column('cs_ia3_4th_date',width=150)
                    tree_cs_ia3_4th_treeview.column('cs_ia3_4th_time',width=150)
                    tree_cs_ia3_4th_treeview.column('cs_ia3_4th_code',width=150)
                    tree_cs_ia3_4th_treeview.column('semisters',width=150)
                    tree_cs_ia3_4th_treeview.column('branch',width=200)

                    tree_cs_ia3_4th_treeview['show']='headings'
                
                    tree_cs_ia3_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_cs_ia3_4th_ia_schedule()
                    tree_cs_ia3_4th_treeview.bind('<ButtonRelease-1>',get_cs_ia3_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Computer_Science_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    cs_ia3_5th_subjects_list=[]
                    def fetch_cs_ia3_5th_subjects():
                        #all_cs_ia3_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select cs_5th_subjects from all_cs_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    cs_ia3_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_cs_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_cs_ia3_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_cs_ia3_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_cs_ia3_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_cs_ia3_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'cs_ia3_5th_subjects','cs_ia3_5th_date','cs_ia3_5th_time','cs_ia3_5th_code','semisters','branch'
                                        cur.execute('insert into cs_ia3_5th_schedule(cs_ia3_5th_subjects,cs_ia3_5th_date,cs_ia3_5th_time,cs_ia3_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_cs_ia3_5th_subjects_entry.get(),
                                            self.var_cs_ia3_5th_date_entry.get(),
                                            self.var_cs_ia3_5th_time_entry.get(),
                                            self.var_cs_ia3_5th_code.get(),
                                            self.var_cs_ia3_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succs_ia3sfuly....',parent=frame)
                                        fetch_cs_ia3_5th_ia_schedule()
                                        con.close()
                    def fetch_cs_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_ia3_5th_schedule')
                            rows=cur.fetchall()
                            tree_cs_ia3_5th_treeview.delete(*tree_cs_ia3_5th_treeview.get_children())
                            for row in rows:
                                tree_cs_ia3_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_cs_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia3_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from cs_ia3_5th_schedule where cs_ia3_5th_subjects=?',(self.var_cs_ia3_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from cs_ia3_5th_schedule where cs_ia3_5th_subjects=? ',(self.var_cs_ia3_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_cs_ia3_5th_all()
                                    fetch_cs_ia3_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_cs_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia3_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update cs_ia3_5th_schedule set cs_ia3_5th_date=?,cs_ia3_5th_time=?,cs_ia3_5th_code=?,semisters=?,branch=?  where cs_ia3_5th_subjects=?',(
                                self.var_cs_ia3_5th_date_entry.get(),
                                self.var_cs_ia3_5th_time_entry.get(),
                                self.var_cs_ia3_5th_code.get(),
                                self.var_cs_ia3_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_cs_ia3_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succs_ia3sflly....',parent=frame)
                                fetch_cs_ia3_5th_ia_schedule()
                                clear_cs_ia3_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_cs_ia3_5th_all():
                        fetch_cs_ia3_5th_ia_schedule()
                        self.var_cs_ia3_5th_subjects_entry.set("")
                        self.var_cs_ia3_5th_date_entry.set("")
                        self.var_cs_ia3_5th_time_entry.set("")
                        self.var_cs_ia3_5th_code.set("")
                        self.var_cs_ia3_5th_semister.set("")
                        self.var_serach_cs_ia3_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succs_ia3sfuly.....',parent=frame)

                    def get_cs_ia3_5th_ia_schedule(ev):
                        read=tree_cs_ia3_5th_treeview.focus()
                        content=tree_cs_ia3_5th_treeview.item(read)
                        row=content['values']

                        self.var_cs_ia3_5th_subjects_entry.set(row[1])
                        self.var_cs_ia3_5th_date_entry.set(row[2])
                        self.var_cs_ia3_5th_time_entry.set(row[3])
                        self.var_cs_ia3_5th_code.set(row[4])
                        self.var_cs_ia3_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succs_ia3sfuly.....',parent=frame)                    
                    def serch_cs_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_cs_ia3_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from cs_ia3_5th_schedule where cs_ia3_5th_subjects=?",(self.var_serach_cs_ia3_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_cs_ia3_5th_treeview.delete(*tree_cs_ia3_5th_treeview.get_children())
                                for row in rows:
                                    tree_cs_ia3_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_cs_ia3_5th_subjects()
                    cs_ia3_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_cs_ia3_5th_subjects_entry,values=cs_ia3_5th_subjects_list).place(x=87,y=14)

                    cs_ia3_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_cs_ia3_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    cs_ia3_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia3_5th_time_entry).place(x=569,y=14)

                    cs_ia3_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia3_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_cs_ia3_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_cs_ia3_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_cs_ia3_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_cs_ia3_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_cs_ia3_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_cs_ia3_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_cs_ia3_5th_treeview=ttk.Treeview(tree_frame1,columns=('cs_ia3_5th_subjects','cs_ia3_5th_date','cs_ia3_5th_time','cs_ia3_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_cs_ia3_5th_treeview.xview)
                    scrolly.configure(command=tree_cs_ia3_5th_treeview.yview)

                    tree_cs_ia3_5th_treeview.heading('cs_ia3_5th_subjects',text="Subjects")
                    tree_cs_ia3_5th_treeview.heading('cs_ia3_5th_date',text="Date")
                    tree_cs_ia3_5th_treeview.heading('cs_ia3_5th_time',text="Time")
                    tree_cs_ia3_5th_treeview.heading('cs_ia3_5th_code',text="Code")
                    tree_cs_ia3_5th_treeview.heading('semisters',text="Semister")
                    tree_cs_ia3_5th_treeview.heading('branch',text="Branch")

                    tree_cs_ia3_5th_treeview.column('cs_ia3_5th_subjects',width=200)
                    tree_cs_ia3_5th_treeview.column('cs_ia3_5th_date',width=150)
                    tree_cs_ia3_5th_treeview.column('cs_ia3_5th_time',width=150)
                    tree_cs_ia3_5th_treeview.column('cs_ia3_5th_code',width=150)
                    tree_cs_ia3_5th_treeview.column('semisters',width=150)
                    tree_cs_ia3_5th_treeview.column('branch',width=200)

                    tree_cs_ia3_5th_treeview['show']='headings'
                
                    tree_cs_ia3_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_cs_ia3_5th_ia_schedule()
                    tree_cs_ia3_5th_treeview.bind('<ButtonRelease-1>',get_cs_ia3_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Computer_Science_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    cs_ia3_6th_subjects_list=[]
                    def fetch_cs_ia3_6th_subjects():
                        #all_cs_ia3_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select cs_6th_subjects from all_cs_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    cs_ia3_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_cs_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_cs_ia3_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_cs_ia3_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_cs_ia3_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_cs_ia3_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'cs_ia3_6th_subjects','cs_ia3_6th_date','cs_ia3_6th_time','cs_ia3_6th_code','semisters','branch'
                                        cur.execute('insert into cs_ia3_6th_schedule(cs_ia3_6th_subjects,cs_ia3_6th_date,cs_ia3_6th_time,cs_ia3_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_cs_ia3_6th_subjects_entry.get(),
                                            self.var_cs_ia3_6th_date_entry.get(),
                                            self.var_cs_ia3_6th_time_entry.get(),
                                            self.var_cs_ia3_6th_code.get(),
                                            self.var_cs_ia3_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succs_ia3sfuly....',parent=frame)
                                        fetch_cs_ia3_6th_ia_schedule()
                                        con.close()
                    def fetch_cs_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_ia3_6th_schedule')
                            rows=cur.fetchall()
                            tree_cs_ia3_6th_treeview.delete(*tree_cs_ia3_6th_treeview.get_children())
                            for row in rows:
                                tree_cs_ia3_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_cs_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia3_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from cs_ia3_6th_schedule where cs_ia3_6th_subjects=?',(self.var_cs_ia3_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from cs_ia3_6th_schedule where cs_ia3_6th_subjects=? ',(self.var_cs_ia3_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_cs_ia3_6th_all()
                                    fetch_cs_ia3_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_cs_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia3_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update cs_ia3_6th_schedule set cs_ia3_6th_date=?,cs_ia3_6th_time=?,cs_ia3_6th_code=?,semisters=?,branch=?  where cs_ia3_6th_subjects=?',(
                                self.var_cs_ia3_6th_date_entry.get(),
                                self.var_cs_ia3_6th_time_entry.get(),
                                self.var_cs_ia3_6th_code.get(),
                                self.var_cs_ia3_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_cs_ia3_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succs_ia3sflly....',parent=frame)
                                fetch_cs_ia3_6th_ia_schedule()
                                clear_cs_ia3_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_cs_ia3_6th_all():
                        fetch_cs_ia3_6th_ia_schedule()
                        self.var_cs_ia3_6th_subjects_entry.set("")
                        self.var_cs_ia3_6th_date_entry.set("")
                        self.var_cs_ia3_6th_time_entry.set("")
                        self.var_cs_ia3_6th_code.set("")
                        self.var_cs_ia3_6th_semister.set("")
                        self.var_serach_cs_ia3_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succs_ia3sfuly.....',parent=frame)

                    def get_cs_ia3_6th_ia_schedule(ev):
                        read=tree_cs_ia3_6th_treeview.focus()
                        content=tree_cs_ia3_6th_treeview.item(read)
                        row=content['values']

                        self.var_cs_ia3_6th_subjects_entry.set(row[1])
                        self.var_cs_ia3_6th_date_entry.set(row[2])
                        self.var_cs_ia3_6th_time_entry.set(row[3])
                        self.var_cs_ia3_6th_code.set(row[4])
                        self.var_cs_ia3_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succs_ia3sfuly.....',parent=frame)                    
                    def serch_cs_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_cs_ia3_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from cs_ia3_6th_schedule where cs_ia3_6th_subjects=?",(self.var_serach_cs_ia3_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_cs_ia3_6th_treeview.delete(*tree_cs_ia3_6th_treeview.get_children())
                                for row in rows:
                                    tree_cs_ia3_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_cs_ia3_6th_subjects()
                    cs_ia3_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_cs_ia3_6th_subjects_entry,values=cs_ia3_6th_subjects_list).place(x=87,y=14)

                    cs_ia3_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_cs_ia3_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    cs_ia3_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia3_6th_time_entry).place(x=569,y=14)

                    cs_ia3_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia3_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_cs_ia3_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_cs_ia3_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_cs_ia3_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_cs_ia3_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_cs_ia3_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_cs_ia3_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_cs_ia3_6th_treeview=ttk.Treeview(tree_frame1,columns=('cs_ia3_6th_subjects','cs_ia3_6th_date','cs_ia3_6th_time','cs_ia3_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_cs_ia3_6th_treeview.xview)
                    scrolly.configure(command=tree_cs_ia3_6th_treeview.yview)

                    tree_cs_ia3_6th_treeview.heading('cs_ia3_6th_subjects',text="Subjects")
                    tree_cs_ia3_6th_treeview.heading('cs_ia3_6th_date',text="Date")
                    tree_cs_ia3_6th_treeview.heading('cs_ia3_6th_time',text="Time")
                    tree_cs_ia3_6th_treeview.heading('cs_ia3_6th_code',text="Code")
                    tree_cs_ia3_6th_treeview.heading('semisters',text="Semister")
                    tree_cs_ia3_6th_treeview.heading('branch',text="Branch")

                    tree_cs_ia3_6th_treeview.column('cs_ia3_6th_subjects',width=200)
                    tree_cs_ia3_6th_treeview.column('cs_ia3_6th_date',width=150)
                    tree_cs_ia3_6th_treeview.column('cs_ia3_6th_time',width=150)
                    tree_cs_ia3_6th_treeview.column('cs_ia3_6th_code',width=150)
                    tree_cs_ia3_6th_treeview.column('semisters',width=150)
                    tree_cs_ia3_6th_treeview.column('branch',width=200)

                    tree_cs_ia3_6th_treeview['show']='headings'
                
                    tree_cs_ia3_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_cs_ia3_6th_ia_schedule()
                    tree_cs_ia3_6th_treeview.bind('<ButtonRelease-1>',get_cs_ia3_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Computer_Science_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    cs_ia3_7th_subjects_list=[]
                    def fetch_cs_ia3_7th_subjects():
                        #all_cs_ia3_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select cs_7th_subjects from all_cs_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    cs_ia3_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_cs_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_cs_ia3_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_cs_ia3_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_cs_ia3_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_cs_ia3_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'cs_ia3_7th_subjects','cs_ia3_7th_date','cs_ia3_7th_time','cs_ia3_7th_code','semisters','branch'
                                        cur.execute('insert into cs_ia3_7th_schedule(cs_ia3_7th_subjects,cs_ia3_7th_date,cs_ia3_7th_time,cs_ia3_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_cs_ia3_7th_subjects_entry.get(),
                                            self.var_cs_ia3_7th_date_entry.get(),
                                            self.var_cs_ia3_7th_time_entry.get(),
                                            self.var_cs_ia3_7th_code.get(),
                                            self.var_cs_ia3_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succs_ia3sfuly....',parent=frame)
                                        fetch_cs_ia3_7th_ia_schedule()
                                        con.close()
                    def fetch_cs_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_ia3_7th_schedule')
                            rows=cur.fetchall()
                            tree_cs_ia3_7th_treeview.delete(*tree_cs_ia3_7th_treeview.get_children())
                            for row in rows:
                                tree_cs_ia3_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_cs_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia3_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from cs_ia3_7th_schedule where cs_ia3_7th_subjects=?',(self.var_cs_ia3_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from cs_ia3_7th_schedule where cs_ia3_7th_subjects=? ',(self.var_cs_ia3_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_cs_ia3_7th_all()
                                    fetch_cs_ia3_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_cs_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia3_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update cs_ia3_7th_schedule set cs_ia3_7th_date=?,cs_ia3_7th_time=?,cs_ia3_7th_code=?,semisters=?,branch=?  where cs_ia3_7th_subjects=?',(
                                self.var_cs_ia3_7th_date_entry.get(),
                                self.var_cs_ia3_7th_time_entry.get(),
                                self.var_cs_ia3_7th_code.get(),
                                self.var_cs_ia3_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_cs_ia3_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succs_ia3sflly....',parent=frame)
                                fetch_cs_ia3_7th_ia_schedule()
                                clear_cs_ia3_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_cs_ia3_7th_all():
                        fetch_cs_ia3_7th_ia_schedule()
                        self.var_cs_ia3_7th_subjects_entry.set("")
                        self.var_cs_ia3_7th_date_entry.set("")
                        self.var_cs_ia3_7th_time_entry.set("")
                        self.var_cs_ia3_7th_code.set("")
                        self.var_cs_ia3_7th_semister.set("")
                        self.var_serach_cs_ia3_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succs_ia3sfuly.....',parent=frame)

                    def get_cs_ia3_7th_ia_schedule(ev):
                        read=tree_cs_ia3_7th_treeview.focus()
                        content=tree_cs_ia3_7th_treeview.item(read)
                        row=content['values']

                        self.var_cs_ia3_7th_subjects_entry.set(row[1])
                        self.var_cs_ia3_7th_date_entry.set(row[2])
                        self.var_cs_ia3_7th_time_entry.set(row[3])
                        self.var_cs_ia3_7th_code.set(row[4])
                        self.var_cs_ia3_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succs_ia3sfuly.....',parent=frame)                    
                    def serch_cs_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_cs_ia3_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from cs_ia3_7th_schedule where cs_ia3_7th_subjects=?",(self.var_serach_cs_ia3_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_cs_ia3_7th_treeview.delete(*tree_cs_ia3_7th_treeview.get_children())
                                for row in rows:
                                    tree_cs_ia3_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_cs_ia3_7th_subjects()
                    cs_ia3_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_cs_ia3_7th_subjects_entry,values=cs_ia3_7th_subjects_list).place(x=87,y=14)

                    cs_ia3_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_cs_ia3_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    cs_ia3_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia3_7th_time_entry).place(x=569,y=14)

                    cs_ia3_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia3_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_cs_ia3_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_cs_ia3_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_cs_ia3_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_cs_ia3_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_cs_ia3_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_cs_ia3_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_cs_ia3_7th_treeview=ttk.Treeview(tree_frame1,columns=('cs_ia3_7th_subjects','cs_ia3_7th_date','cs_ia3_7th_time','cs_ia3_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_cs_ia3_7th_treeview.xview)
                    scrolly.configure(command=tree_cs_ia3_7th_treeview.yview)

                    tree_cs_ia3_7th_treeview.heading('cs_ia3_7th_subjects',text="Subjects")
                    tree_cs_ia3_7th_treeview.heading('cs_ia3_7th_date',text="Date")
                    tree_cs_ia3_7th_treeview.heading('cs_ia3_7th_time',text="Time")
                    tree_cs_ia3_7th_treeview.heading('cs_ia3_7th_code',text="Code")
                    tree_cs_ia3_7th_treeview.heading('semisters',text="Semister")
                    tree_cs_ia3_7th_treeview.heading('branch',text="Branch")

                    tree_cs_ia3_7th_treeview.column('cs_ia3_7th_subjects',width=200)
                    tree_cs_ia3_7th_treeview.column('cs_ia3_7th_date',width=150)
                    tree_cs_ia3_7th_treeview.column('cs_ia3_7th_time',width=150)
                    tree_cs_ia3_7th_treeview.column('cs_ia3_7th_code',width=150)
                    tree_cs_ia3_7th_treeview.column('semisters',width=150)
                    tree_cs_ia3_7th_treeview.column('branch',width=200)

                    tree_cs_ia3_7th_treeview['show']='headings'
                
                    tree_cs_ia3_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_cs_ia3_7th_ia_schedule()
                    tree_cs_ia3_7th_treeview.bind('<ButtonRelease-1>',get_cs_ia3_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Computer_Science_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    cs_ia3_8th_subjects_list=[]
                    def fetch_cs_ia3_8th_subjects():
                        #all_cs_ia3_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select cs_8th_subjects from all_cs_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    cs_ia3_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_cs_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_cs_ia3_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_cs_ia3_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_cs_ia3_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_cs_ia3_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'cs_ia3_8th_subjects','cs_ia3_8th_date','cs_ia3_8th_time','cs_ia3_8th_code','semisters','branch'
                                        cur.execute('insert into cs_ia3_8th_schedule(cs_ia3_8th_subjects,cs_ia3_8th_date,cs_ia3_8th_time,cs_ia3_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_cs_ia3_8th_subjects_entry.get(),
                                            self.var_cs_ia3_8th_date_entry.get(),
                                            self.var_cs_ia3_8th_time_entry.get(),
                                            self.var_cs_ia3_8th_code.get(),
                                            self.var_cs_ia3_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succs_ia3sfuly....',parent=frame)
                                        fetch_cs_ia3_8th_ia_schedule()
                                        con.close()
                    def fetch_cs_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_ia3_8th_schedule')
                            rows=cur.fetchall()
                            tree_cs_ia3_8th_treeview.delete(*tree_cs_ia3_8th_treeview.get_children())
                            for row in rows:
                                tree_cs_ia3_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_cs_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia3_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from cs_ia3_8th_schedule where cs_ia3_8th_subjects=?',(self.var_cs_ia3_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from cs_ia3_8th_schedule where cs_ia3_8th_subjects=? ',(self.var_cs_ia3_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_cs_ia3_8th_all()
                                    fetch_cs_ia3_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_cs_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_cs_ia3_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update cs_ia3_8th_schedule set cs_ia3_8th_date=?,cs_ia3_8th_time=?,cs_ia3_8th_code=?,semisters=?,branch=?  where cs_ia3_8th_subjects=?',(
                                self.var_cs_ia3_8th_date_entry.get(),
                                self.var_cs_ia3_8th_time_entry.get(),
                                self.var_cs_ia3_8th_code.get(),
                                self.var_cs_ia3_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_cs_ia3_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succs_ia3sflly....',parent=frame)
                                fetch_cs_ia3_8th_ia_schedule()
                                clear_cs_ia3_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_cs_ia3_8th_all():
                        fetch_cs_ia3_8th_ia_schedule()
                        self.var_cs_ia3_8th_subjects_entry.set("")
                        self.var_cs_ia3_8th_date_entry.set("")
                        self.var_cs_ia3_8th_time_entry.set("")
                        self.var_cs_ia3_8th_code.set("")
                        self.var_cs_ia3_8th_semister.set("")
                        self.var_serach_cs_ia3_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succs_ia3sfuly.....',parent=frame)

                    def get_cs_ia3_8th_ia_schedule(ev):
                        read=tree_cs_ia3_8th_treeview.focus()
                        content=tree_cs_ia3_8th_treeview.item(read)
                        row=content['values']

                        self.var_cs_ia3_8th_subjects_entry.set(row[1])
                        self.var_cs_ia3_8th_date_entry.set(row[2])
                        self.var_cs_ia3_8th_time_entry.set(row[3])
                        self.var_cs_ia3_8th_code.set(row[4])
                        self.var_cs_ia3_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succs_ia3sfuly.....',parent=frame)                    
                    def serch_cs_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_cs_ia3_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from cs_ia3_8th_schedule where cs_ia3_8th_subjects=?",(self.var_serach_cs_ia3_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_cs_ia3_8th_treeview.delete(*tree_cs_ia3_8th_treeview.get_children())
                                for row in rows:
                                    tree_cs_ia3_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_cs_ia3_8th_subjects()
                    cs_ia3_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_cs_ia3_8th_subjects_entry,values=cs_ia3_8th_subjects_list).place(x=87,y=14)

                    cs_ia3_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_cs_ia3_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    cs_ia3_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia3_8th_time_entry).place(x=569,y=14)

                    cs_ia3_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_cs_ia3_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_cs_ia3_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_cs_ia3_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_cs_ia3_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_cs_ia3_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_cs_ia3_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_cs_ia3_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_cs_ia3_8th_treeview=ttk.Treeview(tree_frame1,columns=('cs_ia3_8th_subjects','cs_ia3_8th_date','cs_ia3_8th_time','cs_ia3_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_cs_ia3_8th_treeview.xview)
                    scrolly.configure(command=tree_cs_ia3_8th_treeview.yview)

                    tree_cs_ia3_8th_treeview.heading('cs_ia3_8th_subjects',text="Subjects")
                    tree_cs_ia3_8th_treeview.heading('cs_ia3_8th_date',text="Date")
                    tree_cs_ia3_8th_treeview.heading('cs_ia3_8th_time',text="Time")
                    tree_cs_ia3_8th_treeview.heading('cs_ia3_8th_code',text="Code")
                    tree_cs_ia3_8th_treeview.heading('semisters',text="Semister")
                    tree_cs_ia3_8th_treeview.heading('branch',text="Branch")

                    tree_cs_ia3_8th_treeview.column('cs_ia3_8th_subjects',width=200)
                    tree_cs_ia3_8th_treeview.column('cs_ia3_8th_date',width=150)
                    tree_cs_ia3_8th_treeview.column('cs_ia3_8th_time',width=150)
                    tree_cs_ia3_8th_treeview.column('cs_ia3_8th_code',width=150)
                    tree_cs_ia3_8th_treeview.column('semisters',width=150)
                    tree_cs_ia3_8th_treeview.column('branch',width=200)

                    tree_cs_ia3_8th_treeview['show']='headings'
                
                    tree_cs_ia3_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_cs_ia3_8th_ia_schedule()
                    tree_cs_ia3_8th_treeview.bind('<ButtonRelease-1>',get_cs_ia3_8th_ia_schedule)
        ##########################################################################################################################################################################
        if self.var_student_semister_select.get()=='3rd_Semister':
            if self.var_student_branch_select.get()=="Information_Science_and_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    ise_ia3_3rd_subjects_list=[]
                    def fetch_ise_ia3_3rd_subjects():
                        #all_ise_ia3_3rd_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ise_3rd_subjects from all_ise_3rd_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ise_ia3_3rd_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ise_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ise_ia3_3rd_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ise_ia3_3rd_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ise_ia3_3rd_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ise_ia3_3rd_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ise_ia3_3rd_subjects','ise_ia3_3rd_date','ise_ia3_3rd_time','ise_ia3_3rd_code','semisters','branch'
                                        cur.execute('insert into ise_ia3_3rd_schedule(ise_ia3_3rd_subjects,ise_ia3_3rd_date,ise_ia3_3rd_time,ise_ia3_3rd_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ise_ia3_3rd_subjects_entry.get(),
                                            self.var_ise_ia3_3rd_date_entry.get(),
                                            self.var_ise_ia3_3rd_time_entry.get(),
                                            self.var_ise_ia3_3rd_code.get(),
                                            self.var_ise_ia3_3rd_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ise_ia3_3rd_ia_schedule()
                                        con.close()
                    def fetch_ise_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_ia3_3rd_schedule')
                            rows=cur.fetchall()
                            tree_ise_ia3_3rd_treeview.delete(*tree_ise_ia3_3rd_treeview.get_children())
                            for row in rows:
                                tree_ise_ia3_3rd_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ise_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia3_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ise_ia3_3rd_schedule where ise_ia3_3rd_subjects=?',(self.var_ise_ia3_3rd_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ise_ia3_3rd_schedule where ise_ia3_3rd_subjects=? ',(self.var_ise_ia3_3rd_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ise_ia3_3rd_all()
                                    fetch_ise_ia3_3rd_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ise_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia3_3rd_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ise_ia3_3rd_schedule set ise_ia3_3rd_date=?,ise_ia3_3rd_time=?,ise_ia3_3rd_code=?,semisters=?,branch=?  where ise_ia3_3rd_subjects=?',(
                                self.var_ise_ia3_3rd_date_entry.get(),
                                self.var_ise_ia3_3rd_time_entry.get(),
                                self.var_ise_ia3_3rd_code.get(),
                                self.var_ise_ia3_3rd_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ise_ia3_3rd_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ise_ia3_3rd_ia_schedule()
                                clear_ise_ia3_3rd_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ise_ia3_3rd_all():
                        fetch_ise_ia3_3rd_ia_schedule()
                        self.var_ise_ia3_3rd_subjects_entry.set("")
                        self.var_ise_ia3_3rd_date_entry.set("")
                        self.var_ise_ia3_3rd_time_entry.set("")
                        self.var_ise_ia3_3rd_code.set("")
                        self.var_ise_ia3_3rd_semister.set("")
                        self.var_serach_ise_ia3_3rd_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ise_ia3_3rd_ia_schedule(ev):
                        read=tree_ise_ia3_3rd_treeview.focus()
                        content=tree_ise_ia3_3rd_treeview.item(read)
                        row=content['values']

                        self.var_ise_ia3_3rd_subjects_entry.set(row[1])
                        self.var_ise_ia3_3rd_date_entry.set(row[2])
                        self.var_ise_ia3_3rd_time_entry.set(row[3])
                        self.var_ise_ia3_3rd_code.set(row[4])
                        self.var_ise_ia3_3rd_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ise_ia3_3rd_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ise_ia3_3rd_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ise_ia3_3rd_schedule where ise_ia3_3rd_subjects=?",(self.var_serach_ise_ia3_3rd_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ise_ia3_3rd_treeview.delete(*tree_ise_ia3_3rd_treeview.get_children())
                                for row in rows:
                                    tree_ise_ia3_3rd_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ise_ia3_3rd_subjects()
                    ise_ia3_3rd_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ise_ia3_3rd_subjects_entry,values=ise_ia3_3rd_subjects_list).place(x=87,y=14)

                    ise_ia3_3rd_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ise_ia3_3rd_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ise_ia3_3rd_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia3_3rd_time_entry).place(x=569,y=14)

                    ise_ia3_3rd_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia3_3rd_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ise_ia3_3rd_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ise_ia3_3rd_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ise_ia3_3rd_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ise_ia3_3rd_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ise_ia3_3rd_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ise_ia3_3rd_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ise_ia3_3rd_treeview=ttk.Treeview(tree_frame1,columns=('ise_ia3_3rd_subjects','ise_ia3_3rd_date','ise_ia3_3rd_time','ise_ia3_3rd_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ise_ia3_3rd_treeview.xview)
                    scrolly.configure(command=tree_ise_ia3_3rd_treeview.yview)

                    tree_ise_ia3_3rd_treeview.heading('ise_ia3_3rd_subjects',text="Subjects")
                    tree_ise_ia3_3rd_treeview.heading('ise_ia3_3rd_date',text="Date")
                    tree_ise_ia3_3rd_treeview.heading('ise_ia3_3rd_time',text="Time")
                    tree_ise_ia3_3rd_treeview.heading('ise_ia3_3rd_code',text="Code")
                    tree_ise_ia3_3rd_treeview.heading('semisters',text="Semister")
                    tree_ise_ia3_3rd_treeview.heading('branch',text="Branch")

                    tree_ise_ia3_3rd_treeview.column('ise_ia3_3rd_subjects',width=200)
                    tree_ise_ia3_3rd_treeview.column('ise_ia3_3rd_date',width=150)
                    tree_ise_ia3_3rd_treeview.column('ise_ia3_3rd_time',width=150)
                    tree_ise_ia3_3rd_treeview.column('ise_ia3_3rd_code',width=150)
                    tree_ise_ia3_3rd_treeview.column('semisters',width=150)
                    tree_ise_ia3_3rd_treeview.column('branch',width=200)

                    tree_ise_ia3_3rd_treeview['show']='headings'
                
                    tree_ise_ia3_3rd_treeview.pack(fill=BOTH,expand=1)
                    fetch_ise_ia3_3rd_ia_schedule()
                    tree_ise_ia3_3rd_treeview.bind('<ButtonRelease-1>',get_ise_ia3_3rd_ia_schedule)
        if self.var_student_semister_select.get()=='4th_Semister':
            if self.var_student_branch_select.get()=="Information_Science_and_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    ise_ia3_4th_subjects_list=[]
                    def fetch_ise_ia3_4th_subjects():
                        #all_ise_ia3_4th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ise_4th_subjects from all_ise_4th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ise_ia3_4th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ise_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ise_ia3_4th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ise_ia3_4th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ise_ia3_4th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ise_ia3_4th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ise_ia3_4th_subjects','ise_ia3_4th_date','ise_ia3_4th_time','ise_ia3_4th_code','semisters','branch'
                                        cur.execute('insert into ise_ia3_4th_schedule(ise_ia3_4th_subjects,ise_ia3_4th_date,ise_ia3_4th_time,ise_ia3_4th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ise_ia3_4th_subjects_entry.get(),
                                            self.var_ise_ia3_4th_date_entry.get(),
                                            self.var_ise_ia3_4th_time_entry.get(),
                                            self.var_ise_ia3_4th_code.get(),
                                            self.var_ise_ia3_4th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ise_ia3_4th_ia_schedule()
                                        con.close()
                    def fetch_ise_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_ia3_4th_schedule')
                            rows=cur.fetchall()
                            tree_ise_ia3_4th_treeview.delete(*tree_ise_ia3_4th_treeview.get_children())
                            for row in rows:
                                tree_ise_ia3_4th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ise_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia3_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ise_ia3_4th_schedule where ise_ia3_4th_subjects=?',(self.var_ise_ia3_4th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ise_ia3_4th_schedule where ise_ia3_4th_subjects=? ',(self.var_ise_ia3_4th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ise_ia3_4th_all()
                                    fetch_ise_ia3_4th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ise_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia3_4th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ise_ia3_4th_schedule set ise_ia3_4th_date=?,ise_ia3_4th_time=?,ise_ia3_4th_code=?,semisters=?,branch=?  where ise_ia3_4th_subjects=?',(
                                self.var_ise_ia3_4th_date_entry.get(),
                                self.var_ise_ia3_4th_time_entry.get(),
                                self.var_ise_ia3_4th_code.get(),
                                self.var_ise_ia3_4th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ise_ia3_4th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ise_ia3_4th_ia_schedule()
                                clear_ise_ia3_4th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ise_ia3_4th_all():
                        fetch_ise_ia3_4th_ia_schedule()
                        self.var_ise_ia3_4th_subjects_entry.set("")
                        self.var_ise_ia3_4th_date_entry.set("")
                        self.var_ise_ia3_4th_time_entry.set("")
                        self.var_ise_ia3_4th_code.set("")
                        self.var_ise_ia3_4th_semister.set("")
                        self.var_serach_ise_ia3_4th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ise_ia3_4th_ia_schedule(ev):
                        read=tree_ise_ia3_4th_treeview.focus()
                        content=tree_ise_ia3_4th_treeview.item(read)
                        row=content['values']

                        self.var_ise_ia3_4th_subjects_entry.set(row[1])
                        self.var_ise_ia3_4th_date_entry.set(row[2])
                        self.var_ise_ia3_4th_time_entry.set(row[3])
                        self.var_ise_ia3_4th_code.set(row[4])
                        self.var_ise_ia3_4th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ise_ia3_4th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ise_ia3_4th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ise_ia3_4th_schedule where ise_ia3_4th_subjects=?",(self.var_serach_ise_ia3_4th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ise_ia3_4th_treeview.delete(*tree_ise_ia3_4th_treeview.get_children())
                                for row in rows:
                                    tree_ise_ia3_4th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ise_ia3_4th_subjects()
                    ise_ia3_4th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ise_ia3_4th_subjects_entry,values=ise_ia3_4th_subjects_list).place(x=87,y=14)

                    ise_ia3_4th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ise_ia3_4th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ise_ia3_4th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia3_4th_time_entry).place(x=569,y=14)

                    ise_ia3_4th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia3_4th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ise_ia3_4th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ise_ia3_4th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ise_ia3_4th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ise_ia3_4th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ise_ia3_4th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ise_ia3_4th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ise_ia3_4th_treeview=ttk.Treeview(tree_frame1,columns=('ise_ia3_4th_subjects','ise_ia3_4th_date','ise_ia3_4th_time','ise_ia3_4th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ise_ia3_4th_treeview.xview)
                    scrolly.configure(command=tree_ise_ia3_4th_treeview.yview)

                    tree_ise_ia3_4th_treeview.heading('ise_ia3_4th_subjects',text="Subjects")
                    tree_ise_ia3_4th_treeview.heading('ise_ia3_4th_date',text="Date")
                    tree_ise_ia3_4th_treeview.heading('ise_ia3_4th_time',text="Time")
                    tree_ise_ia3_4th_treeview.heading('ise_ia3_4th_code',text="Code")
                    tree_ise_ia3_4th_treeview.heading('semisters',text="Semister")
                    tree_ise_ia3_4th_treeview.heading('branch',text="Branch")

                    tree_ise_ia3_4th_treeview.column('ise_ia3_4th_subjects',width=200)
                    tree_ise_ia3_4th_treeview.column('ise_ia3_4th_date',width=150)
                    tree_ise_ia3_4th_treeview.column('ise_ia3_4th_time',width=150)
                    tree_ise_ia3_4th_treeview.column('ise_ia3_4th_code',width=150)
                    tree_ise_ia3_4th_treeview.column('semisters',width=150)
                    tree_ise_ia3_4th_treeview.column('branch',width=200)

                    tree_ise_ia3_4th_treeview['show']='headings'
                
                    tree_ise_ia3_4th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ise_ia3_4th_ia_schedule()
                    tree_ise_ia3_4th_treeview.bind('<ButtonRelease-1>',get_ise_ia3_4th_ia_schedule)
        if self.var_student_semister_select.get()=='5th_Semister':
            if self.var_student_branch_select.get()=="Information_Science_and_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    ise_ia3_5th_subjects_list=[]
                    def fetch_ise_ia3_5th_subjects():
                        #all_ise_ia3_5th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ise_5th_subjects from all_ise_5th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ise_ia3_5th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ise_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ise_ia3_5th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ise_ia3_5th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ise_ia3_5th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ise_ia3_5th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ise_ia3_5th_subjects','ise_ia3_5th_date','ise_ia3_5th_time','ise_ia3_5th_code','semisters','branch'
                                        cur.execute('insert into ise_ia3_5th_schedule(ise_ia3_5th_subjects,ise_ia3_5th_date,ise_ia3_5th_time,ise_ia3_5th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ise_ia3_5th_subjects_entry.get(),
                                            self.var_ise_ia3_5th_date_entry.get(),
                                            self.var_ise_ia3_5th_time_entry.get(),
                                            self.var_ise_ia3_5th_code.get(),
                                            self.var_ise_ia3_5th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ise_ia3_5th_ia_schedule()
                                        con.close()
                    def fetch_ise_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_ia3_5th_schedule')
                            rows=cur.fetchall()
                            tree_ise_ia3_5th_treeview.delete(*tree_ise_ia3_5th_treeview.get_children())
                            for row in rows:
                                tree_ise_ia3_5th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ise_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia3_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ise_ia3_5th_schedule where ise_ia3_5th_subjects=?',(self.var_ise_ia3_5th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ise_ia3_5th_schedule where ise_ia3_5th_subjects=? ',(self.var_ise_ia3_5th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ise_ia3_5th_all()
                                    fetch_ise_ia3_5th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ise_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia3_5th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ise_ia3_5th_schedule set ise_ia3_5th_date=?,ise_ia3_5th_time=?,ise_ia3_5th_code=?,semisters=?,branch=?  where ise_ia3_5th_subjects=?',(
                                self.var_ise_ia3_5th_date_entry.get(),
                                self.var_ise_ia3_5th_time_entry.get(),
                                self.var_ise_ia3_5th_code.get(),
                                self.var_ise_ia3_5th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ise_ia3_5th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ise_ia3_5th_ia_schedule()
                                clear_ise_ia3_5th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ise_ia3_5th_all():
                        fetch_ise_ia3_5th_ia_schedule()
                        self.var_ise_ia3_5th_subjects_entry.set("")
                        self.var_ise_ia3_5th_date_entry.set("")
                        self.var_ise_ia3_5th_time_entry.set("")
                        self.var_ise_ia3_5th_code.set("")
                        self.var_ise_ia3_5th_semister.set("")
                        self.var_serach_ise_ia3_5th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ise_ia3_5th_ia_schedule(ev):
                        read=tree_ise_ia3_5th_treeview.focus()
                        content=tree_ise_ia3_5th_treeview.item(read)
                        row=content['values']

                        self.var_ise_ia3_5th_subjects_entry.set(row[1])
                        self.var_ise_ia3_5th_date_entry.set(row[2])
                        self.var_ise_ia3_5th_time_entry.set(row[3])
                        self.var_ise_ia3_5th_code.set(row[4])
                        self.var_ise_ia3_5th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ise_ia3_5th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ise_ia3_5th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ise_ia3_5th_schedule where ise_ia3_5th_subjects=?",(self.var_serach_ise_ia3_5th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ise_ia3_5th_treeview.delete(*tree_ise_ia3_5th_treeview.get_children())
                                for row in rows:
                                    tree_ise_ia3_5th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ise_ia3_5th_subjects()
                    ise_ia3_5th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ise_ia3_5th_subjects_entry,values=ise_ia3_5th_subjects_list).place(x=87,y=14)

                    ise_ia3_5th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ise_ia3_5th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ise_ia3_5th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia3_5th_time_entry).place(x=569,y=14)

                    ise_ia3_5th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia3_5th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ise_ia3_5th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ise_ia3_5th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ise_ia3_5th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ise_ia3_5th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ise_ia3_5th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ise_ia3_5th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ise_ia3_5th_treeview=ttk.Treeview(tree_frame1,columns=('ise_ia3_5th_subjects','ise_ia3_5th_date','ise_ia3_5th_time','ise_ia3_5th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ise_ia3_5th_treeview.xview)
                    scrolly.configure(command=tree_ise_ia3_5th_treeview.yview)

                    tree_ise_ia3_5th_treeview.heading('ise_ia3_5th_subjects',text="Subjects")
                    tree_ise_ia3_5th_treeview.heading('ise_ia3_5th_date',text="Date")
                    tree_ise_ia3_5th_treeview.heading('ise_ia3_5th_time',text="Time")
                    tree_ise_ia3_5th_treeview.heading('ise_ia3_5th_code',text="Code")
                    tree_ise_ia3_5th_treeview.heading('semisters',text="Semister")
                    tree_ise_ia3_5th_treeview.heading('branch',text="Branch")

                    tree_ise_ia3_5th_treeview.column('ise_ia3_5th_subjects',width=200)
                    tree_ise_ia3_5th_treeview.column('ise_ia3_5th_date',width=150)
                    tree_ise_ia3_5th_treeview.column('ise_ia3_5th_time',width=150)
                    tree_ise_ia3_5th_treeview.column('ise_ia3_5th_code',width=150)
                    tree_ise_ia3_5th_treeview.column('semisters',width=150)
                    tree_ise_ia3_5th_treeview.column('branch',width=200)

                    tree_ise_ia3_5th_treeview['show']='headings'
                
                    tree_ise_ia3_5th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ise_ia3_5th_ia_schedule()
                    tree_ise_ia3_5th_treeview.bind('<ButtonRelease-1>',get_ise_ia3_5th_ia_schedule)
        if self.var_student_semister_select.get()=='6th_Semister':
            if self.var_student_branch_select.get()=="Information_Science_and_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    ise_ia3_6th_subjects_list=[]
                    def fetch_ise_ia3_6th_subjects():
                        #all_ise_ia3_6th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ise_6th_subjects from all_ise_6th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ise_ia3_6th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ise_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ise_ia3_6th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ise_ia3_6th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ise_ia3_6th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ise_ia3_6th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ise_ia3_6th_subjects','ise_ia3_6th_date','ise_ia3_6th_time','ise_ia3_6th_code','semisters','branch'
                                        cur.execute('insert into ise_ia3_6th_schedule(ise_ia3_6th_subjects,ise_ia3_6th_date,ise_ia3_6th_time,ise_ia3_6th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ise_ia3_6th_subjects_entry.get(),
                                            self.var_ise_ia3_6th_date_entry.get(),
                                            self.var_ise_ia3_6th_time_entry.get(),
                                            self.var_ise_ia3_6th_code.get(),
                                            self.var_ise_ia3_6th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ise_ia3_6th_ia_schedule()
                                        con.close()
                    def fetch_ise_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_ia3_6th_schedule')
                            rows=cur.fetchall()
                            tree_ise_ia3_6th_treeview.delete(*tree_ise_ia3_6th_treeview.get_children())
                            for row in rows:
                                tree_ise_ia3_6th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ise_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia3_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ise_ia3_6th_schedule where ise_ia3_6th_subjects=?',(self.var_ise_ia3_6th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ise_ia3_6th_schedule where ise_ia3_6th_subjects=? ',(self.var_ise_ia3_6th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ise_ia3_6th_all()
                                    fetch_ise_ia3_6th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ise_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia3_6th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ise_ia3_6th_schedule set ise_ia3_6th_date=?,ise_ia3_6th_time=?,ise_ia3_6th_code=?,semisters=?,branch=?  where ise_ia3_6th_subjects=?',(
                                self.var_ise_ia3_6th_date_entry.get(),
                                self.var_ise_ia3_6th_time_entry.get(),
                                self.var_ise_ia3_6th_code.get(),
                                self.var_ise_ia3_6th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ise_ia3_6th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ise_ia3_6th_ia_schedule()
                                clear_ise_ia3_6th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ise_ia3_6th_all():
                        fetch_ise_ia3_6th_ia_schedule()
                        self.var_ise_ia3_6th_subjects_entry.set("")
                        self.var_ise_ia3_6th_date_entry.set("")
                        self.var_ise_ia3_6th_time_entry.set("")
                        self.var_ise_ia3_6th_code.set("")
                        self.var_ise_ia3_6th_semister.set("")
                        self.var_serach_ise_ia3_6th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ise_ia3_6th_ia_schedule(ev):
                        read=tree_ise_ia3_6th_treeview.focus()
                        content=tree_ise_ia3_6th_treeview.item(read)
                        row=content['values']

                        self.var_ise_ia3_6th_subjects_entry.set(row[1])
                        self.var_ise_ia3_6th_date_entry.set(row[2])
                        self.var_ise_ia3_6th_time_entry.set(row[3])
                        self.var_ise_ia3_6th_code.set(row[4])
                        self.var_ise_ia3_6th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ise_ia3_6th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ise_ia3_6th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ise_ia3_6th_schedule where ise_ia3_6th_subjects=?",(self.var_serach_ise_ia3_6th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ise_ia3_6th_treeview.delete(*tree_ise_ia3_6th_treeview.get_children())
                                for row in rows:
                                    tree_ise_ia3_6th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ise_ia3_6th_subjects()
                    ise_ia3_6th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ise_ia3_6th_subjects_entry,values=ise_ia3_6th_subjects_list).place(x=87,y=14)

                    ise_ia3_6th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ise_ia3_6th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ise_ia3_6th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia3_6th_time_entry).place(x=569,y=14)

                    ise_ia3_6th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia3_6th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ise_ia3_6th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ise_ia3_6th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ise_ia3_6th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ise_ia3_6th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ise_ia3_6th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ise_ia3_6th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ise_ia3_6th_treeview=ttk.Treeview(tree_frame1,columns=('ise_ia3_6th_subjects','ise_ia3_6th_date','ise_ia3_6th_time','ise_ia3_6th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ise_ia3_6th_treeview.xview)
                    scrolly.configure(command=tree_ise_ia3_6th_treeview.yview)

                    tree_ise_ia3_6th_treeview.heading('ise_ia3_6th_subjects',text="Subjects")
                    tree_ise_ia3_6th_treeview.heading('ise_ia3_6th_date',text="Date")
                    tree_ise_ia3_6th_treeview.heading('ise_ia3_6th_time',text="Time")
                    tree_ise_ia3_6th_treeview.heading('ise_ia3_6th_code',text="Code")
                    tree_ise_ia3_6th_treeview.heading('semisters',text="Semister")
                    tree_ise_ia3_6th_treeview.heading('branch',text="Branch")

                    tree_ise_ia3_6th_treeview.column('ise_ia3_6th_subjects',width=200)
                    tree_ise_ia3_6th_treeview.column('ise_ia3_6th_date',width=150)
                    tree_ise_ia3_6th_treeview.column('ise_ia3_6th_time',width=150)
                    tree_ise_ia3_6th_treeview.column('ise_ia3_6th_code',width=150)
                    tree_ise_ia3_6th_treeview.column('semisters',width=150)
                    tree_ise_ia3_6th_treeview.column('branch',width=200)

                    tree_ise_ia3_6th_treeview['show']='headings'
                
                    tree_ise_ia3_6th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ise_ia3_6th_ia_schedule()
                    tree_ise_ia3_6th_treeview.bind('<ButtonRelease-1>',get_ise_ia3_6th_ia_schedule)
        if self.var_student_semister_select.get()=='7th_Semister':
            if self.var_student_branch_select.get()=="Information_Science_and_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    ise_ia3_7th_subjects_list=[]
                    def fetch_ise_ia3_7th_subjects():
                        #all_ise_ia3_7th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ise_7th_subjects from all_ise_7th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ise_ia3_7th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ise_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ise_ia3_7th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ise_ia3_7th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ise_ia3_7th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ise_ia3_7th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ise_ia3_7th_subjects','ise_ia3_7th_date','ise_ia3_7th_time','ise_ia3_7th_code','semisters','branch'
                                        cur.execute('insert into ise_ia3_7th_schedule(ise_ia3_7th_subjects,ise_ia3_7th_date,ise_ia3_7th_time,ise_ia3_7th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ise_ia3_7th_subjects_entry.get(),
                                            self.var_ise_ia3_7th_date_entry.get(),
                                            self.var_ise_ia3_7th_time_entry.get(),
                                            self.var_ise_ia3_7th_code.get(),
                                            self.var_ise_ia3_7th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ise_ia3_7th_ia_schedule()
                                        con.close()
                    def fetch_ise_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_ia3_7th_schedule')
                            rows=cur.fetchall()
                            tree_ise_ia3_7th_treeview.delete(*tree_ise_ia3_7th_treeview.get_children())
                            for row in rows:
                                tree_ise_ia3_7th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ise_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia3_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ise_ia3_7th_schedule where ise_ia3_7th_subjects=?',(self.var_ise_ia3_7th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ise_ia3_7th_schedule where ise_ia3_7th_subjects=? ',(self.var_ise_ia3_7th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ise_ia3_7th_all()
                                    fetch_ise_ia3_7th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ise_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia3_7th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ise_ia3_7th_schedule set ise_ia3_7th_date=?,ise_ia3_7th_time=?,ise_ia3_7th_code=?,semisters=?,branch=?  where ise_ia3_7th_subjects=?',(
                                self.var_ise_ia3_7th_date_entry.get(),
                                self.var_ise_ia3_7th_time_entry.get(),
                                self.var_ise_ia3_7th_code.get(),
                                self.var_ise_ia3_7th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ise_ia3_7th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ise_ia3_7th_ia_schedule()
                                clear_ise_ia3_7th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ise_ia3_7th_all():
                        fetch_ise_ia3_7th_ia_schedule()
                        self.var_ise_ia3_7th_subjects_entry.set("")
                        self.var_ise_ia3_7th_date_entry.set("")
                        self.var_ise_ia3_7th_time_entry.set("")
                        self.var_ise_ia3_7th_code.set("")
                        self.var_ise_ia3_7th_semister.set("")
                        self.var_serach_ise_ia3_7th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ise_ia3_7th_ia_schedule(ev):
                        read=tree_ise_ia3_7th_treeview.focus()
                        content=tree_ise_ia3_7th_treeview.item(read)
                        row=content['values']

                        self.var_ise_ia3_7th_subjects_entry.set(row[1])
                        self.var_ise_ia3_7th_date_entry.set(row[2])
                        self.var_ise_ia3_7th_time_entry.set(row[3])
                        self.var_ise_ia3_7th_code.set(row[4])
                        self.var_ise_ia3_7th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ise_ia3_7th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ise_ia3_7th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ise_ia3_7th_schedule where ise_ia3_7th_subjects=?",(self.var_serach_ise_ia3_7th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ise_ia3_7th_treeview.delete(*tree_ise_ia3_7th_treeview.get_children())
                                for row in rows:
                                    tree_ise_ia3_7th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ise_ia3_7th_subjects()
                    ise_ia3_7th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ise_ia3_7th_subjects_entry,values=ise_ia3_7th_subjects_list).place(x=87,y=14)

                    ise_ia3_7th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ise_ia3_7th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ise_ia3_7th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia3_7th_time_entry).place(x=569,y=14)

                    ise_ia3_7th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia3_7th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ise_ia3_7th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ise_ia3_7th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ise_ia3_7th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ise_ia3_7th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ise_ia3_7th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ise_ia3_7th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ise_ia3_7th_treeview=ttk.Treeview(tree_frame1,columns=('ise_ia3_7th_subjects','ise_ia3_7th_date','ise_ia3_7th_time','ise_ia3_7th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ise_ia3_7th_treeview.xview)
                    scrolly.configure(command=tree_ise_ia3_7th_treeview.yview)

                    tree_ise_ia3_7th_treeview.heading('ise_ia3_7th_subjects',text="Subjects")
                    tree_ise_ia3_7th_treeview.heading('ise_ia3_7th_date',text="Date")
                    tree_ise_ia3_7th_treeview.heading('ise_ia3_7th_time',text="Time")
                    tree_ise_ia3_7th_treeview.heading('ise_ia3_7th_code',text="Code")
                    tree_ise_ia3_7th_treeview.heading('semisters',text="Semister")
                    tree_ise_ia3_7th_treeview.heading('branch',text="Branch")

                    tree_ise_ia3_7th_treeview.column('ise_ia3_7th_subjects',width=200)
                    tree_ise_ia3_7th_treeview.column('ise_ia3_7th_date',width=150)
                    tree_ise_ia3_7th_treeview.column('ise_ia3_7th_time',width=150)
                    tree_ise_ia3_7th_treeview.column('ise_ia3_7th_code',width=150)
                    tree_ise_ia3_7th_treeview.column('semisters',width=150)
                    tree_ise_ia3_7th_treeview.column('branch',width=200)

                    tree_ise_ia3_7th_treeview['show']='headings'
                
                    tree_ise_ia3_7th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ise_ia3_7th_ia_schedule()
                    tree_ise_ia3_7th_treeview.bind('<ButtonRelease-1>',get_ise_ia3_7th_ia_schedule)
        if self.var_student_semister_select.get()=='8th_Semister':
            if self.var_student_branch_select.get()=="Information_Science_and_Engineering":
                if self.var_ia_select.get()=='IA_3':
                    ise_ia3_8th_subjects_list=[]
                    def fetch_ise_ia3_8th_subjects():
                        #all_ise_ia3_8th_subjects
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select ise_8th_subjects from all_ise_8th_subjects')
                            rows=cur.fetchall()
                            if len(rows)>0:
                                for row in rows:
                                    ise_ia3_8th_subjects_list.append(row[0])
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)


                    def add_ise_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        if self.var_ise_ia3_8th_subjects_entry.get()=='':
                            messagebox.showerror('Error','The stuedent subjects must be requered.',parent=frame)
                        else:
                            if self.var_ise_ia3_8th_time_entry.get()=='':
                                messagebox.showerror('Error','The time must be required',parent=frame)
                            else:
                                if self.var_ise_ia3_8th_date_entry.get()=='':
                                    messagebox.showerror('Error','The date must be required',parent=frame)
                                else:
                                    if self.var_ise_ia3_8th_code.get()=='':
                                        messagebox.showerror('Error','The subjects code must be requierd',parent=frame)
                                    else:  #'ise_ia3_8th_subjects','ise_ia3_8th_date','ise_ia3_8th_time','ise_ia3_8th_code','semisters','branch'
                                        cur.execute('insert into ise_ia3_8th_schedule(ise_ia3_8th_subjects,ise_ia3_8th_date,ise_ia3_8th_time,ise_ia3_8th_code,semisters,branch) values(?,?,?,?,?,?)',(
                                            self.var_ise_ia3_8th_subjects_entry.get(),
                                            self.var_ise_ia3_8th_date_entry.get(),
                                            self.var_ise_ia3_8th_time_entry.get(),
                                            self.var_ise_ia3_8th_code.get(),
                                            self.var_ise_ia3_8th_semister.get(),
                                            self.var_student_branch_select.get()
                                        ))
                                        con.commit()
                                        messagebox.showinfo('info','The data add succssfuly....',parent=frame)
                                        fetch_ise_ia3_8th_ia_schedule()
                                        con.close()
                    def fetch_ise_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_ia3_8th_schedule')
                            rows=cur.fetchall()
                            tree_ise_ia3_8th_treeview.delete(*tree_ise_ia3_8th_treeview.get_children())
                            for row in rows:
                                tree_ise_ia3_8th_treeview.insert('',END,values=row)

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def delete_ise_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia3_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('select * from ise_ia3_8th_schedule where ise_ia3_8th_subjects=?',(self.var_ise_ia3_8th_subjects_entry.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','Select the subjects from the table',parennt=frame)
                                else:
                                    option=messagebox.askyesno('confirm','Do you wont to delet the data from the table.',parent=frame)
                                    if option==True:
                                        cur.execute('delete from ise_ia3_8th_schedule where ise_ia3_8th_subjects=? ',(self.var_ise_ia3_8th_subjects_entry.get(),))
                                    con.commit()
                                    messagebox.showinfo('Info','the data is deleted successflly....',parent=frame)
                                    clear_ise_ia3_8th_all()
                                    fetch_ise_ia3_8th_ia_schedule()
                                    con.close()
                                    
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)

                    def update_ise_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_ise_ia3_8th_subjects_entry.get()=='':
                                messagebox.showerror('Error','The subjects must be reuired',parent=frame)
                            else:
                                cur.execute('update ise_ia3_8th_schedule set ise_ia3_8th_date=?,ise_ia3_8th_time=?,ise_ia3_8th_code=?,semisters=?,branch=?  where ise_ia3_8th_subjects=?',(
                                self.var_ise_ia3_8th_date_entry.get(),
                                self.var_ise_ia3_8th_time_entry.get(),
                                self.var_ise_ia3_8th_code.get(),
                                self.var_ise_ia3_8th_semister.get(),
                                self.var_student_branch_select.get(),
                                self.var_ise_ia3_8th_subjects_entry.get()
                                ))
                                con.commit()
                                messagebox.showinfo('Info','The data updated succssflly....',parent=frame)
                                fetch_ise_ia3_8th_ia_schedule()
                                clear_ise_ia3_8th_all()
                                con.close()
                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    def clear_ise_ia3_8th_all():
                        fetch_ise_ia3_8th_ia_schedule()
                        self.var_ise_ia3_8th_subjects_entry.set("")
                        self.var_ise_ia3_8th_date_entry.set("")
                        self.var_ise_ia3_8th_time_entry.set("")
                        self.var_ise_ia3_8th_code.set("")
                        self.var_ise_ia3_8th_semister.set("")
                        self.var_serach_ise_ia3_8th_semisters.set("")
                    
                        messagebox.showinfo('Info','The data clear is succssfuly.....',parent=frame)

                    def get_ise_ia3_8th_ia_schedule(ev):
                        read=tree_ise_ia3_8th_treeview.focus()
                        content=tree_ise_ia3_8th_treeview.item(read)
                        row=content['values']

                        self.var_ise_ia3_8th_subjects_entry.set(row[1])
                        self.var_ise_ia3_8th_date_entry.set(row[2])
                        self.var_ise_ia3_8th_time_entry.set(row[3])
                        self.var_ise_ia3_8th_code.set(row[4])
                        self.var_ise_ia3_8th_semister.set(row[5])
                        
                        messagebox.showinfo('Info','The data get is succssfuly.....',parent=frame)                    
                    def serch_ise_ia3_8th_ia_schedule():
                        con=sqlite3.connect(database='StudentDataBase.db')
                        cur=con.cursor()
                        try:
                            if self.var_serach_ise_ia3_8th_semisters.get()=='':
                                messagebox.showerror('Error','The subjects must be required',parent=frame)
                            else:
                                cur.execute(f"select * from ise_ia3_8th_schedule where ise_ia3_8th_subjects=?",(self.var_serach_ise_ia3_8th_semisters.get(),))
                                rows=cur.fetchall()
                                tree_ise_ia3_8th_treeview.delete(*tree_ise_ia3_8th_treeview.get_children())
                                for row in rows:
                                    tree_ise_ia3_8th_treeview.insert('',END,values=row)
                                

                        except Exception as ex:
                            messagebox.showerror('Error',f'The error due to {str(ex)}',parent=frame)
                    frame=Frame(self.frame3)
                    frame.place(x=0,y=0,width=1022,height=420)
            
                    label_frame1=LabelFrame(frame,width=1013)
                    label_frame1.place(x=10,y=5,height=40)

                    fetch_ise_ia3_8th_subjects()
                    ise_ia3_8th_subjects_label=Label(frame,text="Subjctes:",font=("times new roman",13,'bold')).place(x=13,y=13)
                    subjects_entry=ttk.Combobox(frame,width=27,textvariable=self.var_ise_ia3_8th_subjects_entry,values=ise_ia3_8th_subjects_list).place(x=87,y=14)

                    ise_ia3_8th_subjects_label=Label(frame,text="Date:",font=("times new roman",13,'bold')).place(x=280,y=13)
                    subjects_entry=DateEntry(frame,width=27,textvariable=self.var_ise_ia3_8th_date_entry,dataframe=3,Calender=2021,state='readonly',bd=0).place(x=330,y=14)

                    ise_ia3_8th_subjects_label=Label(frame,text="time:",font=("times new roman",13,'bold')).place(x=522,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia3_8th_time_entry).place(x=569,y=14)

                    ise_ia3_8th_subjects_label=Label(frame,text="code:",font=("times new roman",13,'bold')).place(x=780,y=13)
                    subjects_entry=ttk.Entry(frame,width=30,textvariable=self.var_ise_ia3_8th_code).place(x=830,y=14)

                    label_frame2=LabelFrame(frame)
                    label_frame2.place(x=10,y=46,width=200,height=227)

                    add_database_button=ttk.Button(label_frame2,text='Add database',width=31,command=add_ise_ia3_8th_ia_schedule).grid(row=0,column=0)
                    update_button=ttk.Button(label_frame2,text='Update',width=31,command=update_ise_ia3_8th_ia_schedule).grid(row=1,column=0)
                    delete_button=ttk.Button(label_frame2,text='Delete',width=31,command=delete_ise_ia3_8th_ia_schedule).grid(row=2,column=0)
                    clear_button=ttk.Button(label_frame2,text='Clear',width=31,command=clear_ise_ia3_8th_all).grid(row=3,column=0)
                    subjects_label=Label(label_frame2,text='Serach Marks:',font=('times new roman',13,'bold')).grid(row=4,column=0)
                    serch_entry=ttk.Entry(label_frame2,width=31,textvariable=self.var_serach_ise_ia3_8th_semisters).grid(row=5,column=0)
                    serach_button=ttk.Button(label_frame2,text='Serach',width=31,command=serch_ise_ia3_8th_ia_schedule).grid(row=6,column=0)

                    label_frame3=LabelFrame(frame)
                    label_frame3.place(x=220,y=46,width=801,height=227)

                    tree_frame1=Frame(label_frame3)
                    tree_frame1.pack(fill=BOTH,expand=1)

                    scrollx=Scrollbar(tree_frame1,orient=HORIZONTAL)
                    scrolly=Scrollbar(tree_frame1,orient=VERTICAL)

                    tree_ise_ia3_8th_treeview=ttk.Treeview(tree_frame1,columns=('ise_ia3_8th_subjects','ise_ia3_8th_date','ise_ia3_8th_time','ise_ia3_8th_code','semisters','branch'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=tree_ise_ia3_8th_treeview.xview)
                    scrolly.configure(command=tree_ise_ia3_8th_treeview.yview)

                    tree_ise_ia3_8th_treeview.heading('ise_ia3_8th_subjects',text="Subjects")
                    tree_ise_ia3_8th_treeview.heading('ise_ia3_8th_date',text="Date")
                    tree_ise_ia3_8th_treeview.heading('ise_ia3_8th_time',text="Time")
                    tree_ise_ia3_8th_treeview.heading('ise_ia3_8th_code',text="Code")
                    tree_ise_ia3_8th_treeview.heading('semisters',text="Semister")
                    tree_ise_ia3_8th_treeview.heading('branch',text="Branch")

                    tree_ise_ia3_8th_treeview.column('ise_ia3_8th_subjects',width=200)
                    tree_ise_ia3_8th_treeview.column('ise_ia3_8th_date',width=150)
                    tree_ise_ia3_8th_treeview.column('ise_ia3_8th_time',width=150)
                    tree_ise_ia3_8th_treeview.column('ise_ia3_8th_code',width=150)
                    tree_ise_ia3_8th_treeview.column('semisters',width=150)
                    tree_ise_ia3_8th_treeview.column('branch',width=200)

                    tree_ise_ia3_8th_treeview['show']='headings'
                
                    tree_ise_ia3_8th_treeview.pack(fill=BOTH,expand=1)
                    fetch_ise_ia3_8th_ia_schedule()
                    tree_ise_ia3_8th_treeview.bind('<ButtonRelease-1>',get_ise_ia3_8th_ia_schedule)


                

if __name__=='__main__':
    root=tk.Tk()
    ob1=IAScheduleEntry(root)
    root.mainloop()