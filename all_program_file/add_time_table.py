import tkinter as tk
from tkcalendar import *
from tkinter import *
from tkinter import ttk
from PIL import Image,ImageTk
from tkinter import filedialog
import os
import sqlite3
from tkinter import messagebox
from tkinter import colorchooser
import psycopg2

class AddTimeTable():
    def __init__(self,root):
        self.root=root
        self.root.title("Add Time Table")
        self.root.geometry('1055x440+213+145')    
        self.root.resizable(False,False)
        self.root.configure(bg='white')


        ################################################ all variables
        self.var_day_select=StringVar()
        self.var_day_serch=StringVar()
        self.var_sem_select=StringVar()
        self.var_branch_select=StringVar()
        
        ################    manday
        self.var_che_monday_number_of_class1=StringVar()
        self.var_che_monday_time1=StringVar()
        self.var_che_monday_chemistry_cycle_subject1=StringVar()
        self.var_che_monday_chemistry_cycle_subject_faculty1=StringVar()
        self.var_che_monday_faculty_serch=StringVar()

        self.var_che_thuesday_number_of_class2=StringVar()
        self.var_che_thuesday_time1=StringVar()
        self.var_che_thuesday_chemistry_cycle_subject1=StringVar()
        self.var_che_thuesday_chemistry_cycle_subject_faculty1=StringVar()
        self.var_che_thuesday_faculty_serch=StringVar()

        self.var_che_wednesday_number_of_class2=StringVar()
        self.var_che_wednesday_time1=StringVar()
        self.var_che_wednesday_chemistry_cycle_subject1=StringVar()
        self.var_che_wednesday_chemistry_cycle_subject_faculty1=StringVar()
        self.var_che_wednesday_faculty_serch=StringVar()

        self.var_che_thursday_number_of_class2=StringVar()
        self.var_che_thursday_time1=StringVar()
        self.var_che_thursday_chemistry_cycle_subject1=StringVar()
        self.var_che_thursday_chemistry_cycle_subject_faculty1=StringVar()
        self.var_che_thursday_faculty_serch=StringVar()

        self.var_che_friday_number_of_class2=StringVar()
        self.var_che_friday_time1=StringVar()
        self.var_che_friday_chemistry_cycle_subject1=StringVar()
        self.var_che_friday_chemistry_cycle_subject_faculty1=StringVar()
        self.var_che_friday_faculty_serch=StringVar()

        self.var_che_saturday_number_of_class2=StringVar()
        self.var_che_saturday_time1=StringVar()
        self.var_che_saturday_chemistry_cycle_subject1=StringVar()
        self.var_che_saturday_chemistry_cycle_subject_faculty1=StringVar()
        self.var_che_saturday_faculty_serch=StringVar()


        self.var_phy_monday_number_of_class1=StringVar()
        self.var_phy_monday_time1=StringVar()
        self.var_phy_monday_phymistry_cycle_subject1=StringVar()
        self.var_phy_monday_phymistry_cycle_subject_faculty1=StringVar()
        self.var_phy_monday_faculty_serch=StringVar()

        self.var_phy_thuesday_number_of_class2=StringVar()
        self.var_phy_thuesday_time1=StringVar()
        self.var_phy_thuesday_phymistry_cycle_subject1=StringVar()
        self.var_phy_thuesday_phymistry_cycle_subject_faculty1=StringVar()
        self.var_phy_thuesday_faculty_serch=StringVar()

        self.var_phy_wednesday_number_of_class2=StringVar()
        self.var_phy_wednesday_time1=StringVar()
        self.var_phy_wednesday_phymistry_cycle_subject1=StringVar()
        self.var_phy_wednesday_phymistry_cycle_subject_faculty1=StringVar()
        self.var_phy_wednesday_faculty_serch=StringVar()

        self.var_phy_thursday_number_of_class2=StringVar()
        self.var_phy_thursday_time1=StringVar()
        self.var_phy_thursday_phymistry_cycle_subject1=StringVar()
        self.var_phy_thursday_phymistry_cycle_subject_faculty1=StringVar()
        self.var_phy_thursday_faculty_serch=StringVar()

        self.var_phy_friday_number_of_class2=StringVar()
        self.var_phy_friday_time1=StringVar()
        self.var_phy_friday_phymistry_cycle_subject1=StringVar()
        self.var_phy_friday_phymistry_cycle_subject_faculty1=StringVar()
        self.var_phy_friday_faculty_serch=StringVar()

        self.var_phy_saturday_number_of_class2=StringVar()
        self.var_phy_saturday_time1=StringVar()
        self.var_phy_saturday_phymistry_cycle_subject1=StringVar()
        self.var_phy_saturday_phymistry_cycle_subject_faculty1=StringVar()
        self.var_phy_saturday_faculty_serch=StringVar()

        self.var_civil_3rd_monday_number_of_class1=StringVar()
        self.var_civil_3rd_monday_time1=StringVar()
        self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject1=StringVar()
        self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_civil_3rd_monday_faculty_serch=StringVar()

        self.var_civil_3rd_thuesday_number_of_class2=StringVar()
        self.var_civil_3rd_thuesday_time1=StringVar()
        self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject1=StringVar()
        self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_civil_3rd_thuesday_faculty_serch=StringVar()

        self.var_civil_3rd_wednesday_number_of_class2=StringVar()
        self.var_civil_3rd_wednesday_time1=StringVar()
        self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject1=StringVar()
        self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_civil_3rd_wednesday_faculty_serch=StringVar()

        self.var_civil_3rd_thursday_number_of_class2=StringVar()
        self.var_civil_3rd_thursday_time1=StringVar()
        self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject1=StringVar()
        self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_civil_3rd_thursday_faculty_serch=StringVar()

        self.var_civil_3rd_friday_number_of_class2=StringVar()
        self.var_civil_3rd_friday_time1=StringVar()
        self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject1=StringVar()
        self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_civil_3rd_friday_faculty_serch=StringVar()

        self.var_civil_3rd_saturday_number_of_class2=StringVar()
        self.var_civil_3rd_saturday_time1=StringVar()
        self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject1=StringVar()
        self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_civil_3rd_saturday_faculty_serch=StringVar()


        self.var_eee_3rd_monday_number_of_class1=StringVar()
        self.var_eee_3rd_monday_time1=StringVar()
        self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject1=StringVar()
        self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_eee_3rd_monday_faculty_serch=StringVar()

        self.var_eee_3rd_thuesday_number_of_class2=StringVar()
        self.var_eee_3rd_thuesday_time1=StringVar()
        self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject1=StringVar()
        self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_eee_3rd_thuesday_faculty_serch=StringVar()

        self.var_eee_3rd_wednesday_number_of_class2=StringVar()
        self.var_eee_3rd_wednesday_time1=StringVar()
        self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject1=StringVar()
        self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_eee_3rd_wednesday_faculty_serch=StringVar()

        self.var_eee_3rd_thursday_number_of_class2=StringVar()
        self.var_eee_3rd_thursday_time1=StringVar()
        self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject1=StringVar()
        self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_eee_3rd_thursday_faculty_serch=StringVar()

        self.var_eee_3rd_friday_number_of_class2=StringVar()
        self.var_eee_3rd_friday_time1=StringVar()
        self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject1=StringVar()
        self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_eee_3rd_friday_faculty_serch=StringVar()

        self.var_eee_3rd_saturday_number_of_class2=StringVar()
        self.var_eee_3rd_saturday_time1=StringVar()
        self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject1=StringVar()
        self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_eee_3rd_saturday_faculty_serch=StringVar()
        
        self.var_ece_3rd_monday_number_of_class1=StringVar()
        self.var_ece_3rd_monday_time1=StringVar()
        self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject1=StringVar()
        self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_ece_3rd_monday_faculty_serch=StringVar()

        self.var_ece_3rd_thuesday_number_of_class2=StringVar()
        self.var_ece_3rd_thuesday_time1=StringVar()
        self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject1=StringVar()
        self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_ece_3rd_thuesday_faculty_serch=StringVar()

        self.var_ece_3rd_wednesday_number_of_class2=StringVar()
        self.var_ece_3rd_wednesday_time1=StringVar()
        self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject1=StringVar()
        self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_ece_3rd_wednesday_faculty_serch=StringVar()

        self.var_ece_3rd_thursday_number_of_class2=StringVar()
        self.var_ece_3rd_thursday_time1=StringVar()
        self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject1=StringVar()
        self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_ece_3rd_thursday_faculty_serch=StringVar()

        self.var_ece_3rd_friday_number_of_class2=StringVar()
        self.var_ece_3rd_friday_time1=StringVar()
        self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject1=StringVar()
        self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_ece_3rd_friday_faculty_serch=StringVar()

        self.var_ece_3rd_saturday_number_of_class2=StringVar()
        self.var_ece_3rd_saturday_time1=StringVar()
        self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject1=StringVar()
        self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_ece_3rd_saturday_faculty_serch=StringVar()

        self.var_cs_3rd_monday_number_of_class1=StringVar()
        self.var_cs_3rd_monday_time1=StringVar()
        self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject1=StringVar()
        self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_cs_3rd_monday_faculty_serch=StringVar()

        self.var_cs_3rd_thuesday_number_of_class2=StringVar()
        self.var_cs_3rd_thuesday_time1=StringVar()
        self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject1=StringVar()
        self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_cs_3rd_thuesday_faculty_serch=StringVar()

        self.var_cs_3rd_wednesday_number_of_class2=StringVar()
        self.var_cs_3rd_wednesday_time1=StringVar()
        self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject1=StringVar()
        self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_cs_3rd_wednesday_faculty_serch=StringVar()

        self.var_cs_3rd_thursday_number_of_class2=StringVar()
        self.var_cs_3rd_thursday_time1=StringVar()
        self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject1=StringVar()
        self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_cs_3rd_thursday_faculty_serch=StringVar()

        self.var_cs_3rd_friday_number_of_class2=StringVar()
        self.var_cs_3rd_friday_time1=StringVar()
        self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject1=StringVar()
        self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_cs_3rd_friday_faculty_serch=StringVar()

        self.var_cs_3rd_saturday_number_of_class2=StringVar()
        self.var_cs_3rd_saturday_time1=StringVar()
        self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject1=StringVar()
        self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_cs_3rd_saturday_faculty_serch=StringVar()


        self.var_ise_3rd_monday_number_of_class1=StringVar()
        self.var_ise_3rd_monday_time1=StringVar()
        self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject1=StringVar()
        self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_ise_3rd_monday_faculty_serch=StringVar()

        self.var_ise_3rd_thuesday_number_of_class2=StringVar()
        self.var_ise_3rd_thuesday_time1=StringVar()
        self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject1=StringVar()
        self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_ise_3rd_thuesday_faculty_serch=StringVar()

        self.var_ise_3rd_wednesday_number_of_class2=StringVar()
        self.var_ise_3rd_wednesday_time1=StringVar()
        self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject1=StringVar()
        self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_ise_3rd_wednesday_faculty_serch=StringVar()

        self.var_ise_3rd_thursday_number_of_class2=StringVar()
        self.var_ise_3rd_thursday_time1=StringVar()
        self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject1=StringVar()
        self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_ise_3rd_thursday_faculty_serch=StringVar()

        self.var_ise_3rd_friday_number_of_class2=StringVar()
        self.var_ise_3rd_friday_time1=StringVar()
        self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject1=StringVar()
        self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_ise_3rd_friday_faculty_serch=StringVar()

        self.var_ise_3rd_saturday_number_of_class2=StringVar()
        self.var_ise_3rd_saturday_time1=StringVar()
        self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject1=StringVar()
        self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_ise_3rd_saturday_faculty_serch=StringVar()

        self.var_ete_3rd_monday_number_of_class1=StringVar()
        self.var_ete_3rd_monday_time1=StringVar()
        self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject1=StringVar()
        self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_ete_3rd_monday_faculty_serch=StringVar()

        self.var_ete_3rd_thuesday_number_of_class2=StringVar()
        self.var_ete_3rd_thuesday_time1=StringVar()
        self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject1=StringVar()
        self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_ete_3rd_thuesday_faculty_serch=StringVar()

        self.var_ete_3rd_wednesday_number_of_class2=StringVar()
        self.var_ete_3rd_wednesday_time1=StringVar()
        self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject1=StringVar()
        self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_ete_3rd_wednesday_faculty_serch=StringVar()

        self.var_ete_3rd_thursday_number_of_class2=StringVar()
        self.var_ete_3rd_thursday_time1=StringVar()
        self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject1=StringVar()
        self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_ete_3rd_thursday_faculty_serch=StringVar()

        self.var_ete_3rd_friday_number_of_class2=StringVar()
        self.var_ete_3rd_friday_time1=StringVar()
        self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject1=StringVar()
        self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_ete_3rd_friday_faculty_serch=StringVar()

        self.var_ete_3rd_saturday_number_of_class2=StringVar()
        self.var_ete_3rd_saturday_time1=StringVar()
        self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject1=StringVar()
        self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject_faculty1=StringVar()
        self.var_ete_3rd_saturday_faculty_serch=StringVar()
        ########################################################################################################################################################################
        self.var_civil_4th_monday_number_of_class1=StringVar()
        self.var_civil_4th_monday_time1=StringVar()
        self.var_civil_4th_monday_civil_4thmistry_cycle_subject1=StringVar()
        self.var_civil_4th_monday_civil_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_civil_4th_monday_faculty_serch=StringVar()

        self.var_civil_4th_thuesday_number_of_class2=StringVar()
        self.var_civil_4th_thuesday_time1=StringVar()
        self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject1=StringVar()
        self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_civil_4th_thuesday_faculty_serch=StringVar()

        self.var_civil_4th_wednesday_number_of_class2=StringVar()
        self.var_civil_4th_wednesday_time1=StringVar()
        self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject1=StringVar()
        self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_civil_4th_wednesday_faculty_serch=StringVar()

        self.var_civil_4th_thursday_number_of_class2=StringVar()
        self.var_civil_4th_thursday_time1=StringVar()
        self.var_civil_4th_thursday_civil_4thmistry_cycle_subject1=StringVar()
        self.var_civil_4th_thursday_civil_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_civil_4th_thursday_faculty_serch=StringVar()

        self.var_civil_4th_friday_number_of_class2=StringVar()
        self.var_civil_4th_friday_time1=StringVar()
        self.var_civil_4th_friday_civil_4thmistry_cycle_subject1=StringVar()
        self.var_civil_4th_friday_civil_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_civil_4th_friday_faculty_serch=StringVar()

        self.var_civil_4th_saturday_number_of_class2=StringVar()
        self.var_civil_4th_saturday_time1=StringVar()
        self.var_civil_4th_saturday_civil_4thmistry_cycle_subject1=StringVar()
        self.var_civil_4th_saturday_civil_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_civil_4th_saturday_faculty_serch=StringVar()


        self.var_eee_4th_monday_number_of_class1=StringVar()
        self.var_eee_4th_monday_time1=StringVar()
        self.var_eee_4th_monday_eee_4thmistry_cycle_subject1=StringVar()
        self.var_eee_4th_monday_eee_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_eee_4th_monday_faculty_serch=StringVar()

        self.var_eee_4th_thuesday_number_of_class2=StringVar()
        self.var_eee_4th_thuesday_time1=StringVar()
        self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject1=StringVar()
        self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_eee_4th_thuesday_faculty_serch=StringVar()

        self.var_eee_4th_wednesday_number_of_class2=StringVar()
        self.var_eee_4th_wednesday_time1=StringVar()
        self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject1=StringVar()
        self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_eee_4th_wednesday_faculty_serch=StringVar()

        self.var_eee_4th_thursday_number_of_class2=StringVar()
        self.var_eee_4th_thursday_time1=StringVar()
        self.var_eee_4th_thursday_eee_4thmistry_cycle_subject1=StringVar()
        self.var_eee_4th_thursday_eee_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_eee_4th_thursday_faculty_serch=StringVar()

        self.var_eee_4th_friday_number_of_class2=StringVar()
        self.var_eee_4th_friday_time1=StringVar()
        self.var_eee_4th_friday_eee_4thmistry_cycle_subject1=StringVar()
        self.var_eee_4th_friday_eee_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_eee_4th_friday_faculty_serch=StringVar()

        self.var_eee_4th_saturday_number_of_class2=StringVar()
        self.var_eee_4th_saturday_time1=StringVar()
        self.var_eee_4th_saturday_eee_4thmistry_cycle_subject1=StringVar()
        self.var_eee_4th_saturday_eee_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_eee_4th_saturday_faculty_serch=StringVar()
        
        self.var_ece_4th_monday_number_of_class1=StringVar()
        self.var_ece_4th_monday_time1=StringVar()
        self.var_ece_4th_monday_ece_4thmistry_cycle_subject1=StringVar()
        self.var_ece_4th_monday_ece_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_ece_4th_monday_faculty_serch=StringVar()

        self.var_ece_4th_thuesday_number_of_class2=StringVar()
        self.var_ece_4th_thuesday_time1=StringVar()
        self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject1=StringVar()
        self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_ece_4th_thuesday_faculty_serch=StringVar()

        self.var_ece_4th_wednesday_number_of_class2=StringVar()
        self.var_ece_4th_wednesday_time1=StringVar()
        self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject1=StringVar()
        self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_ece_4th_wednesday_faculty_serch=StringVar()

        self.var_ece_4th_thursday_number_of_class2=StringVar()
        self.var_ece_4th_thursday_time1=StringVar()
        self.var_ece_4th_thursday_ece_4thmistry_cycle_subject1=StringVar()
        self.var_ece_4th_thursday_ece_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_ece_4th_thursday_faculty_serch=StringVar()

        self.var_ece_4th_friday_number_of_class2=StringVar()
        self.var_ece_4th_friday_time1=StringVar()
        self.var_ece_4th_friday_ece_4thmistry_cycle_subject1=StringVar()
        self.var_ece_4th_friday_ece_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_ece_4th_friday_faculty_serch=StringVar()

        self.var_ece_4th_saturday_number_of_class2=StringVar()
        self.var_ece_4th_saturday_time1=StringVar()
        self.var_ece_4th_saturday_ece_4thmistry_cycle_subject1=StringVar()
        self.var_ece_4th_saturday_ece_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_ece_4th_saturday_faculty_serch=StringVar()

        self.var_cs_4th_monday_number_of_class1=StringVar()
        self.var_cs_4th_monday_time1=StringVar()
        self.var_cs_4th_monday_cs_4thmistry_cycle_subject1=StringVar()
        self.var_cs_4th_monday_cs_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_cs_4th_monday_faculty_serch=StringVar()

        self.var_cs_4th_thuesday_number_of_class2=StringVar()
        self.var_cs_4th_thuesday_time1=StringVar()
        self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject1=StringVar()
        self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_cs_4th_thuesday_faculty_serch=StringVar()

        self.var_cs_4th_wednesday_number_of_class2=StringVar()
        self.var_cs_4th_wednesday_time1=StringVar()
        self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject1=StringVar()
        self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_cs_4th_wednesday_faculty_serch=StringVar()

        self.var_cs_4th_thursday_number_of_class2=StringVar()
        self.var_cs_4th_thursday_time1=StringVar()
        self.var_cs_4th_thursday_cs_4thmistry_cycle_subject1=StringVar()
        self.var_cs_4th_thursday_cs_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_cs_4th_thursday_faculty_serch=StringVar()

        self.var_cs_4th_friday_number_of_class2=StringVar()
        self.var_cs_4th_friday_time1=StringVar()
        self.var_cs_4th_friday_cs_4thmistry_cycle_subject1=StringVar()
        self.var_cs_4th_friday_cs_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_cs_4th_friday_faculty_serch=StringVar()

        self.var_cs_4th_saturday_number_of_class2=StringVar()
        self.var_cs_4th_saturday_time1=StringVar()
        self.var_cs_4th_saturday_cs_4thmistry_cycle_subject1=StringVar()
        self.var_cs_4th_saturday_cs_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_cs_4th_saturday_faculty_serch=StringVar()


        self.var_ise_4th_monday_number_of_class1=StringVar()
        self.var_ise_4th_monday_time1=StringVar()
        self.var_ise_4th_monday_ise_4thmistry_cycle_subject1=StringVar()
        self.var_ise_4th_monday_ise_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_ise_4th_monday_faculty_serch=StringVar()

        self.var_ise_4th_thuesday_number_of_class2=StringVar()
        self.var_ise_4th_thuesday_time1=StringVar()
        self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject1=StringVar()
        self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_ise_4th_thuesday_faculty_serch=StringVar()

        self.var_ise_4th_wednesday_number_of_class2=StringVar()
        self.var_ise_4th_wednesday_time1=StringVar()
        self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject1=StringVar()
        self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_ise_4th_wednesday_faculty_serch=StringVar()

        self.var_ise_4th_thursday_number_of_class2=StringVar()
        self.var_ise_4th_thursday_time1=StringVar()
        self.var_ise_4th_thursday_ise_4thmistry_cycle_subject1=StringVar()
        self.var_ise_4th_thursday_ise_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_ise_4th_thursday_faculty_serch=StringVar()

        self.var_ise_4th_friday_number_of_class2=StringVar()
        self.var_ise_4th_friday_time1=StringVar()
        self.var_ise_4th_friday_ise_4thmistry_cycle_subject1=StringVar()
        self.var_ise_4th_friday_ise_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_ise_4th_friday_faculty_serch=StringVar()

        self.var_ise_4th_saturday_number_of_class2=StringVar()
        self.var_ise_4th_saturday_time1=StringVar()
        self.var_ise_4th_saturday_ise_4thmistry_cycle_subject1=StringVar()
        self.var_ise_4th_saturday_ise_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_ise_4th_saturday_faculty_serch=StringVar()

        self.var_ete_4th_monday_number_of_class1=StringVar()
        self.var_ete_4th_monday_time1=StringVar()
        self.var_ete_4th_monday_ete_4thmistry_cycle_subject1=StringVar()
        self.var_ete_4th_monday_ete_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_ete_4th_monday_faculty_serch=StringVar()

        self.var_ete_4th_thuesday_number_of_class2=StringVar()
        self.var_ete_4th_thuesday_time1=StringVar()
        self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject1=StringVar()
        self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_ete_4th_thuesday_faculty_serch=StringVar()

        self.var_ete_4th_wednesday_number_of_class2=StringVar()
        self.var_ete_4th_wednesday_time1=StringVar()
        self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject1=StringVar()
        self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_ete_4th_wednesday_faculty_serch=StringVar()

        self.var_ete_4th_thursday_number_of_class2=StringVar()
        self.var_ete_4th_thursday_time1=StringVar()
        self.var_ete_4th_thursday_ete_4thmistry_cycle_subject1=StringVar()
        self.var_ete_4th_thursday_ete_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_ete_4th_thursday_faculty_serch=StringVar()

        self.var_ete_4th_friday_number_of_class2=StringVar()
        self.var_ete_4th_friday_time1=StringVar()
        self.var_ete_4th_friday_ete_4thmistry_cycle_subject1=StringVar()
        self.var_ete_4th_friday_ete_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_ete_4th_friday_faculty_serch=StringVar()

        self.var_ete_4th_saturday_number_of_class2=StringVar()
        self.var_ete_4th_saturday_time1=StringVar()
        self.var_ete_4th_saturday_ete_4thmistry_cycle_subject1=StringVar()
        self.var_ete_4th_saturday_ete_4thmistry_cycle_subject_faculty1=StringVar()
        self.var_ete_4th_saturday_faculty_serch=StringVar()

        ########################################################################################################################################################################
        self.var_civil_5th_monday_number_of_class1=StringVar()
        self.var_civil_5th_monday_time1=StringVar()
        self.var_civil_5th_monday_civil_5thmistry_cycle_subject1=StringVar()
        self.var_civil_5th_monday_civil_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_civil_5th_monday_faculty_serch=StringVar()

        self.var_civil_5th_thuesday_number_of_class2=StringVar()
        self.var_civil_5th_thuesday_time1=StringVar()
        self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject1=StringVar()
        self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_civil_5th_thuesday_faculty_serch=StringVar()

        self.var_civil_5th_wednesday_number_of_class2=StringVar()
        self.var_civil_5th_wednesday_time1=StringVar()
        self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject1=StringVar()
        self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_civil_5th_wednesday_faculty_serch=StringVar()

        self.var_civil_5th_thursday_number_of_class2=StringVar()
        self.var_civil_5th_thursday_time1=StringVar()
        self.var_civil_5th_thursday_civil_5thmistry_cycle_subject1=StringVar()
        self.var_civil_5th_thursday_civil_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_civil_5th_thursday_faculty_serch=StringVar()

        self.var_civil_5th_friday_number_of_class2=StringVar()
        self.var_civil_5th_friday_time1=StringVar()
        self.var_civil_5th_friday_civil_5thmistry_cycle_subject1=StringVar()
        self.var_civil_5th_friday_civil_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_civil_5th_friday_faculty_serch=StringVar()

        self.var_civil_5th_saturday_number_of_class2=StringVar()
        self.var_civil_5th_saturday_time1=StringVar()
        self.var_civil_5th_saturday_civil_5thmistry_cycle_subject1=StringVar()
        self.var_civil_5th_saturday_civil_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_civil_5th_saturday_faculty_serch=StringVar()


        self.var_eee_5th_monday_number_of_class1=StringVar()
        self.var_eee_5th_monday_time1=StringVar()
        self.var_eee_5th_monday_eee_5thmistry_cycle_subject1=StringVar()
        self.var_eee_5th_monday_eee_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_eee_5th_monday_faculty_serch=StringVar()

        self.var_eee_5th_thuesday_number_of_class2=StringVar()
        self.var_eee_5th_thuesday_time1=StringVar()
        self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject1=StringVar()
        self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_eee_5th_thuesday_faculty_serch=StringVar()

        self.var_eee_5th_wednesday_number_of_class2=StringVar()
        self.var_eee_5th_wednesday_time1=StringVar()
        self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject1=StringVar()
        self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_eee_5th_wednesday_faculty_serch=StringVar()

        self.var_eee_5th_thursday_number_of_class2=StringVar()
        self.var_eee_5th_thursday_time1=StringVar()
        self.var_eee_5th_thursday_eee_5thmistry_cycle_subject1=StringVar()
        self.var_eee_5th_thursday_eee_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_eee_5th_thursday_faculty_serch=StringVar()

        self.var_eee_5th_friday_number_of_class2=StringVar()
        self.var_eee_5th_friday_time1=StringVar()
        self.var_eee_5th_friday_eee_5thmistry_cycle_subject1=StringVar()
        self.var_eee_5th_friday_eee_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_eee_5th_friday_faculty_serch=StringVar()

        self.var_eee_5th_saturday_number_of_class2=StringVar()
        self.var_eee_5th_saturday_time1=StringVar()
        self.var_eee_5th_saturday_eee_5thmistry_cycle_subject1=StringVar()
        self.var_eee_5th_saturday_eee_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_eee_5th_saturday_faculty_serch=StringVar()
        
        self.var_ece_5th_monday_number_of_class1=StringVar()
        self.var_ece_5th_monday_time1=StringVar()
        self.var_ece_5th_monday_ece_5thmistry_cycle_subject1=StringVar()
        self.var_ece_5th_monday_ece_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_ece_5th_monday_faculty_serch=StringVar()

        self.var_ece_5th_thuesday_number_of_class2=StringVar()
        self.var_ece_5th_thuesday_time1=StringVar()
        self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject1=StringVar()
        self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_ece_5th_thuesday_faculty_serch=StringVar()

        self.var_ece_5th_wednesday_number_of_class2=StringVar()
        self.var_ece_5th_wednesday_time1=StringVar()
        self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject1=StringVar()
        self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_ece_5th_wednesday_faculty_serch=StringVar()

        self.var_ece_5th_thursday_number_of_class2=StringVar()
        self.var_ece_5th_thursday_time1=StringVar()
        self.var_ece_5th_thursday_ece_5thmistry_cycle_subject1=StringVar()
        self.var_ece_5th_thursday_ece_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_ece_5th_thursday_faculty_serch=StringVar()

        self.var_ece_5th_friday_number_of_class2=StringVar()
        self.var_ece_5th_friday_time1=StringVar()
        self.var_ece_5th_friday_ece_5thmistry_cycle_subject1=StringVar()
        self.var_ece_5th_friday_ece_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_ece_5th_friday_faculty_serch=StringVar()

        self.var_ece_5th_saturday_number_of_class2=StringVar()
        self.var_ece_5th_saturday_time1=StringVar()
        self.var_ece_5th_saturday_ece_5thmistry_cycle_subject1=StringVar()
        self.var_ece_5th_saturday_ece_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_ece_5th_saturday_faculty_serch=StringVar()

        self.var_cs_5th_monday_number_of_class1=StringVar()
        self.var_cs_5th_monday_time1=StringVar()
        self.var_cs_5th_monday_cs_5thmistry_cycle_subject1=StringVar()
        self.var_cs_5th_monday_cs_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_cs_5th_monday_faculty_serch=StringVar()

        self.var_cs_5th_thuesday_number_of_class2=StringVar()
        self.var_cs_5th_thuesday_time1=StringVar()
        self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject1=StringVar()
        self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_cs_5th_thuesday_faculty_serch=StringVar()

        self.var_cs_5th_wednesday_number_of_class2=StringVar()
        self.var_cs_5th_wednesday_time1=StringVar()
        self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject1=StringVar()
        self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_cs_5th_wednesday_faculty_serch=StringVar()

        self.var_cs_5th_thursday_number_of_class2=StringVar()
        self.var_cs_5th_thursday_time1=StringVar()
        self.var_cs_5th_thursday_cs_5thmistry_cycle_subject1=StringVar()
        self.var_cs_5th_thursday_cs_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_cs_5th_thursday_faculty_serch=StringVar()

        self.var_cs_5th_friday_number_of_class2=StringVar()
        self.var_cs_5th_friday_time1=StringVar()
        self.var_cs_5th_friday_cs_5thmistry_cycle_subject1=StringVar()
        self.var_cs_5th_friday_cs_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_cs_5th_friday_faculty_serch=StringVar()

        self.var_cs_5th_saturday_number_of_class2=StringVar()
        self.var_cs_5th_saturday_time1=StringVar()
        self.var_cs_5th_saturday_cs_5thmistry_cycle_subject1=StringVar()
        self.var_cs_5th_saturday_cs_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_cs_5th_saturday_faculty_serch=StringVar()


        self.var_ise_5th_monday_number_of_class1=StringVar()
        self.var_ise_5th_monday_time1=StringVar()
        self.var_ise_5th_monday_ise_5thmistry_cycle_subject1=StringVar()
        self.var_ise_5th_monday_ise_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_ise_5th_monday_faculty_serch=StringVar()

        self.var_ise_5th_thuesday_number_of_class2=StringVar()
        self.var_ise_5th_thuesday_time1=StringVar()
        self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject1=StringVar()
        self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_ise_5th_thuesday_faculty_serch=StringVar()

        self.var_ise_5th_wednesday_number_of_class2=StringVar()
        self.var_ise_5th_wednesday_time1=StringVar()
        self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject1=StringVar()
        self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_ise_5th_wednesday_faculty_serch=StringVar()

        self.var_ise_5th_thursday_number_of_class2=StringVar()
        self.var_ise_5th_thursday_time1=StringVar()
        self.var_ise_5th_thursday_ise_5thmistry_cycle_subject1=StringVar()
        self.var_ise_5th_thursday_ise_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_ise_5th_thursday_faculty_serch=StringVar()

        self.var_ise_5th_friday_number_of_class2=StringVar()
        self.var_ise_5th_friday_time1=StringVar()
        self.var_ise_5th_friday_ise_5thmistry_cycle_subject1=StringVar()
        self.var_ise_5th_friday_ise_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_ise_5th_friday_faculty_serch=StringVar()

        self.var_ise_5th_saturday_number_of_class2=StringVar()
        self.var_ise_5th_saturday_time1=StringVar()
        self.var_ise_5th_saturday_ise_5thmistry_cycle_subject1=StringVar()
        self.var_ise_5th_saturday_ise_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_ise_5th_saturday_faculty_serch=StringVar()

        self.var_ete_5th_monday_number_of_class1=StringVar()
        self.var_ete_5th_monday_time1=StringVar()
        self.var_ete_5th_monday_ete_5thmistry_cycle_subject1=StringVar()
        self.var_ete_5th_monday_ete_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_ete_5th_monday_faculty_serch=StringVar()

        self.var_ete_5th_thuesday_number_of_class2=StringVar()
        self.var_ete_5th_thuesday_time1=StringVar()
        self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject1=StringVar()
        self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_ete_5th_thuesday_faculty_serch=StringVar()

        self.var_ete_5th_wednesday_number_of_class2=StringVar()
        self.var_ete_5th_wednesday_time1=StringVar()
        self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject1=StringVar()
        self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_ete_5th_wednesday_faculty_serch=StringVar()

        self.var_ete_5th_thursday_number_of_class2=StringVar()
        self.var_ete_5th_thursday_time1=StringVar()
        self.var_ete_5th_thursday_ete_5thmistry_cycle_subject1=StringVar()
        self.var_ete_5th_thursday_ete_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_ete_5th_thursday_faculty_serch=StringVar()

        self.var_ete_5th_friday_number_of_class2=StringVar()
        self.var_ete_5th_friday_time1=StringVar()
        self.var_ete_5th_friday_ete_5thmistry_cycle_subject1=StringVar()
        self.var_ete_5th_friday_ete_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_ete_5th_friday_faculty_serch=StringVar()

        self.var_ete_5th_saturday_number_of_class2=StringVar()
        self.var_ete_5th_saturday_time1=StringVar()
        self.var_ete_5th_saturday_ete_5thmistry_cycle_subject1=StringVar()
        self.var_ete_5th_saturday_ete_5thmistry_cycle_subject_faculty1=StringVar()
        self.var_ete_5th_saturday_faculty_serch=StringVar()

        top_label=tk.Label(self.root,text='Time Table.',font=('Bahnschrift',20),fg='white',bg='#033054')
        top_label.place(x=0,y=0,relwidth=1,height=40)

        menu_frame=tk.LabelFrame(self.root,text='Menu',font=('times now roman',10,'bold'),fg='#262626',bg='white')
        menu_frame.place(x=10,y=45,width=1035,height=55)

        self.sem_select=ttk.Combobox(menu_frame,width=30,textvariable=self.var_sem_select,state='readonly')
        self.sem_select.grid(row=0,column=0,padx=4,pady=3) 
        self.sem_select['values']=(
            'CHEMISTRY_cycle',
            'PHYSICS_cycle',
            '3rd_Semister',
            '4th_Semister',
            '5th_Semister',
            '6th_Semister',
            '7th_Semister',
            '8th_Semister'
        )
        #self.sem_select.bind("<<ButtonRelease-1>>", self.sem_select)

        branch_select=ttk.Combobox(menu_frame,width=30,textvariable=self.var_branch_select,state='readonly')
        branch_select.grid(row=0,column=1,padx=4,pady=3)
        branch_select['values']=(
                                    '1st_years_1st_semister',
                                    '1st_years_2nd_semister',
                                    'Civil_Engineering',
                                    'Mechanical_Engineering',
                                    'Electrical_And_Electronic_Engineering',
                                    'Electronic_And_Communication_Engineering',
                                    'Computer_Science_Engineering',
                                    'Information_Science_and_Engineering',
                                    'Electronic_And_Telecommunication_Engineering'
                                    

        )
        day_select=ttk.Combobox(menu_frame,width=30,textvariable=self.var_day_select,state='readonly')
        day_select.grid(row=0,column=2,padx=4,pady=3)
        day_select['values']=(
            'Monday',
            'Thuesday',
            'Wednesday',
            'Thursday',
            'Friday',
            'Saturday'
        )
        #entry=ttk.Entry(menu_frame,width=50,textvariable=self.var_day_serch).grid(row=0,column=1,padx=15,pady=3)
        button2=ttk.Button(menu_frame,text='Serach',width=15,command=self.display_time_table).grid(row=0,column=3,padx=4,pady=3)
        button2=ttk.Button(menu_frame,text='Add Database',width=13).grid(row=0,column=4,padx=4,pady=3)
        button2=ttk.Button(menu_frame,text='Update',width=13).grid(row=0,column=5,padx=4,pady=3)
        button2=ttk.Button(menu_frame,text='Show',width=13).grid(row=0,column=6,padx=4,pady=3)
    def display_time_table(self):
        print("working")
        
        print(self.var_sem_select.get()+'      '+self.var_branch_select.get()+'      '+self.var_day_select.get())
        if self.var_sem_select.get() == 'CHEMISTRY_cycle':
            if self.var_branch_select.get() == '1st_years_1st_semister':
                if self.var_day_select.get() == 'Monday':
                
                  
                    #print('this time table is for chemistry cycle in civil engineering mondy')
                    table_frame1=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame1.place(x=10,y=120)

                    label_day=Label(table_frame1,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame1,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_che_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame1)
                        else:
                            if self.var_che_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame1)
                            else:
                                if self.var_che_monday_chemistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame1)
                                else:
                                    if self.var_che_monday_chemistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame1)
                                    else:
                                        cur.execute('insert into che_monday_time_table_database(day1,che_monday_total_number_of_class,che_monday_time,che_monday_subject,che_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_che_monday_number_of_class1.get(),
                                            self.var_che_monday_time1.get(),
                                            self.var_che_monday_chemistry_cycle_subject1.get(),
                                            self.var_che_monday_chemistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame1)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from che_monday_time_table_database')
                            rows=cur.fetchall()
                            self.che_monday_time_table.delete(*self.che_monday_time_table.get_children())
                            for row in rows:
                                self.che_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame1)
                    def che_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_che_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame1)
                            else:
                                cur.execute(f"select * from che_monday_time_table_database where che_monday_subject LIKE '%{self.var_che_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.che_monday_time_table.delete(*self.che_monday_time_table.get_children())
                                for row in rows:
                                    self.che_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame1)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_che_monday_chemistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame1)
                            else:
                                cur.execute("select * from che_monday_time_table_database where che_monday_subject=%s",(self.var_che_monday_chemistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame1)
                                else:
                                    cur.execute("update che_monday_time_table_database set che_monday_total_number_of_class=%s,che_monday_time=%s,che_monday_faculty=%s where che_monday_subject=%s",(
                                        
                                        self.var_che_monday_number_of_class1.get(),
                                        self.var_che_monday_time1.get(),
                                        self.var_che_monday_chemistry_cycle_subject_faculty1.get(),
                                        self.var_che_monday_chemistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame1)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame1)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_che_monday_chemistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame1)
                            else:
                                cur.execute("select * from che_monday_time_table_database where che_monday_subject=%s",(self.var_che_monday_chemistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame1)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame1)
                                    if option==True:
                                        cur.execute('delete from che_monday_time_table_database where che_monday_subject=%s',(self.var_che_monday_chemistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame1)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame1)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_che_monday_faculty_serch.set("")
                        self.var_che_monday_number_of_class1.set("")
                        self.var_che_monday_time1.set("")
                        self.var_che_monday_chemistry_cycle_subject1.set("")
                        self.var_che_monday_chemistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame1)

                    def che_monday_time_table_get(ev):
                        monday_chemistry_cycle_subject1.config(state='readonly')
                        r1=self.che_monday_time_table.focus()
                        content1=self.che_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_che_monday_number_of_class1.set(row1[2])
                        self.var_che_monday_time1.set(row1[3])
                        self.var_che_monday_chemistry_cycle_subject1.set(row1[4])
                        self.var_che_monday_chemistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame1)

                    ##################################################################################################################################################
                    self.monday_che_time_table_data_frame=Frame(table_frame1,width=900,height=150,relief=GROOVE)
                    self.monday_che_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_che_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_che_time_table_data_frame,orient=VERTICAL)
                    self.che_monday_time_table=ttk.Treeview(self.monday_che_time_table_data_frame,columns=('cid','day1','che_monday_total_number_of_class','che_monday_time','che_monday_subject','che_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.che_monday_time_table.xview)
                    scrolly.configure(command=self.che_monday_time_table.yview)

                    self.che_monday_time_table.heading('cid',text='Serial No')
                    self.che_monday_time_table.heading('day1',text='Day')
                    self.che_monday_time_table.heading('che_monday_total_number_of_class',text='Totel class')
                    self.che_monday_time_table.heading('che_monday_time',text='class time')
                    self.che_monday_time_table.heading('che_monday_subject',text='Subject')
                    self.che_monday_time_table.heading('che_monday_faculty',text='Faculty')

                    self.che_monday_time_table.column('cid',width=100)
                    self.che_monday_time_table.column('day1',width=150)
                    self.che_monday_time_table.column('che_monday_total_number_of_class',width=100)
                    self.che_monday_time_table.column('che_monday_time',width=150)
                    self.che_monday_time_table.column('che_monday_subject',width=150)
                    self.che_monday_time_table.column('che_monday_faculty',width=150)

                    self.che_monday_time_table['show']='headings'

                    self.che_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.che_monday_time_table.bind('<ButtonRelease-1>',che_monday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame1,width=30,textvariable=self.var_che_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame1,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame1,width=25,textvariable=self.var_che_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame1,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_che_subject_list=[]
                    self.fetch_che_faculty_subject()
                    monday_chemistry_cycle_subject1=ttk.Combobox(table_frame1,width=25,textvariable=self.var_che_monday_chemistry_cycle_subject1,state='readonly',values=self.faculty_che_subject_list)
                    monday_chemistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame1,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_che_name_list=[]
                    self.fetch_che_faculty_name()
                    monday_chemistry_cycle_subject_faculty1=ttk.Combobox(table_frame1,width=25,textvariable=self.var_che_monday_chemistry_cycle_subject_faculty1,state='readonly',values=self.faculty_che_name_list)
                    monday_chemistry_cycle_subject_faculty1.place(x=600,y=25)

                    che_faculty_serch1=ttk.Entry(table_frame1,width=20,textvariable=self.var_che_monday_faculty_serch)
                    che_faculty_serch1.place(x=800,y=25)
                    che_faculty_serch1_button=ttk.Button(table_frame1,text='Search',command=che_faculty_serch)
                    che_faculty_serch1_button.place(x=937,y=22)
                    che_add_database=ttk.Button(table_frame1,text='add database',command=add_monday_class_time_table,width=30)
                    che_add_database.place(x=10,y=140)

                    che_update_database=ttk.Button(table_frame1,text='update',command=update_monday_class_time_table,width=30)
                    che_update_database.place(x=10,y=170)

                    che_delete_database=ttk.Button(table_frame1,text='delete',command=delete_monday_class_time_table,width=30)
                    che_delete_database.place(x=10,y=200)

                    che_clear_database=ttk.Button(table_frame1,text='clear',command=clear_monday_class_time_table,width=30)
                    che_clear_database.place(x=10,y=230)

                    ###############################################################################################################################
        if self.var_sem_select.get() == 'CHEMISTRY_cycle':
            if self.var_branch_select.get() == '1st_years_1st_semister':
                if self.var_day_select.get() == 'Thuesday':
                
                  
                    #print('this time table is for chemistry cycle in civil engineering mondy')
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_che_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_che_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_che_thuesday_chemistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_che_thuesday_chemistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into che_thuesday_time_table_database(day1,che_thuesday_total_number_of_class,che_thuesday_time,che_thuesday_subject,che_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_che_thuesday_number_of_class2.get(),
                                            self.var_che_thuesday_time1.get(),
                                            self.var_che_thuesday_chemistry_cycle_subject1.get(),
                                            self.var_che_thuesday_chemistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from che_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.che_thuesday_time_table.delete(*self.che_thuesday_time_table.get_children())
                            for row in rows:
                                self.che_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def che_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_che_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from che_thuesday_time_table_database where che_thuesday_subject LIKE '%{self.var_che_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.che_thuesday_time_table.delete(*self.che_thuesday_time_table.get_children())
                                for row in rows:
                                    self.che_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_che_thuesday_chemistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from che_thuesday_time_table_database where che_thuesday_subject=%s",(self.var_che_thuesday_chemistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update che_thuesday_time_table_database set che_thuesday_total_number_of_class=%s,che_thuesday_time=%s,che_thuesday_faculty=%s where che_thuesday_subject=%s",(
                                        
                                        self.var_che_thuesday_number_of_class2.get(),
                                        self.var_che_thuesday_time1.get(),
                                        self.var_che_thuesday_chemistry_cycle_subject_faculty1.get(),
                                        self.var_che_thuesday_chemistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_che_thuesday_chemistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from che_thuesday_time_table_database where che_thuesday_subject=%s",(self.var_che_thuesday_chemistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from che_thuesday_time_table_database where che_thuesday_subject=%s',(self.var_che_thuesday_chemistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_che_thuesday_faculty_serch.set("")
                        self.var_che_thuesday_number_of_class2.set("")
                        self.var_che_thuesday_time1.set("")
                        self.var_che_thuesday_chemistry_cycle_subject1.set("")
                        self.var_che_thuesday_chemistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def che_thuesday_time_table_get(ev):
                        thuesday_chemistry_cycle_subject1.config(state='readonly')
                        r1=self.che_thuesday_time_table.focus()
                        content1=self.che_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_che_thuesday_number_of_class2.set(row1[2])
                        self.var_che_thuesday_time1.set(row1[3])
                        self.var_che_thuesday_chemistry_cycle_subject1.set(row1[4])
                        self.var_che_thuesday_chemistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    ##################################################################################################################################################
                    self.thuesday_che_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_che_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_che_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_che_time_table_data_frame,orient=VERTICAL)
                    self.che_thuesday_time_table=ttk.Treeview(self.thuesday_che_time_table_data_frame,columns=('cid','day1','che_thuesday_total_number_of_class','che_thuesday_time','che_thuesday_subject','che_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.che_thuesday_time_table.xview)
                    scrolly.configure(command=self.che_thuesday_time_table.yview)

                    self.che_thuesday_time_table.heading('cid',text='Serial No')
                    self.che_thuesday_time_table.heading('day1',text='Day')
                    self.che_thuesday_time_table.heading('che_thuesday_total_number_of_class',text='Totel class')
                    self.che_thuesday_time_table.heading('che_thuesday_time',text='class time')
                    self.che_thuesday_time_table.heading('che_thuesday_subject',text='Subject')
                    self.che_thuesday_time_table.heading('che_thuesday_faculty',text='Faculty')

                    self.che_thuesday_time_table.column('cid',width=100)
                    self.che_thuesday_time_table.column('day1',width=150)
                    self.che_thuesday_time_table.column('che_thuesday_total_number_of_class',width=100)
                    self.che_thuesday_time_table.column('che_thuesday_time',width=150)
                    self.che_thuesday_time_table.column('che_thuesday_subject',width=150)
                    self.che_thuesday_time_table.column('che_thuesday_faculty',width=150)

                    self.che_thuesday_time_table['show']='headings'

                    self.che_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.che_thuesday_time_table.bind('<ButtonRelease-1>',che_thuesday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_che_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_che_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_che_subject_list=[]
                    self.fetch_che_faculty_subject()
                    thuesday_chemistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_che_thuesday_chemistry_cycle_subject1,state='readonly',values=self.faculty_che_subject_list)
                    thuesday_chemistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_che_name_list=[]
                    self.fetch_che_faculty_name()
                    thuesday_chemistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_che_thuesday_chemistry_cycle_subject_faculty1,state='readonly',values=self.faculty_che_name_list)
                    thuesday_chemistry_cycle_subject_faculty1.place(x=600,y=25)

                    che_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_che_thuesday_faculty_serch)
                    che_faculty_serch1.place(x=800,y=25)
                    che_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=che_faculty_serch)
                    che_faculty_serch1_button.place(x=937,y=22)
                    che_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    che_add_database.place(x=10,y=140)

                    che_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    che_update_database.place(x=10,y=170)

                    che_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    che_delete_database.place(x=10,y=200)

                    che_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    che_clear_database.place(x=10,y=230)

        if self.var_sem_select.get() == 'CHEMISTRY_cycle':
            if self.var_branch_select.get() == '1st_years_1st_semister':
                if self.var_day_select.get() == 'Wednesday':
                
                  
                    #print('this time table is for chemistry cycle in civil engineering mondy')
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_che_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_che_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_che_wednesday_chemistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_che_wednesday_chemistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into che_wednesday_time_table_database(day1,che_wednesday_total_number_of_class,che_wednesday_time,che_wednesday_subject,che_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_che_wednesday_number_of_class2.get(),
                                            self.var_che_wednesday_time1.get(),
                                            self.var_che_wednesday_chemistry_cycle_subject1.get(),
                                            self.var_che_wednesday_chemistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from che_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.che_wednesday_time_table.delete(*self.che_wednesday_time_table.get_children())
                            for row in rows:
                                self.che_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def che_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_che_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from che_wednesday_time_table_database where che_wednesday_subject LIKE '%{self.var_che_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.che_wednesday_time_table.delete(*self.che_wednesday_time_table.get_children())
                                for row in rows:
                                    self.che_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_che_wednesday_chemistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from che_wednesday_time_table_database where che_wednesday_subject=%s",(self.var_che_wednesday_chemistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update che_wednesday_time_table_database set che_wednesday_total_number_of_class=%s,che_wednesday_time=%s,che_wednesday_faculty=%s where che_wednesday_subject=%s",(
                                        
                                        self.var_che_wednesday_number_of_class2.get(),
                                        self.var_che_wednesday_time1.get(),
                                        self.var_che_wednesday_chemistry_cycle_subject_faculty1.get(),
                                        self.var_che_wednesday_chemistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_che_wednesday_chemistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from che_wednesday_time_table_database where che_wednesday_subject=%s",(self.var_che_wednesday_chemistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from che_wednesday_time_table_database where che_wednesday_subject=%s',(self.var_che_wednesday_chemistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_che_wednesday_faculty_serch.set("")
                        self.var_che_wednesday_number_of_class2.set("")
                        self.var_che_wednesday_time1.set("")
                        self.var_che_wednesday_chemistry_cycle_subject1.set("")
                        self.var_che_wednesday_chemistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def che_wednesday_time_table_get(ev):
                        wednesday_chemistry_cycle_subject1.config(state='readonly')
                        r1=self.che_wednesday_time_table.focus()
                        content1=self.che_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_che_wednesday_number_of_class2.set(row1[2])
                        self.var_che_wednesday_time1.set(row1[3])
                        self.var_che_wednesday_chemistry_cycle_subject1.set(row1[4])
                        self.var_che_wednesday_chemistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    ##################################################################################################################################################
                    self.wednesday_che_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_che_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_che_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_che_time_table_data_frame,orient=VERTICAL)
                    self.che_wednesday_time_table=ttk.Treeview(self.wednesday_che_time_table_data_frame,columns=('cid','day1','che_wednesday_total_number_of_class','che_wednesday_time','che_wednesday_subject','che_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.che_wednesday_time_table.xview)
                    scrolly.configure(command=self.che_wednesday_time_table.yview)

                    self.che_wednesday_time_table.heading('cid',text='Serial No')
                    self.che_wednesday_time_table.heading('day1',text='Day')
                    self.che_wednesday_time_table.heading('che_wednesday_total_number_of_class',text='Totel class')
                    self.che_wednesday_time_table.heading('che_wednesday_time',text='class time')
                    self.che_wednesday_time_table.heading('che_wednesday_subject',text='Subject')
                    self.che_wednesday_time_table.heading('che_wednesday_faculty',text='Faculty')

                    self.che_wednesday_time_table.column('cid',width=100)
                    self.che_wednesday_time_table.column('day1',width=150)
                    self.che_wednesday_time_table.column('che_wednesday_total_number_of_class',width=100)
                    self.che_wednesday_time_table.column('che_wednesday_time',width=150)
                    self.che_wednesday_time_table.column('che_wednesday_subject',width=150)
                    self.che_wednesday_time_table.column('che_wednesday_faculty',width=150)

                    self.che_wednesday_time_table['show']='headings'

                    self.che_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.che_wednesday_time_table.bind('<ButtonRelease-1>',che_wednesday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_che_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_che_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_che_subject_list=[]
                    self.fetch_che_faculty_subject()
                    wednesday_chemistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_che_wednesday_chemistry_cycle_subject1,state='readonly',values=self.faculty_che_subject_list)
                    wednesday_chemistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_che_name_list=[]
                    self.fetch_che_faculty_name()
                    wednesday_chemistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_che_wednesday_chemistry_cycle_subject_faculty1,state='readonly',values=self.faculty_che_name_list)
                    wednesday_chemistry_cycle_subject_faculty1.place(x=600,y=25)

                    che_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_che_wednesday_faculty_serch)
                    che_faculty_serch1.place(x=800,y=25)
                    che_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=che_faculty_serch)
                    che_faculty_serch1_button.place(x=937,y=22)
                    che_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    che_add_database.place(x=10,y=140)

                    che_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    che_update_database.place(x=10,y=170)

                    che_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    che_delete_database.place(x=10,y=200)

                    che_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    che_clear_database.place(x=10,y=230)

#######################################################################################################################################################################
        if self.var_sem_select.get() == 'CHEMISTRY_cycle':
            if self.var_branch_select.get() == '1st_years_1st_semister':
                if self.var_day_select.get() == 'Thursday':
                
                  
                    #print('this time table is for chemistry cycle in civil engineering mondy')
                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_che_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_che_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_che_thursday_chemistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_che_thursday_chemistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into che_thursday_time_table_database(day1,che_thursday_total_number_of_class,che_thursday_time,che_thursday_subject,che_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_che_thursday_number_of_class2.get(),
                                            self.var_che_thursday_time1.get(),
                                            self.var_che_thursday_chemistry_cycle_subject1.get(),
                                            self.var_che_thursday_chemistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from che_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.che_thursday_time_table.delete(*self.che_thursday_time_table.get_children())
                            for row in rows:
                                self.che_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def che_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_che_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from che_thursday_time_table_database where che_thursday_subject LIKE '%{self.var_che_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.che_thursday_time_table.delete(*self.che_thursday_time_table.get_children())
                                for row in rows:
                                    self.che_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_che_thursday_chemistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from che_thursday_time_table_database where che_thursday_subject=%s",(self.var_che_thursday_chemistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update che_thursday_time_table_database set che_thursday_total_number_of_class=%s,che_thursday_time=%s,che_thursday_faculty=%s where che_thursday_subject=%s",(
                                        
                                        self.var_che_thursday_number_of_class2.get(),
                                        self.var_che_thursday_time1.get(),
                                        self.var_che_thursday_chemistry_cycle_subject_faculty1.get(),
                                        self.var_che_thursday_chemistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_che_thursday_chemistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from che_thursday_time_table_database where che_thursday_subject=%s",(self.var_che_thursday_chemistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from che_thursday_time_table_database where che_thursday_subject=%s',(self.var_che_thursday_chemistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_che_thursday_faculty_serch.set("")
                        self.var_che_thursday_number_of_class2.set("")
                        self.var_che_thursday_time1.set("")
                        self.var_che_thursday_chemistry_cycle_subject1.set("")
                        self.var_che_thursday_chemistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def che_thursday_time_table_get(ev):
                        thursday_chemistry_cycle_subject1.config(state='readonly')
                        r1=self.che_thursday_time_table.focus()
                        content1=self.che_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_che_thursday_number_of_class2.set(row1[2])
                        self.var_che_thursday_time1.set(row1[3])
                        self.var_che_thursday_chemistry_cycle_subject1.set(row1[4])
                        self.var_che_thursday_chemistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    ##################################################################################################################################################
                    self.thursday_che_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_che_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_che_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_che_time_table_data_frame,orient=VERTICAL)
                    self.che_thursday_time_table=ttk.Treeview(self.thursday_che_time_table_data_frame,columns=('cid','day1','che_thursday_total_number_of_class','che_thursday_time','che_thursday_subject','che_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.che_thursday_time_table.xview)
                    scrolly.configure(command=self.che_thursday_time_table.yview)

                    self.che_thursday_time_table.heading('cid',text='Serial No')
                    self.che_thursday_time_table.heading('day1',text='Day')
                    self.che_thursday_time_table.heading('che_thursday_total_number_of_class',text='Totel class')
                    self.che_thursday_time_table.heading('che_thursday_time',text='class time')
                    self.che_thursday_time_table.heading('che_thursday_subject',text='Subject')
                    self.che_thursday_time_table.heading('che_thursday_faculty',text='Faculty')

                    self.che_thursday_time_table.column('cid',width=100)
                    self.che_thursday_time_table.column('day1',width=150)
                    self.che_thursday_time_table.column('che_thursday_total_number_of_class',width=100)
                    self.che_thursday_time_table.column('che_thursday_time',width=150)
                    self.che_thursday_time_table.column('che_thursday_subject',width=150)
                    self.che_thursday_time_table.column('che_thursday_faculty',width=150)

                    self.che_thursday_time_table['show']='headings'

                    self.che_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.che_thursday_time_table.bind('<ButtonRelease-1>',che_thursday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_che_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_che_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_che_subject_list=[]
                    self.fetch_che_faculty_subject()
                    thursday_chemistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_che_thursday_chemistry_cycle_subject1,state='readonly',values=self.faculty_che_subject_list)
                    thursday_chemistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_che_name_list=[]
                    self.fetch_che_faculty_name()
                    thursday_chemistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_che_thursday_chemistry_cycle_subject_faculty1,state='readonly',values=self.faculty_che_name_list)
                    thursday_chemistry_cycle_subject_faculty1.place(x=600,y=25)

                    che_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_che_thursday_faculty_serch)
                    che_faculty_serch1.place(x=800,y=25)
                    che_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=che_faculty_serch)
                    che_faculty_serch1_button.place(x=937,y=22)
                    che_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    che_add_database.place(x=10,y=140)

                    che_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    che_update_database.place(x=10,y=170)

                    che_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    che_delete_database.place(x=10,y=200)

                    che_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    che_clear_database.place(x=10,y=230)

##################################################################################################################################################################
        if self.var_sem_select.get() == 'CHEMISTRY_cycle':
            if self.var_branch_select.get() == '1st_years_1st_semister':
                if self.var_day_select.get() == 'Friday':
                
                  
                    #print('this time table is for chemistry cycle in civil engineering mondy')
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_che_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_che_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_che_friday_chemistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_che_friday_chemistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into che_friday_time_table_database(day1,che_friday_total_number_of_class,che_friday_time,che_friday_subject,che_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_che_friday_number_of_class2.get(),
                                            self.var_che_friday_time1.get(),
                                            self.var_che_friday_chemistry_cycle_subject1.get(),
                                            self.var_che_friday_chemistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from che_friday_time_table_database')
                            rows=cur.fetchall()
                            self.che_friday_time_table.delete(*self.che_friday_time_table.get_children())
                            for row in rows:
                                self.che_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def che_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_che_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from che_friday_time_table_database where che_friday_subject LIKE '%{self.var_che_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.che_friday_time_table.delete(*self.che_friday_time_table.get_children())
                                for row in rows:
                                    self.che_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_che_friday_chemistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from che_friday_time_table_database where che_friday_subject=%s",(self.var_che_friday_chemistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update che_friday_time_table_database set che_friday_total_number_of_class=%s,che_friday_time=%s,che_friday_faculty=%s where che_friday_subject=%s",(
                                        
                                        self.var_che_friday_number_of_class2.get(),
                                        self.var_che_friday_time1.get(),
                                        self.var_che_friday_chemistry_cycle_subject_faculty1.get(),
                                        self.var_che_friday_chemistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_che_friday_chemistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from che_friday_time_table_database where che_friday_subject=%s",(self.var_che_friday_chemistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from che_friday_time_table_database where che_friday_subject=%s',(self.var_che_friday_chemistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_che_friday_faculty_serch.set("")
                        self.var_che_friday_number_of_class2.set("")
                        self.var_che_friday_time1.set("")
                        self.var_che_friday_chemistry_cycle_subject1.set("")
                        self.var_che_friday_chemistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def che_friday_time_table_get(ev):
                        friday_chemistry_cycle_subject1.config(state='readonly')
                        r1=self.che_friday_time_table.focus()
                        content1=self.che_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_che_friday_number_of_class2.set(row1[2])
                        self.var_che_friday_time1.set(row1[3])
                        self.var_che_friday_chemistry_cycle_subject1.set(row1[4])
                        self.var_che_friday_chemistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    ##################################################################################################################################################
                    self.friday_che_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_che_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_che_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_che_time_table_data_frame,orient=VERTICAL)
                    self.che_friday_time_table=ttk.Treeview(self.friday_che_time_table_data_frame,columns=('cid','day1','che_friday_total_number_of_class','che_friday_time','che_friday_subject','che_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.che_friday_time_table.xview)
                    scrolly.configure(command=self.che_friday_time_table.yview)

                    self.che_friday_time_table.heading('cid',text='Serial No')
                    self.che_friday_time_table.heading('day1',text='Day')
                    self.che_friday_time_table.heading('che_friday_total_number_of_class',text='Totel class')
                    self.che_friday_time_table.heading('che_friday_time',text='class time')
                    self.che_friday_time_table.heading('che_friday_subject',text='Subject')
                    self.che_friday_time_table.heading('che_friday_faculty',text='Faculty')

                    self.che_friday_time_table.column('cid',width=100)
                    self.che_friday_time_table.column('day1',width=150)
                    self.che_friday_time_table.column('che_friday_total_number_of_class',width=100)
                    self.che_friday_time_table.column('che_friday_time',width=150)
                    self.che_friday_time_table.column('che_friday_subject',width=150)
                    self.che_friday_time_table.column('che_friday_faculty',width=150)

                    self.che_friday_time_table['show']='headings'

                    self.che_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.che_friday_time_table.bind('<ButtonRelease-1>',che_friday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_che_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_che_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_che_subject_list=[]
                    self.fetch_che_faculty_subject()
                    friday_chemistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_che_friday_chemistry_cycle_subject1,state='readonly',values=self.faculty_che_subject_list)
                    friday_chemistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_che_name_list=[]
                    self.fetch_che_faculty_name()
                    friday_chemistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_che_friday_chemistry_cycle_subject_faculty1,state='readonly',values=self.faculty_che_name_list)
                    friday_chemistry_cycle_subject_faculty1.place(x=600,y=25)

                    che_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_che_friday_faculty_serch)
                    che_faculty_serch1.place(x=800,y=25)
                    che_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=che_faculty_serch)
                    che_faculty_serch1_button.place(x=937,y=22)
                    che_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    che_add_database.place(x=10,y=140)

                    che_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    che_update_database.place(x=10,y=170)

                    che_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    che_delete_database.place(x=10,y=200)

                    che_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    che_clear_database.place(x=10,y=230)

##########################################################################################################################################################################
        if self.var_sem_select.get() == 'CHEMISTRY_cycle':
            if self.var_branch_select.get() == '1st_years_1st_semister':
                if self.var_day_select.get() == 'Saturday':
                
                  
                    #print('this time table is for chemistry cycle in civil engineering mondy')
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_che_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_che_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_che_saturday_chemistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_che_saturday_chemistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into che_saturday_time_table_database(day1,che_saturday_total_number_of_class,che_saturday_time,che_saturday_subject,che_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_che_saturday_number_of_class2.get(),
                                            self.var_che_saturday_time1.get(),
                                            self.var_che_saturday_chemistry_cycle_subject1.get(),
                                            self.var_che_saturday_chemistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from che_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.che_saturday_time_table.delete(*self.che_saturday_time_table.get_children())
                            for row in rows:
                                self.che_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def che_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_che_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from che_saturday_time_table_database where che_saturday_subject LIKE '%{self.var_che_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.che_saturday_time_table.delete(*self.che_saturday_time_table.get_children())
                                for row in rows:
                                    self.che_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_che_saturday_chemistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from che_saturday_time_table_database where che_saturday_subject=%s",(self.var_che_saturday_chemistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update che_saturday_time_table_database set che_saturday_total_number_of_class=%s,che_saturday_time=%s,che_saturday_faculty=%s where che_saturday_subject=%s",(
                                        
                                        self.var_che_saturday_number_of_class2.get(),
                                        self.var_che_saturday_time1.get(),
                                        self.var_che_saturday_chemistry_cycle_subject_faculty1.get(),
                                        self.var_che_saturday_chemistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_che_saturday_chemistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from che_saturday_time_table_database where che_saturday_subject=%s",(self.var_che_saturday_chemistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from che_saturday_time_table_database where che_saturday_subject=%s',(self.var_che_saturday_chemistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_che_saturday_faculty_serch.set("")
                        self.var_che_saturday_number_of_class2.set("")
                        self.var_che_saturday_time1.set("")
                        self.var_che_saturday_chemistry_cycle_subject1.set("")
                        self.var_che_saturday_chemistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def che_saturday_time_table_get(ev):
                        saturday_chemistry_cycle_subject1.config(state='readonly')
                        r1=self.che_saturday_time_table.focus()
                        content1=self.che_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_che_saturday_number_of_class2.set(row1[2])
                        self.var_che_saturday_time1.set(row1[3])
                        self.var_che_saturday_chemistry_cycle_subject1.set(row1[4])
                        self.var_che_saturday_chemistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    ##################################################################################################################################################
                    self.saturday_che_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_che_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_che_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_che_time_table_data_frame,orient=VERTICAL)
                    self.che_saturday_time_table=ttk.Treeview(self.saturday_che_time_table_data_frame,columns=('cid','day1','che_saturday_total_number_of_class','che_saturday_time','che_saturday_subject','che_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.che_saturday_time_table.xview)
                    scrolly.configure(command=self.che_saturday_time_table.yview)

                    self.che_saturday_time_table.heading('cid',text='Serial No')
                    self.che_saturday_time_table.heading('day1',text='Day')
                    self.che_saturday_time_table.heading('che_saturday_total_number_of_class',text='Totel class')
                    self.che_saturday_time_table.heading('che_saturday_time',text='class time')
                    self.che_saturday_time_table.heading('che_saturday_subject',text='Subject')
                    self.che_saturday_time_table.heading('che_saturday_faculty',text='Faculty')

                    self.che_saturday_time_table.column('cid',width=100)
                    self.che_saturday_time_table.column('day1',width=150)
                    self.che_saturday_time_table.column('che_saturday_total_number_of_class',width=100)
                    self.che_saturday_time_table.column('che_saturday_time',width=150)
                    self.che_saturday_time_table.column('che_saturday_subject',width=150)
                    self.che_saturday_time_table.column('che_saturday_faculty',width=150)

                    self.che_saturday_time_table['show']='headings'

                    self.che_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.che_saturday_time_table.bind('<ButtonRelease-1>',che_saturday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_che_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_che_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_che_subject_list=[]
                    self.fetch_che_faculty_subject()
                    saturday_chemistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_che_saturday_chemistry_cycle_subject1,state='readonly',values=self.faculty_che_subject_list)
                    saturday_chemistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_che_name_list=[]
                    self.fetch_che_faculty_name()
                    saturday_chemistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_che_saturday_chemistry_cycle_subject_faculty1,state='readonly',values=self.faculty_che_name_list)
                    saturday_chemistry_cycle_subject_faculty1.place(x=600,y=25)

                    che_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_che_saturday_faculty_serch)
                    che_faculty_serch1.place(x=800,y=25)
                    che_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=che_faculty_serch)
                    che_faculty_serch1_button.place(x=937,y=22)
                    che_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    che_add_database.place(x=10,y=140)

                    che_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    che_update_database.place(x=10,y=170)

                    che_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    che_delete_database.place(x=10,y=200)

                    che_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    che_clear_database.place(x=10,y=230)
##############################################################################################################################################################
        #print(self.var_sem_select.get()+'      '+self.var_branch_select.get()+'      '+self.var_day_select.get())
        if self.var_sem_select.get() == 'PHYSICS_cycle':
            if self.var_branch_select.get() == '1st_years_2nd_semister':
                if self.var_day_select.get() == 'Monday':
                
                  
                    #print('this time table is for phymistry cycle in civil engineering mondy')
                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_phy_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_phy_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_phy_monday_phymistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_phy_monday_phymistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into phy_monday_time_table_database(day1,phy_monday_total_number_of_class,phy_monday_time,phy_monday_subject,phy_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_phy_monday_number_of_class1.get(),
                                            self.var_phy_monday_time1.get(),
                                            self.var_phy_monday_phymistry_cycle_subject1.get(),
                                            self.var_phy_monday_phymistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from phy_monday_time_table_database')
                            rows=cur.fetchall()
                            self.phy_monday_time_table.delete(*self.phy_monday_time_table.get_children())
                            for row in rows:
                                self.phy_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def phy_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_phy_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from phy_monday_time_table_database where phy_monday_subject LIKE '%{self.var_phy_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.phy_monday_time_table.delete(*self.phy_monday_time_table.get_children())
                                for row in rows:
                                    self.phy_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_phy_monday_phymistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from phy_monday_time_table_database where phy_monday_subject=%s",(self.var_phy_monday_phymistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update phy_monday_time_table_database set phy_monday_total_number_of_class=%s,phy_monday_time=%s,phy_monday_faculty=%s where phy_monday_subject=%s",(
                                        
                                        self.var_phy_monday_number_of_class1.get(),
                                        self.var_phy_monday_time1.get(),
                                        self.var_phy_monday_phymistry_cycle_subject_faculty1.get(),
                                        self.var_phy_monday_phymistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_phy_monday_phymistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from phy_monday_time_table_database where phy_monday_subject=%s",(self.var_phy_monday_phymistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from phy_monday_time_table_database where phy_monday_subject=%s',(self.var_phy_monday_phymistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_phy_monday_faculty_serch.set("")
                        self.var_phy_monday_number_of_class1.set("")
                        self.var_phy_monday_time1.set("")
                        self.var_phy_monday_phymistry_cycle_subject1.set("")
                        self.var_phy_monday_phymistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def phy_monday_time_table_get(ev):
                        monday_phymistry_cycle_subject1.config(state='readonly')
                        r1=self.phy_monday_time_table.focus()
                        content1=self.phy_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_phy_monday_number_of_class1.set(row1[2])
                        self.var_phy_monday_time1.set(row1[3])
                        self.var_phy_monday_phymistry_cycle_subject1.set(row1[4])
                        self.var_phy_monday_phymistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    ##################################################################################################################################################
                    self.monday_phy_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_phy_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_phy_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_phy_time_table_data_frame,orient=VERTICAL)
                    self.phy_monday_time_table=ttk.Treeview(self.monday_phy_time_table_data_frame,columns=('cid','day1','phy_monday_total_number_of_class','phy_monday_time','phy_monday_subject','phy_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.phy_monday_time_table.xview)
                    scrolly.configure(command=self.phy_monday_time_table.yview)

                    self.phy_monday_time_table.heading('cid',text='Serial No')
                    self.phy_monday_time_table.heading('day1',text='Day')
                    self.phy_monday_time_table.heading('phy_monday_total_number_of_class',text='Totel class')
                    self.phy_monday_time_table.heading('phy_monday_time',text='class time')
                    self.phy_monday_time_table.heading('phy_monday_subject',text='Subject')
                    self.phy_monday_time_table.heading('phy_monday_faculty',text='Faculty')

                    self.phy_monday_time_table.column('cid',width=100)
                    self.phy_monday_time_table.column('day1',width=150)
                    self.phy_monday_time_table.column('phy_monday_total_number_of_class',width=100)
                    self.phy_monday_time_table.column('phy_monday_time',width=150)
                    self.phy_monday_time_table.column('phy_monday_subject',width=150)
                    self.phy_monday_time_table.column('phy_monday_faculty',width=150)

                    self.phy_monday_time_table['show']='headings'

                    self.phy_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.phy_monday_time_table.bind('<ButtonRelease-1>',phy_monday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_phy_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_phy_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_phy_subject_list=[]
                    self.fetch_phy_faculty_subject()
                    monday_phymistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_phy_monday_phymistry_cycle_subject1,state='readonly',values=self.faculty_phy_subject_list)
                    monday_phymistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_phy_name_list=[]
                    self.fetch_phy_faculty_name()
                    monday_phymistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_phy_monday_phymistry_cycle_subject_faculty1,state='readonly',values=self.faculty_phy_name_list)
                    monday_phymistry_cycle_subject_faculty1.place(x=600,y=25)

                    phy_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_phy_monday_faculty_serch)
                    phy_faculty_serch1.place(x=800,y=25)
                    phy_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=phy_faculty_serch)
                    phy_faculty_serch1_button.place(x=937,y=22)
                    phy_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    phy_add_database.place(x=10,y=140)

                    phy_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    phy_update_database.place(x=10,y=170)

                    phy_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    phy_delete_database.place(x=10,y=200)

                    phy_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    phy_clear_database.place(x=10,y=230)
##########################################################################################################################
        if self.var_sem_select.get() == 'PHYSICS_cycle':
            if self.var_branch_select.get() == '1st_years_2nd_semister':
                if self.var_day_select.get() == 'Thuesday':
                
                  
                    #print('this time table is for phymistry cycle in civil engineering mondy')
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_phy_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_phy_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_phy_thuesday_phymistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_phy_thuesday_phymistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into phy_thuesday_time_table_database(day1,phy_thuesday_total_number_of_class,phy_thuesday_time,phy_thuesday_subject,phy_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_phy_thuesday_number_of_class2.get(),
                                            self.var_phy_thuesday_time1.get(),
                                            self.var_phy_thuesday_phymistry_cycle_subject1.get(),
                                            self.var_phy_thuesday_phymistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from phy_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.phy_thuesday_time_table.delete(*self.phy_thuesday_time_table.get_children())
                            for row in rows:
                                self.phy_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def phy_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_phy_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from phy_thuesday_time_table_database where phy_thuesday_subject LIKE '%{self.var_phy_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.phy_thuesday_time_table.delete(*self.phy_thuesday_time_table.get_children())
                                for row in rows:
                                    self.phy_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_phy_thuesday_phymistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from phy_thuesday_time_table_database where phy_thuesday_subject=%s",(self.var_phy_thuesday_phymistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update phy_thuesday_time_table_database set phy_thuesday_total_number_of_class=%s,phy_thuesday_time=%s,phy_thuesday_faculty=%s where phy_thuesday_subject=%s",(
                                        
                                        self.var_phy_thuesday_number_of_class2.get(),
                                        self.var_phy_thuesday_time1.get(),
                                        self.var_phy_thuesday_phymistry_cycle_subject_faculty1.get(),
                                        self.var_phy_thuesday_phymistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_phy_thuesday_phymistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from phy_thuesday_time_table_database where phy_thuesday_subject=%s",(self.var_phy_thuesday_phymistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from phy_thuesday_time_table_database where phy_thuesday_subject=%s',(self.var_phy_thuesday_phymistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_phy_thuesday_faculty_serch.set("")
                        self.var_phy_thuesday_number_of_class2.set("")
                        self.var_phy_thuesday_time1.set("")
                        self.var_phy_thuesday_phymistry_cycle_subject1.set("")
                        self.var_phy_thuesday_phymistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def phy_thuesday_time_table_get(ev):
                        thuesday_phymistry_cycle_subject1.config(state='readonly')
                        r1=self.phy_thuesday_time_table.focus()
                        content1=self.phy_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_phy_thuesday_number_of_class2.set(row1[2])
                        self.var_phy_thuesday_time1.set(row1[3])
                        self.var_phy_thuesday_phymistry_cycle_subject1.set(row1[4])
                        self.var_phy_thuesday_phymistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    ##################################################################################################################################################
                    self.thuesday_phy_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_phy_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_phy_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_phy_time_table_data_frame,orient=VERTICAL)
                    self.phy_thuesday_time_table=ttk.Treeview(self.thuesday_phy_time_table_data_frame,columns=('cid','day1','phy_thuesday_total_number_of_class','phy_thuesday_time','phy_thuesday_subject','phy_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.phy_thuesday_time_table.xview)
                    scrolly.configure(command=self.phy_thuesday_time_table.yview)

                    self.phy_thuesday_time_table.heading('cid',text='Serial No')
                    self.phy_thuesday_time_table.heading('day1',text='Day')
                    self.phy_thuesday_time_table.heading('phy_thuesday_total_number_of_class',text='Totel class')
                    self.phy_thuesday_time_table.heading('phy_thuesday_time',text='class time')
                    self.phy_thuesday_time_table.heading('phy_thuesday_subject',text='Subject')
                    self.phy_thuesday_time_table.heading('phy_thuesday_faculty',text='Faculty')

                    self.phy_thuesday_time_table.column('cid',width=100)
                    self.phy_thuesday_time_table.column('day1',width=150)
                    self.phy_thuesday_time_table.column('phy_thuesday_total_number_of_class',width=100)
                    self.phy_thuesday_time_table.column('phy_thuesday_time',width=150)
                    self.phy_thuesday_time_table.column('phy_thuesday_subject',width=150)
                    self.phy_thuesday_time_table.column('phy_thuesday_faculty',width=150)

                    self.phy_thuesday_time_table['show']='headings'

                    self.phy_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.phy_thuesday_time_table.bind('<ButtonRelease-1>',phy_thuesday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_phy_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_phy_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_phy_subject_list=[]
                    self.fetch_phy_faculty_subject()
                    thuesday_phymistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_phy_thuesday_phymistry_cycle_subject1,state='readonly',values=self.faculty_phy_subject_list)
                    thuesday_phymistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_phy_name_list=[]
                    self.fetch_phy_faculty_name()
                    thuesday_phymistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_phy_thuesday_phymistry_cycle_subject_faculty1,state='readonly',values=self.faculty_phy_name_list)
                    thuesday_phymistry_cycle_subject_faculty1.place(x=600,y=25)

                    phy_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_phy_thuesday_faculty_serch)
                    phy_faculty_serch1.place(x=800,y=25)
                    phy_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=phy_faculty_serch)
                    phy_faculty_serch1_button.place(x=937,y=22)
                    phy_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    phy_add_database.place(x=10,y=140)

                    phy_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    phy_update_database.place(x=10,y=170)

                    phy_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    phy_delete_database.place(x=10,y=200)

                    phy_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    phy_clear_database.place(x=10,y=230)

        if self.var_sem_select.get() == 'PHYSICS_cycle':
            if self.var_branch_select.get() == '1st_years_2nd_semister':
                if self.var_day_select.get() == 'Wednesday':
                
                  
                    #print('this time table is for phymistry cycle in civil engineering mondy')
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_phy_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_phy_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_phy_wednesday_phymistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_phy_wednesday_phymistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into phy_wednesday_time_table_database(day1,phy_wednesday_total_number_of_class,phy_wednesday_time,phy_wednesday_subject,phy_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_phy_wednesday_number_of_class2.get(),
                                            self.var_phy_wednesday_time1.get(),
                                            self.var_phy_wednesday_phymistry_cycle_subject1.get(),
                                            self.var_phy_wednesday_phymistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from phy_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.phy_wednesday_time_table.delete(*self.phy_wednesday_time_table.get_children())
                            for row in rows:
                                self.phy_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def phy_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_phy_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from phy_wednesday_time_table_database where phy_wednesday_subject LIKE '%{self.var_phy_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.phy_wednesday_time_table.delete(*self.phy_wednesday_time_table.get_children())
                                for row in rows:
                                    self.phy_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_phy_wednesday_phymistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from phy_wednesday_time_table_database where phy_wednesday_subject=%s",(self.var_phy_wednesday_phymistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update phy_wednesday_time_table_database set phy_wednesday_total_number_of_class=%s,phy_wednesday_time=%s,phy_wednesday_faculty=%s where phy_wednesday_subject=%s",(
                                        
                                        self.var_phy_wednesday_number_of_class2.get(),
                                        self.var_phy_wednesday_time1.get(),
                                        self.var_phy_wednesday_phymistry_cycle_subject_faculty1.get(),
                                        self.var_phy_wednesday_phymistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_phy_wednesday_phymistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from phy_wednesday_time_table_database where phy_wednesday_subject=%s",(self.var_phy_wednesday_phymistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from phy_wednesday_time_table_database where phy_wednesday_subject=%s',(self.var_phy_wednesday_phymistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_phy_wednesday_faculty_serch.set("")
                        self.var_phy_wednesday_number_of_class2.set("")
                        self.var_phy_wednesday_time1.set("")
                        self.var_phy_wednesday_phymistry_cycle_subject1.set("")
                        self.var_phy_wednesday_phymistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def phy_wednesday_time_table_get(ev):
                        wednesday_phymistry_cycle_subject1.config(state='readonly')
                        r1=self.phy_wednesday_time_table.focus()
                        content1=self.phy_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_phy_wednesday_number_of_class2.set(row1[2])
                        self.var_phy_wednesday_time1.set(row1[3])
                        self.var_phy_wednesday_phymistry_cycle_subject1.set(row1[4])
                        self.var_phy_wednesday_phymistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    ##################################################################################################################################################
                    self.wednesday_phy_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_phy_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_phy_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_phy_time_table_data_frame,orient=VERTICAL)
                    self.phy_wednesday_time_table=ttk.Treeview(self.wednesday_phy_time_table_data_frame,columns=('cid','day1','phy_wednesday_total_number_of_class','phy_wednesday_time','phy_wednesday_subject','phy_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.phy_wednesday_time_table.xview)
                    scrolly.configure(command=self.phy_wednesday_time_table.yview)

                    self.phy_wednesday_time_table.heading('cid',text='Serial No')
                    self.phy_wednesday_time_table.heading('day1',text='Day')
                    self.phy_wednesday_time_table.heading('phy_wednesday_total_number_of_class',text='Totel class')
                    self.phy_wednesday_time_table.heading('phy_wednesday_time',text='class time')
                    self.phy_wednesday_time_table.heading('phy_wednesday_subject',text='Subject')
                    self.phy_wednesday_time_table.heading('phy_wednesday_faculty',text='Faculty')

                    self.phy_wednesday_time_table.column('cid',width=100)
                    self.phy_wednesday_time_table.column('day1',width=150)
                    self.phy_wednesday_time_table.column('phy_wednesday_total_number_of_class',width=100)
                    self.phy_wednesday_time_table.column('phy_wednesday_time',width=150)
                    self.phy_wednesday_time_table.column('phy_wednesday_subject',width=150)
                    self.phy_wednesday_time_table.column('phy_wednesday_faculty',width=150)

                    self.phy_wednesday_time_table['show']='headings'

                    self.phy_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.phy_wednesday_time_table.bind('<ButtonRelease-1>',phy_wednesday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_phy_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_phy_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_phy_subject_list=[]
                    self.fetch_phy_faculty_subject()
                    wednesday_phymistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_phy_wednesday_phymistry_cycle_subject1,state='readonly',values=self.faculty_phy_subject_list)
                    wednesday_phymistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_phy_name_list=[]
                    self.fetch_phy_faculty_name()
                    wednesday_phymistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_phy_wednesday_phymistry_cycle_subject_faculty1,state='readonly',values=self.faculty_phy_name_list)
                    wednesday_phymistry_cycle_subject_faculty1.place(x=600,y=25)

                    phy_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_phy_wednesday_faculty_serch)
                    phy_faculty_serch1.place(x=800,y=25)
                    phy_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=phy_faculty_serch)
                    phy_faculty_serch1_button.place(x=937,y=22)
                    phy_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    phy_add_database.place(x=10,y=140)

                    phy_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    phy_update_database.place(x=10,y=170)

                    phy_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    phy_delete_database.place(x=10,y=200)

                    phy_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    phy_clear_database.place(x=10,y=230)

######################################################################################################################################
        if self.var_sem_select.get() == 'PHYSICS_cycle':
            if self.var_branch_select.get() == '1st_years_2nd_semister':
                if self.var_day_select.get() == 'Thursday':
                
                  
                    #print('this time table is for phymistry cycle in civil engineering mondy')
                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_phy_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_phy_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_phy_thursday_phymistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_phy_thursday_phymistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into phy_thursday_time_table_database(day1,phy_thursday_total_number_of_class,phy_thursday_time,phy_thursday_subject,phy_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_phy_thursday_number_of_class2.get(),
                                            self.var_phy_thursday_time1.get(),
                                            self.var_phy_thursday_phymistry_cycle_subject1.get(),
                                            self.var_phy_thursday_phymistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from phy_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.phy_thursday_time_table.delete(*self.phy_thursday_time_table.get_children())
                            for row in rows:
                                self.phy_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def phy_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_phy_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from phy_thursday_time_table_database where phy_thursday_subject LIKE '%{self.var_phy_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.phy_thursday_time_table.delete(*self.phy_thursday_time_table.get_children())
                                for row in rows:
                                    self.phy_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_phy_thursday_phymistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from phy_thursday_time_table_database where phy_thursday_subject=%s",(self.var_phy_thursday_phymistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update phy_thursday_time_table_database set phy_thursday_total_number_of_class=%s,phy_thursday_time=%s,phy_thursday_faculty=%s where phy_thursday_subject=%s",(
                                        
                                        self.var_phy_thursday_number_of_class2.get(),
                                        self.var_phy_thursday_time1.get(),
                                        self.var_phy_thursday_phymistry_cycle_subject_faculty1.get(),
                                        self.var_phy_thursday_phymistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_phy_thursday_phymistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from phy_thursday_time_table_database where phy_thursday_subject=%s",(self.var_phy_thursday_phymistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from phy_thursday_time_table_database where phy_thursday_subject=%s',(self.var_phy_thursday_phymistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_phy_thursday_faculty_serch.set("")
                        self.var_phy_thursday_number_of_class2.set("")
                        self.var_phy_thursday_time1.set("")
                        self.var_phy_thursday_phymistry_cycle_subject1.set("")
                        self.var_phy_thursday_phymistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def phy_thursday_time_table_get(ev):
                        thursday_phymistry_cycle_subject1.config(state='readonly')
                        r1=self.phy_thursday_time_table.focus()
                        content1=self.phy_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_phy_thursday_number_of_class2.set(row1[2])
                        self.var_phy_thursday_time1.set(row1[3])
                        self.var_phy_thursday_phymistry_cycle_subject1.set(row1[4])
                        self.var_phy_thursday_phymistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    ##################################################################################################################################################
                    self.thursday_phy_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_phy_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_phy_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_phy_time_table_data_frame,orient=VERTICAL)
                    self.phy_thursday_time_table=ttk.Treeview(self.thursday_phy_time_table_data_frame,columns=('cid','day1','phy_thursday_total_number_of_class','phy_thursday_time','phy_thursday_subject','phy_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.phy_thursday_time_table.xview)
                    scrolly.configure(command=self.phy_thursday_time_table.yview)

                    self.phy_thursday_time_table.heading('cid',text='Serial No')
                    self.phy_thursday_time_table.heading('day1',text='Day')
                    self.phy_thursday_time_table.heading('phy_thursday_total_number_of_class',text='Totel class')
                    self.phy_thursday_time_table.heading('phy_thursday_time',text='class time')
                    self.phy_thursday_time_table.heading('phy_thursday_subject',text='Subject')
                    self.phy_thursday_time_table.heading('phy_thursday_faculty',text='Faculty')

                    self.phy_thursday_time_table.column('cid',width=100)
                    self.phy_thursday_time_table.column('day1',width=150)
                    self.phy_thursday_time_table.column('phy_thursday_total_number_of_class',width=100)
                    self.phy_thursday_time_table.column('phy_thursday_time',width=150)
                    self.phy_thursday_time_table.column('phy_thursday_subject',width=150)
                    self.phy_thursday_time_table.column('phy_thursday_faculty',width=150)

                    self.phy_thursday_time_table['show']='headings'

                    self.phy_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.phy_thursday_time_table.bind('<ButtonRelease-1>',phy_thursday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_phy_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_phy_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_phy_subject_list=[]
                    self.fetch_phy_faculty_subject()
                    thursday_phymistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_phy_thursday_phymistry_cycle_subject1,state='readonly',values=self.faculty_phy_subject_list)
                    thursday_phymistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_phy_name_list=[]
                    self.fetch_phy_faculty_name()
                    thursday_phymistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_phy_thursday_phymistry_cycle_subject_faculty1,state='readonly',values=self.faculty_phy_name_list)
                    thursday_phymistry_cycle_subject_faculty1.place(x=600,y=25)

                    phy_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_phy_thursday_faculty_serch)
                    phy_faculty_serch1.place(x=800,y=25)
                    phy_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=phy_faculty_serch)
                    phy_faculty_serch1_button.place(x=937,y=22)
                    phy_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    phy_add_database.place(x=10,y=140)

                    phy_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    phy_update_database.place(x=10,y=170)

                    phy_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    phy_delete_database.place(x=10,y=200)

                    phy_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    phy_clear_database.place(x=10,y=230)

########################################################################################################################################################################
        if self.var_sem_select.get() == 'PHYSICS_cycle':
            if self.var_branch_select.get() == '1st_years_2nd_semister':
                if self.var_day_select.get() == 'Friday':
                
                  
                    #print('this time table is for phymistry cycle in civil engineering mondy')
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_phy_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_phy_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_phy_friday_phymistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_phy_friday_phymistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into phy_friday_time_table_database(day1,phy_friday_total_number_of_class,phy_friday_time,phy_friday_subject,phy_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_phy_friday_number_of_class2.get(),
                                            self.var_phy_friday_time1.get(),
                                            self.var_phy_friday_phymistry_cycle_subject1.get(),
                                            self.var_phy_friday_phymistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from phy_friday_time_table_database')
                            rows=cur.fetchall()
                            self.phy_friday_time_table.delete(*self.phy_friday_time_table.get_children())
                            for row in rows:
                                self.phy_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def phy_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_phy_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from phy_friday_time_table_database where phy_friday_subject LIKE '%{self.var_phy_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.phy_friday_time_table.delete(*self.phy_friday_time_table.get_children())
                                for row in rows:
                                    self.phy_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_phy_friday_phymistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from phy_friday_time_table_database where phy_friday_subject=%s",(self.var_phy_friday_phymistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update phy_friday_time_table_database set phy_friday_total_number_of_class=%s,phy_friday_time=%s,phy_friday_faculty=%s where phy_friday_subject=%s",(
                                        
                                        self.var_phy_friday_number_of_class2.get(),
                                        self.var_phy_friday_time1.get(),
                                        self.var_phy_friday_phymistry_cycle_subject_faculty1.get(),
                                        self.var_phy_friday_phymistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_phy_friday_phymistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from phy_friday_time_table_database where phy_friday_subject=%s",(self.var_phy_friday_phymistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from phy_friday_time_table_database where phy_friday_subject=%s',(self.var_phy_friday_phymistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_phy_friday_faculty_serch.set("")
                        self.var_phy_friday_number_of_class2.set("")
                        self.var_phy_friday_time1.set("")
                        self.var_phy_friday_phymistry_cycle_subject1.set("")
                        self.var_phy_friday_phymistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def phy_friday_time_table_get(ev):
                        friday_phymistry_cycle_subject1.config(state='readonly')
                        r1=self.phy_friday_time_table.focus()
                        content1=self.phy_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_phy_friday_number_of_class2.set(row1[2])
                        self.var_phy_friday_time1.set(row1[3])
                        self.var_phy_friday_phymistry_cycle_subject1.set(row1[4])
                        self.var_phy_friday_phymistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    ##################################################################################################################################################
                    self.friday_phy_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_phy_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_phy_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_phy_time_table_data_frame,orient=VERTICAL)
                    self.phy_friday_time_table=ttk.Treeview(self.friday_phy_time_table_data_frame,columns=('cid','day1','phy_friday_total_number_of_class','phy_friday_time','phy_friday_subject','phy_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.phy_friday_time_table.xview)
                    scrolly.configure(command=self.phy_friday_time_table.yview)

                    self.phy_friday_time_table.heading('cid',text='Serial No')
                    self.phy_friday_time_table.heading('day1',text='Day')
                    self.phy_friday_time_table.heading('phy_friday_total_number_of_class',text='Totel class')
                    self.phy_friday_time_table.heading('phy_friday_time',text='class time')
                    self.phy_friday_time_table.heading('phy_friday_subject',text='Subject')
                    self.phy_friday_time_table.heading('phy_friday_faculty',text='Faculty')

                    self.phy_friday_time_table.column('cid',width=100)
                    self.phy_friday_time_table.column('day1',width=150)
                    self.phy_friday_time_table.column('phy_friday_total_number_of_class',width=100)
                    self.phy_friday_time_table.column('phy_friday_time',width=150)
                    self.phy_friday_time_table.column('phy_friday_subject',width=150)
                    self.phy_friday_time_table.column('phy_friday_faculty',width=150)

                    self.phy_friday_time_table['show']='headings'

                    self.phy_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.phy_friday_time_table.bind('<ButtonRelease-1>',phy_friday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_phy_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_phy_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_phy_subject_list=[]
                    self.fetch_phy_faculty_subject()
                    friday_phymistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_phy_friday_phymistry_cycle_subject1,state='readonly',values=self.faculty_phy_subject_list)
                    friday_phymistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_phy_name_list=[]
                    self.fetch_phy_faculty_name()
                    friday_phymistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_phy_friday_phymistry_cycle_subject_faculty1,state='readonly',values=self.faculty_phy_name_list)
                    friday_phymistry_cycle_subject_faculty1.place(x=600,y=25)

                    phy_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_phy_friday_faculty_serch)
                    phy_faculty_serch1.place(x=800,y=25)
                    phy_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=phy_faculty_serch)
                    phy_faculty_serch1_button.place(x=937,y=22)
                    phy_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    phy_add_database.place(x=10,y=140)

                    phy_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    phy_update_database.place(x=10,y=170)

                    phy_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    phy_delete_database.place(x=10,y=200)

                    phy_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    phy_clear_database.place(x=10,y=230)

#######################################################################################################################################################################
        if self.var_sem_select.get() == 'PHYSICS_cycle':
            if self.var_branch_select.get() == '1st_years_2nd_semister':
                if self.var_day_select.get() == 'Saturday':
                
                  
                    #print('this time table is for phymistry cycle in civil engineering mondy')
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_phy_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_phy_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_phy_saturday_phymistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_phy_saturday_phymistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into phy_saturday_time_table_database(day1,phy_saturday_total_number_of_class,phy_saturday_time,phy_saturday_subject,phy_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_phy_saturday_number_of_class2.get(),
                                            self.var_phy_saturday_time1.get(),
                                            self.var_phy_saturday_phymistry_cycle_subject1.get(),
                                            self.var_phy_saturday_phymistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from phy_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.phy_saturday_time_table.delete(*self.phy_saturday_time_table.get_children())
                            for row in rows:
                                self.phy_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def phy_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_phy_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from phy_saturday_time_table_database where phy_saturday_subject LIKE '%{self.var_phy_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.phy_saturday_time_table.delete(*self.phy_saturday_time_table.get_children())
                                for row in rows:
                                    self.phy_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_phy_saturday_phymistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from phy_saturday_time_table_database where phy_saturday_subject=%s",(self.var_phy_saturday_phymistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update phy_saturday_time_table_database set phy_saturday_total_number_of_class=%s,phy_saturday_time=%s,phy_saturday_faculty=%s where phy_saturday_subject=%s",(
                                        
                                        self.var_phy_saturday_number_of_class2.get(),
                                        self.var_phy_saturday_time1.get(),
                                        self.var_phy_saturday_phymistry_cycle_subject_faculty1.get(),
                                        self.var_phy_saturday_phymistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_phy_saturday_phymistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from phy_saturday_time_table_database where phy_saturday_subject=%s",(self.var_phy_saturday_phymistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from phy_saturday_time_table_database where phy_saturday_subject=%s',(self.var_phy_saturday_phymistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_phy_saturday_faculty_serch.set("")
                        self.var_phy_saturday_number_of_class2.set("")
                        self.var_phy_saturday_time1.set("")
                        self.var_phy_saturday_phymistry_cycle_subject1.set("")
                        self.var_phy_saturday_phymistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def phy_saturday_time_table_get(ev):
                        saturday_phymistry_cycle_subject1.config(state='readonly')
                        r1=self.phy_saturday_time_table.focus()
                        content1=self.phy_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_phy_saturday_number_of_class2.set(row1[2])
                        self.var_phy_saturday_time1.set(row1[3])
                        self.var_phy_saturday_phymistry_cycle_subject1.set(row1[4])
                        self.var_phy_saturday_phymistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    ##################################################################################################################################################
                    self.saturday_phy_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_phy_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_phy_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_phy_time_table_data_frame,orient=VERTICAL)
                    self.phy_saturday_time_table=ttk.Treeview(self.saturday_phy_time_table_data_frame,columns=('cid','day1','phy_saturday_total_number_of_class','phy_saturday_time','phy_saturday_subject','phy_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.phy_saturday_time_table.xview)
                    scrolly.configure(command=self.phy_saturday_time_table.yview)

                    self.phy_saturday_time_table.heading('cid',text='Serial No')
                    self.phy_saturday_time_table.heading('day1',text='Day')
                    self.phy_saturday_time_table.heading('phy_saturday_total_number_of_class',text='Totel class')
                    self.phy_saturday_time_table.heading('phy_saturday_time',text='class time')
                    self.phy_saturday_time_table.heading('phy_saturday_subject',text='Subject')
                    self.phy_saturday_time_table.heading('phy_saturday_faculty',text='Faculty')

                    self.phy_saturday_time_table.column('cid',width=100)
                    self.phy_saturday_time_table.column('day1',width=150)
                    self.phy_saturday_time_table.column('phy_saturday_total_number_of_class',width=100)
                    self.phy_saturday_time_table.column('phy_saturday_time',width=150)
                    self.phy_saturday_time_table.column('phy_saturday_subject',width=150)
                    self.phy_saturday_time_table.column('phy_saturday_faculty',width=150)

                    self.phy_saturday_time_table['show']='headings'

                    self.phy_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.phy_saturday_time_table.bind('<ButtonRelease-1>',phy_saturday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_phy_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_phy_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_phy_subject_list=[]
                    self.fetch_phy_faculty_subject()
                    saturday_phymistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_phy_saturday_phymistry_cycle_subject1,state='readonly',values=self.faculty_phy_subject_list)
                    saturday_phymistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_phy_name_list=[]
                    self.fetch_phy_faculty_name()
                    saturday_phymistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_phy_saturday_phymistry_cycle_subject_faculty1,state='readonly',values=self.faculty_phy_name_list)
                    saturday_phymistry_cycle_subject_faculty1.place(x=600,y=25)

                    phy_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_phy_saturday_faculty_serch)
                    phy_faculty_serch1.place(x=800,y=25)
                    phy_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=phy_faculty_serch)
                    phy_faculty_serch1_button.place(x=937,y=22)
                    phy_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    phy_add_database.place(x=10,y=140)

                    phy_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    phy_update_database.place(x=10,y=170)

                    phy_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    phy_delete_database.place(x=10,y=200)

                    phy_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    phy_clear_database.place(x=10,y=230)


       # print(self.var_sem_select.get()+'      '+self.var_branch_select.get()+'      '+self.var_day_select.get())
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Civil_Engineering':
                if self.var_day_select.get() == 'Monday':
                
                  
                    #print('this time table is for phymistry cycle in civil engineering mondy')
                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_civil_3rd_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_civil_3rd_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into civil_3rd_monday_time_table_database(day1,civil_3rd_monday_total_number_of_class,civil_3rd_monday_time,civil_3rd_monday_subject,civil_3rd_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_civil_3rd_monday_number_of_class1.get(),
                                            self.var_civil_3rd_monday_time1.get(),
                                            self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject1.get(),
                                            self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_3rd_monday_time_table_database')
                            rows=cur.fetchall()
                            self.civil_3rd_monday_time_table.delete(*self.civil_3rd_monday_time_table.get_children())
                            for row in rows:
                                self.civil_3rd_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def civil_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from civil_3rd_monday_time_table_database where civil_3rd_monday_subject LIKE '%{self.var_civil_3rd_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.civil_3rd_monday_time_table.delete(*self.civil_3rd_monday_time_table.get_children())
                                for row in rows:
                                    self.civil_3rd_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from civil_3rd_monday_time_table_database where civil_3rd_monday_subject=%s",(self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update civil_3rd_monday_time_table_database set civil_3rd_monday_total_number_of_class=%s,civil_3rd_monday_time=%s,civil_3rd_monday_faculty=%s where civil_3rd_monday_subject=%s",(
                                        
                                        self.var_civil_3rd_monday_number_of_class1.get(),
                                        self.var_civil_3rd_monday_time1.get(),
                                        self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from civil_3rd_monday_time_table_database where civil_3rd_monday_subject=%s",(self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from civil_3rd_monday_time_table_database where civil_3rd_monday_subject=%s',(self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_civil_3rd_monday_faculty_serch.set("")
                        self.var_civil_3rd_monday_number_of_class1.set("")
                        self.var_civil_3rd_monday_time1.set("")
                        self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject1.set("")
                        self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def civil_3rd_monday_time_table_get(ev):
                        monday_civil_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.civil_3rd_monday_time_table.focus()
                        content1=self.civil_3rd_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_civil_3rd_monday_number_of_class1.set(row1[2])
                        self.var_civil_3rd_monday_time1.set(row1[3])
                        self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    ##################################################################################################################################################
                    self.monday_civil_3rd_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_civil_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_civil_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_civil_3rd_time_table_data_frame,orient=VERTICAL)
                    self.civil_3rd_monday_time_table=ttk.Treeview(self.monday_civil_3rd_time_table_data_frame,columns=('cid','day1','civil_3rd_monday_total_number_of_class','civil_3rd_monday_time','civil_3rd_monday_subject','civil_3rd_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.civil_3rd_monday_time_table.xview)
                    scrolly.configure(command=self.civil_3rd_monday_time_table.yview)

                    self.civil_3rd_monday_time_table.heading('cid',text='Serial No')
                    self.civil_3rd_monday_time_table.heading('day1',text='Day')
                    self.civil_3rd_monday_time_table.heading('civil_3rd_monday_total_number_of_class',text='Totel class')
                    self.civil_3rd_monday_time_table.heading('civil_3rd_monday_time',text='class time')
                    self.civil_3rd_monday_time_table.heading('civil_3rd_monday_subject',text='Subject')
                    self.civil_3rd_monday_time_table.heading('civil_3rd_monday_faculty',text='Faculty')

                    self.civil_3rd_monday_time_table.column('cid',width=100)
                    self.civil_3rd_monday_time_table.column('day1',width=150)
                    self.civil_3rd_monday_time_table.column('civil_3rd_monday_total_number_of_class',width=100)
                    self.civil_3rd_monday_time_table.column('civil_3rd_monday_time',width=150)
                    self.civil_3rd_monday_time_table.column('civil_3rd_monday_subject',width=150)
                    self.civil_3rd_monday_time_table.column('civil_3rd_monday_faculty',width=150)

                    self.civil_3rd_monday_time_table['show']='headings'

                    self.civil_3rd_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.civil_3rd_monday_time_table.bind('<ButtonRelease-1>',civil_3rd_monday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_civil_3rd_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_civil_3rd_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_civil_3rd_subject_list=[]
                    self.fetch_civil_3rd_faculty_subject()
                    monday_civil_3rdmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_civil_3rd_subject_list)
                    monday_civil_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_civil_3rd_name_list=[]
                    self.fetch_civil_3rd_faculty_name()
                    monday_civil_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_civil_3rd_monday_civil_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_civil_3rd_name_list)
                    monday_civil_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    civil_3rd_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_civil_3rd_monday_faculty_serch)
                    civil_3rd_faculty_serch1.place(x=800,y=25)
                    civil_3rd_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=civil_3rd_faculty_serch)
                    civil_3rd_faculty_serch1_button.place(x=937,y=22)
                    civil_3rd_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    civil_3rd_add_database.place(x=10,y=140)

                    civil_3rd_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    civil_3rd_update_database.place(x=10,y=170)

                    civil_3rd_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    civil_3rd_delete_database.place(x=10,y=200)

                    civil_3rd_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    civil_3rd_clear_database.place(x=10,y=230)
#############################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Civil_Engineering':
                if self.var_day_select.get() == 'Thuesday':
                
                  
                    #print('this time table is for civil_3rdmistry cycle in civil engineering mondy')
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_civil_3rd_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_civil_3rd_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into civil_3rd_thuesday_time_table_database(day1,civil_3rd_thuesday_total_number_of_class,civil_3rd_thuesday_time,civil_3rd_thuesday_subject,civil_3rd_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_civil_3rd_thuesday_number_of_class2.get(),
                                            self.var_civil_3rd_thuesday_time1.get(),
                                            self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject1.get(),
                                            self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_3rd_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.civil_3rd_thuesday_time_table.delete(*self.civil_3rd_thuesday_time_table.get_children())
                            for row in rows:
                                self.civil_3rd_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def civil_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from civil_3rd_thuesday_time_table_database where civil_3rd_thuesday_subject LIKE '%{self.var_civil_3rd_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.civil_3rd_thuesday_time_table.delete(*self.civil_3rd_thuesday_time_table.get_children())
                                for row in rows:
                                    self.civil_3rd_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from civil_3rd_thuesday_time_table_database where civil_3rd_thuesday_subject=%s",(self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update civil_3rd_thuesday_time_table_database set civil_3rd_thuesday_total_number_of_class=%s,civil_3rd_thuesday_time=%s,civil_3rd_thuesday_faculty=%s where civil_3rd_thuesday_subject=%s",(
                                        
                                        self.var_civil_3rd_thuesday_number_of_class2.get(),
                                        self.var_civil_3rd_thuesday_time1.get(),
                                        self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from civil_3rd_thuesday_time_table_database where civil_3rd_thuesday_subject=%s",(self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from civil_3rd_thuesday_time_table_database where civil_3rd_thuesday_subject=%s',(self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_civil_3rd_thuesday_faculty_serch.set("")
                        self.var_civil_3rd_thuesday_number_of_class2.set("")
                        self.var_civil_3rd_thuesday_time1.set("")
                        self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject1.set("")
                        self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def civil_3rd_thuesday_time_table_get(ev):
                        thuesday_civil_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.civil_3rd_thuesday_time_table.focus()
                        content1=self.civil_3rd_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_civil_3rd_thuesday_number_of_class2.set(row1[2])
                        self.var_civil_3rd_thuesday_time1.set(row1[3])
                        self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    ##################################################################################################################################################
                    self.thuesday_civil_3rd_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_civil_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_civil_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_civil_3rd_time_table_data_frame,orient=VERTICAL)
                    self.civil_3rd_thuesday_time_table=ttk.Treeview(self.thuesday_civil_3rd_time_table_data_frame,columns=('cid','day1','civil_3rd_thuesday_total_number_of_class','civil_3rd_thuesday_time','civil_3rd_thuesday_subject','civil_3rd_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.civil_3rd_thuesday_time_table.xview)
                    scrolly.configure(command=self.civil_3rd_thuesday_time_table.yview)

                    self.civil_3rd_thuesday_time_table.heading('cid',text='Serial No')
                    self.civil_3rd_thuesday_time_table.heading('day1',text='Day')
                    self.civil_3rd_thuesday_time_table.heading('civil_3rd_thuesday_total_number_of_class',text='Totel class')
                    self.civil_3rd_thuesday_time_table.heading('civil_3rd_thuesday_time',text='class time')
                    self.civil_3rd_thuesday_time_table.heading('civil_3rd_thuesday_subject',text='Subject')
                    self.civil_3rd_thuesday_time_table.heading('civil_3rd_thuesday_faculty',text='Faculty')

                    self.civil_3rd_thuesday_time_table.column('cid',width=100)
                    self.civil_3rd_thuesday_time_table.column('day1',width=150)
                    self.civil_3rd_thuesday_time_table.column('civil_3rd_thuesday_total_number_of_class',width=100)
                    self.civil_3rd_thuesday_time_table.column('civil_3rd_thuesday_time',width=150)
                    self.civil_3rd_thuesday_time_table.column('civil_3rd_thuesday_subject',width=150)
                    self.civil_3rd_thuesday_time_table.column('civil_3rd_thuesday_faculty',width=150)

                    self.civil_3rd_thuesday_time_table['show']='headings'

                    self.civil_3rd_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.civil_3rd_thuesday_time_table.bind('<ButtonRelease-1>',civil_3rd_thuesday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_civil_3rd_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_civil_3rd_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_civil_3rd_subject_list=[]
                    self.fetch_civil_3rd_faculty_subject()
                    thuesday_civil_3rdmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_civil_3rd_subject_list)
                    thuesday_civil_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_civil_3rd_name_list=[]
                    self.fetch_civil_3rd_faculty_name()
                    thuesday_civil_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_civil_3rd_thuesday_civil_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_civil_3rd_name_list)
                    thuesday_civil_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    civil_3rd_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_civil_3rd_thuesday_faculty_serch)
                    civil_3rd_faculty_serch1.place(x=800,y=25)
                    civil_3rd_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=civil_3rd_faculty_serch)
                    civil_3rd_faculty_serch1_button.place(x=937,y=22)
                    civil_3rd_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    civil_3rd_add_database.place(x=10,y=140)

                    civil_3rd_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    civil_3rd_update_database.place(x=10,y=170)

                    civil_3rd_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    civil_3rd_delete_database.place(x=10,y=200)

                    civil_3rd_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    civil_3rd_clear_database.place(x=10,y=230)

        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Civil_Engineering':
                if self.var_day_select.get() == 'Wednesday':
                
                  
                    #print('this time table is for civil_3rdmistry cycle in civil engineering mondy')
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_civil_3rd_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_civil_3rd_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into civil_3rd_wednesday_time_table_database(day1,civil_3rd_wednesday_total_number_of_class,civil_3rd_wednesday_time,civil_3rd_wednesday_subject,civil_3rd_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_civil_3rd_wednesday_number_of_class2.get(),
                                            self.var_civil_3rd_wednesday_time1.get(),
                                            self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject1.get(),
                                            self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_3rd_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.civil_3rd_wednesday_time_table.delete(*self.civil_3rd_wednesday_time_table.get_children())
                            for row in rows:
                                self.civil_3rd_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def civil_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from civil_3rd_wednesday_time_table_database where civil_3rd_wednesday_subject LIKE '%{self.var_civil_3rd_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.civil_3rd_wednesday_time_table.delete(*self.civil_3rd_wednesday_time_table.get_children())
                                for row in rows:
                                    self.civil_3rd_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from civil_3rd_wednesday_time_table_database where civil_3rd_wednesday_subject=%s",(self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update civil_3rd_wednesday_time_table_database set civil_3rd_wednesday_total_number_of_class=%s,civil_3rd_wednesday_time=%s,civil_3rd_wednesday_faculty=%s where civil_3rd_wednesday_subject=%s",(
                                        
                                        self.var_civil_3rd_wednesday_number_of_class2.get(),
                                        self.var_civil_3rd_wednesday_time1.get(),
                                        self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from civil_3rd_wednesday_time_table_database where civil_3rd_wednesday_subject=%s",(self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from civil_3rd_wednesday_time_table_database where civil_3rd_wednesday_subject=%s',(self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_civil_3rd_wednesday_faculty_serch.set("")
                        self.var_civil_3rd_wednesday_number_of_class2.set("")
                        self.var_civil_3rd_wednesday_time1.set("")
                        self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject1.set("")
                        self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def civil_3rd_wednesday_time_table_get(ev):
                        wednesday_civil_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.civil_3rd_wednesday_time_table.focus()
                        content1=self.civil_3rd_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_civil_3rd_wednesday_number_of_class2.set(row1[2])
                        self.var_civil_3rd_wednesday_time1.set(row1[3])
                        self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    ##################################################################################################################################################
                    self.wednesday_civil_3rd_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_civil_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_civil_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_civil_3rd_time_table_data_frame,orient=VERTICAL)
                    self.civil_3rd_wednesday_time_table=ttk.Treeview(self.wednesday_civil_3rd_time_table_data_frame,columns=('cid','day1','civil_3rd_wednesday_total_number_of_class','civil_3rd_wednesday_time','civil_3rd_wednesday_subject','civil_3rd_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.civil_3rd_wednesday_time_table.xview)
                    scrolly.configure(command=self.civil_3rd_wednesday_time_table.yview)

                    self.civil_3rd_wednesday_time_table.heading('cid',text='Serial No')
                    self.civil_3rd_wednesday_time_table.heading('day1',text='Day')
                    self.civil_3rd_wednesday_time_table.heading('civil_3rd_wednesday_total_number_of_class',text='Totel class')
                    self.civil_3rd_wednesday_time_table.heading('civil_3rd_wednesday_time',text='class time')
                    self.civil_3rd_wednesday_time_table.heading('civil_3rd_wednesday_subject',text='Subject')
                    self.civil_3rd_wednesday_time_table.heading('civil_3rd_wednesday_faculty',text='Faculty')

                    self.civil_3rd_wednesday_time_table.column('cid',width=100)
                    self.civil_3rd_wednesday_time_table.column('day1',width=150)
                    self.civil_3rd_wednesday_time_table.column('civil_3rd_wednesday_total_number_of_class',width=100)
                    self.civil_3rd_wednesday_time_table.column('civil_3rd_wednesday_time',width=150)
                    self.civil_3rd_wednesday_time_table.column('civil_3rd_wednesday_subject',width=150)
                    self.civil_3rd_wednesday_time_table.column('civil_3rd_wednesday_faculty',width=150)

                    self.civil_3rd_wednesday_time_table['show']='headings'

                    self.civil_3rd_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.civil_3rd_wednesday_time_table.bind('<ButtonRelease-1>',civil_3rd_wednesday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_civil_3rd_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_civil_3rd_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_civil_3rd_subject_list=[]
                    self.fetch_civil_3rd_faculty_subject()
                    wednesday_civil_3rdmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_civil_3rd_subject_list)
                    wednesday_civil_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_civil_3rd_name_list=[]
                    self.fetch_civil_3rd_faculty_name()
                    wednesday_civil_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_civil_3rd_wednesday_civil_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_civil_3rd_name_list)
                    wednesday_civil_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    civil_3rd_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_civil_3rd_wednesday_faculty_serch)
                    civil_3rd_faculty_serch1.place(x=800,y=25)
                    civil_3rd_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=civil_3rd_faculty_serch)
                    civil_3rd_faculty_serch1_button.place(x=937,y=22)
                    civil_3rd_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    civil_3rd_add_database.place(x=10,y=140)

                    civil_3rd_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    civil_3rd_update_database.place(x=10,y=170)

                    civil_3rd_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    civil_3rd_delete_database.place(x=10,y=200)

                    civil_3rd_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    civil_3rd_clear_database.place(x=10,y=230)


        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Civil_Engineering':
                if self.var_day_select.get() == 'Thursday':
                
                  
                    #print('this time table is for civil_3rdmistry cycle in civil engineering mondy')
                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_civil_3rd_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_civil_3rd_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into civil_3rd_thursday_time_table_database(day1,civil_3rd_thursday_total_number_of_class,civil_3rd_thursday_time,civil_3rd_thursday_subject,civil_3rd_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_civil_3rd_thursday_number_of_class2.get(),
                                            self.var_civil_3rd_thursday_time1.get(),
                                            self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject1.get(),
                                            self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_3rd_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.civil_3rd_thursday_time_table.delete(*self.civil_3rd_thursday_time_table.get_children())
                            for row in rows:
                                self.civil_3rd_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def civil_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from civil_3rd_thursday_time_table_database where civil_3rd_thursday_subject LIKE '%{self.var_civil_3rd_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.civil_3rd_thursday_time_table.delete(*self.civil_3rd_thursday_time_table.get_children())
                                for row in rows:
                                    self.civil_3rd_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from civil_3rd_thursday_time_table_database where civil_3rd_thursday_subject=%s",(self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update civil_3rd_thursday_time_table_database set civil_3rd_thursday_total_number_of_class=%s,civil_3rd_thursday_time=%s,civil_3rd_thursday_faculty=%s where civil_3rd_thursday_subject=%s",(
                                        
                                        self.var_civil_3rd_thursday_number_of_class2.get(),
                                        self.var_civil_3rd_thursday_time1.get(),
                                        self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from civil_3rd_thursday_time_table_database where civil_3rd_thursday_subject=%s",(self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from civil_3rd_thursday_time_table_database where civil_3rd_thursday_subject=%s',(self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_civil_3rd_thursday_faculty_serch.set("")
                        self.var_civil_3rd_thursday_number_of_class2.set("")
                        self.var_civil_3rd_thursday_time1.set("")
                        self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject1.set("")
                        self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def civil_3rd_thursday_time_table_get(ev):
                        thursday_civil_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.civil_3rd_thursday_time_table.focus()
                        content1=self.civil_3rd_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_civil_3rd_thursday_number_of_class2.set(row1[2])
                        self.var_civil_3rd_thursday_time1.set(row1[3])
                        self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    ##################################################################################################################################################
                    self.thursday_civil_3rd_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_civil_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_civil_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_civil_3rd_time_table_data_frame,orient=VERTICAL)
                    self.civil_3rd_thursday_time_table=ttk.Treeview(self.thursday_civil_3rd_time_table_data_frame,columns=('cid','day1','civil_3rd_thursday_total_number_of_class','civil_3rd_thursday_time','civil_3rd_thursday_subject','civil_3rd_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.civil_3rd_thursday_time_table.xview)
                    scrolly.configure(command=self.civil_3rd_thursday_time_table.yview)

                    self.civil_3rd_thursday_time_table.heading('cid',text='Serial No')
                    self.civil_3rd_thursday_time_table.heading('day1',text='Day')
                    self.civil_3rd_thursday_time_table.heading('civil_3rd_thursday_total_number_of_class',text='Totel class')
                    self.civil_3rd_thursday_time_table.heading('civil_3rd_thursday_time',text='class time')
                    self.civil_3rd_thursday_time_table.heading('civil_3rd_thursday_subject',text='Subject')
                    self.civil_3rd_thursday_time_table.heading('civil_3rd_thursday_faculty',text='Faculty')

                    self.civil_3rd_thursday_time_table.column('cid',width=100)
                    self.civil_3rd_thursday_time_table.column('day1',width=150)
                    self.civil_3rd_thursday_time_table.column('civil_3rd_thursday_total_number_of_class',width=100)
                    self.civil_3rd_thursday_time_table.column('civil_3rd_thursday_time',width=150)
                    self.civil_3rd_thursday_time_table.column('civil_3rd_thursday_subject',width=150)
                    self.civil_3rd_thursday_time_table.column('civil_3rd_thursday_faculty',width=150)

                    self.civil_3rd_thursday_time_table['show']='headings'

                    self.civil_3rd_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.civil_3rd_thursday_time_table.bind('<ButtonRelease-1>',civil_3rd_thursday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_civil_3rd_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_civil_3rd_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_civil_3rd_subject_list=[]
                    self.fetch_civil_3rd_faculty_subject()
                    thursday_civil_3rdmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_civil_3rd_subject_list)
                    thursday_civil_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_civil_3rd_name_list=[]
                    self.fetch_civil_3rd_faculty_name()
                    thursday_civil_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_civil_3rd_thursday_civil_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_civil_3rd_name_list)
                    thursday_civil_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    civil_3rd_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_civil_3rd_thursday_faculty_serch)
                    civil_3rd_faculty_serch1.place(x=800,y=25)
                    civil_3rd_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=civil_3rd_faculty_serch)
                    civil_3rd_faculty_serch1_button.place(x=937,y=22)
                    civil_3rd_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    civil_3rd_add_database.place(x=10,y=140)

                    civil_3rd_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    civil_3rd_update_database.place(x=10,y=170)

                    civil_3rd_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    civil_3rd_delete_database.place(x=10,y=200)

                    civil_3rd_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    civil_3rd_clear_database.place(x=10,y=230)

######################################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Civil_Engineering':
                if self.var_day_select.get() == 'Friday':
                
                  
                    #print('this time table is for civil_3rdmistry cycle in civil engineering mondy')
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_civil_3rd_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_civil_3rd_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into civil_3rd_friday_time_table_database(day1,civil_3rd_friday_total_number_of_class,civil_3rd_friday_time,civil_3rd_friday_subject,civil_3rd_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_civil_3rd_friday_number_of_class2.get(),
                                            self.var_civil_3rd_friday_time1.get(),
                                            self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject1.get(),
                                            self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                         )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_3rd_friday_time_table_database')
                            rows=cur.fetchall()
                            self.civil_3rd_friday_time_table.delete(*self.civil_3rd_friday_time_table.get_children())
                            for row in rows:
                                self.civil_3rd_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def civil_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from civil_3rd_friday_time_table_database where civil_3rd_friday_subject LIKE '%{self.var_civil_3rd_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.civil_3rd_friday_time_table.delete(*self.civil_3rd_friday_time_table.get_children())
                                for row in rows:
                                    self.civil_3rd_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from civil_3rd_friday_time_table_database where civil_3rd_friday_subject=%s",(self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update civil_3rd_friday_time_table_database set civil_3rd_friday_total_number_of_class=%s,civil_3rd_friday_time=%s,civil_3rd_friday_faculty=%s where civil_3rd_friday_subject=%s",(
                                        
                                        self.var_civil_3rd_friday_number_of_class2.get(),
                                        self.var_civil_3rd_friday_time1.get(),
                                        self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from civil_3rd_friday_time_table_database where civil_3rd_friday_subject=%s",(self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from civil_3rd_friday_time_table_database where civil_3rd_friday_subject=%s',(self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_civil_3rd_friday_faculty_serch.set("")
                        self.var_civil_3rd_friday_number_of_class2.set("")
                        self.var_civil_3rd_friday_time1.set("")
                        self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject1.set("")
                        self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def civil_3rd_friday_time_table_get(ev):
                        friday_civil_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.civil_3rd_friday_time_table.focus()
                        content1=self.civil_3rd_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_civil_3rd_friday_number_of_class2.set(row1[2])
                        self.var_civil_3rd_friday_time1.set(row1[3])
                        self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    ##################################################################################################################################################
                    self.friday_civil_3rd_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_civil_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_civil_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_civil_3rd_time_table_data_frame,orient=VERTICAL)
                    self.civil_3rd_friday_time_table=ttk.Treeview(self.friday_civil_3rd_time_table_data_frame,columns=('cid','day1','civil_3rd_friday_total_number_of_class','civil_3rd_friday_time','civil_3rd_friday_subject','civil_3rd_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.civil_3rd_friday_time_table.xview)
                    scrolly.configure(command=self.civil_3rd_friday_time_table.yview)

                    self.civil_3rd_friday_time_table.heading('cid',text='Serial No')
                    self.civil_3rd_friday_time_table.heading('day1',text='Day')
                    self.civil_3rd_friday_time_table.heading('civil_3rd_friday_total_number_of_class',text='Totel class')
                    self.civil_3rd_friday_time_table.heading('civil_3rd_friday_time',text='class time')
                    self.civil_3rd_friday_time_table.heading('civil_3rd_friday_subject',text='Subject')
                    self.civil_3rd_friday_time_table.heading('civil_3rd_friday_faculty',text='Faculty')

                    self.civil_3rd_friday_time_table.column('cid',width=100)
                    self.civil_3rd_friday_time_table.column('day1',width=150)
                    self.civil_3rd_friday_time_table.column('civil_3rd_friday_total_number_of_class',width=100)
                    self.civil_3rd_friday_time_table.column('civil_3rd_friday_time',width=150)
                    self.civil_3rd_friday_time_table.column('civil_3rd_friday_subject',width=150)
                    self.civil_3rd_friday_time_table.column('civil_3rd_friday_faculty',width=150)

                    self.civil_3rd_friday_time_table['show']='headings'

                    self.civil_3rd_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.civil_3rd_friday_time_table.bind('<ButtonRelease-1>',civil_3rd_friday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_civil_3rd_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_civil_3rd_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_civil_3rd_subject_list=[]
                    self.fetch_civil_3rd_faculty_subject()
                    friday_civil_3rdmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_civil_3rd_subject_list)
                    friday_civil_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_civil_3rd_name_list=[]
                    self.fetch_civil_3rd_faculty_name()
                    friday_civil_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_civil_3rd_friday_civil_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_civil_3rd_name_list)
                    friday_civil_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    civil_3rd_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_civil_3rd_friday_faculty_serch)
                    civil_3rd_faculty_serch1.place(x=800,y=25)
                    civil_3rd_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=civil_3rd_faculty_serch)
                    civil_3rd_faculty_serch1_button.place(x=937,y=22)
                    civil_3rd_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    civil_3rd_add_database.place(x=10,y=140)

                    civil_3rd_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    civil_3rd_update_database.place(x=10,y=170)

                    civil_3rd_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    civil_3rd_delete_database.place(x=10,y=200)

                    civil_3rd_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    civil_3rd_clear_database.place(x=10,y=230)

###########################################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Civil_Engineering':
                if self.var_day_select.get() == 'Saturday':
                
                  
                    #print('this time table is for civil_3rdmistry cycle in civil engineering mondy')
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_civil_3rd_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_civil_3rd_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into civil_3rd_saturday_time_table_database(day1,civil_3rd_saturday_total_number_of_class,civil_3rd_saturday_time,civil_3rd_saturday_subject,civil_3rd_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_civil_3rd_saturday_number_of_class2.get(),
                                            self.var_civil_3rd_saturday_time1.get(),
                                            self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject1.get(),
                                            self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_3rd_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.civil_3rd_saturday_time_table.delete(*self.civil_3rd_saturday_time_table.get_children())
                            for row in rows:
                                self.civil_3rd_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def civil_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from civil_3rd_saturday_time_table_database where civil_3rd_saturday_subject LIKE '%{self.var_civil_3rd_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.civil_3rd_saturday_time_table.delete(*self.civil_3rd_saturday_time_table.get_children())
                                for row in rows:
                                    self.civil_3rd_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from civil_3rd_saturday_time_table_database where civil_3rd_saturday_subject=%s",(self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update civil_3rd_saturday_time_table_database set civil_3rd_saturday_total_number_of_class=%s,civil_3rd_saturday_time=%s,civil_3rd_saturday_faculty=%s where civil_3rd_saturday_subject=%s",(
                                        
                                        self.var_civil_3rd_saturday_number_of_class2.get(),
                                        self.var_civil_3rd_saturday_time1.get(),
                                        self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from civil_3rd_saturday_time_table_database where civil_3rd_saturday_subject=%s",(self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from civil_3rd_saturday_time_table_database where civil_3rd_saturday_subject=%s',(self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_civil_3rd_saturday_faculty_serch.set("")
                        self.var_civil_3rd_saturday_number_of_class2.set("")
                        self.var_civil_3rd_saturday_time1.set("")
                        self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject1.set("")
                        self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def civil_3rd_saturday_time_table_get(ev):
                        saturday_civil_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.civil_3rd_saturday_time_table.focus()
                        content1=self.civil_3rd_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_civil_3rd_saturday_number_of_class2.set(row1[2])
                        self.var_civil_3rd_saturday_time1.set(row1[3])
                        self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    ##################################################################################################################################################
                    self.saturday_civil_3rd_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_civil_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_civil_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_civil_3rd_time_table_data_frame,orient=VERTICAL)
                    self.civil_3rd_saturday_time_table=ttk.Treeview(self.saturday_civil_3rd_time_table_data_frame,columns=('cid','day1','civil_3rd_saturday_total_number_of_class','civil_3rd_saturday_time','civil_3rd_saturday_subject','civil_3rd_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.civil_3rd_saturday_time_table.xview)
                    scrolly.configure(command=self.civil_3rd_saturday_time_table.yview)

                    self.civil_3rd_saturday_time_table.heading('cid',text='Serial No')
                    self.civil_3rd_saturday_time_table.heading('day1',text='Day')
                    self.civil_3rd_saturday_time_table.heading('civil_3rd_saturday_total_number_of_class',text='Totel class')
                    self.civil_3rd_saturday_time_table.heading('civil_3rd_saturday_time',text='class time')
                    self.civil_3rd_saturday_time_table.heading('civil_3rd_saturday_subject',text='Subject')
                    self.civil_3rd_saturday_time_table.heading('civil_3rd_saturday_faculty',text='Faculty')

                    self.civil_3rd_saturday_time_table.column('cid',width=100)
                    self.civil_3rd_saturday_time_table.column('day1',width=150)
                    self.civil_3rd_saturday_time_table.column('civil_3rd_saturday_total_number_of_class',width=100)
                    self.civil_3rd_saturday_time_table.column('civil_3rd_saturday_time',width=150)
                    self.civil_3rd_saturday_time_table.column('civil_3rd_saturday_subject',width=150)
                    self.civil_3rd_saturday_time_table.column('civil_3rd_saturday_faculty',width=150)

                    self.civil_3rd_saturday_time_table['show']='headings'

                    self.civil_3rd_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.civil_3rd_saturday_time_table.bind('<ButtonRelease-1>',civil_3rd_saturday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_civil_3rd_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_civil_3rd_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_civil_3rd_subject_list=[]
                    self.fetch_civil_3rd_faculty_subject()
                    saturday_civil_3rdmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_civil_3rd_subject_list)
                    saturday_civil_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_civil_3rd_name_list=[]
                    self.fetch_civil_3rd_faculty_name()
                    saturday_civil_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_civil_3rd_saturday_civil_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_civil_3rd_name_list)
                    saturday_civil_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    civil_3rd_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_civil_3rd_saturday_faculty_serch)
                    civil_3rd_faculty_serch1.place(x=800,y=25)
                    civil_3rd_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=civil_3rd_faculty_serch)
                    civil_3rd_faculty_serch1_button.place(x=937,y=22)
                    civil_3rd_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    civil_3rd_add_database.place(x=10,y=140)

                    civil_3rd_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    civil_3rd_update_database.place(x=10,y=170)

                    civil_3rd_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    civil_3rd_delete_database.place(x=10,y=200)

                    civil_3rd_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    civil_3rd_clear_database.place(x=10,y=230)

       
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Mechanical_Engineering':
                if self.var_day_select.get() == 'Monday':
                

                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_mech_3rd_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_mech_3rd_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_mech_3rd_monday_mech_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_mech_3rd_monday_mech_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into mech_3rd_monday_time_table_database(day1,mech_3rd_monday_total_number_of_class,mech_3rd_monday_time,mech_3rd_monday_subject,mech_3rd_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_mech_3rd_monday_number_of_class1.get(),
                                            self.var_mech_3rd_monday_time1.get(),
                                            self.var_mech_3rd_monday_mech_3rdmistry_cycle_subject1.get(),
                                            self.var_mech_3rd_monday_mech_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_3rd_monday_time_table_database')
                            rows=cur.fetchall()
                            self.mech_3rd_monday_time_table.delete(*self.mech_3rd_monday_time_table.get_children())
                            for row in rows:
                                self.mech_3rd_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def mech_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from mech_3rd_monday_time_table_database where mech_3rd_monday_subject LIKE '%{self.var_mech_3rd_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.mech_3rd_monday_time_table.delete(*self.mech_3rd_monday_time_table.get_children())
                                for row in rows:
                                    self.mech_3rd_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_monday_mech_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from mech_3rd_monday_time_table_database where mech_3rd_monday_subject=%s",(self.var_mech_3rd_monday_mech_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update mech_3rd_monday_time_table_database set mech_3rd_monday_total_number_of_class=%s,mech_3rd_monday_time=%s,mech_3rd_monday_faculty=%s where mech_3rd_monday_subject=%s",(
                                        
                                        self.var_mech_3rd_monday_number_of_class1.get(),
                                        self.var_mech_3rd_monday_time1.get(),
                                        self.var_mech_3rd_monday_mech_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_mech_3rd_monday_mech_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_monday_mech_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from mech_3rd_monday_time_table_database where mech_3rd_monday_subject=%s",(self.var_mech_3rd_monday_mech_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from mech_3rd_monday_time_table_database where mech_3rd_monday_subject=%s',(self.var_mech_3rd_monday_mech_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_mech_3rd_monday_faculty_serch.set("")
                        self.var_mech_3rd_monday_number_of_class1.set("")
                        self.var_mech_3rd_monday_time1.set("")
                        self.var_mech_3rd_monday_mech_3rdmistry_cycle_subject1.set("")
                        self.var_mech_3rd_monday_mech_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def mech_3rd_monday_time_table_get(ev):
                        monday_mech_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.mech_3rd_monday_time_table.focus()
                        content1=self.mech_3rd_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_mech_3rd_monday_number_of_class1.set(row1[2])
                        self.var_mech_3rd_monday_time1.set(row1[3])
                        self.var_mech_3rd_monday_mech_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_mech_3rd_monday_mech_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    ##################################################################################################################################################
                    self.monday_mech_3rd_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_mech_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_mech_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_mech_3rd_time_table_data_frame,orient=VERTICAL)
                    self.mech_3rd_monday_time_table=ttk.Treeview(self.monday_mech_3rd_time_table_data_frame,columns=('cid','day1','mech_3rd_monday_total_number_of_class','mech_3rd_monday_time','mech_3rd_monday_subject','mech_3rd_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.mech_3rd_monday_time_table.xview)
                    scrolly.configure(command=self.mech_3rd_monday_time_table.yview)

                    self.mech_3rd_monday_time_table.heading('cid',text='Serial No')
                    self.mech_3rd_monday_time_table.heading('day1',text='Day')
                    self.mech_3rd_monday_time_table.heading('mech_3rd_monday_total_number_of_class',text='Totel class')
                    self.mech_3rd_monday_time_table.heading('mech_3rd_monday_time',text='class time')
                    self.mech_3rd_monday_time_table.heading('mech_3rd_monday_subject',text='Subject')
                    self.mech_3rd_monday_time_table.heading('mech_3rd_monday_faculty',text='Faculty')

                    self.mech_3rd_monday_time_table.column('cid',width=100)
                    self.mech_3rd_monday_time_table.column('day1',width=150)
                    self.mech_3rd_monday_time_table.column('mech_3rd_monday_total_number_of_class',width=100)
                    self.mech_3rd_monday_time_table.column('mech_3rd_monday_time',width=150)
                    self.mech_3rd_monday_time_table.column('mech_3rd_monday_subject',width=150)
                    self.mech_3rd_monday_time_table.column('mech_3rd_monday_faculty',width=150)

                    self.mech_3rd_monday_time_table['show']='headings'

                    self.mech_3rd_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.mech_3rd_monday_time_table.bind('<ButtonRelease-1>',mech_3rd_monday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_mech_3rd_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_mech_3rd_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_mech_3rd_subject_list=[]
                    self.fetch_mech_3rd_faculty_subject()
                    monday_mech_3rdmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_mech_3rd_monday_mech_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_mech_3rd_subject_list)
                    monday_mech_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_mech_3rd_name_list=[]
                    self.fetch_mech_3rd_faculty_name()
                    monday_mech_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_mech_3rd_monday_mech_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_mech_3rd_name_list)
                    monday_mech_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    mech_3rd_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_mech_3rd_monday_faculty_serch)
                    mech_3rd_faculty_serch1.place(x=800,y=25)
                    mech_3rd_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=mech_3rd_faculty_serch)
                    mech_3rd_faculty_serch1_button.place(x=937,y=22)
                    mech_3rd_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    mech_3rd_add_database.place(x=10,y=140)

                    mech_3rd_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    mech_3rd_update_database.place(x=10,y=170)

                    mech_3rd_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    mech_3rd_delete_database.place(x=10,y=200)

                    mech_3rd_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    mech_3rd_clear_database.place(x=10,y=230)
##############################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Mechanical_Engineering':
                if self.var_day_select.get() == 'Thuesday':
                
                  
                    #print('this time table is for mech_3rdmistry cycle in mech engineering mondy')
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_mech_3rd_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_mech_3rd_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_mech_3rd_thuesday_mech_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_mech_3rd_thuesday_mech_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into mech_3rd_thuesday_time_table_database(day1,mech_3rd_thuesday_total_number_of_class,mech_3rd_thuesday_time,mech_3rd_thuesday_subject,mech_3rd_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_mech_3rd_thuesday_number_of_class2.get(),
                                            self.var_mech_3rd_thuesday_time1.get(),
                                            self.var_mech_3rd_thuesday_mech_3rdmistry_cycle_subject1.get(),
                                            self.var_mech_3rd_thuesday_mech_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_3rd_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.mech_3rd_thuesday_time_table.delete(*self.mech_3rd_thuesday_time_table.get_children())
                            for row in rows:
                                self.mech_3rd_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def mech_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from mech_3rd_thuesday_time_table_database where mech_3rd_thuesday_subject LIKE '%{self.var_mech_3rd_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.mech_3rd_thuesday_time_table.delete(*self.mech_3rd_thuesday_time_table.get_children())
                                for row in rows:
                                    self.mech_3rd_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_thuesday_mech_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from mech_3rd_thuesday_time_table_database where mech_3rd_thuesday_subject=%s",(self.var_mech_3rd_thuesday_mech_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update mech_3rd_thuesday_time_table_database set mech_3rd_thuesday_total_number_of_class=%s,mech_3rd_thuesday_time=%s,mech_3rd_thuesday_faculty=%s where mech_3rd_thuesday_subject=%s",(
                                        
                                        self.var_mech_3rd_thuesday_number_of_class2.get(),
                                        self.var_mech_3rd_thuesday_time1.get(),
                                        self.var_mech_3rd_thuesday_mech_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_mech_3rd_thuesday_mech_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_thuesday_mech_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from mech_3rd_thuesday_time_table_database where mech_3rd_thuesday_subject=%s",(self.var_mech_3rd_thuesday_mech_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from mech_3rd_thuesday_time_table_database where mech_3rd_thuesday_subject=%s',(self.var_mech_3rd_thuesday_mech_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_mech_3rd_thuesday_faculty_serch.set("")
                        self.var_mech_3rd_thuesday_number_of_class2.set("")
                        self.var_mech_3rd_thuesday_time1.set("")
                        self.var_mech_3rd_thuesday_mech_3rdmistry_cycle_subject1.set("")
                        self.var_mech_3rd_thuesday_mech_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def mech_3rd_thuesday_time_table_get(ev):
                        thuesday_mech_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.mech_3rd_thuesday_time_table.focus()
                        content1=self.mech_3rd_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_mech_3rd_thuesday_number_of_class2.set(row1[2])
                        self.var_mech_3rd_thuesday_time1.set(row1[3])
                        self.var_mech_3rd_thuesday_mech_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_mech_3rd_thuesday_mech_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    ##################################################################################################################################################
                    self.thuesday_mech_3rd_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_mech_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_mech_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_mech_3rd_time_table_data_frame,orient=VERTICAL)
                    self.mech_3rd_thuesday_time_table=ttk.Treeview(self.thuesday_mech_3rd_time_table_data_frame,columns=('cid','day1','mech_3rd_thuesday_total_number_of_class','mech_3rd_thuesday_time','mech_3rd_thuesday_subject','mech_3rd_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.mech_3rd_thuesday_time_table.xview)
                    scrolly.configure(command=self.mech_3rd_thuesday_time_table.yview)

                    self.mech_3rd_thuesday_time_table.heading('cid',text='Serial No')
                    self.mech_3rd_thuesday_time_table.heading('day1',text='Day')
                    self.mech_3rd_thuesday_time_table.heading('mech_3rd_thuesday_total_number_of_class',text='Totel class')
                    self.mech_3rd_thuesday_time_table.heading('mech_3rd_thuesday_time',text='class time')
                    self.mech_3rd_thuesday_time_table.heading('mech_3rd_thuesday_subject',text='Subject')
                    self.mech_3rd_thuesday_time_table.heading('mech_3rd_thuesday_faculty',text='Faculty')

                    self.mech_3rd_thuesday_time_table.column('cid',width=100)
                    self.mech_3rd_thuesday_time_table.column('day1',width=150)
                    self.mech_3rd_thuesday_time_table.column('mech_3rd_thuesday_total_number_of_class',width=100)
                    self.mech_3rd_thuesday_time_table.column('mech_3rd_thuesday_time',width=150)
                    self.mech_3rd_thuesday_time_table.column('mech_3rd_thuesday_subject',width=150)
                    self.mech_3rd_thuesday_time_table.column('mech_3rd_thuesday_faculty',width=150)

                    self.mech_3rd_thuesday_time_table['show']='headings'

                    self.mech_3rd_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.mech_3rd_thuesday_time_table.bind('<ButtonRelease-1>',mech_3rd_thuesday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_mech_3rd_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_mech_3rd_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_mech_3rd_subject_list=[]
                    self.fetch_mech_3rd_faculty_subject()
                    thuesday_mech_3rdmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_mech_3rd_thuesday_mech_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_mech_3rd_subject_list)
                    thuesday_mech_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_mech_3rd_name_list=[]
                    self.fetch_mech_3rd_faculty_name()
                    thuesday_mech_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_mech_3rd_thuesday_mech_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_mech_3rd_name_list)
                    thuesday_mech_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    mech_3rd_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_mech_3rd_thuesday_faculty_serch)
                    mech_3rd_faculty_serch1.place(x=800,y=25)
                    mech_3rd_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=mech_3rd_faculty_serch)
                    mech_3rd_faculty_serch1_button.place(x=937,y=22)
                    mech_3rd_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    mech_3rd_add_database.place(x=10,y=140)

                    mech_3rd_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    mech_3rd_update_database.place(x=10,y=170)

                    mech_3rd_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    mech_3rd_delete_database.place(x=10,y=200)

                    mech_3rd_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    mech_3rd_clear_database.place(x=10,y=230)
############################################################################################################################################################################

        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Mechanical_Engineering':
                if self.var_day_select.get() == 'Wednesday':
                
                  
                    #print('this time table is for mech_3rdmistry cycle in mech engineering mondy')
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_mech_3rd_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_mech_3rd_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_mech_3rd_wednesday_mech_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_mech_3rd_wednesday_mech_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into mech_3rd_wednesday_time_table_database(day1,mech_3rd_wednesday_total_number_of_class,mech_3rd_wednesday_time,mech_3rd_wednesday_subject,mech_3rd_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_mech_3rd_wednesday_number_of_class2.get(),
                                            self.var_mech_3rd_wednesday_time1.get(),
                                            self.var_mech_3rd_wednesday_mech_3rdmistry_cycle_subject1.get(),
                                            self.var_mech_3rd_wednesday_mech_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_3rd_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.mech_3rd_wednesday_time_table.delete(*self.mech_3rd_wednesday_time_table.get_children())
                            for row in rows:
                                self.mech_3rd_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def mech_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from mech_3rd_wednesday_time_table_database where mech_3rd_wednesday_subject LIKE '%{self.var_mech_3rd_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.mech_3rd_wednesday_time_table.delete(*self.mech_3rd_wednesday_time_table.get_children())
                                for row in rows:
                                    self.mech_3rd_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_wednesday_mech_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from mech_3rd_wednesday_time_table_database where mech_3rd_wednesday_subject=%s",(self.var_mech_3rd_wednesday_mech_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update mech_3rd_wednesday_time_table_database set mech_3rd_wednesday_total_number_of_class=%s,mech_3rd_wednesday_time=%s,mech_3rd_wednesday_faculty=%s where mech_3rd_wednesday_subject=%s",(
                                        
                                        self.var_mech_3rd_wednesday_number_of_class2.get(),
                                        self.var_mech_3rd_wednesday_time1.get(),
                                        self.var_mech_3rd_wednesday_mech_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_mech_3rd_wednesday_mech_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_wednesday_mech_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from mech_3rd_wednesday_time_table_database where mech_3rd_wednesday_subject=%s",(self.var_mech_3rd_wednesday_mech_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from mech_3rd_wednesday_time_table_database where mech_3rd_wednesday_subject=%s',(self.var_mech_3rd_wednesday_mech_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_mech_3rd_wednesday_faculty_serch.set("")
                        self.var_mech_3rd_wednesday_number_of_class2.set("")
                        self.var_mech_3rd_wednesday_time1.set("")
                        self.var_mech_3rd_wednesday_mech_3rdmistry_cycle_subject1.set("")
                        self.var_mech_3rd_wednesday_mech_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def mech_3rd_wednesday_time_table_get(ev):
                        wednesday_mech_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.mech_3rd_wednesday_time_table.focus()
                        content1=self.mech_3rd_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_mech_3rd_wednesday_number_of_class2.set(row1[2])
                        self.var_mech_3rd_wednesday_time1.set(row1[3])
                        self.var_mech_3rd_wednesday_mech_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_mech_3rd_wednesday_mech_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    ##################################################################################################################################################
                    self.wednesday_mech_3rd_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_mech_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_mech_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_mech_3rd_time_table_data_frame,orient=VERTICAL)
                    self.mech_3rd_wednesday_time_table=ttk.Treeview(self.wednesday_mech_3rd_time_table_data_frame,columns=('cid','day1','mech_3rd_wednesday_total_number_of_class','mech_3rd_wednesday_time','mech_3rd_wednesday_subject','mech_3rd_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.mech_3rd_wednesday_time_table.xview)
                    scrolly.configure(command=self.mech_3rd_wednesday_time_table.yview)

                    self.mech_3rd_wednesday_time_table.heading('cid',text='Serial No')
                    self.mech_3rd_wednesday_time_table.heading('day1',text='Day')
                    self.mech_3rd_wednesday_time_table.heading('mech_3rd_wednesday_total_number_of_class',text='Totel class')
                    self.mech_3rd_wednesday_time_table.heading('mech_3rd_wednesday_time',text='class time')
                    self.mech_3rd_wednesday_time_table.heading('mech_3rd_wednesday_subject',text='Subject')
                    self.mech_3rd_wednesday_time_table.heading('mech_3rd_wednesday_faculty',text='Faculty')

                    self.mech_3rd_wednesday_time_table.column('cid',width=100)
                    self.mech_3rd_wednesday_time_table.column('day1',width=150)
                    self.mech_3rd_wednesday_time_table.column('mech_3rd_wednesday_total_number_of_class',width=100)
                    self.mech_3rd_wednesday_time_table.column('mech_3rd_wednesday_time',width=150)
                    self.mech_3rd_wednesday_time_table.column('mech_3rd_wednesday_subject',width=150)
                    self.mech_3rd_wednesday_time_table.column('mech_3rd_wednesday_faculty',width=150)

                    self.mech_3rd_wednesday_time_table['show']='headings'

                    self.mech_3rd_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.mech_3rd_wednesday_time_table.bind('<ButtonRelease-1>',mech_3rd_wednesday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_mech_3rd_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_mech_3rd_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_mech_3rd_subject_list=[]
                    self.fetch_mech_3rd_faculty_subject()
                    wednesday_mech_3rdmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_mech_3rd_wednesday_mech_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_mech_3rd_subject_list)
                    wednesday_mech_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_mech_3rd_name_list=[]
                    self.fetch_mech_3rd_faculty_name()
                    wednesday_mech_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_mech_3rd_wednesday_mech_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_mech_3rd_name_list)
                    wednesday_mech_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    mech_3rd_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_mech_3rd_wednesday_faculty_serch)
                    mech_3rd_faculty_serch1.place(x=800,y=25)
                    mech_3rd_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=mech_3rd_faculty_serch)
                    mech_3rd_faculty_serch1_button.place(x=937,y=22)
                    mech_3rd_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    mech_3rd_add_database.place(x=10,y=140)

                    mech_3rd_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    mech_3rd_update_database.place(x=10,y=170)

                    mech_3rd_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    mech_3rd_delete_database.place(x=10,y=200)

                    mech_3rd_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    mech_3rd_clear_database.place(x=10,y=230)

##############################################################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Mechanical_Engineering':
                if self.var_day_select.get() == 'Thursday':
                
                  
                    #print('this time table is for mech_3rdmistry cycle in mech engineering mondy')
                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_mech_3rd_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_mech_3rd_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_mech_3rd_thursday_mech_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_mech_3rd_thursday_mech_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into mech_3rd_thursday_time_table_database(day1,mech_3rd_thursday_total_number_of_class,mech_3rd_thursday_time,mech_3rd_thursday_subject,mech_3rd_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_mech_3rd_thursday_number_of_class2.get(),
                                            self.var_mech_3rd_thursday_time1.get(),
                                            self.var_mech_3rd_thursday_mech_3rdmistry_cycle_subject1.get(),
                                            self.var_mech_3rd_thursday_mech_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_3rd_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.mech_3rd_thursday_time_table.delete(*self.mech_3rd_thursday_time_table.get_children())
                            for row in rows:
                                self.mech_3rd_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def mech_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from mech_3rd_thursday_time_table_database where mech_3rd_thursday_subject LIKE '%{self.var_mech_3rd_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.mech_3rd_thursday_time_table.delete(*self.mech_3rd_thursday_time_table.get_children())
                                for row in rows:
                                    self.mech_3rd_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_thursday_mech_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from mech_3rd_thursday_time_table_database where mech_3rd_thursday_subject=%s",(self.var_mech_3rd_thursday_mech_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update mech_3rd_thursday_time_table_database set mech_3rd_thursday_total_number_of_class=%s,mech_3rd_thursday_time=%s,mech_3rd_thursday_faculty=%s where mech_3rd_thursday_subject=%s",(
                                        
                                        self.var_mech_3rd_thursday_number_of_class2.get(),
                                        self.var_mech_3rd_thursday_time1.get(),
                                        self.var_mech_3rd_thursday_mech_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_mech_3rd_thursday_mech_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_thursday_mech_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from mech_3rd_thursday_time_table_database where mech_3rd_thursday_subject=%s",(self.var_mech_3rd_thursday_mech_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from mech_3rd_thursday_time_table_database where mech_3rd_thursday_subject=%s',(self.var_mech_3rd_thursday_mech_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_mech_3rd_thursday_faculty_serch.set("")
                        self.var_mech_3rd_thursday_number_of_class2.set("")
                        self.var_mech_3rd_thursday_time1.set("")
                        self.var_mech_3rd_thursday_mech_3rdmistry_cycle_subject1.set("")
                        self.var_mech_3rd_thursday_mech_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def mech_3rd_thursday_time_table_get(ev):
                        thursday_mech_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.mech_3rd_thursday_time_table.focus()
                        content1=self.mech_3rd_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_mech_3rd_thursday_number_of_class2.set(row1[2])
                        self.var_mech_3rd_thursday_time1.set(row1[3])
                        self.var_mech_3rd_thursday_mech_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_mech_3rd_thursday_mech_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    ##################################################################################################################################################
                    self.thursday_mech_3rd_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_mech_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_mech_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_mech_3rd_time_table_data_frame,orient=VERTICAL)
                    self.mech_3rd_thursday_time_table=ttk.Treeview(self.thursday_mech_3rd_time_table_data_frame,columns=('cid','day1','mech_3rd_thursday_total_number_of_class','mech_3rd_thursday_time','mech_3rd_thursday_subject','mech_3rd_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.mech_3rd_thursday_time_table.xview)
                    scrolly.configure(command=self.mech_3rd_thursday_time_table.yview)

                    self.mech_3rd_thursday_time_table.heading('cid',text='Serial No')
                    self.mech_3rd_thursday_time_table.heading('day1',text='Day')
                    self.mech_3rd_thursday_time_table.heading('mech_3rd_thursday_total_number_of_class',text='Totel class')
                    self.mech_3rd_thursday_time_table.heading('mech_3rd_thursday_time',text='class time')
                    self.mech_3rd_thursday_time_table.heading('mech_3rd_thursday_subject',text='Subject')
                    self.mech_3rd_thursday_time_table.heading('mech_3rd_thursday_faculty',text='Faculty')

                    self.mech_3rd_thursday_time_table.column('cid',width=100)
                    self.mech_3rd_thursday_time_table.column('day1',width=150)
                    self.mech_3rd_thursday_time_table.column('mech_3rd_thursday_total_number_of_class',width=100)
                    self.mech_3rd_thursday_time_table.column('mech_3rd_thursday_time',width=150)
                    self.mech_3rd_thursday_time_table.column('mech_3rd_thursday_subject',width=150)
                    self.mech_3rd_thursday_time_table.column('mech_3rd_thursday_faculty',width=150)

                    self.mech_3rd_thursday_time_table['show']='headings'

                    self.mech_3rd_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.mech_3rd_thursday_time_table.bind('<ButtonRelease-1>',mech_3rd_thursday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_mech_3rd_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_mech_3rd_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_mech_3rd_subject_list=[]
                    self.fetch_mech_3rd_faculty_subject()
                    thursday_mech_3rdmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_mech_3rd_thursday_mech_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_mech_3rd_subject_list)
                    thursday_mech_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_mech_3rd_name_list=[]
                    self.fetch_mech_3rd_faculty_name()
                    thursday_mech_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_mech_3rd_thursday_mech_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_mech_3rd_name_list)
                    thursday_mech_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    mech_3rd_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_mech_3rd_thursday_faculty_serch)
                    mech_3rd_faculty_serch1.place(x=800,y=25)
                    mech_3rd_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=mech_3rd_faculty_serch)
                    mech_3rd_faculty_serch1_button.place(x=937,y=22)
                    mech_3rd_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    mech_3rd_add_database.place(x=10,y=140)

                    mech_3rd_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    mech_3rd_update_database.place(x=10,y=170)

                    mech_3rd_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    mech_3rd_delete_database.place(x=10,y=200)

                    mech_3rd_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    mech_3rd_clear_database.place(x=10,y=230)
#####################################################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Mechanical_Engineering':
                if self.var_day_select.get() == 'Friday':
                
                  
                    #print('this time table is for mech_3rdmistry cycle in mech engineering mondy')
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_mech_3rd_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_mech_3rd_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_mech_3rd_friday_mech_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_mech_3rd_friday_mech_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into mech_3rd_friday_time_table_database(day1,mech_3rd_friday_total_number_of_class,mech_3rd_friday_time,mech_3rd_friday_subject,mech_3rd_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_mech_3rd_friday_number_of_class2.get(),
                                            self.var_mech_3rd_friday_time1.get(),
                                            self.var_mech_3rd_friday_mech_3rdmistry_cycle_subject1.get(),
                                            self.var_mech_3rd_friday_mech_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_3rd_friday_time_table_database')
                            rows=cur.fetchall()
                            self.mech_3rd_friday_time_table.delete(*self.mech_3rd_friday_time_table.get_children())
                            for row in rows:
                                self.mech_3rd_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def mech_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from mech_3rd_friday_time_table_database where mech_3rd_friday_subject LIKE '%{self.var_mech_3rd_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.mech_3rd_friday_time_table.delete(*self.mech_3rd_friday_time_table.get_children())
                                for row in rows:
                                    self.mech_3rd_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_friday_mech_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from mech_3rd_friday_time_table_database where mech_3rd_friday_subject=%s",(self.var_mech_3rd_friday_mech_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update mech_3rd_friday_time_table_database set mech_3rd_friday_total_number_of_class=%s,mech_3rd_friday_time=%s,mech_3rd_friday_faculty=%s where mech_3rd_friday_subject=%s",(
                                        
                                        self.var_mech_3rd_friday_number_of_class2.get(),
                                        self.var_mech_3rd_friday_time1.get(),
                                        self.var_mech_3rd_friday_mech_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_mech_3rd_friday_mech_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_friday_mech_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from mech_3rd_friday_time_table_database where mech_3rd_friday_subject=%s",(self.var_mech_3rd_friday_mech_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from mech_3rd_friday_time_table_database where mech_3rd_friday_subject=%s',(self.var_mech_3rd_friday_mech_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_mech_3rd_friday_faculty_serch.set("")
                        self.var_mech_3rd_friday_number_of_class2.set("")
                        self.var_mech_3rd_friday_time1.set("")
                        self.var_mech_3rd_friday_mech_3rdmistry_cycle_subject1.set("")
                        self.var_mech_3rd_friday_mech_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def mech_3rd_friday_time_table_get(ev):
                        friday_mech_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.mech_3rd_friday_time_table.focus()
                        content1=self.mech_3rd_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_mech_3rd_friday_number_of_class2.set(row1[2])
                        self.var_mech_3rd_friday_time1.set(row1[3])
                        self.var_mech_3rd_friday_mech_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_mech_3rd_friday_mech_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    ##################################################################################################################################################
                    self.friday_mech_3rd_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_mech_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_mech_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_mech_3rd_time_table_data_frame,orient=VERTICAL)
                    self.mech_3rd_friday_time_table=ttk.Treeview(self.friday_mech_3rd_time_table_data_frame,columns=('cid','day1','mech_3rd_friday_total_number_of_class','mech_3rd_friday_time','mech_3rd_friday_subject','mech_3rd_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.mech_3rd_friday_time_table.xview)
                    scrolly.configure(command=self.mech_3rd_friday_time_table.yview)

                    self.mech_3rd_friday_time_table.heading('cid',text='Serial No')
                    self.mech_3rd_friday_time_table.heading('day1',text='Day')
                    self.mech_3rd_friday_time_table.heading('mech_3rd_friday_total_number_of_class',text='Totel class')
                    self.mech_3rd_friday_time_table.heading('mech_3rd_friday_time',text='class time')
                    self.mech_3rd_friday_time_table.heading('mech_3rd_friday_subject',text='Subject')
                    self.mech_3rd_friday_time_table.heading('mech_3rd_friday_faculty',text='Faculty')

                    self.mech_3rd_friday_time_table.column('cid',width=100)
                    self.mech_3rd_friday_time_table.column('day1',width=150)
                    self.mech_3rd_friday_time_table.column('mech_3rd_friday_total_number_of_class',width=100)
                    self.mech_3rd_friday_time_table.column('mech_3rd_friday_time',width=150)
                    self.mech_3rd_friday_time_table.column('mech_3rd_friday_subject',width=150)
                    self.mech_3rd_friday_time_table.column('mech_3rd_friday_faculty',width=150)

                    self.mech_3rd_friday_time_table['show']='headings'

                    self.mech_3rd_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.mech_3rd_friday_time_table.bind('<ButtonRelease-1>',mech_3rd_friday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_mech_3rd_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_mech_3rd_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_mech_3rd_subject_list=[]
                    self.fetch_mech_3rd_faculty_subject()
                    friday_mech_3rdmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_mech_3rd_friday_mech_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_mech_3rd_subject_list)
                    friday_mech_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_mech_3rd_name_list=[]
                    self.fetch_mech_3rd_faculty_name()
                    friday_mech_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_mech_3rd_friday_mech_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_mech_3rd_name_list)
                    friday_mech_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    mech_3rd_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_mech_3rd_friday_faculty_serch)
                    mech_3rd_faculty_serch1.place(x=800,y=25)
                    mech_3rd_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=mech_3rd_faculty_serch)
                    mech_3rd_faculty_serch1_button.place(x=937,y=22)
                    mech_3rd_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    mech_3rd_add_database.place(x=10,y=140)

                    mech_3rd_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    mech_3rd_update_database.place(x=10,y=170)

                    mech_3rd_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    mech_3rd_delete_database.place(x=10,y=200)

                    mech_3rd_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    mech_3rd_clear_database.place(x=10,y=230)

##########################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Mechanical_Engineering':
                if self.var_day_select.get() == 'Saturday':
                
                  
                    #print('this time table is for mech_3rdmistry cycle in mech engineering mondy')
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_mech_3rd_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_mech_3rd_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_mech_3rd_saturday_mech_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_mech_3rd_saturday_mech_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into mech_3rd_saturday_time_table_database(day1,mech_3rd_saturday_total_number_of_class,mech_3rd_saturday_time,mech_3rd_saturday_subject,mech_3rd_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_mech_3rd_saturday_number_of_class2.get(),
                                            self.var_mech_3rd_saturday_time1.get(),
                                            self.var_mech_3rd_saturday_mech_3rdmistry_cycle_subject1.get(),
                                            self.var_mech_3rd_saturday_mech_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_3rd_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.mech_3rd_saturday_time_table.delete(*self.mech_3rd_saturday_time_table.get_children())
                            for row in rows:
                                self.mech_3rd_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def mech_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from mech_3rd_saturday_time_table_database where mech_3rd_saturday_subject LIKE '%{self.var_mech_3rd_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.mech_3rd_saturday_time_table.delete(*self.mech_3rd_saturday_time_table.get_children())
                                for row in rows:
                                    self.mech_3rd_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_saturday_mech_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from mech_3rd_saturday_time_table_database where mech_3rd_saturday_subject=%s",(self.var_mech_3rd_saturday_mech_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update mech_3rd_saturday_time_table_database set mech_3rd_saturday_total_number_of_class=%s,mech_3rd_saturday_time=%s,mech_3rd_saturday_faculty=%s where mech_3rd_saturday_subject=%s",(
                                        
                                        self.var_mech_3rd_saturday_number_of_class2.get(),
                                        self.var_mech_3rd_saturday_time1.get(),
                                        self.var_mech_3rd_saturday_mech_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_mech_3rd_saturday_mech_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_3rd_saturday_mech_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from mech_3rd_saturday_time_table_database where mech_3rd_saturday_subject=%s",(self.var_mech_3rd_saturday_mech_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from mech_3rd_saturday_time_table_database where mech_3rd_saturday_subject=%s',(self.var_mech_3rd_saturday_mech_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_mech_3rd_saturday_faculty_serch.set("")
                        self.var_mech_3rd_saturday_number_of_class2.set("")
                        self.var_mech_3rd_saturday_time1.set("")
                        self.var_mech_3rd_saturday_mech_3rdmistry_cycle_subject1.set("")
                        self.var_mech_3rd_saturday_mech_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def mech_3rd_saturday_time_table_get(ev):
                        saturday_mech_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.mech_3rd_saturday_time_table.focus()
                        content1=self.mech_3rd_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_mech_3rd_saturday_number_of_class2.set(row1[2])
                        self.var_mech_3rd_saturday_time1.set(row1[3])
                        self.var_mech_3rd_saturday_mech_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_mech_3rd_saturday_mech_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    ##################################################################################################################################################
                    self.saturday_mech_3rd_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_mech_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_mech_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_mech_3rd_time_table_data_frame,orient=VERTICAL)
                    self.mech_3rd_saturday_time_table=ttk.Treeview(self.saturday_mech_3rd_time_table_data_frame,columns=('cid','day1','mech_3rd_saturday_total_number_of_class','mech_3rd_saturday_time','mech_3rd_saturday_subject','mech_3rd_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.mech_3rd_saturday_time_table.xview)
                    scrolly.configure(command=self.mech_3rd_saturday_time_table.yview)

                    self.mech_3rd_saturday_time_table.heading('cid',text='Serial No')
                    self.mech_3rd_saturday_time_table.heading('day1',text='Day')
                    self.mech_3rd_saturday_time_table.heading('mech_3rd_saturday_total_number_of_class',text='Totel class')
                    self.mech_3rd_saturday_time_table.heading('mech_3rd_saturday_time',text='class time')
                    self.mech_3rd_saturday_time_table.heading('mech_3rd_saturday_subject',text='Subject')
                    self.mech_3rd_saturday_time_table.heading('mech_3rd_saturday_faculty',text='Faculty')

                    self.mech_3rd_saturday_time_table.column('cid',width=100)
                    self.mech_3rd_saturday_time_table.column('day1',width=150)
                    self.mech_3rd_saturday_time_table.column('mech_3rd_saturday_total_number_of_class',width=100)
                    self.mech_3rd_saturday_time_table.column('mech_3rd_saturday_time',width=150)
                    self.mech_3rd_saturday_time_table.column('mech_3rd_saturday_subject',width=150)
                    self.mech_3rd_saturday_time_table.column('mech_3rd_saturday_faculty',width=150)

                    self.mech_3rd_saturday_time_table['show']='headings'

                    self.mech_3rd_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.mech_3rd_saturday_time_table.bind('<ButtonRelease-1>',mech_3rd_saturday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_mech_3rd_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_mech_3rd_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_mech_3rd_subject_list=[]
                    self.fetch_mech_3rd_faculty_subject()
                    saturday_mech_3rdmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_mech_3rd_saturday_mech_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_mech_3rd_subject_list)
                    saturday_mech_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_mech_3rd_name_list=[]
                    self.fetch_mech_3rd_faculty_name()
                    saturday_mech_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_mech_3rd_saturday_mech_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_mech_3rd_name_list)
                    saturday_mech_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    mech_3rd_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_mech_3rd_saturday_faculty_serch)
                    mech_3rd_faculty_serch1.place(x=800,y=25)
                    mech_3rd_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=mech_3rd_faculty_serch)
                    mech_3rd_faculty_serch1_button.place(x=937,y=22)
                    mech_3rd_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    mech_3rd_add_database.place(x=10,y=140)

                    mech_3rd_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    mech_3rd_update_database.place(x=10,y=170)

                    mech_3rd_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    mech_3rd_delete_database.place(x=10,y=200)

                    mech_3rd_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    mech_3rd_clear_database.place(x=10,y=230)


      
 
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Electrical_And_Electronic_Engineering':
                if self.var_day_select.get() == 'Monday':
         
                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_eee_3rd_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_eee_3rd_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into eee_3rd_monday_time_table_database(day1,eee_3rd_monday_total_number_of_class,eee_3rd_monday_time,eee_3rd_monday_subject,eee_3rd_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_eee_3rd_monday_number_of_class1.get(),
                                            self.var_eee_3rd_monday_time1.get(),
                                            self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject1.get(),
                                            self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_3rd_monday_time_table_database')
                            rows=cur.fetchall()
                            self.eee_3rd_monday_time_table.delete(*self.eee_3rd_monday_time_table.get_children())
                            for row in rows:
                                self.eee_3rd_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def eee_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from eee_3rd_monday_time_table_database where eee_3rd_monday_subject LIKE '%{self.var_eee_3rd_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.eee_3rd_monday_time_table.delete(*self.eee_3rd_monday_time_table.get_children())
                                for row in rows:
                                    self.eee_3rd_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from eee_3rd_monday_time_table_database where eee_3rd_monday_subject=%s",(self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update eee_3rd_monday_time_table_database set eee_3rd_monday_total_number_of_class=%s,eee_3rd_monday_time=%s,eee_3rd_monday_faculty=%s where eee_3rd_monday_subject=%s",(
                                        
                                        self.var_eee_3rd_monday_number_of_class1.get(),
                                        self.var_eee_3rd_monday_time1.get(),
                                        self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from eee_3rd_monday_time_table_database where eee_3rd_monday_subject=%s",(self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from eee_3rd_monday_time_table_database where eee_3rd_monday_subject=%s',(self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_eee_3rd_monday_faculty_serch.set("")
                        self.var_eee_3rd_monday_number_of_class1.set("")
                        self.var_eee_3rd_monday_time1.set("")
                        self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject1.set("")
                        self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def eee_3rd_monday_time_table_get(ev):
                        monday_eee_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.eee_3rd_monday_time_table.focus()
                        content1=self.eee_3rd_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_eee_3rd_monday_number_of_class1.set(row1[2])
                        self.var_eee_3rd_monday_time1.set(row1[3])
                        self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                   
                    self.monday_eee_3rd_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_eee_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_eee_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_eee_3rd_time_table_data_frame,orient=VERTICAL)
                    self.eee_3rd_monday_time_table=ttk.Treeview(self.monday_eee_3rd_time_table_data_frame,columns=('cid','day1','eee_3rd_monday_total_number_of_class','eee_3rd_monday_time','eee_3rd_monday_subject','eee_3rd_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.eee_3rd_monday_time_table.xview)
                    scrolly.configure(command=self.eee_3rd_monday_time_table.yview)

                    self.eee_3rd_monday_time_table.heading('cid',text='Serial No')
                    self.eee_3rd_monday_time_table.heading('day1',text='Day')
                    self.eee_3rd_monday_time_table.heading('eee_3rd_monday_total_number_of_class',text='Totel class')
                    self.eee_3rd_monday_time_table.heading('eee_3rd_monday_time',text='class time')
                    self.eee_3rd_monday_time_table.heading('eee_3rd_monday_subject',text='Subject')
                    self.eee_3rd_monday_time_table.heading('eee_3rd_monday_faculty',text='Faculty')

                    self.eee_3rd_monday_time_table.column('cid',width=100)
                    self.eee_3rd_monday_time_table.column('day1',width=150)
                    self.eee_3rd_monday_time_table.column('eee_3rd_monday_total_number_of_class',width=100)
                    self.eee_3rd_monday_time_table.column('eee_3rd_monday_time',width=150)
                    self.eee_3rd_monday_time_table.column('eee_3rd_monday_subject',width=150)
                    self.eee_3rd_monday_time_table.column('eee_3rd_monday_faculty',width=150)

                    self.eee_3rd_monday_time_table['show']='headings'

                    self.eee_3rd_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.eee_3rd_monday_time_table.bind('<ButtonRelease-1>',eee_3rd_monday_time_table_get)


                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_eee_3rd_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_eee_3rd_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_eee_3rd_subject_list=[]
                    self.fetch_eee_3rd_faculty_subject()
                    monday_eee_3rdmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_eee_3rd_subject_list)
                    monday_eee_3rdmistry_cycle_subject1.place(x=400,y=25) 
                 
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_eee_3rd_name_list=[]
                    self.fetch_eee_3rd_faculty_name()
                    monday_eee_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_eee_3rd_monday_eee_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_eee_3rd_name_list)
                    monday_eee_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    eee_3rd_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_eee_3rd_monday_faculty_serch)
                    eee_3rd_faculty_serch1.place(x=800,y=25)
                    eee_3rd_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=eee_3rd_faculty_serch)
                    eee_3rd_faculty_serch1_button.place(x=937,y=22)
                    eee_3rd_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    eee_3rd_add_database.place(x=10,y=140)

                    eee_3rd_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    eee_3rd_update_database.place(x=10,y=170)

                    eee_3rd_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    eee_3rd_delete_database.place(x=10,y=200)

                    eee_3rd_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    eee_3rd_clear_database.place(x=10,y=230)
################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Electrical_And_Electronic_Engineering':
                if self.var_day_select.get() == 'Thuesday':
                
                  
                    #print('this time table is for eee_3rdmistry cycle in civil engineering mondy')
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_eee_3rd_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_eee_3rd_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into eee_3rd_thuesday_time_table_database(day1,eee_3rd_thuesday_total_number_of_class,eee_3rd_thuesday_time,eee_3rd_thuesday_subject,eee_3rd_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_eee_3rd_thuesday_number_of_class2.get(),
                                            self.var_eee_3rd_thuesday_time1.get(),
                                            self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject1.get(),
                                            self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_3rd_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.eee_3rd_thuesday_time_table.delete(*self.eee_3rd_thuesday_time_table.get_children())
                            for row in rows:
                                self.eee_3rd_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def eee_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from eee_3rd_thuesday_time_table_database where eee_3rd_thuesday_subject LIKE '%{self.var_eee_3rd_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.eee_3rd_thuesday_time_table.delete(*self.eee_3rd_thuesday_time_table.get_children())
                                for row in rows:
                                    self.eee_3rd_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from eee_3rd_thuesday_time_table_database where eee_3rd_thuesday_subject=%s",(self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update eee_3rd_thuesday_time_table_database set eee_3rd_thuesday_total_number_of_class=%s,eee_3rd_thuesday_time=%s,eee_3rd_thuesday_faculty=%s where eee_3rd_thuesday_subject=%s",(
                                        
                                        self.var_eee_3rd_thuesday_number_of_class2.get(),
                                        self.var_eee_3rd_thuesday_time1.get(),
                                        self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from eee_3rd_thuesday_time_table_database where eee_3rd_thuesday_subject=%s",(self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from eee_3rd_thuesday_time_table_database where eee_3rd_thuesday_subject=%s',(self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_eee_3rd_thuesday_faculty_serch.set("")
                        self.var_eee_3rd_thuesday_number_of_class2.set("")
                        self.var_eee_3rd_thuesday_time1.set("")
                        self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject1.set("")
                        self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def eee_3rd_thuesday_time_table_get(ev):
                        thuesday_eee_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.eee_3rd_thuesday_time_table.focus()
                        content1=self.eee_3rd_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_eee_3rd_thuesday_number_of_class2.set(row1[2])
                        self.var_eee_3rd_thuesday_time1.set(row1[3])
                        self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    self.thuesday_eee_3rd_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_eee_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_eee_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_eee_3rd_time_table_data_frame,orient=VERTICAL)
                    self.eee_3rd_thuesday_time_table=ttk.Treeview(self.thuesday_eee_3rd_time_table_data_frame,columns=('cid','day1','eee_3rd_thuesday_total_number_of_class','eee_3rd_thuesday_time','eee_3rd_thuesday_subject','eee_3rd_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.eee_3rd_thuesday_time_table.xview)
                    scrolly.configure(command=self.eee_3rd_thuesday_time_table.yview)

                    self.eee_3rd_thuesday_time_table.heading('cid',text='Serial No')
                    self.eee_3rd_thuesday_time_table.heading('day1',text='Day')
                    self.eee_3rd_thuesday_time_table.heading('eee_3rd_thuesday_total_number_of_class',text='Totel class')
                    self.eee_3rd_thuesday_time_table.heading('eee_3rd_thuesday_time',text='class time')
                    self.eee_3rd_thuesday_time_table.heading('eee_3rd_thuesday_subject',text='Subject')
                    self.eee_3rd_thuesday_time_table.heading('eee_3rd_thuesday_faculty',text='Faculty')

                    self.eee_3rd_thuesday_time_table.column('cid',width=100)
                    self.eee_3rd_thuesday_time_table.column('day1',width=150)
                    self.eee_3rd_thuesday_time_table.column('eee_3rd_thuesday_total_number_of_class',width=100)
                    self.eee_3rd_thuesday_time_table.column('eee_3rd_thuesday_time',width=150)
                    self.eee_3rd_thuesday_time_table.column('eee_3rd_thuesday_subject',width=150)
                    self.eee_3rd_thuesday_time_table.column('eee_3rd_thuesday_faculty',width=150)

                    self.eee_3rd_thuesday_time_table['show']='headings'

                    self.eee_3rd_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.eee_3rd_thuesday_time_table.bind('<ButtonRelease-1>',eee_3rd_thuesday_time_table_get)

                    

                    

                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_eee_3rd_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_eee_3rd_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_eee_3rd_subject_list=[]
                    self.fetch_eee_3rd_faculty_subject()
                    thuesday_eee_3rdmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_eee_3rd_subject_list)
                    thuesday_eee_3rdmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_eee_3rd_name_list=[]
                    self.fetch_eee_3rd_faculty_name()
                    thuesday_eee_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_eee_3rd_thuesday_eee_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_eee_3rd_name_list)
                    thuesday_eee_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    eee_3rd_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_eee_3rd_thuesday_faculty_serch)
                    eee_3rd_faculty_serch1.place(x=800,y=25)
                    eee_3rd_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=eee_3rd_faculty_serch)
                    eee_3rd_faculty_serch1_button.place(x=937,y=22)
                    eee_3rd_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    eee_3rd_add_database.place(x=10,y=140)

                    eee_3rd_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    eee_3rd_update_database.place(x=10,y=170)

                    eee_3rd_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    eee_3rd_delete_database.place(x=10,y=200)

                    eee_3rd_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    eee_3rd_clear_database.place(x=10,y=230)
################################################################################################################################################################

        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Electrical_And_Electronic_Engineering':
                if self.var_day_select.get() == 'Wednesday':
                
                  
                    #print('this time table is for eee_3rdmistry cycle in civil engineering mondy')
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                         )   
                        cur=con.cursor()
                        if self.var_eee_3rd_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_eee_3rd_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into eee_3rd_wednesday_time_table_database(day1,eee_3rd_wednesday_total_number_of_class,eee_3rd_wednesday_time,eee_3rd_wednesday_subject,eee_3rd_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_eee_3rd_wednesday_number_of_class2.get(),
                                            self.var_eee_3rd_wednesday_time1.get(),
                                            self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject1.get(),
                                            self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_3rd_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.eee_3rd_wednesday_time_table.delete(*self.eee_3rd_wednesday_time_table.get_children())
                            for row in rows:
                                self.eee_3rd_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def eee_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from eee_3rd_wednesday_time_table_database where eee_3rd_wednesday_subject LIKE '%{self.var_eee_3rd_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.eee_3rd_wednesday_time_table.delete(*self.eee_3rd_wednesday_time_table.get_children())
                                for row in rows:
                                    self.eee_3rd_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from eee_3rd_wednesday_time_table_database where eee_3rd_wednesday_subject=%s",(self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update eee_3rd_wednesday_time_table_database set eee_3rd_wednesday_total_number_of_class=%s,eee_3rd_wednesday_time=%s,eee_3rd_wednesday_faculty=%s where eee_3rd_wednesday_subject=%s",(
                                        
                                        self.var_eee_3rd_wednesday_number_of_class2.get(),
                                        self.var_eee_3rd_wednesday_time1.get(),
                                        self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from eee_3rd_wednesday_time_table_database where eee_3rd_wednesday_subject=%s",(self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from eee_3rd_wednesday_time_table_database where eee_3rd_wednesday_subject=%s',(self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_eee_3rd_wednesday_faculty_serch.set("")
                        self.var_eee_3rd_wednesday_number_of_class2.set("")
                        self.var_eee_3rd_wednesday_time1.set("")
                        self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject1.set("")
                        self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def eee_3rd_wednesday_time_table_get(ev):
                        wednesday_eee_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.eee_3rd_wednesday_time_table.focus()
                        content1=self.eee_3rd_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_eee_3rd_wednesday_number_of_class2.set(row1[2])
                        self.var_eee_3rd_wednesday_time1.set(row1[3])
                        self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    ##################################################################################################################################################
                    self.wednesday_eee_3rd_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_eee_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_eee_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_eee_3rd_time_table_data_frame,orient=VERTICAL)
                    self.eee_3rd_wednesday_time_table=ttk.Treeview(self.wednesday_eee_3rd_time_table_data_frame,columns=('cid','day1','eee_3rd_wednesday_total_number_of_class','eee_3rd_wednesday_time','eee_3rd_wednesday_subject','eee_3rd_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.eee_3rd_wednesday_time_table.xview)
                    scrolly.configure(command=self.eee_3rd_wednesday_time_table.yview)

                    self.eee_3rd_wednesday_time_table.heading('cid',text='Serial No')
                    self.eee_3rd_wednesday_time_table.heading('day1',text='Day')
                    self.eee_3rd_wednesday_time_table.heading('eee_3rd_wednesday_total_number_of_class',text='Totel class')
                    self.eee_3rd_wednesday_time_table.heading('eee_3rd_wednesday_time',text='class time')
                    self.eee_3rd_wednesday_time_table.heading('eee_3rd_wednesday_subject',text='Subject')
                    self.eee_3rd_wednesday_time_table.heading('eee_3rd_wednesday_faculty',text='Faculty')

                    self.eee_3rd_wednesday_time_table.column('cid',width=100)
                    self.eee_3rd_wednesday_time_table.column('day1',width=150)
                    self.eee_3rd_wednesday_time_table.column('eee_3rd_wednesday_total_number_of_class',width=100)
                    self.eee_3rd_wednesday_time_table.column('eee_3rd_wednesday_time',width=150)
                    self.eee_3rd_wednesday_time_table.column('eee_3rd_wednesday_subject',width=150)
                    self.eee_3rd_wednesday_time_table.column('eee_3rd_wednesday_faculty',width=150)

                    self.eee_3rd_wednesday_time_table['show']='headings'

                    self.eee_3rd_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.eee_3rd_wednesday_time_table.bind('<ButtonRelease-1>',eee_3rd_wednesday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_eee_3rd_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_eee_3rd_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_eee_3rd_subject_list=[]
                    self.fetch_eee_3rd_faculty_subject()
                    wednesday_eee_3rdmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_eee_3rd_subject_list)
                    wednesday_eee_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_eee_3rd_name_list=[]
                    self.fetch_eee_3rd_faculty_name()
                    wednesday_eee_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_eee_3rd_wednesday_eee_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_eee_3rd_name_list)
                    wednesday_eee_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    eee_3rd_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_eee_3rd_wednesday_faculty_serch)
                    eee_3rd_faculty_serch1.place(x=800,y=25)
                    eee_3rd_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=eee_3rd_faculty_serch)
                    eee_3rd_faculty_serch1_button.place(x=937,y=22)
                    eee_3rd_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    eee_3rd_add_database.place(x=10,y=140)

                    eee_3rd_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    eee_3rd_update_database.place(x=10,y=170)

                    eee_3rd_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    eee_3rd_delete_database.place(x=10,y=200)

                    eee_3rd_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    eee_3rd_clear_database.place(x=10,y=230)

############################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Electrical_And_Electronic_Engineering':
                if self.var_day_select.get() == 'Thursday':
                
                  
                    #print('this time table is for eee_3rdmistry cycle in civil engineering mondy')
                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_eee_3rd_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_eee_3rd_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into eee_3rd_thursday_time_table_database(day1,eee_3rd_thursday_total_number_of_class,eee_3rd_thursday_time,eee_3rd_thursday_subject,eee_3rd_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_eee_3rd_thursday_number_of_class2.get(),
                                            self.var_eee_3rd_thursday_time1.get(),
                                            self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject1.get(),
                                            self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_3rd_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.eee_3rd_thursday_time_table.delete(*self.eee_3rd_thursday_time_table.get_children())
                            for row in rows:
                                self.eee_3rd_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def eee_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from eee_3rd_thursday_time_table_database where eee_3rd_thursday_subject LIKE '%{self.var_eee_3rd_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.eee_3rd_thursday_time_table.delete(*self.eee_3rd_thursday_time_table.get_children())
                                for row in rows:
                                    self.eee_3rd_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from eee_3rd_thursday_time_table_database where eee_3rd_thursday_subject=%s",(self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update eee_3rd_thursday_time_table_database set eee_3rd_thursday_total_number_of_class=%s,eee_3rd_thursday_time=%s,eee_3rd_thursday_faculty=%s where eee_3rd_thursday_subject=%s",(
                                        
                                        self.var_eee_3rd_thursday_number_of_class2.get(),
                                        self.var_eee_3rd_thursday_time1.get(),
                                        self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from eee_3rd_thursday_time_table_database where eee_3rd_thursday_subject=%s",(self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from eee_3rd_thursday_time_table_database where eee_3rd_thursday_subject=%s',(self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_eee_3rd_thursday_faculty_serch.set("")
                        self.var_eee_3rd_thursday_number_of_class2.set("")
                        self.var_eee_3rd_thursday_time1.set("")
                        self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject1.set("")
                        self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def eee_3rd_thursday_time_table_get(ev):
                        thursday_eee_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.eee_3rd_thursday_time_table.focus()
                        content1=self.eee_3rd_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_eee_3rd_thursday_number_of_class2.set(row1[2])
                        self.var_eee_3rd_thursday_time1.set(row1[3])
                        self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    ##################################################################################################################################################
                    self.thursday_eee_3rd_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_eee_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_eee_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_eee_3rd_time_table_data_frame,orient=VERTICAL)
                    self.eee_3rd_thursday_time_table=ttk.Treeview(self.thursday_eee_3rd_time_table_data_frame,columns=('cid','day1','eee_3rd_thursday_total_number_of_class','eee_3rd_thursday_time','eee_3rd_thursday_subject','eee_3rd_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.eee_3rd_thursday_time_table.xview)
                    scrolly.configure(command=self.eee_3rd_thursday_time_table.yview)

                    self.eee_3rd_thursday_time_table.heading('cid',text='Serial No')
                    self.eee_3rd_thursday_time_table.heading('day1',text='Day')
                    self.eee_3rd_thursday_time_table.heading('eee_3rd_thursday_total_number_of_class',text='Totel class')
                    self.eee_3rd_thursday_time_table.heading('eee_3rd_thursday_time',text='class time')
                    self.eee_3rd_thursday_time_table.heading('eee_3rd_thursday_subject',text='Subject')
                    self.eee_3rd_thursday_time_table.heading('eee_3rd_thursday_faculty',text='Faculty')

                    self.eee_3rd_thursday_time_table.column('cid',width=100)
                    self.eee_3rd_thursday_time_table.column('day1',width=150)
                    self.eee_3rd_thursday_time_table.column('eee_3rd_thursday_total_number_of_class',width=100)
                    self.eee_3rd_thursday_time_table.column('eee_3rd_thursday_time',width=150)
                    self.eee_3rd_thursday_time_table.column('eee_3rd_thursday_subject',width=150)
                    self.eee_3rd_thursday_time_table.column('eee_3rd_thursday_faculty',width=150)

                    self.eee_3rd_thursday_time_table['show']='headings'

                    self.eee_3rd_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.eee_3rd_thursday_time_table.bind('<ButtonRelease-1>',eee_3rd_thursday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_eee_3rd_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_eee_3rd_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_eee_3rd_subject_list=[]
                    self.fetch_eee_3rd_faculty_subject()
                    thursday_eee_3rdmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_eee_3rd_subject_list)
                    thursday_eee_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_eee_3rd_name_list=[]
                    self.fetch_eee_3rd_faculty_name()
                    thursday_eee_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_eee_3rd_thursday_eee_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_eee_3rd_name_list)
                    thursday_eee_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    eee_3rd_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_eee_3rd_thursday_faculty_serch)
                    eee_3rd_faculty_serch1.place(x=800,y=25)
                    eee_3rd_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=eee_3rd_faculty_serch)
                    eee_3rd_faculty_serch1_button.place(x=937,y=22)
                    eee_3rd_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    eee_3rd_add_database.place(x=10,y=140)

                    eee_3rd_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    eee_3rd_update_database.place(x=10,y=170)

                    eee_3rd_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    eee_3rd_delete_database.place(x=10,y=200)

                    eee_3rd_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    eee_3rd_clear_database.place(x=10,y=230)

######################################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Electrical_And_Electronic_Engineering':
                if self.var_day_select.get() == 'Friday':
                
                  
                    #print('this time table is for eee_3rdmistry cycle in civil engineering mondy')
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_eee_3rd_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_eee_3rd_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into eee_3rd_friday_time_table_database(day1,eee_3rd_friday_total_number_of_class,eee_3rd_friday_time,eee_3rd_friday_subject,eee_3rd_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_eee_3rd_friday_number_of_class2.get(),
                                            self.var_eee_3rd_friday_time1.get(),
                                            self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject1.get(),
                                            self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_3rd_friday_time_table_database')
                            rows=cur.fetchall()
                            self.eee_3rd_friday_time_table.delete(*self.eee_3rd_friday_time_table.get_children())
                            for row in rows:
                                self.eee_3rd_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def eee_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from eee_3rd_friday_time_table_database where eee_3rd_friday_subject LIKE '%{self.var_eee_3rd_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.eee_3rd_friday_time_table.delete(*self.eee_3rd_friday_time_table.get_children())
                                for row in rows:
                                    self.eee_3rd_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from eee_3rd_friday_time_table_database where eee_3rd_friday_subject=%s",(self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update eee_3rd_friday_time_table_database set eee_3rd_friday_total_number_of_class=%s,eee_3rd_friday_time=%s,eee_3rd_friday_faculty=%s where eee_3rd_friday_subject=%s",(
                                        
                                        self.var_eee_3rd_friday_number_of_class2.get(),
                                        self.var_eee_3rd_friday_time1.get(),
                                        self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from eee_3rd_friday_time_table_database where eee_3rd_friday_subject=%s",(self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from eee_3rd_friday_time_table_database where eee_3rd_friday_subject=%s',(self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_eee_3rd_friday_faculty_serch.set("")
                        self.var_eee_3rd_friday_number_of_class2.set("")
                        self.var_eee_3rd_friday_time1.set("")
                        self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject1.set("")
                        self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def eee_3rd_friday_time_table_get(ev):
                        friday_eee_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.eee_3rd_friday_time_table.focus()
                        content1=self.eee_3rd_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_eee_3rd_friday_number_of_class2.set(row1[2])
                        self.var_eee_3rd_friday_time1.set(row1[3])
                        self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    ##################################################################################################################################################
                    self.friday_eee_3rd_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_eee_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_eee_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_eee_3rd_time_table_data_frame,orient=VERTICAL)
                    self.eee_3rd_friday_time_table=ttk.Treeview(self.friday_eee_3rd_time_table_data_frame,columns=('cid','day1','eee_3rd_friday_total_number_of_class','eee_3rd_friday_time','eee_3rd_friday_subject','eee_3rd_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.eee_3rd_friday_time_table.xview)
                    scrolly.configure(command=self.eee_3rd_friday_time_table.yview)

                    self.eee_3rd_friday_time_table.heading('cid',text='Serial No')
                    self.eee_3rd_friday_time_table.heading('day1',text='Day')
                    self.eee_3rd_friday_time_table.heading('eee_3rd_friday_total_number_of_class',text='Totel class')
                    self.eee_3rd_friday_time_table.heading('eee_3rd_friday_time',text='class time')
                    self.eee_3rd_friday_time_table.heading('eee_3rd_friday_subject',text='Subject')
                    self.eee_3rd_friday_time_table.heading('eee_3rd_friday_faculty',text='Faculty')

                    self.eee_3rd_friday_time_table.column('cid',width=100)
                    self.eee_3rd_friday_time_table.column('day1',width=150)
                    self.eee_3rd_friday_time_table.column('eee_3rd_friday_total_number_of_class',width=100)
                    self.eee_3rd_friday_time_table.column('eee_3rd_friday_time',width=150)
                    self.eee_3rd_friday_time_table.column('eee_3rd_friday_subject',width=150)
                    self.eee_3rd_friday_time_table.column('eee_3rd_friday_faculty',width=150)

                    self.eee_3rd_friday_time_table['show']='headings'

                    self.eee_3rd_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.eee_3rd_friday_time_table.bind('<ButtonRelease-1>',eee_3rd_friday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_eee_3rd_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_eee_3rd_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_eee_3rd_subject_list=[]
                    self.fetch_eee_3rd_faculty_subject()
                    friday_eee_3rdmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_eee_3rd_subject_list)
                    friday_eee_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_eee_3rd_name_list=[]
                    self.fetch_eee_3rd_faculty_name()
                    friday_eee_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_eee_3rd_friday_eee_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_eee_3rd_name_list)
                    friday_eee_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    eee_3rd_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_eee_3rd_friday_faculty_serch)
                    eee_3rd_faculty_serch1.place(x=800,y=25)
                    eee_3rd_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=eee_3rd_faculty_serch)
                    eee_3rd_faculty_serch1_button.place(x=937,y=22)
                    eee_3rd_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    eee_3rd_add_database.place(x=10,y=140)

                    eee_3rd_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    eee_3rd_update_database.place(x=10,y=170)

                    eee_3rd_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    eee_3rd_delete_database.place(x=10,y=200)

                    eee_3rd_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    eee_3rd_clear_database.place(x=10,y=230)

#############################################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Electrical_And_Electronic_Engineering':
                if self.var_day_select.get() == 'Saturday':
                
                  
                    #print('this time table is for eee_3rdmistry cycle in civil engineering mondy')
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_eee_3rd_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_eee_3rd_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into eee_3rd_saturday_time_table_database(day1,eee_3rd_saturday_total_number_of_class,eee_3rd_saturday_time,eee_3rd_saturday_subject,eee_3rd_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_eee_3rd_saturday_number_of_class2.get(),
                                            self.var_eee_3rd_saturday_time1.get(),
                                            self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject1.get(),
                                            self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_3rd_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.eee_3rd_saturday_time_table.delete(*self.eee_3rd_saturday_time_table.get_children())
                            for row in rows:
                                self.eee_3rd_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def eee_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from eee_3rd_saturday_time_table_database where eee_3rd_saturday_subject LIKE '%{self.var_eee_3rd_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.eee_3rd_saturday_time_table.delete(*self.eee_3rd_saturday_time_table.get_children())
                                for row in rows:
                                    self.eee_3rd_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from eee_3rd_saturday_time_table_database where eee_3rd_saturday_subject=%s",(self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update eee_3rd_saturday_time_table_database set eee_3rd_saturday_total_number_of_class=%s,eee_3rd_saturday_time=%s,eee_3rd_saturday_faculty=%s where eee_3rd_saturday_subject=%s",(
                                        
                                        self.var_eee_3rd_saturday_number_of_class2.get(),
                                        self.var_eee_3rd_saturday_time1.get(),
                                        self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from eee_3rd_saturday_time_table_database where eee_3rd_saturday_subject=%s",(self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from eee_3rd_saturday_time_table_database where eee_3rd_saturday_subject=%s',(self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_eee_3rd_saturday_faculty_serch.set("")
                        self.var_eee_3rd_saturday_number_of_class2.set("")
                        self.var_eee_3rd_saturday_time1.set("")
                        self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject1.set("")
                        self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def eee_3rd_saturday_time_table_get(ev):
                        saturday_eee_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.eee_3rd_saturday_time_table.focus()
                        content1=self.eee_3rd_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_eee_3rd_saturday_number_of_class2.set(row1[2])
                        self.var_eee_3rd_saturday_time1.set(row1[3])
                        self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    ##################################################################################################################################################
                    self.saturday_eee_3rd_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_eee_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_eee_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_eee_3rd_time_table_data_frame,orient=VERTICAL)
                    self.eee_3rd_saturday_time_table=ttk.Treeview(self.saturday_eee_3rd_time_table_data_frame,columns=('cid','day1','eee_3rd_saturday_total_number_of_class','eee_3rd_saturday_time','eee_3rd_saturday_subject','eee_3rd_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.eee_3rd_saturday_time_table.xview)
                    scrolly.configure(command=self.eee_3rd_saturday_time_table.yview)

                    self.eee_3rd_saturday_time_table.heading('cid',text='Serial No')
                    self.eee_3rd_saturday_time_table.heading('day1',text='Day')
                    self.eee_3rd_saturday_time_table.heading('eee_3rd_saturday_total_number_of_class',text='Totel class')
                    self.eee_3rd_saturday_time_table.heading('eee_3rd_saturday_time',text='class time')
                    self.eee_3rd_saturday_time_table.heading('eee_3rd_saturday_subject',text='Subject')
                    self.eee_3rd_saturday_time_table.heading('eee_3rd_saturday_faculty',text='Faculty')

                    self.eee_3rd_saturday_time_table.column('cid',width=100)
                    self.eee_3rd_saturday_time_table.column('day1',width=150)
                    self.eee_3rd_saturday_time_table.column('eee_3rd_saturday_total_number_of_class',width=100)
                    self.eee_3rd_saturday_time_table.column('eee_3rd_saturday_time',width=150)
                    self.eee_3rd_saturday_time_table.column('eee_3rd_saturday_subject',width=150)
                    self.eee_3rd_saturday_time_table.column('eee_3rd_saturday_faculty',width=150)

                    self.eee_3rd_saturday_time_table['show']='headings'

                    self.eee_3rd_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.eee_3rd_saturday_time_table.bind('<ButtonRelease-1>',eee_3rd_saturday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_eee_3rd_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_eee_3rd_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_eee_3rd_subject_list=[]
                    self.fetch_eee_3rd_faculty_subject()
                    saturday_eee_3rdmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_eee_3rd_subject_list)
                    saturday_eee_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_eee_3rd_name_list=[]
                    self.fetch_eee_3rd_faculty_name()
                    saturday_eee_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_eee_3rd_saturday_eee_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_eee_3rd_name_list)
                    saturday_eee_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    eee_3rd_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_eee_3rd_saturday_faculty_serch)
                    eee_3rd_faculty_serch1.place(x=800,y=25)
                    eee_3rd_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=eee_3rd_faculty_serch)
                    eee_3rd_faculty_serch1_button.place(x=937,y=22)
                    eee_3rd_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    eee_3rd_add_database.place(x=10,y=140)

                    eee_3rd_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    eee_3rd_update_database.place(x=10,y=170)

                    eee_3rd_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    eee_3rd_delete_database.place(x=10,y=200)

                    eee_3rd_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    eee_3rd_clear_database.place(x=10,y=230)


  
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Communication_Engineering':
                if self.var_day_select.get() == 'Monday':
                

                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ece_3rd_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_ece_3rd_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into ece_3rd_monday_time_table_database(day1,ece_3rd_monday_total_number_of_class,ece_3rd_monday_time,ece_3rd_monday_subject,ece_3rd_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ece_3rd_monday_number_of_class1.get(),
                                            self.var_ece_3rd_monday_time1.get(),
                                            self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject1.get(),
                                            self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_3rd_monday_time_table_database')
                            rows=cur.fetchall()
                            self.ece_3rd_monday_time_table.delete(*self.ece_3rd_monday_time_table.get_children())
                            for row in rows:
                                self.ece_3rd_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def ece_3rd_faculty_serch():
                        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from ece_3rd_monday_time_table_database where ece_3rd_monday_subject LIKE '%{self.var_ece_3rd_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ece_3rd_monday_time_table.delete(*self.ece_3rd_monday_time_table.get_children())
                                for row in rows:
                                    self.ece_3rd_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from ece_3rd_monday_time_table_database where ece_3rd_monday_subject=%s",(self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update ece_3rd_monday_time_table_database set ece_3rd_monday_total_number_of_class=%s,ece_3rd_monday_time=%s,ece_3rd_monday_faculty=%s where ece_3rd_monday_subject=%s",(
                                        
                                        self.var_ece_3rd_monday_number_of_class1.get(),
                                        self.var_ece_3rd_monday_time1.get(),
                                        self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from ece_3rd_monday_time_table_database where ece_3rd_monday_subject=%s",(self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from ece_3rd_monday_time_table_database where ece_3rd_monday_subject=%s',(self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_ece_3rd_monday_faculty_serch.set("")
                        self.var_ece_3rd_monday_number_of_class1.set("")
                        self.var_ece_3rd_monday_time1.set("")
                        self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject1.set("")
                        self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def ece_3rd_monday_time_table_get(ev):
                        monday_ece_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.ece_3rd_monday_time_table.focus()
                        content1=self.ece_3rd_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ece_3rd_monday_number_of_class1.set(row1[2])
                        self.var_ece_3rd_monday_time1.set(row1[3])
                        self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    ##################################################################################################################################################
                    self.monday_ece_3rd_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_ece_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_ece_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_ece_3rd_time_table_data_frame,orient=VERTICAL)
                    self.ece_3rd_monday_time_table=ttk.Treeview(self.monday_ece_3rd_time_table_data_frame,columns=('cid','day1','ece_3rd_monday_total_number_of_class','ece_3rd_monday_time','ece_3rd_monday_subject','ece_3rd_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ece_3rd_monday_time_table.xview)
                    scrolly.configure(command=self.ece_3rd_monday_time_table.yview)

                    self.ece_3rd_monday_time_table.heading('cid',text='Serial No')
                    self.ece_3rd_monday_time_table.heading('day1',text='Day')
                    self.ece_3rd_monday_time_table.heading('ece_3rd_monday_total_number_of_class',text='Totel class')
                    self.ece_3rd_monday_time_table.heading('ece_3rd_monday_time',text='class time')
                    self.ece_3rd_monday_time_table.heading('ece_3rd_monday_subject',text='Subject')
                    self.ece_3rd_monday_time_table.heading('ece_3rd_monday_faculty',text='Faculty')

                    self.ece_3rd_monday_time_table.column('cid',width=100)
                    self.ece_3rd_monday_time_table.column('day1',width=150)
                    self.ece_3rd_monday_time_table.column('ece_3rd_monday_total_number_of_class',width=100)
                    self.ece_3rd_monday_time_table.column('ece_3rd_monday_time',width=150)
                    self.ece_3rd_monday_time_table.column('ece_3rd_monday_subject',width=150)
                    self.ece_3rd_monday_time_table.column('ece_3rd_monday_faculty',width=150)

                    self.ece_3rd_monday_time_table['show']='headings'

                    self.ece_3rd_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.ece_3rd_monday_time_table.bind('<ButtonRelease-1>',ece_3rd_monday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_ece_3rd_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_ece_3rd_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ece_3rd_subject_list=[]
                    self.fetch_ece_3rd_faculty_subject()
                    monday_ece_3rdmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_ece_3rd_subject_list)
                    monday_ece_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ece_3rd_name_list=[]
                    self.fetch_ece_3rd_faculty_name()
                    monday_ece_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_ece_3rd_monday_ece_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ece_3rd_name_list)
                    monday_ece_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ece_3rd_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_ece_3rd_monday_faculty_serch)
                    ece_3rd_faculty_serch1.place(x=800,y=25)
                    ece_3rd_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=ece_3rd_faculty_serch)
                    ece_3rd_faculty_serch1_button.place(x=937,y=22)
                    ece_3rd_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    ece_3rd_add_database.place(x=10,y=140)

                    ece_3rd_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    ece_3rd_update_database.place(x=10,y=170)

                    ece_3rd_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    ece_3rd_delete_database.place(x=10,y=200)

                    ece_3rd_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    ece_3rd_clear_database.place(x=10,y=230)
##############################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Communication_Engineering':
                if self.var_day_select.get() == 'Thuesday':
                
                  
                    #print('this time table is for ece_3rdmistry cycle in civil engineering mondy')
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ece_3rd_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_ece_3rd_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into ece_3rd_thuesday_time_table_database(day1,ece_3rd_thuesday_total_number_of_class,ece_3rd_thuesday_time,ece_3rd_thuesday_subject,ece_3rd_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ece_3rd_thuesday_number_of_class2.get(),
                                            self.var_ece_3rd_thuesday_time1.get(),
                                            self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject1.get(),
                                            self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_3rd_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.ece_3rd_thuesday_time_table.delete(*self.ece_3rd_thuesday_time_table.get_children())
                            for row in rows:
                                self.ece_3rd_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def ece_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from ece_3rd_thuesday_time_table_database where ece_3rd_thuesday_subject LIKE '%{self.var_ece_3rd_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ece_3rd_thuesday_time_table.delete(*self.ece_3rd_thuesday_time_table.get_children())
                                for row in rows:
                                    self.ece_3rd_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from ece_3rd_thuesday_time_table_database where ece_3rd_thuesday_subject=%s",(self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update ece_3rd_thuesday_time_table_database set ece_3rd_thuesday_total_number_of_class=%s,ece_3rd_thuesday_time=%s,ece_3rd_thuesday_faculty=%s where ece_3rd_thuesday_subject=%s",(
                                        
                                        self.var_ece_3rd_thuesday_number_of_class2.get(),
                                        self.var_ece_3rd_thuesday_time1.get(),
                                        self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from ece_3rd_thuesday_time_table_database where ece_3rd_thuesday_subject=%s",(self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from ece_3rd_thuesday_time_table_database where ece_3rd_thuesday_subject=%s',(self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_ece_3rd_thuesday_faculty_serch.set("")
                        self.var_ece_3rd_thuesday_number_of_class2.set("")
                        self.var_ece_3rd_thuesday_time1.set("")
                        self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject1.set("")
                        self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def ece_3rd_thuesday_time_table_get(ev):
                        thuesday_ece_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.ece_3rd_thuesday_time_table.focus()
                        content1=self.ece_3rd_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ece_3rd_thuesday_number_of_class2.set(row1[2])
                        self.var_ece_3rd_thuesday_time1.set(row1[3])
                        self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    
                    self.thuesday_ece_3rd_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_ece_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_ece_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_ece_3rd_time_table_data_frame,orient=VERTICAL)
                    self.ece_3rd_thuesday_time_table=ttk.Treeview(self.thuesday_ece_3rd_time_table_data_frame,columns=('cid','day1','ece_3rd_thuesday_total_number_of_class','ece_3rd_thuesday_time','ece_3rd_thuesday_subject','ece_3rd_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ece_3rd_thuesday_time_table.xview)
                    scrolly.configure(command=self.ece_3rd_thuesday_time_table.yview)

                    self.ece_3rd_thuesday_time_table.heading('cid',text='Serial No')
                    self.ece_3rd_thuesday_time_table.heading('day1',text='Day')
                    self.ece_3rd_thuesday_time_table.heading('ece_3rd_thuesday_total_number_of_class',text='Totel class')
                    self.ece_3rd_thuesday_time_table.heading('ece_3rd_thuesday_time',text='class time')
                    self.ece_3rd_thuesday_time_table.heading('ece_3rd_thuesday_subject',text='Subject')
                    self.ece_3rd_thuesday_time_table.heading('ece_3rd_thuesday_faculty',text='Faculty')

                    self.ece_3rd_thuesday_time_table.column('cid',width=100)
                    self.ece_3rd_thuesday_time_table.column('day1',width=150)
                    self.ece_3rd_thuesday_time_table.column('ece_3rd_thuesday_total_number_of_class',width=100)
                    self.ece_3rd_thuesday_time_table.column('ece_3rd_thuesday_time',width=150)
                    self.ece_3rd_thuesday_time_table.column('ece_3rd_thuesday_subject',width=150)
                    self.ece_3rd_thuesday_time_table.column('ece_3rd_thuesday_faculty',width=150)

                    self.ece_3rd_thuesday_time_table['show']='headings'

                    self.ece_3rd_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.ece_3rd_thuesday_time_table.bind('<ButtonRelease-1>',ece_3rd_thuesday_time_table_get)


                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_ece_3rd_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_ece_3rd_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ece_3rd_subject_list=[]
                    self.fetch_ece_3rd_faculty_subject()
                    thuesday_ece_3rdmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_ece_3rd_subject_list)
                    thuesday_ece_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ece_3rd_name_list=[]
                    self.fetch_ece_3rd_faculty_name()
                    thuesday_ece_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_ece_3rd_thuesday_ece_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ece_3rd_name_list)
                    thuesday_ece_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ece_3rd_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_ece_3rd_thuesday_faculty_serch)
                    ece_3rd_faculty_serch1.place(x=800,y=25)
                    ece_3rd_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=ece_3rd_faculty_serch)
                    ece_3rd_faculty_serch1_button.place(x=937,y=22)
                    ece_3rd_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    ece_3rd_add_database.place(x=10,y=140)

                    ece_3rd_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    ece_3rd_update_database.place(x=10,y=170)

                    ece_3rd_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    ece_3rd_delete_database.place(x=10,y=200)

                    ece_3rd_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    ece_3rd_clear_database.place(x=10,y=230)

        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Communication_Engineering':
                if self.var_day_select.get() == 'Wednesday':
                
                  
                    #print('this time table is for ece_3rdmistry cycle in civil engineering mondy')
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ece_3rd_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_ece_3rd_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into ece_3rd_wednesday_time_table_database(day1,ece_3rd_wednesday_total_number_of_class,ece_3rd_wednesday_time,ece_3rd_wednesday_subject,ece_3rd_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ece_3rd_wednesday_number_of_class2.get(),
                                            self.var_ece_3rd_wednesday_time1.get(),
                                            self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject1.get(),
                                            self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_3rd_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.ece_3rd_wednesday_time_table.delete(*self.ece_3rd_wednesday_time_table.get_children())
                            for row in rows:
                                self.ece_3rd_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def ece_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from ece_3rd_wednesday_time_table_database where ece_3rd_wednesday_subject LIKE '%{self.var_ece_3rd_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ece_3rd_wednesday_time_table.delete(*self.ece_3rd_wednesday_time_table.get_children())
                                for row in rows:
                                    self.ece_3rd_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from ece_3rd_wednesday_time_table_database where ece_3rd_wednesday_subject=%s",(self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update ece_3rd_wednesday_time_table_database set ece_3rd_wednesday_total_number_of_class=%s,ece_3rd_wednesday_time=%s,ece_3rd_wednesday_faculty=%s where ece_3rd_wednesday_subject=%s",(
                                        
                                        self.var_ece_3rd_wednesday_number_of_class2.get(),
                                        self.var_ece_3rd_wednesday_time1.get(),
                                        self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from ece_3rd_wednesday_time_table_database where ece_3rd_wednesday_subject=%s",(self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from ece_3rd_wednesday_time_table_database where ece_3rd_wednesday_subject=%s',(self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_ece_3rd_wednesday_faculty_serch.set("")
                        self.var_ece_3rd_wednesday_number_of_class2.set("")
                        self.var_ece_3rd_wednesday_time1.set("")
                        self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject1.set("")
                        self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def ece_3rd_wednesday_time_table_get(ev):
                        wednesday_ece_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.ece_3rd_wednesday_time_table.focus()
                        content1=self.ece_3rd_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ece_3rd_wednesday_number_of_class2.set(row1[2])
                        self.var_ece_3rd_wednesday_time1.set(row1[3])
                        self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    
                    self.wednesday_ece_3rd_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_ece_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_ece_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_ece_3rd_time_table_data_frame,orient=VERTICAL)
                    self.ece_3rd_wednesday_time_table=ttk.Treeview(self.wednesday_ece_3rd_time_table_data_frame,columns=('cid','day1','ece_3rd_wednesday_total_number_of_class','ece_3rd_wednesday_time','ece_3rd_wednesday_subject','ece_3rd_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ece_3rd_wednesday_time_table.xview)
                    scrolly.configure(command=self.ece_3rd_wednesday_time_table.yview)

                    self.ece_3rd_wednesday_time_table.heading('cid',text='Serial No')
                    self.ece_3rd_wednesday_time_table.heading('day1',text='Day')
                    self.ece_3rd_wednesday_time_table.heading('ece_3rd_wednesday_total_number_of_class',text='Totel class')
                    self.ece_3rd_wednesday_time_table.heading('ece_3rd_wednesday_time',text='class time')
                    self.ece_3rd_wednesday_time_table.heading('ece_3rd_wednesday_subject',text='Subject')
                    self.ece_3rd_wednesday_time_table.heading('ece_3rd_wednesday_faculty',text='Faculty')

                    self.ece_3rd_wednesday_time_table.column('cid',width=100)
                    self.ece_3rd_wednesday_time_table.column('day1',width=150)
                    self.ece_3rd_wednesday_time_table.column('ece_3rd_wednesday_total_number_of_class',width=100)
                    self.ece_3rd_wednesday_time_table.column('ece_3rd_wednesday_time',width=150)
                    self.ece_3rd_wednesday_time_table.column('ece_3rd_wednesday_subject',width=150)
                    self.ece_3rd_wednesday_time_table.column('ece_3rd_wednesday_faculty',width=150)

                    self.ece_3rd_wednesday_time_table['show']='headings'

                    self.ece_3rd_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.ece_3rd_wednesday_time_table.bind('<ButtonRelease-1>',ece_3rd_wednesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_ece_3rd_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_ece_3rd_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ece_3rd_subject_list=[]
                    self.fetch_ece_3rd_faculty_subject()
                    wednesday_ece_3rdmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_ece_3rd_subject_list)
                    wednesday_ece_3rdmistry_cycle_subject1.place(x=400,y=25) 
                
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ece_3rd_name_list=[]
                    self.fetch_ece_3rd_faculty_name()
                    wednesday_ece_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_ece_3rd_wednesday_ece_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ece_3rd_name_list)
                    wednesday_ece_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ece_3rd_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_ece_3rd_wednesday_faculty_serch)
                    ece_3rd_faculty_serch1.place(x=800,y=25)
                    ece_3rd_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=ece_3rd_faculty_serch)
                    ece_3rd_faculty_serch1_button.place(x=937,y=22)
                    ece_3rd_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    ece_3rd_add_database.place(x=10,y=140)

                    ece_3rd_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    ece_3rd_update_database.place(x=10,y=170)

                    ece_3rd_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    ece_3rd_delete_database.place(x=10,y=200)

                    ece_3rd_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    ece_3rd_clear_database.place(x=10,y=230)

###################################################################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Communication_Engineering':
                if self.var_day_select.get() == 'Thursday':
                
                  
                    #print('this time table is for ece_3rdmistry cycle in civil engineering mondy')
                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ece_3rd_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_ece_3rd_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into ece_3rd_thursday_time_table_database(day1,ece_3rd_thursday_total_number_of_class,ece_3rd_thursday_time,ece_3rd_thursday_subject,ece_3rd_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ece_3rd_thursday_number_of_class2.get(),
                                            self.var_ece_3rd_thursday_time1.get(),
                                            self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject1.get(),
                                            self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_3rd_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.ece_3rd_thursday_time_table.delete(*self.ece_3rd_thursday_time_table.get_children())
                            for row in rows:
                                self.ece_3rd_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def ece_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from ece_3rd_thursday_time_table_database where ece_3rd_thursday_subject LIKE '%{self.var_ece_3rd_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ece_3rd_thursday_time_table.delete(*self.ece_3rd_thursday_time_table.get_children())
                                for row in rows:
                                    self.ece_3rd_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from ece_3rd_thursday_time_table_database where ece_3rd_thursday_subject=%s",(self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update ece_3rd_thursday_time_table_database set ece_3rd_thursday_total_number_of_class=%s,ece_3rd_thursday_time=%s,ece_3rd_thursday_faculty=%s where ece_3rd_thursday_subject=%s",(
                                        
                                        self.var_ece_3rd_thursday_number_of_class2.get(),
                                        self.var_ece_3rd_thursday_time1.get(),
                                        self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from ece_3rd_thursday_time_table_database where ece_3rd_thursday_subject=%s",(self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from ece_3rd_thursday_time_table_database where ece_3rd_thursday_subject=%s',(self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_ece_3rd_thursday_faculty_serch.set("")
                        self.var_ece_3rd_thursday_number_of_class2.set("")
                        self.var_ece_3rd_thursday_time1.set("")
                        self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject1.set("")
                        self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def ece_3rd_thursday_time_table_get(ev):
                        thursday_ece_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.ece_3rd_thursday_time_table.focus()
                        content1=self.ece_3rd_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ece_3rd_thursday_number_of_class2.set(row1[2])
                        self.var_ece_3rd_thursday_time1.set(row1[3])
                        self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    ##################################################################################################################################################
                    self.thursday_ece_3rd_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_ece_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_ece_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_ece_3rd_time_table_data_frame,orient=VERTICAL)
                    self.ece_3rd_thursday_time_table=ttk.Treeview(self.thursday_ece_3rd_time_table_data_frame,columns=('cid','day1','ece_3rd_thursday_total_number_of_class','ece_3rd_thursday_time','ece_3rd_thursday_subject','ece_3rd_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ece_3rd_thursday_time_table.xview)
                    scrolly.configure(command=self.ece_3rd_thursday_time_table.yview)

                    self.ece_3rd_thursday_time_table.heading('cid',text='Serial No')
                    self.ece_3rd_thursday_time_table.heading('day1',text='Day')
                    self.ece_3rd_thursday_time_table.heading('ece_3rd_thursday_total_number_of_class',text='Totel class')
                    self.ece_3rd_thursday_time_table.heading('ece_3rd_thursday_time',text='class time')
                    self.ece_3rd_thursday_time_table.heading('ece_3rd_thursday_subject',text='Subject')
                    self.ece_3rd_thursday_time_table.heading('ece_3rd_thursday_faculty',text='Faculty')

                    self.ece_3rd_thursday_time_table.column('cid',width=100)
                    self.ece_3rd_thursday_time_table.column('day1',width=150)
                    self.ece_3rd_thursday_time_table.column('ece_3rd_thursday_total_number_of_class',width=100)
                    self.ece_3rd_thursday_time_table.column('ece_3rd_thursday_time',width=150)
                    self.ece_3rd_thursday_time_table.column('ece_3rd_thursday_subject',width=150)
                    self.ece_3rd_thursday_time_table.column('ece_3rd_thursday_faculty',width=150)

                    self.ece_3rd_thursday_time_table['show']='headings'

                    self.ece_3rd_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.ece_3rd_thursday_time_table.bind('<ButtonRelease-1>',ece_3rd_thursday_time_table_get)

                    

                    ##################################################################################################################################################

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_ece_3rd_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_ece_3rd_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ece_3rd_subject_list=[]
                    self.fetch_ece_3rd_faculty_subject()
                    thursday_ece_3rdmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_ece_3rd_subject_list)
                    thursday_ece_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ece_3rd_name_list=[]
                    self.fetch_ece_3rd_faculty_name()
                    thursday_ece_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_ece_3rd_thursday_ece_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ece_3rd_name_list)
                    thursday_ece_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ece_3rd_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_ece_3rd_thursday_faculty_serch)
                    ece_3rd_faculty_serch1.place(x=800,y=25)
                    ece_3rd_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=ece_3rd_faculty_serch)
                    ece_3rd_faculty_serch1_button.place(x=937,y=22)
                    ece_3rd_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    ece_3rd_add_database.place(x=10,y=140)

                    ece_3rd_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    ece_3rd_update_database.place(x=10,y=170)

                    ece_3rd_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    ece_3rd_delete_database.place(x=10,y=200)

                    ece_3rd_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    ece_3rd_clear_database.place(x=10,y=230)

########################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Communication_Engineering':
                if self.var_day_select.get() == 'Friday':
                
                  
                    #print('this time table is for ece_3rdmistry cycle in civil engineering mondy')
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ece_3rd_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_ece_3rd_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into ece_3rd_friday_time_table_database(day1,ece_3rd_friday_total_number_of_class,ece_3rd_friday_time,ece_3rd_friday_subject,ece_3rd_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ece_3rd_friday_number_of_class2.get(),
                                            self.var_ece_3rd_friday_time1.get(),
                                            self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject1.get(),
                                            self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_3rd_friday_time_table_database')
                            rows=cur.fetchall()
                            self.ece_3rd_friday_time_table.delete(*self.ece_3rd_friday_time_table.get_children())
                            for row in rows:
                                self.ece_3rd_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def ece_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from ece_3rd_friday_time_table_database where ece_3rd_friday_subject LIKE '%{self.var_ece_3rd_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ece_3rd_friday_time_table.delete(*self.ece_3rd_friday_time_table.get_children())
                                for row in rows:
                                    self.ece_3rd_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from ece_3rd_friday_time_table_database where ece_3rd_friday_subject=%s",(self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update ece_3rd_friday_time_table_database set ece_3rd_friday_total_number_of_class=%s,ece_3rd_friday_time=%s,ece_3rd_friday_faculty=%s where ece_3rd_friday_subject=%s",(
                                        
                                        self.var_ece_3rd_friday_number_of_class2.get(),
                                        self.var_ece_3rd_friday_time1.get(),
                                        self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from ece_3rd_friday_time_table_database where ece_3rd_friday_subject=%s",(self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from ece_3rd_friday_time_table_database where ece_3rd_friday_subject=%s',(self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_ece_3rd_friday_faculty_serch.set("")
                        self.var_ece_3rd_friday_number_of_class2.set("")
                        self.var_ece_3rd_friday_time1.set("")
                        self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject1.set("")
                        self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def ece_3rd_friday_time_table_get(ev):
                        friday_ece_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.ece_3rd_friday_time_table.focus()
                        content1=self.ece_3rd_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ece_3rd_friday_number_of_class2.set(row1[2])
                        self.var_ece_3rd_friday_time1.set(row1[3])
                        self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.friday_ece_3rd_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_ece_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_ece_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_ece_3rd_time_table_data_frame,orient=VERTICAL)
                    self.ece_3rd_friday_time_table=ttk.Treeview(self.friday_ece_3rd_time_table_data_frame,columns=('cid','day1','ece_3rd_friday_total_number_of_class','ece_3rd_friday_time','ece_3rd_friday_subject','ece_3rd_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ece_3rd_friday_time_table.xview)
                    scrolly.configure(command=self.ece_3rd_friday_time_table.yview)

                    self.ece_3rd_friday_time_table.heading('cid',text='Serial No')
                    self.ece_3rd_friday_time_table.heading('day1',text='Day')
                    self.ece_3rd_friday_time_table.heading('ece_3rd_friday_total_number_of_class',text='Totel class')
                    self.ece_3rd_friday_time_table.heading('ece_3rd_friday_time',text='class time')
                    self.ece_3rd_friday_time_table.heading('ece_3rd_friday_subject',text='Subject')
                    self.ece_3rd_friday_time_table.heading('ece_3rd_friday_faculty',text='Faculty')

                    self.ece_3rd_friday_time_table.column('cid',width=100)
                    self.ece_3rd_friday_time_table.column('day1',width=150)
                    self.ece_3rd_friday_time_table.column('ece_3rd_friday_total_number_of_class',width=100)
                    self.ece_3rd_friday_time_table.column('ece_3rd_friday_time',width=150)
                    self.ece_3rd_friday_time_table.column('ece_3rd_friday_subject',width=150)
                    self.ece_3rd_friday_time_table.column('ece_3rd_friday_faculty',width=150)

                    self.ece_3rd_friday_time_table['show']='headings'

                    self.ece_3rd_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.ece_3rd_friday_time_table.bind('<ButtonRelease-1>',ece_3rd_friday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_ece_3rd_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_ece_3rd_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ece_3rd_subject_list=[]
                    self.fetch_ece_3rd_faculty_subject()
                    friday_ece_3rdmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_ece_3rd_subject_list)
                    friday_ece_3rdmistry_cycle_subject1.place(x=400,y=25) 
              
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ece_3rd_name_list=[]
                    self.fetch_ece_3rd_faculty_name()
                    friday_ece_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ece_3rd_friday_ece_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ece_3rd_name_list)
                    friday_ece_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ece_3rd_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_ece_3rd_friday_faculty_serch)
                    ece_3rd_faculty_serch1.place(x=800,y=25)
                    ece_3rd_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=ece_3rd_faculty_serch)
                    ece_3rd_faculty_serch1_button.place(x=937,y=22)
                    ece_3rd_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    ece_3rd_add_database.place(x=10,y=140)

                    ece_3rd_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    ece_3rd_update_database.place(x=10,y=170)

                    ece_3rd_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    ece_3rd_delete_database.place(x=10,y=200)

                    ece_3rd_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    ece_3rd_clear_database.place(x=10,y=230)

##########################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Communication_Engineering':
                if self.var_day_select.get() == 'Saturday':
                
                  
                    #print('this time table is for ece_3rdmistry cycle in civil engineering mondy')
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ece_3rd_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_ece_3rd_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into ece_3rd_saturday_time_table_database(day1,ece_3rd_saturday_total_number_of_class,ece_3rd_saturday_time,ece_3rd_saturday_subject,ece_3rd_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ece_3rd_saturday_number_of_class2.get(),
                                            self.var_ece_3rd_saturday_time1.get(),
                                            self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject1.get(),
                                            self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_3rd_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.ece_3rd_saturday_time_table.delete(*self.ece_3rd_saturday_time_table.get_children())
                            for row in rows:
                                self.ece_3rd_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def ece_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from ece_3rd_saturday_time_table_database where ece_3rd_saturday_subject LIKE '%{self.var_ece_3rd_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ece_3rd_saturday_time_table.delete(*self.ece_3rd_saturday_time_table.get_children())
                                for row in rows:
                                    self.ece_3rd_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from ece_3rd_saturday_time_table_database where ece_3rd_saturday_subject=%s",(self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update ece_3rd_saturday_time_table_database set ece_3rd_saturday_total_number_of_class=%s,ece_3rd_saturday_time=%s,ece_3rd_saturday_faculty=%s where ece_3rd_saturday_subject=%s",(
                                        
                                        self.var_ece_3rd_saturday_number_of_class2.get(),
                                        self.var_ece_3rd_saturday_time1.get(),
                                        self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from ece_3rd_saturday_time_table_database where ece_3rd_saturday_subject=%s",(self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from ece_3rd_saturday_time_table_database where ece_3rd_saturday_subject=%s',(self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_ece_3rd_saturday_faculty_serch.set("")
                        self.var_ece_3rd_saturday_number_of_class2.set("")
                        self.var_ece_3rd_saturday_time1.set("")
                        self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject1.set("")
                        self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def ece_3rd_saturday_time_table_get(ev):
                        saturday_ece_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.ece_3rd_saturday_time_table.focus()
                        content1=self.ece_3rd_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ece_3rd_saturday_number_of_class2.set(row1[2])
                        self.var_ece_3rd_saturday_time1.set(row1[3])
                        self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.saturday_ece_3rd_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_ece_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_ece_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_ece_3rd_time_table_data_frame,orient=VERTICAL)
                    self.ece_3rd_saturday_time_table=ttk.Treeview(self.saturday_ece_3rd_time_table_data_frame,columns=('cid','day1','ece_3rd_saturday_total_number_of_class','ece_3rd_saturday_time','ece_3rd_saturday_subject','ece_3rd_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ece_3rd_saturday_time_table.xview)
                    scrolly.configure(command=self.ece_3rd_saturday_time_table.yview)

                    self.ece_3rd_saturday_time_table.heading('cid',text='Serial No')
                    self.ece_3rd_saturday_time_table.heading('day1',text='Day')
                    self.ece_3rd_saturday_time_table.heading('ece_3rd_saturday_total_number_of_class',text='Totel class')
                    self.ece_3rd_saturday_time_table.heading('ece_3rd_saturday_time',text='class time')
                    self.ece_3rd_saturday_time_table.heading('ece_3rd_saturday_subject',text='Subject')
                    self.ece_3rd_saturday_time_table.heading('ece_3rd_saturday_faculty',text='Faculty')

                    self.ece_3rd_saturday_time_table.column('cid',width=100)
                    self.ece_3rd_saturday_time_table.column('day1',width=150)
                    self.ece_3rd_saturday_time_table.column('ece_3rd_saturday_total_number_of_class',width=100)
                    self.ece_3rd_saturday_time_table.column('ece_3rd_saturday_time',width=150)
                    self.ece_3rd_saturday_time_table.column('ece_3rd_saturday_subject',width=150)
                    self.ece_3rd_saturday_time_table.column('ece_3rd_saturday_faculty',width=150)

                    self.ece_3rd_saturday_time_table['show']='headings'

                    self.ece_3rd_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.ece_3rd_saturday_time_table.bind('<ButtonRelease-1>',ece_3rd_saturday_time_table_get)

                    

                    

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_ece_3rd_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_ece_3rd_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ece_3rd_subject_list=[]
                    self.fetch_ece_3rd_faculty_subject()
                    saturday_ece_3rdmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_ece_3rd_subject_list)
                    saturday_ece_3rdmistry_cycle_subject1.place(x=400,y=25) 
        
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ece_3rd_name_list=[]
                    self.fetch_ece_3rd_faculty_name()
                    saturday_ece_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ece_3rd_saturday_ece_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ece_3rd_name_list)
                    saturday_ece_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ece_3rd_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_ece_3rd_saturday_faculty_serch)
                    ece_3rd_faculty_serch1.place(x=800,y=25)
                    ece_3rd_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=ece_3rd_faculty_serch)
                    ece_3rd_faculty_serch1_button.place(x=937,y=22)
                    ece_3rd_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    ece_3rd_add_database.place(x=10,y=140)

                    ece_3rd_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    ece_3rd_update_database.place(x=10,y=170)

                    ece_3rd_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    ece_3rd_delete_database.place(x=10,y=200)

                    ece_3rd_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    ece_3rd_clear_database.place(x=10,y=230)


        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Computer_Science_Engineering':
                if self.var_day_select.get() == 'Monday':
                
                  
                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_cs_3rd_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_cs_3rd_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into cs_3rd_monday_time_table_database(day1,cs_3rd_monday_total_number_of_class,cs_3rd_monday_time,cs_3rd_monday_subject,cs_3rd_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_cs_3rd_monday_number_of_class1.get(),
                                            self.var_cs_3rd_monday_time1.get(),
                                            self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject1.get(),
                                            self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_3rd_monday_time_table_database')
                            rows=cur.fetchall()
                            self.cs_3rd_monday_time_table.delete(*self.cs_3rd_monday_time_table.get_children())
                            for row in rows:
                                self.cs_3rd_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def cs_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from cs_3rd_monday_time_table_database where cs_3rd_monday_subject LIKE '%{self.var_cs_3rd_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.cs_3rd_monday_time_table.delete(*self.cs_3rd_monday_time_table.get_children())
                                for row in rows:
                                    self.cs_3rd_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from cs_3rd_monday_time_table_database where cs_3rd_monday_subject=%s",(self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update cs_3rd_monday_time_table_database set cs_3rd_monday_total_number_of_class=%s,cs_3rd_monday_time=%s,cs_3rd_monday_faculty=%s where cs_3rd_monday_subject=%s",(
                                        
                                        self.var_cs_3rd_monday_number_of_class1.get(),
                                        self.var_cs_3rd_monday_time1.get(),
                                        self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from cs_3rd_monday_time_table_database where cs_3rd_monday_subject=%s",(self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from cs_3rd_monday_time_table_database where cs_3rd_monday_subject=%s',(self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_cs_3rd_monday_faculty_serch.set("")
                        self.var_cs_3rd_monday_number_of_class1.set("")
                        self.var_cs_3rd_monday_time1.set("")
                        self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject1.set("")
                        self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def cs_3rd_monday_time_table_get(ev):
                        monday_cs_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.cs_3rd_monday_time_table.focus()
                        content1=self.cs_3rd_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_cs_3rd_monday_number_of_class1.set(row1[2])
                        self.var_cs_3rd_monday_time1.set(row1[3])
                        self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    
                    self.monday_cs_3rd_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_cs_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_cs_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_cs_3rd_time_table_data_frame,orient=VERTICAL)
                    self.cs_3rd_monday_time_table=ttk.Treeview(self.monday_cs_3rd_time_table_data_frame,columns=('cid','day1','cs_3rd_monday_total_number_of_class','cs_3rd_monday_time','cs_3rd_monday_subject','cs_3rd_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.cs_3rd_monday_time_table.xview)
                    scrolly.configure(command=self.cs_3rd_monday_time_table.yview)

                    self.cs_3rd_monday_time_table.heading('cid',text='Serial No')
                    self.cs_3rd_monday_time_table.heading('day1',text='Day')
                    self.cs_3rd_monday_time_table.heading('cs_3rd_monday_total_number_of_class',text='Totel class')
                    self.cs_3rd_monday_time_table.heading('cs_3rd_monday_time',text='class time')
                    self.cs_3rd_monday_time_table.heading('cs_3rd_monday_subject',text='Subject')
                    self.cs_3rd_monday_time_table.heading('cs_3rd_monday_faculty',text='Faculty')

                    self.cs_3rd_monday_time_table.column('cid',width=100)
                    self.cs_3rd_monday_time_table.column('day1',width=150)
                    self.cs_3rd_monday_time_table.column('cs_3rd_monday_total_number_of_class',width=100)
                    self.cs_3rd_monday_time_table.column('cs_3rd_monday_time',width=150)
                    self.cs_3rd_monday_time_table.column('cs_3rd_monday_subject',width=150)
                    self.cs_3rd_monday_time_table.column('cs_3rd_monday_faculty',width=150)

                    self.cs_3rd_monday_time_table['show']='headings'

                    self.cs_3rd_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.cs_3rd_monday_time_table.bind('<ButtonRelease-1>',cs_3rd_monday_time_table_get)


                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_cs_3rd_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_cs_3rd_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_cs_3rd_subject_list=[]
                    self.fetch_cs_3rd_faculty_subject()
                    monday_cs_3rdmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_cs_3rd_subject_list)
                    monday_cs_3rdmistry_cycle_subject1.place(x=400,y=25) 
            
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_cs_3rd_name_list=[]
                    self.fetch_cs_3rd_faculty_name()
                    monday_cs_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_cs_3rd_monday_cs_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_cs_3rd_name_list)
                    monday_cs_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    cs_3rd_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_cs_3rd_monday_faculty_serch)
                    cs_3rd_faculty_serch1.place(x=800,y=25)
                    cs_3rd_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=cs_3rd_faculty_serch)
                    cs_3rd_faculty_serch1_button.place(x=937,y=22)
                    cs_3rd_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    cs_3rd_add_database.place(x=10,y=140)

                    cs_3rd_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    cs_3rd_update_database.place(x=10,y=170)

                    cs_3rd_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    cs_3rd_delete_database.place(x=10,y=200)

                    cs_3rd_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    cs_3rd_clear_database.place(x=10,y=230)

        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Computer_Science_Engineering':
                if self.var_day_select.get() == 'Thuesday':
                
                  
                 
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_cs_3rd_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_cs_3rd_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into cs_3rd_thuesday_time_table_database(day1,cs_3rd_thuesday_total_number_of_class,cs_3rd_thuesday_time,cs_3rd_thuesday_subject,cs_3rd_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_cs_3rd_thuesday_number_of_class2.get(),
                                            self.var_cs_3rd_thuesday_time1.get(),
                                            self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject1.get(),
                                            self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_3rd_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.cs_3rd_thuesday_time_table.delete(*self.cs_3rd_thuesday_time_table.get_children())
                            for row in rows:
                                self.cs_3rd_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def cs_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from cs_3rd_thuesday_time_table_database where cs_3rd_thuesday_subject LIKE '%{self.var_cs_3rd_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.cs_3rd_thuesday_time_table.delete(*self.cs_3rd_thuesday_time_table.get_children())
                                for row in rows:
                                    self.cs_3rd_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from cs_3rd_thuesday_time_table_database where cs_3rd_thuesday_subject=%s",(self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update cs_3rd_thuesday_time_table_database set cs_3rd_thuesday_total_number_of_class=%s,cs_3rd_thuesday_time=%s,cs_3rd_thuesday_faculty=%s where cs_3rd_thuesday_subject=%s",(
                                        
                                        self.var_cs_3rd_thuesday_number_of_class2.get(),
                                        self.var_cs_3rd_thuesday_time1.get(),
                                        self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from cs_3rd_thuesday_time_table_database where cs_3rd_thuesday_subject=%s",(self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from cs_3rd_thuesday_time_table_database where cs_3rd_thuesday_subject=%s',(self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_cs_3rd_thuesday_faculty_serch.set("")
                        self.var_cs_3rd_thuesday_number_of_class2.set("")
                        self.var_cs_3rd_thuesday_time1.set("")
                        self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject1.set("")
                        self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def cs_3rd_thuesday_time_table_get(ev):
                        thuesday_cs_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.cs_3rd_thuesday_time_table.focus()
                        content1=self.cs_3rd_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_cs_3rd_thuesday_number_of_class2.set(row1[2])
                        self.var_cs_3rd_thuesday_time1.set(row1[3])
                        self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    
                    self.thuesday_cs_3rd_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_cs_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_cs_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_cs_3rd_time_table_data_frame,orient=VERTICAL)
                    self.cs_3rd_thuesday_time_table=ttk.Treeview(self.thuesday_cs_3rd_time_table_data_frame,columns=('cid','day1','cs_3rd_thuesday_total_number_of_class','cs_3rd_thuesday_time','cs_3rd_thuesday_subject','cs_3rd_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.cs_3rd_thuesday_time_table.xview)
                    scrolly.configure(command=self.cs_3rd_thuesday_time_table.yview)

                    self.cs_3rd_thuesday_time_table.heading('cid',text='Serial No')
                    self.cs_3rd_thuesday_time_table.heading('day1',text='Day')
                    self.cs_3rd_thuesday_time_table.heading('cs_3rd_thuesday_total_number_of_class',text='Totel class')
                    self.cs_3rd_thuesday_time_table.heading('cs_3rd_thuesday_time',text='class time')
                    self.cs_3rd_thuesday_time_table.heading('cs_3rd_thuesday_subject',text='Subject')
                    self.cs_3rd_thuesday_time_table.heading('cs_3rd_thuesday_faculty',text='Faculty')

                    self.cs_3rd_thuesday_time_table.column('cid',width=100)
                    self.cs_3rd_thuesday_time_table.column('day1',width=150)
                    self.cs_3rd_thuesday_time_table.column('cs_3rd_thuesday_total_number_of_class',width=100)
                    self.cs_3rd_thuesday_time_table.column('cs_3rd_thuesday_time',width=150)
                    self.cs_3rd_thuesday_time_table.column('cs_3rd_thuesday_subject',width=150)
                    self.cs_3rd_thuesday_time_table.column('cs_3rd_thuesday_faculty',width=150)

                    self.cs_3rd_thuesday_time_table['show']='headings'

                    self.cs_3rd_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.cs_3rd_thuesday_time_table.bind('<ButtonRelease-1>',cs_3rd_thuesday_time_table_get)

 
                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_cs_3rd_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_cs_3rd_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_cs_3rd_subject_list=[]
                    self.fetch_cs_3rd_faculty_subject()
                    thuesday_cs_3rdmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_cs_3rd_subject_list)
                    thuesday_cs_3rdmistry_cycle_subject1.place(x=400,y=25) 
               
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_cs_3rd_name_list=[]
                    self.fetch_cs_3rd_faculty_name()
                    thuesday_cs_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_cs_3rd_thuesday_cs_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_cs_3rd_name_list)
                    thuesday_cs_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    cs_3rd_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_cs_3rd_thuesday_faculty_serch)
                    cs_3rd_faculty_serch1.place(x=800,y=25)
                    cs_3rd_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=cs_3rd_faculty_serch)
                    cs_3rd_faculty_serch1_button.place(x=937,y=22)
                    cs_3rd_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    cs_3rd_add_database.place(x=10,y=140)

                    cs_3rd_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    cs_3rd_update_database.place(x=10,y=170)

                    cs_3rd_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    cs_3rd_delete_database.place(x=10,y=200)

                    cs_3rd_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    cs_3rd_clear_database.place(x=10,y=230)
#######################################################################################################################################################################

        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Computer_Science_Engineering':
                if self.var_day_select.get() == 'Wednesday':
                
                  
                    #print('this time table is for cs_3rdmistry cycle in civil engineering mondy')
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_cs_3rd_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_cs_3rd_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into cs_3rd_wednesday_time_table_database(day1,cs_3rd_wednesday_total_number_of_class,cs_3rd_wednesday_time,cs_3rd_wednesday_subject,cs_3rd_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_cs_3rd_wednesday_number_of_class2.get(),
                                            self.var_cs_3rd_wednesday_time1.get(),
                                            self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject1.get(),
                                            self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_3rd_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.cs_3rd_wednesday_time_table.delete(*self.cs_3rd_wednesday_time_table.get_children())
                            for row in rows:
                                self.cs_3rd_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def cs_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from cs_3rd_wednesday_time_table_database where cs_3rd_wednesday_subject LIKE '%{self.var_cs_3rd_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.cs_3rd_wednesday_time_table.delete(*self.cs_3rd_wednesday_time_table.get_children())
                                for row in rows:
                                    self.cs_3rd_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from cs_3rd_wednesday_time_table_database where cs_3rd_wednesday_subject=%s",(self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update cs_3rd_wednesday_time_table_database set cs_3rd_wednesday_total_number_of_class=%s,cs_3rd_wednesday_time=%s,cs_3rd_wednesday_faculty=%s where cs_3rd_wednesday_subject=%s",(
                                        
                                        self.var_cs_3rd_wednesday_number_of_class2.get(),
                                        self.var_cs_3rd_wednesday_time1.get(),
                                        self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from cs_3rd_wednesday_time_table_database where cs_3rd_wednesday_subject=%s",(self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from cs_3rd_wednesday_time_table_database where cs_3rd_wednesday_subject=%s',(self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_cs_3rd_wednesday_faculty_serch.set("")
                        self.var_cs_3rd_wednesday_number_of_class2.set("")
                        self.var_cs_3rd_wednesday_time1.set("")
                        self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject1.set("")
                        self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def cs_3rd_wednesday_time_table_get(ev):
                        wednesday_cs_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.cs_3rd_wednesday_time_table.focus()
                        content1=self.cs_3rd_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_cs_3rd_wednesday_number_of_class2.set(row1[2])
                        self.var_cs_3rd_wednesday_time1.set(row1[3])
                        self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    
                    self.wednesday_cs_3rd_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_cs_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_cs_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_cs_3rd_time_table_data_frame,orient=VERTICAL)
                    self.cs_3rd_wednesday_time_table=ttk.Treeview(self.wednesday_cs_3rd_time_table_data_frame,columns=('cid','day1','cs_3rd_wednesday_total_number_of_class','cs_3rd_wednesday_time','cs_3rd_wednesday_subject','cs_3rd_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.cs_3rd_wednesday_time_table.xview)
                    scrolly.configure(command=self.cs_3rd_wednesday_time_table.yview)

                    self.cs_3rd_wednesday_time_table.heading('cid',text='Serial No')
                    self.cs_3rd_wednesday_time_table.heading('day1',text='Day')
                    self.cs_3rd_wednesday_time_table.heading('cs_3rd_wednesday_total_number_of_class',text='Totel class')
                    self.cs_3rd_wednesday_time_table.heading('cs_3rd_wednesday_time',text='class time')
                    self.cs_3rd_wednesday_time_table.heading('cs_3rd_wednesday_subject',text='Subject')
                    self.cs_3rd_wednesday_time_table.heading('cs_3rd_wednesday_faculty',text='Faculty')

                    self.cs_3rd_wednesday_time_table.column('cid',width=100)
                    self.cs_3rd_wednesday_time_table.column('day1',width=150)
                    self.cs_3rd_wednesday_time_table.column('cs_3rd_wednesday_total_number_of_class',width=100)
                    self.cs_3rd_wednesday_time_table.column('cs_3rd_wednesday_time',width=150)
                    self.cs_3rd_wednesday_time_table.column('cs_3rd_wednesday_subject',width=150)
                    self.cs_3rd_wednesday_time_table.column('cs_3rd_wednesday_faculty',width=150)

                    self.cs_3rd_wednesday_time_table['show']='headings'

                    self.cs_3rd_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.cs_3rd_wednesday_time_table.bind('<ButtonRelease-1>',cs_3rd_wednesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_cs_3rd_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_cs_3rd_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_cs_3rd_subject_list=[]
                    self.fetch_cs_3rd_faculty_subject()
                    wednesday_cs_3rdmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_cs_3rd_subject_list)
                    wednesday_cs_3rdmistry_cycle_subject1.place(x=400,y=25) 
                  
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_cs_3rd_name_list=[]
                    self.fetch_cs_3rd_faculty_name()
                    wednesday_cs_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_cs_3rd_wednesday_cs_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_cs_3rd_name_list)
                    wednesday_cs_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    cs_3rd_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_cs_3rd_wednesday_faculty_serch)
                    cs_3rd_faculty_serch1.place(x=800,y=25)
                    cs_3rd_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=cs_3rd_faculty_serch)
                    cs_3rd_faculty_serch1_button.place(x=937,y=22)
                    cs_3rd_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    cs_3rd_add_database.place(x=10,y=140)

                    cs_3rd_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    cs_3rd_update_database.place(x=10,y=170)

                    cs_3rd_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    cs_3rd_delete_database.place(x=10,y=200)

                    cs_3rd_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    cs_3rd_clear_database.place(x=10,y=230)

###############################################################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Computer_Science_Engineering':
                if self.var_day_select.get() == 'Thursday':
                
  
                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_cs_3rd_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_cs_3rd_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into cs_3rd_thursday_time_table_database(day1,cs_3rd_thursday_total_number_of_class,cs_3rd_thursday_time,cs_3rd_thursday_subject,cs_3rd_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_cs_3rd_thursday_number_of_class2.get(),
                                            self.var_cs_3rd_thursday_time1.get(),
                                            self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject1.get(),
                                            self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_3rd_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.cs_3rd_thursday_time_table.delete(*self.cs_3rd_thursday_time_table.get_children())
                            for row in rows:
                                self.cs_3rd_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def cs_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from cs_3rd_thursday_time_table_database where cs_3rd_thursday_subject LIKE '%{self.var_cs_3rd_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.cs_3rd_thursday_time_table.delete(*self.cs_3rd_thursday_time_table.get_children())
                                for row in rows:
                                    self.cs_3rd_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from cs_3rd_thursday_time_table_database where cs_3rd_thursday_subject=%s",(self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update cs_3rd_thursday_time_table_database set cs_3rd_thursday_total_number_of_class=%s,cs_3rd_thursday_time=%s,cs_3rd_thursday_faculty=%s where cs_3rd_thursday_subject=%s",(
                                        
                                        self.var_cs_3rd_thursday_number_of_class2.get(),
                                        self.var_cs_3rd_thursday_time1.get(),
                                        self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from cs_3rd_thursday_time_table_database where cs_3rd_thursday_subject=%s",(self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from cs_3rd_thursday_time_table_database where cs_3rd_thursday_subject=%s',(self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_cs_3rd_thursday_faculty_serch.set("")
                        self.var_cs_3rd_thursday_number_of_class2.set("")
                        self.var_cs_3rd_thursday_time1.set("")
                        self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject1.set("")
                        self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def cs_3rd_thursday_time_table_get(ev):
                        thursday_cs_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.cs_3rd_thursday_time_table.focus()
                        content1=self.cs_3rd_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_cs_3rd_thursday_number_of_class2.set(row1[2])
                        self.var_cs_3rd_thursday_time1.set(row1[3])
                        self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    
                    self.thursday_cs_3rd_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_cs_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_cs_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_cs_3rd_time_table_data_frame,orient=VERTICAL)
                    self.cs_3rd_thursday_time_table=ttk.Treeview(self.thursday_cs_3rd_time_table_data_frame,columns=('cid','day1','cs_3rd_thursday_total_number_of_class','cs_3rd_thursday_time','cs_3rd_thursday_subject','cs_3rd_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.cs_3rd_thursday_time_table.xview)
                    scrolly.configure(command=self.cs_3rd_thursday_time_table.yview)

                    self.cs_3rd_thursday_time_table.heading('cid',text='Serial No')
                    self.cs_3rd_thursday_time_table.heading('day1',text='Day')
                    self.cs_3rd_thursday_time_table.heading('cs_3rd_thursday_total_number_of_class',text='Totel class')
                    self.cs_3rd_thursday_time_table.heading('cs_3rd_thursday_time',text='class time')
                    self.cs_3rd_thursday_time_table.heading('cs_3rd_thursday_subject',text='Subject')
                    self.cs_3rd_thursday_time_table.heading('cs_3rd_thursday_faculty',text='Faculty')

                    self.cs_3rd_thursday_time_table.column('cid',width=100)
                    self.cs_3rd_thursday_time_table.column('day1',width=150)
                    self.cs_3rd_thursday_time_table.column('cs_3rd_thursday_total_number_of_class',width=100)
                    self.cs_3rd_thursday_time_table.column('cs_3rd_thursday_time',width=150)
                    self.cs_3rd_thursday_time_table.column('cs_3rd_thursday_subject',width=150)
                    self.cs_3rd_thursday_time_table.column('cs_3rd_thursday_faculty',width=150)

                    self.cs_3rd_thursday_time_table['show']='headings'

                    self.cs_3rd_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.cs_3rd_thursday_time_table.bind('<ButtonRelease-1>',cs_3rd_thursday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_cs_3rd_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_cs_3rd_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_cs_3rd_subject_list=[]
                    self.fetch_cs_3rd_faculty_subject()
                    thursday_cs_3rdmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_cs_3rd_subject_list)
                    thursday_cs_3rdmistry_cycle_subject1.place(x=400,y=25) 
               
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_cs_3rd_name_list=[]
                    self.fetch_cs_3rd_faculty_name()
                    thursday_cs_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_cs_3rd_thursday_cs_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_cs_3rd_name_list)
                    thursday_cs_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    cs_3rd_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_cs_3rd_thursday_faculty_serch)
                    cs_3rd_faculty_serch1.place(x=800,y=25)
                    cs_3rd_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=cs_3rd_faculty_serch)
                    cs_3rd_faculty_serch1_button.place(x=937,y=22)
                    cs_3rd_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    cs_3rd_add_database.place(x=10,y=140)

                    cs_3rd_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    cs_3rd_update_database.place(x=10,y=170)

                    cs_3rd_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    cs_3rd_delete_database.place(x=10,y=200)

                    cs_3rd_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    cs_3rd_clear_database.place(x=10,y=230)

########################################################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Computer_Science_Engineering':
                if self.var_day_select.get() == 'Friday':
                
                  
                    #print('this time table is for cs_3rdmistry cycle in civil engineering mondy')
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_cs_3rd_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_cs_3rd_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into cs_3rd_friday_time_table_database(day1,cs_3rd_friday_total_number_of_class,cs_3rd_friday_time,cs_3rd_friday_subject,cs_3rd_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_cs_3rd_friday_number_of_class2.get(),
                                            self.var_cs_3rd_friday_time1.get(),
                                            self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject1.get(),
                                            self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_3rd_friday_time_table_database')
                            rows=cur.fetchall()
                            self.cs_3rd_friday_time_table.delete(*self.cs_3rd_friday_time_table.get_children())
                            for row in rows:
                                self.cs_3rd_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def cs_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from cs_3rd_friday_time_table_database where cs_3rd_friday_subject LIKE '%{self.var_cs_3rd_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.cs_3rd_friday_time_table.delete(*self.cs_3rd_friday_time_table.get_children())
                                for row in rows:
                                    self.cs_3rd_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from cs_3rd_friday_time_table_database where cs_3rd_friday_subject=%s",(self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update cs_3rd_friday_time_table_database set cs_3rd_friday_total_number_of_class=%s,cs_3rd_friday_time=%s,cs_3rd_friday_faculty=%s where cs_3rd_friday_subject=%s",(
                                        
                                        self.var_cs_3rd_friday_number_of_class2.get(),
                                        self.var_cs_3rd_friday_time1.get(),
                                        self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from cs_3rd_friday_time_table_database where cs_3rd_friday_subject=%s",(self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from cs_3rd_friday_time_table_database where cs_3rd_friday_subject=%s',(self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_cs_3rd_friday_faculty_serch.set("")
                        self.var_cs_3rd_friday_number_of_class2.set("")
                        self.var_cs_3rd_friday_time1.set("")
                        self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject1.set("")
                        self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def cs_3rd_friday_time_table_get(ev):
                        friday_cs_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.cs_3rd_friday_time_table.focus()
                        content1=self.cs_3rd_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_cs_3rd_friday_number_of_class2.set(row1[2])
                        self.var_cs_3rd_friday_time1.set(row1[3])
                        self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.friday_cs_3rd_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_cs_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_cs_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_cs_3rd_time_table_data_frame,orient=VERTICAL)
                    self.cs_3rd_friday_time_table=ttk.Treeview(self.friday_cs_3rd_time_table_data_frame,columns=('cid','day1','cs_3rd_friday_total_number_of_class','cs_3rd_friday_time','cs_3rd_friday_subject','cs_3rd_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.cs_3rd_friday_time_table.xview)
                    scrolly.configure(command=self.cs_3rd_friday_time_table.yview)

                    self.cs_3rd_friday_time_table.heading('cid',text='Serial No')
                    self.cs_3rd_friday_time_table.heading('day1',text='Day')
                    self.cs_3rd_friday_time_table.heading('cs_3rd_friday_total_number_of_class',text='Totel class')
                    self.cs_3rd_friday_time_table.heading('cs_3rd_friday_time',text='class time')
                    self.cs_3rd_friday_time_table.heading('cs_3rd_friday_subject',text='Subject')
                    self.cs_3rd_friday_time_table.heading('cs_3rd_friday_faculty',text='Faculty')

                    self.cs_3rd_friday_time_table.column('cid',width=100)
                    self.cs_3rd_friday_time_table.column('day1',width=150)
                    self.cs_3rd_friday_time_table.column('cs_3rd_friday_total_number_of_class',width=100)
                    self.cs_3rd_friday_time_table.column('cs_3rd_friday_time',width=150)
                    self.cs_3rd_friday_time_table.column('cs_3rd_friday_subject',width=150)
                    self.cs_3rd_friday_time_table.column('cs_3rd_friday_faculty',width=150)

                    self.cs_3rd_friday_time_table['show']='headings'

                    self.cs_3rd_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.cs_3rd_friday_time_table.bind('<ButtonRelease-1>',cs_3rd_friday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_cs_3rd_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_cs_3rd_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_cs_3rd_subject_list=[]
                    self.fetch_cs_3rd_faculty_subject()
                    friday_cs_3rdmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_cs_3rd_subject_list)
                    friday_cs_3rdmistry_cycle_subject1.place(x=400,y=25) 
                
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_cs_3rd_name_list=[]
                    self.fetch_cs_3rd_faculty_name()
                    friday_cs_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_cs_3rd_friday_cs_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_cs_3rd_name_list)
                    friday_cs_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    cs_3rd_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_cs_3rd_friday_faculty_serch)
                    cs_3rd_faculty_serch1.place(x=800,y=25)
                    cs_3rd_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=cs_3rd_faculty_serch)
                    cs_3rd_faculty_serch1_button.place(x=937,y=22)
                    cs_3rd_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    cs_3rd_add_database.place(x=10,y=140)

                    cs_3rd_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    cs_3rd_update_database.place(x=10,y=170)

                    cs_3rd_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    cs_3rd_delete_database.place(x=10,y=200)

                    cs_3rd_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    cs_3rd_clear_database.place(x=10,y=230)
####################################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Computer_Science_Engineering':
                if self.var_day_select.get() == 'Saturday':
                
                  
                    #print('this time table is for cs_3rdmistry cycle in civil engineering mondy')
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_cs_3rd_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_cs_3rd_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into cs_3rd_saturday_time_table_database(day1,cs_3rd_saturday_total_number_of_class,cs_3rd_saturday_time,cs_3rd_saturday_subject,cs_3rd_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_cs_3rd_saturday_number_of_class2.get(),
                                            self.var_cs_3rd_saturday_time1.get(),
                                            self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject1.get(),
                                            self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_3rd_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.cs_3rd_saturday_time_table.delete(*self.cs_3rd_saturday_time_table.get_children())
                            for row in rows:
                                self.cs_3rd_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def cs_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from cs_3rd_saturday_time_table_database where cs_3rd_saturday_subject LIKE '%{self.var_cs_3rd_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.cs_3rd_saturday_time_table.delete(*self.cs_3rd_saturday_time_table.get_children())
                                for row in rows:
                                    self.cs_3rd_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from cs_3rd_saturday_time_table_database where cs_3rd_saturday_subject=%s",(self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update cs_3rd_saturday_time_table_database set cs_3rd_saturday_total_number_of_class=%s,cs_3rd_saturday_time=%s,cs_3rd_saturday_faculty=%s where cs_3rd_saturday_subject=%s",(
                                        
                                        self.var_cs_3rd_saturday_number_of_class2.get(),
                                        self.var_cs_3rd_saturday_time1.get(),
                                        self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from cs_3rd_saturday_time_table_database where cs_3rd_saturday_subject=%s",(self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from cs_3rd_saturday_time_table_database where cs_3rd_saturday_subject=%s',(self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_cs_3rd_saturday_faculty_serch.set("")
                        self.var_cs_3rd_saturday_number_of_class2.set("")
                        self.var_cs_3rd_saturday_time1.set("")
                        self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject1.set("")
                        self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def cs_3rd_saturday_time_table_get(ev):
                        saturday_cs_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.cs_3rd_saturday_time_table.focus()
                        content1=self.cs_3rd_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_cs_3rd_saturday_number_of_class2.set(row1[2])
                        self.var_cs_3rd_saturday_time1.set(row1[3])
                        self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.saturday_cs_3rd_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_cs_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_cs_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_cs_3rd_time_table_data_frame,orient=VERTICAL)
                    self.cs_3rd_saturday_time_table=ttk.Treeview(self.saturday_cs_3rd_time_table_data_frame,columns=('cid','day1','cs_3rd_saturday_total_number_of_class','cs_3rd_saturday_time','cs_3rd_saturday_subject','cs_3rd_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.cs_3rd_saturday_time_table.xview)
                    scrolly.configure(command=self.cs_3rd_saturday_time_table.yview)

                    self.cs_3rd_saturday_time_table.heading('cid',text='Serial No')
                    self.cs_3rd_saturday_time_table.heading('day1',text='Day')
                    self.cs_3rd_saturday_time_table.heading('cs_3rd_saturday_total_number_of_class',text='Totel class')
                    self.cs_3rd_saturday_time_table.heading('cs_3rd_saturday_time',text='class time')
                    self.cs_3rd_saturday_time_table.heading('cs_3rd_saturday_subject',text='Subject')
                    self.cs_3rd_saturday_time_table.heading('cs_3rd_saturday_faculty',text='Faculty')

                    self.cs_3rd_saturday_time_table.column('cid',width=100)
                    self.cs_3rd_saturday_time_table.column('day1',width=150)
                    self.cs_3rd_saturday_time_table.column('cs_3rd_saturday_total_number_of_class',width=100)
                    self.cs_3rd_saturday_time_table.column('cs_3rd_saturday_time',width=150)
                    self.cs_3rd_saturday_time_table.column('cs_3rd_saturday_subject',width=150)
                    self.cs_3rd_saturday_time_table.column('cs_3rd_saturday_faculty',width=150)

                    self.cs_3rd_saturday_time_table['show']='headings'

                    self.cs_3rd_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.cs_3rd_saturday_time_table.bind('<ButtonRelease-1>',cs_3rd_saturday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_cs_3rd_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_cs_3rd_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_cs_3rd_subject_list=[]
                    self.fetch_cs_3rd_faculty_subject()
                    saturday_cs_3rdmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_cs_3rd_subject_list)
                    saturday_cs_3rdmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_cs_3rd_name_list=[]
                    self.fetch_cs_3rd_faculty_name()
                    saturday_cs_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_cs_3rd_saturday_cs_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_cs_3rd_name_list)
                    saturday_cs_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    cs_3rd_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_cs_3rd_saturday_faculty_serch)
                    cs_3rd_faculty_serch1.place(x=800,y=25)
                    cs_3rd_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=cs_3rd_faculty_serch)
                    cs_3rd_faculty_serch1_button.place(x=937,y=22)
                    cs_3rd_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    cs_3rd_add_database.place(x=10,y=140)

                    cs_3rd_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    cs_3rd_update_database.place(x=10,y=170)

                    cs_3rd_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    cs_3rd_delete_database.place(x=10,y=200)

                    cs_3rd_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    cs_3rd_clear_database.place(x=10,y=230)
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Information_Science_and_Engineering':
                if self.var_day_select.get() == 'Monday':
                
    
                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ise_3rd_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_ise_3rd_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into ise_3rd_monday_time_table_database(day1,ise_3rd_monday_total_number_of_class,ise_3rd_monday_time,ise_3rd_monday_subject,ise_3rd_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ise_3rd_monday_number_of_class1.get(),
                                            self.var_ise_3rd_monday_time1.get(),
                                            self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject1.get(),
                                            self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_3rd_monday_time_table_database')
                            rows=cur.fetchall()
                            self.ise_3rd_monday_time_table.delete(*self.ise_3rd_monday_time_table.get_children())
                            for row in rows:
                                self.ise_3rd_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def ise_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from ise_3rd_monday_time_table_database where ise_3rd_monday_subject LIKE '%{self.var_ise_3rd_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ise_3rd_monday_time_table.delete(*self.ise_3rd_monday_time_table.get_children())
                                for row in rows:
                                    self.ise_3rd_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from ise_3rd_monday_time_table_database where ise_3rd_monday_subject=%s",(self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update ise_3rd_monday_time_table_database set ise_3rd_monday_total_number_of_class=%s,ise_3rd_monday_time=%s,ise_3rd_monday_faculty=%s where ise_3rd_monday_subject=%s",(
                                        
                                        self.var_ise_3rd_monday_number_of_class1.get(),
                                        self.var_ise_3rd_monday_time1.get(),
                                        self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from ise_3rd_monday_time_table_database where ise_3rd_monday_subject=%s",(self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from ise_3rd_monday_time_table_database where ise_3rd_monday_subject=%s',(self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_ise_3rd_monday_faculty_serch.set("")
                        self.var_ise_3rd_monday_number_of_class1.set("")
                        self.var_ise_3rd_monday_time1.set("")
                        self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject1.set("")
                        self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def ise_3rd_monday_time_table_get(ev):
                        monday_ise_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.ise_3rd_monday_time_table.focus()
                        content1=self.ise_3rd_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ise_3rd_monday_number_of_class1.set(row1[2])
                        self.var_ise_3rd_monday_time1.set(row1[3])
                        self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    
                    self.monday_ise_3rd_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_ise_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_ise_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_ise_3rd_time_table_data_frame,orient=VERTICAL)
                    self.ise_3rd_monday_time_table=ttk.Treeview(self.monday_ise_3rd_time_table_data_frame,columns=('cid','day1','ise_3rd_monday_total_number_of_class','ise_3rd_monday_time','ise_3rd_monday_subject','ise_3rd_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ise_3rd_monday_time_table.xview)
                    scrolly.configure(command=self.ise_3rd_monday_time_table.yview)

                    self.ise_3rd_monday_time_table.heading('cid',text='Serial No')
                    self.ise_3rd_monday_time_table.heading('day1',text='Day')
                    self.ise_3rd_monday_time_table.heading('ise_3rd_monday_total_number_of_class',text='Totel class')
                    self.ise_3rd_monday_time_table.heading('ise_3rd_monday_time',text='class time')
                    self.ise_3rd_monday_time_table.heading('ise_3rd_monday_subject',text='Subject')
                    self.ise_3rd_monday_time_table.heading('ise_3rd_monday_faculty',text='Faculty')

                    self.ise_3rd_monday_time_table.column('cid',width=100)
                    self.ise_3rd_monday_time_table.column('day1',width=150)
                    self.ise_3rd_monday_time_table.column('ise_3rd_monday_total_number_of_class',width=100)
                    self.ise_3rd_monday_time_table.column('ise_3rd_monday_time',width=150)
                    self.ise_3rd_monday_time_table.column('ise_3rd_monday_subject',width=150)
                    self.ise_3rd_monday_time_table.column('ise_3rd_monday_faculty',width=150)

                    self.ise_3rd_monday_time_table['show']='headings'

                    self.ise_3rd_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.ise_3rd_monday_time_table.bind('<ButtonRelease-1>',ise_3rd_monday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_ise_3rd_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_ise_3rd_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ise_3rd_subject_list=[]
                    self.fetch_ise_3rd_faculty_subject()
                    monday_ise_3rdmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_ise_3rd_subject_list)
                    monday_ise_3rdmistry_cycle_subject1.place(x=400,y=25) 
                  
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ise_3rd_name_list=[]
                    self.fetch_ise_3rd_faculty_name()
                    monday_ise_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_ise_3rd_monday_ise_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ise_3rd_name_list)
                    monday_ise_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ise_3rd_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_ise_3rd_monday_faculty_serch)
                    ise_3rd_faculty_serch1.place(x=800,y=25)
                    ise_3rd_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=ise_3rd_faculty_serch)
                    ise_3rd_faculty_serch1_button.place(x=937,y=22)
                    ise_3rd_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    ise_3rd_add_database.place(x=10,y=140)

                    ise_3rd_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    ise_3rd_update_database.place(x=10,y=170)

                    ise_3rd_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    ise_3rd_delete_database.place(x=10,y=200)

                    ise_3rd_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    ise_3rd_clear_database.place(x=10,y=230)
#########################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Information_Science_and_Engineering':
                if self.var_day_select.get() == 'Thuesday':
                
  
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ise_3rd_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_ise_3rd_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into ise_3rd_thuesday_time_table_database(day1,ise_3rd_thuesday_total_number_of_class,ise_3rd_thuesday_time,ise_3rd_thuesday_subject,ise_3rd_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ise_3rd_thuesday_number_of_class2.get(),
                                            self.var_ise_3rd_thuesday_time1.get(),
                                            self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject1.get(),
                                            self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_3rd_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.ise_3rd_thuesday_time_table.delete(*self.ise_3rd_thuesday_time_table.get_children())
                            for row in rows:
                                self.ise_3rd_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def ise_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from ise_3rd_thuesday_time_table_database where ise_3rd_thuesday_subject LIKE '%{self.var_ise_3rd_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ise_3rd_thuesday_time_table.delete(*self.ise_3rd_thuesday_time_table.get_children())
                                for row in rows:
                                    self.ise_3rd_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from ise_3rd_thuesday_time_table_database where ise_3rd_thuesday_subject=%s",(self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update ise_3rd_thuesday_time_table_database set ise_3rd_thuesday_total_number_of_class=%s,ise_3rd_thuesday_time=%s,ise_3rd_thuesday_faculty=%s where ise_3rd_thuesday_subject=%s",(
                                        
                                        self.var_ise_3rd_thuesday_number_of_class2.get(),
                                        self.var_ise_3rd_thuesday_time1.get(),
                                        self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from ise_3rd_thuesday_time_table_database where ise_3rd_thuesday_subject=%s",(self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from ise_3rd_thuesday_time_table_database where ise_3rd_thuesday_subject=%s',(self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_ise_3rd_thuesday_faculty_serch.set("")
                        self.var_ise_3rd_thuesday_number_of_class2.set("")
                        self.var_ise_3rd_thuesday_time1.set("")
                        self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject1.set("")
                        self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def ise_3rd_thuesday_time_table_get(ev):
                        thuesday_ise_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.ise_3rd_thuesday_time_table.focus()
                        content1=self.ise_3rd_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ise_3rd_thuesday_number_of_class2.set(row1[2])
                        self.var_ise_3rd_thuesday_time1.set(row1[3])
                        self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    
                    self.thuesday_ise_3rd_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_ise_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_ise_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_ise_3rd_time_table_data_frame,orient=VERTICAL)
                    self.ise_3rd_thuesday_time_table=ttk.Treeview(self.thuesday_ise_3rd_time_table_data_frame,columns=('cid','day1','ise_3rd_thuesday_total_number_of_class','ise_3rd_thuesday_time','ise_3rd_thuesday_subject','ise_3rd_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ise_3rd_thuesday_time_table.xview)
                    scrolly.configure(command=self.ise_3rd_thuesday_time_table.yview)

                    self.ise_3rd_thuesday_time_table.heading('cid',text='Serial No')
                    self.ise_3rd_thuesday_time_table.heading('day1',text='Day')
                    self.ise_3rd_thuesday_time_table.heading('ise_3rd_thuesday_total_number_of_class',text='Totel class')
                    self.ise_3rd_thuesday_time_table.heading('ise_3rd_thuesday_time',text='class time')
                    self.ise_3rd_thuesday_time_table.heading('ise_3rd_thuesday_subject',text='Subject')
                    self.ise_3rd_thuesday_time_table.heading('ise_3rd_thuesday_faculty',text='Faculty')

                    self.ise_3rd_thuesday_time_table.column('cid',width=100)
                    self.ise_3rd_thuesday_time_table.column('day1',width=150)
                    self.ise_3rd_thuesday_time_table.column('ise_3rd_thuesday_total_number_of_class',width=100)
                    self.ise_3rd_thuesday_time_table.column('ise_3rd_thuesday_time',width=150)
                    self.ise_3rd_thuesday_time_table.column('ise_3rd_thuesday_subject',width=150)
                    self.ise_3rd_thuesday_time_table.column('ise_3rd_thuesday_faculty',width=150)

                    self.ise_3rd_thuesday_time_table['show']='headings'

                    self.ise_3rd_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.ise_3rd_thuesday_time_table.bind('<ButtonRelease-1>',ise_3rd_thuesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_ise_3rd_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_ise_3rd_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ise_3rd_subject_list=[]
                    self.fetch_ise_3rd_faculty_subject()
                    thuesday_ise_3rdmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_ise_3rd_subject_list)
                    thuesday_ise_3rdmistry_cycle_subject1.place(x=400,y=25) 
               
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ise_3rd_name_list=[]
                    self.fetch_ise_3rd_faculty_name()
                    thuesday_ise_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_ise_3rd_thuesday_ise_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ise_3rd_name_list)
                    thuesday_ise_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ise_3rd_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_ise_3rd_thuesday_faculty_serch)
                    ise_3rd_faculty_serch1.place(x=800,y=25)
                    ise_3rd_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=ise_3rd_faculty_serch)
                    ise_3rd_faculty_serch1_button.place(x=937,y=22)
                    ise_3rd_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    ise_3rd_add_database.place(x=10,y=140)

                    ise_3rd_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    ise_3rd_update_database.place(x=10,y=170)

                    ise_3rd_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    ise_3rd_delete_database.place(x=10,y=200)

                    ise_3rd_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    ise_3rd_clear_database.place(x=10,y=230)

        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Information_Science_and_Engineering':
                if self.var_day_select.get() == 'Wednesday':
                
                  
                   
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ise_3rd_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_ise_3rd_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into ise_3rd_wednesday_time_table_database(day1,ise_3rd_wednesday_total_number_of_class,ise_3rd_wednesday_time,ise_3rd_wednesday_subject,ise_3rd_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ise_3rd_wednesday_number_of_class2.get(),
                                            self.var_ise_3rd_wednesday_time1.get(),
                                            self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject1.get(),
                                            self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_3rd_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.ise_3rd_wednesday_time_table.delete(*self.ise_3rd_wednesday_time_table.get_children())
                            for row in rows:
                                self.ise_3rd_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def ise_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from ise_3rd_wednesday_time_table_database where ise_3rd_wednesday_subject LIKE '%{self.var_ise_3rd_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ise_3rd_wednesday_time_table.delete(*self.ise_3rd_wednesday_time_table.get_children())
                                for row in rows:
                                    self.ise_3rd_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from ise_3rd_wednesday_time_table_database where ise_3rd_wednesday_subject=%s",(self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update ise_3rd_wednesday_time_table_database set ise_3rd_wednesday_total_number_of_class=%s,ise_3rd_wednesday_time=%s,ise_3rd_wednesday_faculty=%s where ise_3rd_wednesday_subject=%s",(
                                        
                                        self.var_ise_3rd_wednesday_number_of_class2.get(),
                                        self.var_ise_3rd_wednesday_time1.get(),
                                        self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from ise_3rd_wednesday_time_table_database where ise_3rd_wednesday_subject=%s",(self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from ise_3rd_wednesday_time_table_database where ise_3rd_wednesday_subject=%s',(self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_ise_3rd_wednesday_faculty_serch.set("")
                        self.var_ise_3rd_wednesday_number_of_class2.set("")
                        self.var_ise_3rd_wednesday_time1.set("")
                        self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject1.set("")
                        self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def ise_3rd_wednesday_time_table_get(ev):
                        wednesday_ise_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.ise_3rd_wednesday_time_table.focus()
                        content1=self.ise_3rd_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ise_3rd_wednesday_number_of_class2.set(row1[2])
                        self.var_ise_3rd_wednesday_time1.set(row1[3])
                        self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    
                    self.wednesday_ise_3rd_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_ise_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_ise_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_ise_3rd_time_table_data_frame,orient=VERTICAL)
                    self.ise_3rd_wednesday_time_table=ttk.Treeview(self.wednesday_ise_3rd_time_table_data_frame,columns=('cid','day1','ise_3rd_wednesday_total_number_of_class','ise_3rd_wednesday_time','ise_3rd_wednesday_subject','ise_3rd_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ise_3rd_wednesday_time_table.xview)
                    scrolly.configure(command=self.ise_3rd_wednesday_time_table.yview)

                    self.ise_3rd_wednesday_time_table.heading('cid',text='Serial No')
                    self.ise_3rd_wednesday_time_table.heading('day1',text='Day')
                    self.ise_3rd_wednesday_time_table.heading('ise_3rd_wednesday_total_number_of_class',text='Totel class')
                    self.ise_3rd_wednesday_time_table.heading('ise_3rd_wednesday_time',text='class time')
                    self.ise_3rd_wednesday_time_table.heading('ise_3rd_wednesday_subject',text='Subject')
                    self.ise_3rd_wednesday_time_table.heading('ise_3rd_wednesday_faculty',text='Faculty')

                    self.ise_3rd_wednesday_time_table.column('cid',width=100)
                    self.ise_3rd_wednesday_time_table.column('day1',width=150)
                    self.ise_3rd_wednesday_time_table.column('ise_3rd_wednesday_total_number_of_class',width=100)
                    self.ise_3rd_wednesday_time_table.column('ise_3rd_wednesday_time',width=150)
                    self.ise_3rd_wednesday_time_table.column('ise_3rd_wednesday_subject',width=150)
                    self.ise_3rd_wednesday_time_table.column('ise_3rd_wednesday_faculty',width=150)

                    self.ise_3rd_wednesday_time_table['show']='headings'

                    self.ise_3rd_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.ise_3rd_wednesday_time_table.bind('<ButtonRelease-1>',ise_3rd_wednesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_ise_3rd_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_ise_3rd_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ise_3rd_subject_list=[]
                    self.fetch_ise_3rd_faculty_subject()
                    wednesday_ise_3rdmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_ise_3rd_subject_list)
                    wednesday_ise_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ise_3rd_name_list=[]
                    self.fetch_ise_3rd_faculty_name()
                    wednesday_ise_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_ise_3rd_wednesday_ise_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ise_3rd_name_list)
                    wednesday_ise_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ise_3rd_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_ise_3rd_wednesday_faculty_serch)
                    ise_3rd_faculty_serch1.place(x=800,y=25)
                    ise_3rd_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=ise_3rd_faculty_serch)
                    ise_3rd_faculty_serch1_button.place(x=937,y=22)
                    ise_3rd_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    ise_3rd_add_database.place(x=10,y=140)

                    ise_3rd_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    ise_3rd_update_database.place(x=10,y=170)

                    ise_3rd_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    ise_3rd_delete_database.place(x=10,y=200)

                    ise_3rd_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    ise_3rd_clear_database.place(x=10,y=230)
##################################################################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Information_Science_and_Engineering':
                if self.var_day_select.get() == 'Thursday':
                
                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ise_3rd_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_ise_3rd_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into ise_3rd_thursday_time_table_database(day1,ise_3rd_thursday_total_number_of_class,ise_3rd_thursday_time,ise_3rd_thursday_subject,ise_3rd_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ise_3rd_thursday_number_of_class2.get(),
                                            self.var_ise_3rd_thursday_time1.get(),
                                            self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject1.get(),
                                            self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_3rd_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.ise_3rd_thursday_time_table.delete(*self.ise_3rd_thursday_time_table.get_children())
                            for row in rows:
                                self.ise_3rd_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def ise_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from ise_3rd_thursday_time_table_database where ise_3rd_thursday_subject LIKE '%{self.var_ise_3rd_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ise_3rd_thursday_time_table.delete(*self.ise_3rd_thursday_time_table.get_children())
                                for row in rows:
                                    self.ise_3rd_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from ise_3rd_thursday_time_table_database where ise_3rd_thursday_subject=%s",(self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update ise_3rd_thursday_time_table_database set ise_3rd_thursday_total_number_of_class=%s,ise_3rd_thursday_time=%s,ise_3rd_thursday_faculty=%s where ise_3rd_thursday_subject=%s",(
                                        
                                        self.var_ise_3rd_thursday_number_of_class2.get(),
                                        self.var_ise_3rd_thursday_time1.get(),
                                        self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from ise_3rd_thursday_time_table_database where ise_3rd_thursday_subject=%s",(self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from ise_3rd_thursday_time_table_database where ise_3rd_thursday_subject=%s',(self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_ise_3rd_thursday_faculty_serch.set("")
                        self.var_ise_3rd_thursday_number_of_class2.set("")
                        self.var_ise_3rd_thursday_time1.set("")
                        self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject1.set("")
                        self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def ise_3rd_thursday_time_table_get(ev):
                        thursday_ise_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.ise_3rd_thursday_time_table.focus()
                        content1=self.ise_3rd_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ise_3rd_thursday_number_of_class2.set(row1[2])
                        self.var_ise_3rd_thursday_time1.set(row1[3])
                        self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    
                    self.thursday_ise_3rd_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_ise_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_ise_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_ise_3rd_time_table_data_frame,orient=VERTICAL)
                    self.ise_3rd_thursday_time_table=ttk.Treeview(self.thursday_ise_3rd_time_table_data_frame,columns=('cid','day1','ise_3rd_thursday_total_number_of_class','ise_3rd_thursday_time','ise_3rd_thursday_subject','ise_3rd_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ise_3rd_thursday_time_table.xview)
                    scrolly.configure(command=self.ise_3rd_thursday_time_table.yview)

                    self.ise_3rd_thursday_time_table.heading('cid',text='Serial No')
                    self.ise_3rd_thursday_time_table.heading('day1',text='Day')
                    self.ise_3rd_thursday_time_table.heading('ise_3rd_thursday_total_number_of_class',text='Totel class')
                    self.ise_3rd_thursday_time_table.heading('ise_3rd_thursday_time',text='class time')
                    self.ise_3rd_thursday_time_table.heading('ise_3rd_thursday_subject',text='Subject')
                    self.ise_3rd_thursday_time_table.heading('ise_3rd_thursday_faculty',text='Faculty')

                    self.ise_3rd_thursday_time_table.column('cid',width=100)
                    self.ise_3rd_thursday_time_table.column('day1',width=150)
                    self.ise_3rd_thursday_time_table.column('ise_3rd_thursday_total_number_of_class',width=100)
                    self.ise_3rd_thursday_time_table.column('ise_3rd_thursday_time',width=150)
                    self.ise_3rd_thursday_time_table.column('ise_3rd_thursday_subject',width=150)
                    self.ise_3rd_thursday_time_table.column('ise_3rd_thursday_faculty',width=150)

                    self.ise_3rd_thursday_time_table['show']='headings'

                    self.ise_3rd_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.ise_3rd_thursday_time_table.bind('<ButtonRelease-1>',ise_3rd_thursday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_ise_3rd_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_ise_3rd_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ise_3rd_subject_list=[]
                    self.fetch_ise_3rd_faculty_subject()
                    thursday_ise_3rdmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_ise_3rd_subject_list)
                    thursday_ise_3rdmistry_cycle_subject1.place(x=400,y=25) 
               
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ise_3rd_name_list=[]
                    self.fetch_ise_3rd_faculty_name()
                    thursday_ise_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_ise_3rd_thursday_ise_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ise_3rd_name_list)
                    thursday_ise_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ise_3rd_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_ise_3rd_thursday_faculty_serch)
                    ise_3rd_faculty_serch1.place(x=800,y=25)
                    ise_3rd_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=ise_3rd_faculty_serch)
                    ise_3rd_faculty_serch1_button.place(x=937,y=22)
                    ise_3rd_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    ise_3rd_add_database.place(x=10,y=140)

                    ise_3rd_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    ise_3rd_update_database.place(x=10,y=170)

                    ise_3rd_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    ise_3rd_delete_database.place(x=10,y=200)

                    ise_3rd_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    ise_3rd_clear_database.place(x=10,y=230)
######################################################################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Information_Science_and_Engineering':
                if self.var_day_select.get() == 'Friday':
                
                  
           
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ise_3rd_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_ise_3rd_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into ise_3rd_friday_time_table_database(day1,ise_3rd_friday_total_number_of_class,ise_3rd_friday_time,ise_3rd_friday_subject,ise_3rd_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ise_3rd_friday_number_of_class2.get(),
                                            self.var_ise_3rd_friday_time1.get(),
                                            self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject1.get(),
                                            self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_3rd_friday_time_table_database')
                            rows=cur.fetchall()
                            self.ise_3rd_friday_time_table.delete(*self.ise_3rd_friday_time_table.get_children())
                            for row in rows:
                                self.ise_3rd_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def ise_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from ise_3rd_friday_time_table_database where ise_3rd_friday_subject LIKE '%{self.var_ise_3rd_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ise_3rd_friday_time_table.delete(*self.ise_3rd_friday_time_table.get_children())
                                for row in rows:
                                    self.ise_3rd_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from ise_3rd_friday_time_table_database where ise_3rd_friday_subject=%s",(self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update ise_3rd_friday_time_table_database set ise_3rd_friday_total_number_of_class=%s,ise_3rd_friday_time=%s,ise_3rd_friday_faculty=%s where ise_3rd_friday_subject=%s",(
                                        
                                        self.var_ise_3rd_friday_number_of_class2.get(),
                                        self.var_ise_3rd_friday_time1.get(),
                                        self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from ise_3rd_friday_time_table_database where ise_3rd_friday_subject=%s",(self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from ise_3rd_friday_time_table_database where ise_3rd_friday_subject=%s',(self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_ise_3rd_friday_faculty_serch.set("")
                        self.var_ise_3rd_friday_number_of_class2.set("")
                        self.var_ise_3rd_friday_time1.set("")
                        self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject1.set("")
                        self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def ise_3rd_friday_time_table_get(ev):
                        friday_ise_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.ise_3rd_friday_time_table.focus()
                        content1=self.ise_3rd_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ise_3rd_friday_number_of_class2.set(row1[2])
                        self.var_ise_3rd_friday_time1.set(row1[3])
                        self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.friday_ise_3rd_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_ise_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_ise_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_ise_3rd_time_table_data_frame,orient=VERTICAL)
                    self.ise_3rd_friday_time_table=ttk.Treeview(self.friday_ise_3rd_time_table_data_frame,columns=('cid','day1','ise_3rd_friday_total_number_of_class','ise_3rd_friday_time','ise_3rd_friday_subject','ise_3rd_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ise_3rd_friday_time_table.xview)
                    scrolly.configure(command=self.ise_3rd_friday_time_table.yview)

                    self.ise_3rd_friday_time_table.heading('cid',text='Serial No')
                    self.ise_3rd_friday_time_table.heading('day1',text='Day')
                    self.ise_3rd_friday_time_table.heading('ise_3rd_friday_total_number_of_class',text='Totel class')
                    self.ise_3rd_friday_time_table.heading('ise_3rd_friday_time',text='class time')
                    self.ise_3rd_friday_time_table.heading('ise_3rd_friday_subject',text='Subject')
                    self.ise_3rd_friday_time_table.heading('ise_3rd_friday_faculty',text='Faculty')

                    self.ise_3rd_friday_time_table.column('cid',width=100)
                    self.ise_3rd_friday_time_table.column('day1',width=150)
                    self.ise_3rd_friday_time_table.column('ise_3rd_friday_total_number_of_class',width=100)
                    self.ise_3rd_friday_time_table.column('ise_3rd_friday_time',width=150)
                    self.ise_3rd_friday_time_table.column('ise_3rd_friday_subject',width=150)
                    self.ise_3rd_friday_time_table.column('ise_3rd_friday_faculty',width=150)

                    self.ise_3rd_friday_time_table['show']='headings'

                    self.ise_3rd_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.ise_3rd_friday_time_table.bind('<ButtonRelease-1>',ise_3rd_friday_time_table_get)

             
                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_ise_3rd_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_ise_3rd_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ise_3rd_subject_list=[]
                    self.fetch_ise_3rd_faculty_subject()
                    friday_ise_3rdmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_ise_3rd_subject_list)
                    friday_ise_3rdmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ise_3rd_name_list=[]
                    self.fetch_ise_3rd_faculty_name()
                    friday_ise_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ise_3rd_friday_ise_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ise_3rd_name_list)
                    friday_ise_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ise_3rd_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_ise_3rd_friday_faculty_serch)
                    ise_3rd_faculty_serch1.place(x=800,y=25)
                    ise_3rd_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=ise_3rd_faculty_serch)
                    ise_3rd_faculty_serch1_button.place(x=937,y=22)
                    ise_3rd_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    ise_3rd_add_database.place(x=10,y=140)

                    ise_3rd_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    ise_3rd_update_database.place(x=10,y=170)

                    ise_3rd_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    ise_3rd_delete_database.place(x=10,y=200)

                    ise_3rd_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    ise_3rd_clear_database.place(x=10,y=230)
###################################################################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Information_Science_and_Engineering':
                if self.var_day_select.get() == 'Saturday':
                
                  
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ise_3rd_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_ise_3rd_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into ise_3rd_saturday_time_table_database(day1,ise_3rd_saturday_total_number_of_class,ise_3rd_saturday_time,ise_3rd_saturday_subject,ise_3rd_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ise_3rd_saturday_number_of_class2.get(),
                                            self.var_ise_3rd_saturday_time1.get(),
                                            self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject1.get(),
                                            self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_3rd_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.ise_3rd_saturday_time_table.delete(*self.ise_3rd_saturday_time_table.get_children())
                            for row in rows:
                                self.ise_3rd_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def ise_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from ise_3rd_saturday_time_table_database where ise_3rd_saturday_subject LIKE '%{self.var_ise_3rd_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ise_3rd_saturday_time_table.delete(*self.ise_3rd_saturday_time_table.get_children())
                                for row in rows:
                                    self.ise_3rd_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from ise_3rd_saturday_time_table_database where ise_3rd_saturday_subject=%s",(self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update ise_3rd_saturday_time_table_database set ise_3rd_saturday_total_number_of_class=%s,ise_3rd_saturday_time=%s,ise_3rd_saturday_faculty=%s where ise_3rd_saturday_subject=%s",(
                                        
                                        self.var_ise_3rd_saturday_number_of_class2.get(),
                                        self.var_ise_3rd_saturday_time1.get(),
                                        self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from ise_3rd_saturday_time_table_database where ise_3rd_saturday_subject=%s",(self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from ise_3rd_saturday_time_table_database where ise_3rd_saturday_subject=%s',(self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_ise_3rd_saturday_faculty_serch.set("")
                        self.var_ise_3rd_saturday_number_of_class2.set("")
                        self.var_ise_3rd_saturday_time1.set("")
                        self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject1.set("")
                        self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def ise_3rd_saturday_time_table_get(ev):
                        saturday_ise_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.ise_3rd_saturday_time_table.focus()
                        content1=self.ise_3rd_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ise_3rd_saturday_number_of_class2.set(row1[2])
                        self.var_ise_3rd_saturday_time1.set(row1[3])
                        self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.saturday_ise_3rd_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_ise_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_ise_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_ise_3rd_time_table_data_frame,orient=VERTICAL)
                    self.ise_3rd_saturday_time_table=ttk.Treeview(self.saturday_ise_3rd_time_table_data_frame,columns=('cid','day1','ise_3rd_saturday_total_number_of_class','ise_3rd_saturday_time','ise_3rd_saturday_subject','ise_3rd_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ise_3rd_saturday_time_table.xview)
                    scrolly.configure(command=self.ise_3rd_saturday_time_table.yview)

                    self.ise_3rd_saturday_time_table.heading('cid',text='Serial No')
                    self.ise_3rd_saturday_time_table.heading('day1',text='Day')
                    self.ise_3rd_saturday_time_table.heading('ise_3rd_saturday_total_number_of_class',text='Totel class')
                    self.ise_3rd_saturday_time_table.heading('ise_3rd_saturday_time',text='class time')
                    self.ise_3rd_saturday_time_table.heading('ise_3rd_saturday_subject',text='Subject')
                    self.ise_3rd_saturday_time_table.heading('ise_3rd_saturday_faculty',text='Faculty')

                    self.ise_3rd_saturday_time_table.column('cid',width=100)
                    self.ise_3rd_saturday_time_table.column('day1',width=150)
                    self.ise_3rd_saturday_time_table.column('ise_3rd_saturday_total_number_of_class',width=100)
                    self.ise_3rd_saturday_time_table.column('ise_3rd_saturday_time',width=150)
                    self.ise_3rd_saturday_time_table.column('ise_3rd_saturday_subject',width=150)
                    self.ise_3rd_saturday_time_table.column('ise_3rd_saturday_faculty',width=150)

                    self.ise_3rd_saturday_time_table['show']='headings'

                    self.ise_3rd_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.ise_3rd_saturday_time_table.bind('<ButtonRelease-1>',ise_3rd_saturday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_ise_3rd_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_ise_3rd_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ise_3rd_subject_list=[]
                    self.fetch_ise_3rd_faculty_subject()
                    saturday_ise_3rdmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_ise_3rd_subject_list)
                    saturday_ise_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ise_3rd_name_list=[]
                    self.fetch_ise_3rd_faculty_name()
                    saturday_ise_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ise_3rd_saturday_ise_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ise_3rd_name_list)
                    saturday_ise_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ise_3rd_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_ise_3rd_saturday_faculty_serch)
                    ise_3rd_faculty_serch1.place(x=800,y=25)
                    ise_3rd_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=ise_3rd_faculty_serch)
                    ise_3rd_faculty_serch1_button.place(x=937,y=22)
                    ise_3rd_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    ise_3rd_add_database.place(x=10,y=140)

                    ise_3rd_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    ise_3rd_update_database.place(x=10,y=170)

                    ise_3rd_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    ise_3rd_delete_database.place(x=10,y=200)

                    ise_3rd_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    ise_3rd_clear_database.place(x=10,y=230)


        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Telecommunication_Engineering':
                if self.var_day_select.get() == 'Monday':
      
                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ete_3rd_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_ete_3rd_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into ete_3rd_monday_time_table_database(day1,ete_3rd_monday_total_number_of_class,ete_3rd_monday_time,ete_3rd_monday_subject,ete_3rd_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ete_3rd_monday_number_of_class1.get(),
                                            self.var_ete_3rd_monday_time1.get(),
                                            self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject1.get(),
                                            self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_3rd_monday_time_table_database')
                            rows=cur.fetchall()
                            self.ete_3rd_monday_time_table.delete(*self.ete_3rd_monday_time_table.get_children())
                            for row in rows:
                                self.ete_3rd_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def ete_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from ete_3rd_monday_time_table_database where ete_3rd_monday_subject LIKE '%{self.var_ete_3rd_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ete_3rd_monday_time_table.delete(*self.ete_3rd_monday_time_table.get_children())
                                for row in rows:
                                    self.ete_3rd_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from ete_3rd_monday_time_table_database where ete_3rd_monday_subject=%s",(self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update ete_3rd_monday_time_table_database set ete_3rd_monday_total_number_of_class=%s,ete_3rd_monday_time=%s,ete_3rd_monday_faculty=%s where ete_3rd_monday_subject=%s",(
                                        
                                        self.var_ete_3rd_monday_number_of_class1.get(),
                                        self.var_ete_3rd_monday_time1.get(),
                                        self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from ete_3rd_monday_time_table_database where ete_3rd_monday_subject=%s",(self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from ete_3rd_monday_time_table_database where ete_3rd_monday_subject=%s',(self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_ete_3rd_monday_faculty_serch.set("")
                        self.var_ete_3rd_monday_number_of_class1.set("")
                        self.var_ete_3rd_monday_time1.set("")
                        self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject1.set("")
                        self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def ete_3rd_monday_time_table_get(ev):
                        monday_ete_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.ete_3rd_monday_time_table.focus()
                        content1=self.ete_3rd_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ete_3rd_monday_number_of_class1.set(row1[2])
                        self.var_ete_3rd_monday_time1.set(row1[3])
                        self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    self.monday_ete_3rd_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_ete_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_ete_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_ete_3rd_time_table_data_frame,orient=VERTICAL)
                    self.ete_3rd_monday_time_table=ttk.Treeview(self.monday_ete_3rd_time_table_data_frame,columns=('cid','day1','ete_3rd_monday_total_number_of_class','ete_3rd_monday_time','ete_3rd_monday_subject','ete_3rd_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ete_3rd_monday_time_table.xview)
                    scrolly.configure(command=self.ete_3rd_monday_time_table.yview)

                    self.ete_3rd_monday_time_table.heading('cid',text='Serial No')
                    self.ete_3rd_monday_time_table.heading('day1',text='Day')
                    self.ete_3rd_monday_time_table.heading('ete_3rd_monday_total_number_of_class',text='Totel class')
                    self.ete_3rd_monday_time_table.heading('ete_3rd_monday_time',text='class time')
                    self.ete_3rd_monday_time_table.heading('ete_3rd_monday_subject',text='Subject')
                    self.ete_3rd_monday_time_table.heading('ete_3rd_monday_faculty',text='Faculty')

                    self.ete_3rd_monday_time_table.column('cid',width=100)
                    self.ete_3rd_monday_time_table.column('day1',width=150)
                    self.ete_3rd_monday_time_table.column('ete_3rd_monday_total_number_of_class',width=100)
                    self.ete_3rd_monday_time_table.column('ete_3rd_monday_time',width=150)
                    self.ete_3rd_monday_time_table.column('ete_3rd_monday_subject',width=150)
                    self.ete_3rd_monday_time_table.column('ete_3rd_monday_faculty',width=150)

                    self.ete_3rd_monday_time_table['show']='headings'

                    self.ete_3rd_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.ete_3rd_monday_time_table.bind('<ButtonRelease-1>',ete_3rd_monday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_ete_3rd_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_ete_3rd_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ete_3rd_subject_list=[]
                    self.fetch_ete_3rd_faculty_subject()
                    monday_ete_3rdmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_ete_3rd_subject_list)
                    monday_ete_3rdmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ete_3rd_name_list=[]
                    self.fetch_ete_3rd_faculty_name()
                    monday_ete_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_ete_3rd_monday_ete_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ete_3rd_name_list)
                    monday_ete_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ete_3rd_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_ete_3rd_monday_faculty_serch)
                    ete_3rd_faculty_serch1.place(x=800,y=25)
                    ete_3rd_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=ete_3rd_faculty_serch)
                    ete_3rd_faculty_serch1_button.place(x=937,y=22)
                    ete_3rd_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    ete_3rd_add_database.place(x=10,y=140)

                    ete_3rd_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    ete_3rd_update_database.place(x=10,y=170)

                    ete_3rd_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    ete_3rd_delete_database.place(x=10,y=200)

                    ete_3rd_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    ete_3rd_clear_database.place(x=10,y=230)
#################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Telecommunication_Engineering':
                if self.var_day_select.get() == 'Thuesday':
                
            
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ete_3rd_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_ete_3rd_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into ete_3rd_thuesday_time_table_database(day1,ete_3rd_thuesday_total_number_of_class,ete_3rd_thuesday_time,ete_3rd_thuesday_subject,ete_3rd_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ete_3rd_thuesday_number_of_class2.get(),
                                            self.var_ete_3rd_thuesday_time1.get(),
                                            self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject1.get(),
                                            self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_3rd_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.ete_3rd_thuesday_time_table.delete(*self.ete_3rd_thuesday_time_table.get_children())
                            for row in rows:
                                self.ete_3rd_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def ete_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from ete_3rd_thuesday_time_table_database where ete_3rd_thuesday_subject LIKE '%{self.var_ete_3rd_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ete_3rd_thuesday_time_table.delete(*self.ete_3rd_thuesday_time_table.get_children())
                                for row in rows:
                                    self.ete_3rd_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from ete_3rd_thuesday_time_table_database where ete_3rd_thuesday_subject=%s",(self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update ete_3rd_thuesday_time_table_database set ete_3rd_thuesday_total_number_of_class=%s,ete_3rd_thuesday_time=%s,ete_3rd_thuesday_faculty=%s where ete_3rd_thuesday_subject=%s",(
                                        
                                        self.var_ete_3rd_thuesday_number_of_class2.get(),
                                        self.var_ete_3rd_thuesday_time1.get(),
                                        self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from ete_3rd_thuesday_time_table_database where ete_3rd_thuesday_subject=%s",(self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from ete_3rd_thuesday_time_table_database where ete_3rd_thuesday_subject=%s',(self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_ete_3rd_thuesday_faculty_serch.set("")
                        self.var_ete_3rd_thuesday_number_of_class2.set("")
                        self.var_ete_3rd_thuesday_time1.set("")
                        self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject1.set("")
                        self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def ete_3rd_thuesday_time_table_get(ev):
                        thuesday_ete_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.ete_3rd_thuesday_time_table.focus()
                        content1=self.ete_3rd_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ete_3rd_thuesday_number_of_class2.set(row1[2])
                        self.var_ete_3rd_thuesday_time1.set(row1[3])
                        self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)


                    self.thuesday_ete_3rd_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_ete_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_ete_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_ete_3rd_time_table_data_frame,orient=VERTICAL)
                    self.ete_3rd_thuesday_time_table=ttk.Treeview(self.thuesday_ete_3rd_time_table_data_frame,columns=('cid','day1','ete_3rd_thuesday_total_number_of_class','ete_3rd_thuesday_time','ete_3rd_thuesday_subject','ete_3rd_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ete_3rd_thuesday_time_table.xview)
                    scrolly.configure(command=self.ete_3rd_thuesday_time_table.yview)

                    self.ete_3rd_thuesday_time_table.heading('cid',text='Serial No')
                    self.ete_3rd_thuesday_time_table.heading('day1',text='Day')
                    self.ete_3rd_thuesday_time_table.heading('ete_3rd_thuesday_total_number_of_class',text='Totel class')
                    self.ete_3rd_thuesday_time_table.heading('ete_3rd_thuesday_time',text='class time')
                    self.ete_3rd_thuesday_time_table.heading('ete_3rd_thuesday_subject',text='Subject')
                    self.ete_3rd_thuesday_time_table.heading('ete_3rd_thuesday_faculty',text='Faculty')

                    self.ete_3rd_thuesday_time_table.column('cid',width=100)
                    self.ete_3rd_thuesday_time_table.column('day1',width=150)
                    self.ete_3rd_thuesday_time_table.column('ete_3rd_thuesday_total_number_of_class',width=100)
                    self.ete_3rd_thuesday_time_table.column('ete_3rd_thuesday_time',width=150)
                    self.ete_3rd_thuesday_time_table.column('ete_3rd_thuesday_subject',width=150)
                    self.ete_3rd_thuesday_time_table.column('ete_3rd_thuesday_faculty',width=150)

                    self.ete_3rd_thuesday_time_table['show']='headings'

                    self.ete_3rd_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.ete_3rd_thuesday_time_table.bind('<ButtonRelease-1>',ete_3rd_thuesday_time_table_get)
                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_ete_3rd_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_ete_3rd_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ete_3rd_subject_list=[]
                    self.fetch_ete_3rd_faculty_subject()
                    thuesday_ete_3rdmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_ete_3rd_subject_list)
                    thuesday_ete_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ete_3rd_name_list=[]
                    self.fetch_ete_3rd_faculty_name()
                    thuesday_ete_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_ete_3rd_thuesday_ete_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ete_3rd_name_list)
                    thuesday_ete_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ete_3rd_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_ete_3rd_thuesday_faculty_serch)
                    ete_3rd_faculty_serch1.place(x=800,y=25)
                    ete_3rd_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=ete_3rd_faculty_serch)
                    ete_3rd_faculty_serch1_button.place(x=937,y=22)
                    ete_3rd_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    ete_3rd_add_database.place(x=10,y=140)

                    ete_3rd_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    ete_3rd_update_database.place(x=10,y=170)

                    ete_3rd_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    ete_3rd_delete_database.place(x=10,y=200)

                    ete_3rd_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    ete_3rd_clear_database.place(x=10,y=230)

        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Telecommunication_Engineering':
                if self.var_day_select.get() == 'Wednesday':
                
                  
                    #print('this time table is for ete_3rdmistry cycle in civil engineering mondy')
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ete_3rd_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_ete_3rd_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into ete_3rd_wednesday_time_table_database(day1,ete_3rd_wednesday_total_number_of_class,ete_3rd_wednesday_time,ete_3rd_wednesday_subject,ete_3rd_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ete_3rd_wednesday_number_of_class2.get(),
                                            self.var_ete_3rd_wednesday_time1.get(),
                                            self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject1.get(),
                                            self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_3rd_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.ete_3rd_wednesday_time_table.delete(*self.ete_3rd_wednesday_time_table.get_children())
                            for row in rows:
                                self.ete_3rd_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def ete_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from ete_3rd_wednesday_time_table_database where ete_3rd_wednesday_subject LIKE '%{self.var_ete_3rd_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ete_3rd_wednesday_time_table.delete(*self.ete_3rd_wednesday_time_table.get_children())
                                for row in rows:
                                    self.ete_3rd_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from ete_3rd_wednesday_time_table_database where ete_3rd_wednesday_subject=%s",(self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update ete_3rd_wednesday_time_table_database set ete_3rd_wednesday_total_number_of_class=%s,ete_3rd_wednesday_time=%s,ete_3rd_wednesday_faculty=%s where ete_3rd_wednesday_subject=%s",(
                                        
                                        self.var_ete_3rd_wednesday_number_of_class2.get(),
                                        self.var_ete_3rd_wednesday_time1.get(),
                                        self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from ete_3rd_wednesday_time_table_database where ete_3rd_wednesday_subject=%s",(self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from ete_3rd_wednesday_time_table_database where ete_3rd_wednesday_subject=%s',(self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_ete_3rd_wednesday_faculty_serch.set("")
                        self.var_ete_3rd_wednesday_number_of_class2.set("")
                        self.var_ete_3rd_wednesday_time1.set("")
                        self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject1.set("")
                        self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def ete_3rd_wednesday_time_table_get(ev):
                        wednesday_ete_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.ete_3rd_wednesday_time_table.focus()
                        content1=self.ete_3rd_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ete_3rd_wednesday_number_of_class2.set(row1[2])
                        self.var_ete_3rd_wednesday_time1.set(row1[3])
                        self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    
                    self.wednesday_ete_3rd_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_ete_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_ete_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_ete_3rd_time_table_data_frame,orient=VERTICAL)
                    self.ete_3rd_wednesday_time_table=ttk.Treeview(self.wednesday_ete_3rd_time_table_data_frame,columns=('cid','day1','ete_3rd_wednesday_total_number_of_class','ete_3rd_wednesday_time','ete_3rd_wednesday_subject','ete_3rd_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ete_3rd_wednesday_time_table.xview)
                    scrolly.configure(command=self.ete_3rd_wednesday_time_table.yview)

                    self.ete_3rd_wednesday_time_table.heading('cid',text='Serial No')
                    self.ete_3rd_wednesday_time_table.heading('day1',text='Day')
                    self.ete_3rd_wednesday_time_table.heading('ete_3rd_wednesday_total_number_of_class',text='Totel class')
                    self.ete_3rd_wednesday_time_table.heading('ete_3rd_wednesday_time',text='class time')
                    self.ete_3rd_wednesday_time_table.heading('ete_3rd_wednesday_subject',text='Subject')
                    self.ete_3rd_wednesday_time_table.heading('ete_3rd_wednesday_faculty',text='Faculty')

                    self.ete_3rd_wednesday_time_table.column('cid',width=100)
                    self.ete_3rd_wednesday_time_table.column('day1',width=150)
                    self.ete_3rd_wednesday_time_table.column('ete_3rd_wednesday_total_number_of_class',width=100)
                    self.ete_3rd_wednesday_time_table.column('ete_3rd_wednesday_time',width=150)
                    self.ete_3rd_wednesday_time_table.column('ete_3rd_wednesday_subject',width=150)
                    self.ete_3rd_wednesday_time_table.column('ete_3rd_wednesday_faculty',width=150)

                    self.ete_3rd_wednesday_time_table['show']='headings'

                    self.ete_3rd_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.ete_3rd_wednesday_time_table.bind('<ButtonRelease-1>',ete_3rd_wednesday_time_table_get)

                    

                    

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_ete_3rd_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_ete_3rd_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ete_3rd_subject_list=[]
                    self.fetch_ete_3rd_faculty_subject()
                    wednesday_ete_3rdmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_ete_3rd_subject_list)
                    wednesday_ete_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ete_3rd_name_list=[]
                    self.fetch_ete_3rd_faculty_name()
                    wednesday_ete_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_ete_3rd_wednesday_ete_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ete_3rd_name_list)
                    wednesday_ete_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ete_3rd_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_ete_3rd_wednesday_faculty_serch)
                    ete_3rd_faculty_serch1.place(x=800,y=25)
                    ete_3rd_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=ete_3rd_faculty_serch)
                    ete_3rd_faculty_serch1_button.place(x=937,y=22)
                    ete_3rd_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    ete_3rd_add_database.place(x=10,y=140)

                    ete_3rd_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    ete_3rd_update_database.place(x=10,y=170)

                    ete_3rd_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    ete_3rd_delete_database.place(x=10,y=200)

                    ete_3rd_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    ete_3rd_clear_database.place(x=10,y=230)

#######################################################################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Telecommunication_Engineering':
                if self.var_day_select.get() == 'Thursday':
                
                  
                    #print('this time table is for ete_3rdmistry cycle in civil engineering mondy')
                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ete_3rd_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_ete_3rd_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into ete_3rd_thursday_time_table_database(day1,ete_3rd_thursday_total_number_of_class,ete_3rd_thursday_time,ete_3rd_thursday_subject,ete_3rd_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ete_3rd_thursday_number_of_class2.get(),
                                            self.var_ete_3rd_thursday_time1.get(),
                                            self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject1.get(),
                                            self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_3rd_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.ete_3rd_thursday_time_table.delete(*self.ete_3rd_thursday_time_table.get_children())
                            for row in rows:
                                self.ete_3rd_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def ete_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from ete_3rd_thursday_time_table_database where ete_3rd_thursday_subject LIKE '%{self.var_ete_3rd_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ete_3rd_thursday_time_table.delete(*self.ete_3rd_thursday_time_table.get_children())
                                for row in rows:
                                    self.ete_3rd_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from ete_3rd_thursday_time_table_database where ete_3rd_thursday_subject=%s",(self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update ete_3rd_thursday_time_table_database set ete_3rd_thursday_total_number_of_class=%s,ete_3rd_thursday_time=%s,ete_3rd_thursday_faculty=%s where ete_3rd_thursday_subject=%s",(
                                        
                                        self.var_ete_3rd_thursday_number_of_class2.get(),
                                        self.var_ete_3rd_thursday_time1.get(),
                                        self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from ete_3rd_thursday_time_table_database where ete_3rd_thursday_subject=%s",(self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from ete_3rd_thursday_time_table_database where ete_3rd_thursday_subject=%s',(self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_ete_3rd_thursday_faculty_serch.set("")
                        self.var_ete_3rd_thursday_number_of_class2.set("")
                        self.var_ete_3rd_thursday_time1.set("")
                        self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject1.set("")
                        self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def ete_3rd_thursday_time_table_get(ev):
                        thursday_ete_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.ete_3rd_thursday_time_table.focus()
                        content1=self.ete_3rd_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ete_3rd_thursday_number_of_class2.set(row1[2])
                        self.var_ete_3rd_thursday_time1.set(row1[3])
                        self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    
                    self.thursday_ete_3rd_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_ete_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_ete_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_ete_3rd_time_table_data_frame,orient=VERTICAL)
                    self.ete_3rd_thursday_time_table=ttk.Treeview(self.thursday_ete_3rd_time_table_data_frame,columns=('cid','day1','ete_3rd_thursday_total_number_of_class','ete_3rd_thursday_time','ete_3rd_thursday_subject','ete_3rd_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ete_3rd_thursday_time_table.xview)
                    scrolly.configure(command=self.ete_3rd_thursday_time_table.yview)

                    self.ete_3rd_thursday_time_table.heading('cid',text='Serial No')
                    self.ete_3rd_thursday_time_table.heading('day1',text='Day')
                    self.ete_3rd_thursday_time_table.heading('ete_3rd_thursday_total_number_of_class',text='Totel class')
                    self.ete_3rd_thursday_time_table.heading('ete_3rd_thursday_time',text='class time')
                    self.ete_3rd_thursday_time_table.heading('ete_3rd_thursday_subject',text='Subject')
                    self.ete_3rd_thursday_time_table.heading('ete_3rd_thursday_faculty',text='Faculty')

                    self.ete_3rd_thursday_time_table.column('cid',width=100)
                    self.ete_3rd_thursday_time_table.column('day1',width=150)
                    self.ete_3rd_thursday_time_table.column('ete_3rd_thursday_total_number_of_class',width=100)
                    self.ete_3rd_thursday_time_table.column('ete_3rd_thursday_time',width=150)
                    self.ete_3rd_thursday_time_table.column('ete_3rd_thursday_subject',width=150)
                    self.ete_3rd_thursday_time_table.column('ete_3rd_thursday_faculty',width=150)

                    self.ete_3rd_thursday_time_table['show']='headings'

                    self.ete_3rd_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.ete_3rd_thursday_time_table.bind('<ButtonRelease-1>',ete_3rd_thursday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_ete_3rd_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_ete_3rd_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ete_3rd_subject_list=[]
                    self.fetch_ete_3rd_faculty_subject()
                    thursday_ete_3rdmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_ete_3rd_subject_list)
                    thursday_ete_3rdmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ete_3rd_name_list=[]
                    self.fetch_ete_3rd_faculty_name()
                    thursday_ete_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_ete_3rd_thursday_ete_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ete_3rd_name_list)
                    thursday_ete_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ete_3rd_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_ete_3rd_thursday_faculty_serch)
                    ete_3rd_faculty_serch1.place(x=800,y=25)
                    ete_3rd_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=ete_3rd_faculty_serch)
                    ete_3rd_faculty_serch1_button.place(x=937,y=22)
                    ete_3rd_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    ete_3rd_add_database.place(x=10,y=140)

                    ete_3rd_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    ete_3rd_update_database.place(x=10,y=170)

                    ete_3rd_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    ete_3rd_delete_database.place(x=10,y=200)

                    ete_3rd_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    ete_3rd_clear_database.place(x=10,y=230)

########################################################################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Telecommunication_Engineering':
                if self.var_day_select.get() == 'Friday':
                
       
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ete_3rd_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_ete_3rd_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into ete_3rd_friday_time_table_database(day1,ete_3rd_friday_total_number_of_class,ete_3rd_friday_time,ete_3rd_friday_subject,ete_3rd_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ete_3rd_friday_number_of_class2.get(),
                                            self.var_ete_3rd_friday_time1.get(),
                                            self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject1.get(),
                                            self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_3rd_friday_time_table_database')
                            rows=cur.fetchall()
                            self.ete_3rd_friday_time_table.delete(*self.ete_3rd_friday_time_table.get_children())
                            for row in rows:
                                self.ete_3rd_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def ete_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from ete_3rd_friday_time_table_database where ete_3rd_friday_subject LIKE '%{self.var_ete_3rd_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ete_3rd_friday_time_table.delete(*self.ete_3rd_friday_time_table.get_children())
                                for row in rows:
                                    self.ete_3rd_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from ete_3rd_friday_time_table_database where ete_3rd_friday_subject=%s",(self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update ete_3rd_friday_time_table_database set ete_3rd_friday_total_number_of_class=%s,ete_3rd_friday_time=%s,ete_3rd_friday_faculty=%s where ete_3rd_friday_subject=%s",(
                                        
                                        self.var_ete_3rd_friday_number_of_class2.get(),
                                        self.var_ete_3rd_friday_time1.get(),
                                        self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from ete_3rd_friday_time_table_database where ete_3rd_friday_subject=%s",(self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from ete_3rd_friday_time_table_database where ete_3rd_friday_subject=%s',(self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_ete_3rd_friday_faculty_serch.set("")
                        self.var_ete_3rd_friday_number_of_class2.set("")
                        self.var_ete_3rd_friday_time1.set("")
                        self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject1.set("")
                        self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def ete_3rd_friday_time_table_get(ev):
                        friday_ete_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.ete_3rd_friday_time_table.focus()
                        content1=self.ete_3rd_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ete_3rd_friday_number_of_class2.set(row1[2])
                        self.var_ete_3rd_friday_time1.set(row1[3])
                        self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.friday_ete_3rd_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_ete_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_ete_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_ete_3rd_time_table_data_frame,orient=VERTICAL)
                    self.ete_3rd_friday_time_table=ttk.Treeview(self.friday_ete_3rd_time_table_data_frame,columns=('cid','day1','ete_3rd_friday_total_number_of_class','ete_3rd_friday_time','ete_3rd_friday_subject','ete_3rd_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ete_3rd_friday_time_table.xview)
                    scrolly.configure(command=self.ete_3rd_friday_time_table.yview)

                    self.ete_3rd_friday_time_table.heading('cid',text='Serial No')
                    self.ete_3rd_friday_time_table.heading('day1',text='Day')
                    self.ete_3rd_friday_time_table.heading('ete_3rd_friday_total_number_of_class',text='Totel class')
                    self.ete_3rd_friday_time_table.heading('ete_3rd_friday_time',text='class time')
                    self.ete_3rd_friday_time_table.heading('ete_3rd_friday_subject',text='Subject')
                    self.ete_3rd_friday_time_table.heading('ete_3rd_friday_faculty',text='Faculty')

                    self.ete_3rd_friday_time_table.column('cid',width=100)
                    self.ete_3rd_friday_time_table.column('day1',width=150)
                    self.ete_3rd_friday_time_table.column('ete_3rd_friday_total_number_of_class',width=100)
                    self.ete_3rd_friday_time_table.column('ete_3rd_friday_time',width=150)
                    self.ete_3rd_friday_time_table.column('ete_3rd_friday_subject',width=150)
                    self.ete_3rd_friday_time_table.column('ete_3rd_friday_faculty',width=150)

                    self.ete_3rd_friday_time_table['show']='headings'

                    self.ete_3rd_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.ete_3rd_friday_time_table.bind('<ButtonRelease-1>',ete_3rd_friday_time_table_get)

        
                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_ete_3rd_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_ete_3rd_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ete_3rd_subject_list=[]
                    self.fetch_ete_3rd_faculty_subject()
                    friday_ete_3rdmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_ete_3rd_subject_list)
                    friday_ete_3rdmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ete_3rd_name_list=[]
                    self.fetch_ete_3rd_faculty_name()
                    friday_ete_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ete_3rd_friday_ete_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ete_3rd_name_list)
                    friday_ete_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ete_3rd_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_ete_3rd_friday_faculty_serch)
                    ete_3rd_faculty_serch1.place(x=800,y=25)
                    ete_3rd_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=ete_3rd_faculty_serch)
                    ete_3rd_faculty_serch1_button.place(x=937,y=22)
                    ete_3rd_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    ete_3rd_add_database.place(x=10,y=140)

                    ete_3rd_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    ete_3rd_update_database.place(x=10,y=170)

                    ete_3rd_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    ete_3rd_delete_database.place(x=10,y=200)

                    ete_3rd_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    ete_3rd_clear_database.place(x=10,y=230)

##########################################################################################################################################################################
        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Telecommunication_Engineering':
                if self.var_day_select.get() == 'Saturday':
                
    
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ete_3rd_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_ete_3rd_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into ete_3rd_saturday_time_table_database(day1,ete_3rd_saturday_total_number_of_class,ete_3rd_saturday_time,ete_3rd_saturday_subject,ete_3rd_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ete_3rd_saturday_number_of_class2.get(),
                                            self.var_ete_3rd_saturday_time1.get(),
                                            self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject1.get(),
                                            self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_3rd_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.ete_3rd_saturday_time_table.delete(*self.ete_3rd_saturday_time_table.get_children())
                            for row in rows:
                                self.ete_3rd_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def ete_3rd_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from ete_3rd_saturday_time_table_database where ete_3rd_saturday_subject LIKE '%{self.var_ete_3rd_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ete_3rd_saturday_time_table.delete(*self.ete_3rd_saturday_time_table.get_children())
                                for row in rows:
                                    self.ete_3rd_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from ete_3rd_saturday_time_table_database where ete_3rd_saturday_subject=%s",(self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update ete_3rd_saturday_time_table_database set ete_3rd_saturday_total_number_of_class=%s,ete_3rd_saturday_time=%s,ete_3rd_saturday_faculty=%s where ete_3rd_saturday_subject=%s",(
                                        
                                        self.var_ete_3rd_saturday_number_of_class2.get(),
                                        self.var_ete_3rd_saturday_time1.get(),
                                        self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject_faculty1.get(),
                                        self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from ete_3rd_saturday_time_table_database where ete_3rd_saturday_subject=%s",(self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from ete_3rd_saturday_time_table_database where ete_3rd_saturday_subject=%s',(self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_ete_3rd_saturday_faculty_serch.set("")
                        self.var_ete_3rd_saturday_number_of_class2.set("")
                        self.var_ete_3rd_saturday_time1.set("")
                        self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject1.set("")
                        self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def ete_3rd_saturday_time_table_get(ev):
                        saturday_ete_3rdmistry_cycle_subject1.config(state='readonly')
                        r1=self.ete_3rd_saturday_time_table.focus()
                        content1=self.ete_3rd_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ete_3rd_saturday_number_of_class2.set(row1[2])
                        self.var_ete_3rd_saturday_time1.set(row1[3])
                        self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject1.set(row1[4])
                        self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.saturday_ete_3rd_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_ete_3rd_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_ete_3rd_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_ete_3rd_time_table_data_frame,orient=VERTICAL)
                    self.ete_3rd_saturday_time_table=ttk.Treeview(self.saturday_ete_3rd_time_table_data_frame,columns=('cid','day1','ete_3rd_saturday_total_number_of_class','ete_3rd_saturday_time','ete_3rd_saturday_subject','ete_3rd_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ete_3rd_saturday_time_table.xview)
                    scrolly.configure(command=self.ete_3rd_saturday_time_table.yview)

                    self.ete_3rd_saturday_time_table.heading('cid',text='Serial No')
                    self.ete_3rd_saturday_time_table.heading('day1',text='Day')
                    self.ete_3rd_saturday_time_table.heading('ete_3rd_saturday_total_number_of_class',text='Totel class')
                    self.ete_3rd_saturday_time_table.heading('ete_3rd_saturday_time',text='class time')
                    self.ete_3rd_saturday_time_table.heading('ete_3rd_saturday_subject',text='Subject')
                    self.ete_3rd_saturday_time_table.heading('ete_3rd_saturday_faculty',text='Faculty')

                    self.ete_3rd_saturday_time_table.column('cid',width=100)
                    self.ete_3rd_saturday_time_table.column('day1',width=150)
                    self.ete_3rd_saturday_time_table.column('ete_3rd_saturday_total_number_of_class',width=100)
                    self.ete_3rd_saturday_time_table.column('ete_3rd_saturday_time',width=150)
                    self.ete_3rd_saturday_time_table.column('ete_3rd_saturday_subject',width=150)
                    self.ete_3rd_saturday_time_table.column('ete_3rd_saturday_faculty',width=150)

                    self.ete_3rd_saturday_time_table['show']='headings'

                    self.ete_3rd_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.ete_3rd_saturday_time_table.bind('<ButtonRelease-1>',ete_3rd_saturday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_ete_3rd_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_ete_3rd_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ete_3rd_subject_list=[]
                    self.fetch_ete_3rd_faculty_subject()
                    saturday_ete_3rdmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject1,state='readonly',values=self.faculty_ete_3rd_subject_list)
                    saturday_ete_3rdmistry_cycle_subject1.place(x=400,y=25) 

                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ete_3rd_name_list=[]
                    self.fetch_ete_3rd_faculty_name()
                    saturday_ete_3rdmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ete_3rd_saturday_ete_3rdmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ete_3rd_name_list)
                    saturday_ete_3rdmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ete_3rd_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_ete_3rd_saturday_faculty_serch)
                    ete_3rd_faculty_serch1.place(x=800,y=25)
                    ete_3rd_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=ete_3rd_faculty_serch)
                    ete_3rd_faculty_serch1_button.place(x=937,y=22)
                    ete_3rd_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    ete_3rd_add_database.place(x=10,y=140)

                    ete_3rd_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    ete_3rd_update_database.place(x=10,y=170)

                    ete_3rd_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    ete_3rd_delete_database.place(x=10,y=200)

                    ete_3rd_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    ete_3rd_clear_database.place(x=10,y=230)


        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Civil_Engineering':
                if self.var_day_select.get() == 'Monday':
                
       
                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_civil_4th_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_civil_4th_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_civil_4th_monday_civil_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_civil_4th_monday_civil_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into civil_4th_monday_time_table_database(day1,civil_4th_monday_total_number_of_class,civil_4th_monday_time,civil_4th_monday_subject,civil_4th_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_civil_4th_monday_number_of_class1.get(),
                                            self.var_civil_4th_monday_time1.get(),
                                            self.var_civil_4th_monday_civil_4thmistry_cycle_subject1.get(),
                                            self.var_civil_4th_monday_civil_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_4th_monday_time_table_database')
                            rows=cur.fetchall()
                            self.civil_4th_monday_time_table.delete(*self.civil_4th_monday_time_table.get_children())
                            for row in rows:
                                self.civil_4th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def civil_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from civil_4th_monday_time_table_database where civil_4th_monday_subject LIKE '%{self.var_civil_4th_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.civil_4th_monday_time_table.delete(*self.civil_4th_monday_time_table.get_children())
                                for row in rows:
                                    self.civil_4th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_monday_civil_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from civil_4th_monday_time_table_database where civil_4th_monday_subject=%s",(self.var_civil_4th_monday_civil_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update civil_4th_monday_time_table_database set civil_4th_monday_total_number_of_class=%s,civil_4th_monday_time=%s,civil_4th_monday_faculty=%s where civil_4th_monday_subject=%s",(
                                        
                                        self.var_civil_4th_monday_number_of_class1.get(),
                                        self.var_civil_4th_monday_time1.get(),
                                        self.var_civil_4th_monday_civil_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_civil_4th_monday_civil_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_monday_civil_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from civil_4th_monday_time_table_database where civil_4th_monday_subject=%s",(self.var_civil_4th_monday_civil_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from civil_4th_monday_time_table_database where civil_4th_monday_subject=%s',(self.var_civil_4th_monday_civil_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_civil_4th_monday_faculty_serch.set("")
                        self.var_civil_4th_monday_number_of_class1.set("")
                        self.var_civil_4th_monday_time1.set("")
                        self.var_civil_4th_monday_civil_4thmistry_cycle_subject1.set("")
                        self.var_civil_4th_monday_civil_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def civil_4th_monday_time_table_get(ev):
                        monday_civil_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.civil_4th_monday_time_table.focus()
                        content1=self.civil_4th_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_civil_4th_monday_number_of_class1.set(row1[2])
                        self.var_civil_4th_monday_time1.set(row1[3])
                        self.var_civil_4th_monday_civil_4thmistry_cycle_subject1.set(row1[4])
                        self.var_civil_4th_monday_civil_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    
                    self.monday_civil_4th_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_civil_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_civil_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_civil_4th_time_table_data_frame,orient=VERTICAL)
                    self.civil_4th_monday_time_table=ttk.Treeview(self.monday_civil_4th_time_table_data_frame,columns=('cid','day1','civil_4th_monday_total_number_of_class','civil_4th_monday_time','civil_4th_monday_subject','civil_4th_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.civil_4th_monday_time_table.xview)
                    scrolly.configure(command=self.civil_4th_monday_time_table.yview)

                    self.civil_4th_monday_time_table.heading('cid',text='Serial No')
                    self.civil_4th_monday_time_table.heading('day1',text='Day')
                    self.civil_4th_monday_time_table.heading('civil_4th_monday_total_number_of_class',text='Totel class')
                    self.civil_4th_monday_time_table.heading('civil_4th_monday_time',text='class time')
                    self.civil_4th_monday_time_table.heading('civil_4th_monday_subject',text='Subject')
                    self.civil_4th_monday_time_table.heading('civil_4th_monday_faculty',text='Faculty')

                    self.civil_4th_monday_time_table.column('cid',width=100)
                    self.civil_4th_monday_time_table.column('day1',width=150)
                    self.civil_4th_monday_time_table.column('civil_4th_monday_total_number_of_class',width=100)
                    self.civil_4th_monday_time_table.column('civil_4th_monday_time',width=150)
                    self.civil_4th_monday_time_table.column('civil_4th_monday_subject',width=150)
                    self.civil_4th_monday_time_table.column('civil_4th_monday_faculty',width=150)

                    self.civil_4th_monday_time_table['show']='headings'

                    self.civil_4th_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.civil_4th_monday_time_table.bind('<ButtonRelease-1>',civil_4th_monday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_civil_4th_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_civil_4th_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_civil_4th_subject_list=[]
                    self.fetch_civil_4th_faculty_subject()
                    monday_civil_4thmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_civil_4th_monday_civil_4thmistry_cycle_subject1,state='readonly',values=self.faculty_civil_4th_subject_list)
                    monday_civil_4thmistry_cycle_subject1.place(x=400,y=25) 

                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_civil_4th_name_list=[]
                    self.fetch_civil_4th_faculty_name()
                    monday_civil_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_civil_4th_monday_civil_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_civil_4th_name_list)
                    monday_civil_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    civil_4th_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_civil_4th_monday_faculty_serch)
                    civil_4th_faculty_serch1.place(x=800,y=25)
                    civil_4th_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=civil_4th_faculty_serch)
                    civil_4th_faculty_serch1_button.place(x=937,y=22)
                    civil_4th_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    civil_4th_add_database.place(x=10,y=140)

                    civil_4th_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    civil_4th_update_database.place(x=10,y=170)

                    civil_4th_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    civil_4th_delete_database.place(x=10,y=200)

                    civil_4th_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    civil_4th_clear_database.place(x=10,y=230)
##############################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Civil_Engineering':
                if self.var_day_select.get() == 'Thuesday':
                
                  
                    #print('this time table is for civil_4thmistry cycle in civil engineering mondy')
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_civil_4th_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_civil_4th_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into civil_4th_thuesday_time_table_database(day1,civil_4th_thuesday_total_number_of_class,civil_4th_thuesday_time,civil_4th_thuesday_subject,civil_4th_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_civil_4th_thuesday_number_of_class2.get(),
                                            self.var_civil_4th_thuesday_time1.get(),
                                            self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject1.get(),
                                            self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_4th_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.civil_4th_thuesday_time_table.delete(*self.civil_4th_thuesday_time_table.get_children())
                            for row in rows:
                                self.civil_4th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def civil_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from civil_4th_thuesday_time_table_database where civil_4th_thuesday_subject LIKE '%{self.var_civil_4th_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.civil_4th_thuesday_time_table.delete(*self.civil_4th_thuesday_time_table.get_children())
                                for row in rows:
                                    self.civil_4th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from civil_4th_thuesday_time_table_database where civil_4th_thuesday_subject=%s",(self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update civil_4th_thuesday_time_table_database set civil_4th_thuesday_total_number_of_class=%s,civil_4th_thuesday_time=%s,civil_4th_thuesday_faculty=%s where civil_4th_thuesday_subject=%s",(
                                        
                                        self.var_civil_4th_thuesday_number_of_class2.get(),
                                        self.var_civil_4th_thuesday_time1.get(),
                                        self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from civil_4th_thuesday_time_table_database where civil_4th_thuesday_subject=%s",(self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from civil_4th_thuesday_time_table_database where civil_4th_thuesday_subject=%s',(self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_civil_4th_thuesday_faculty_serch.set("")
                        self.var_civil_4th_thuesday_number_of_class2.set("")
                        self.var_civil_4th_thuesday_time1.set("")
                        self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject1.set("")
                        self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def civil_4th_thuesday_time_table_get(ev):
                        thuesday_civil_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.civil_4th_thuesday_time_table.focus()
                        content1=self.civil_4th_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_civil_4th_thuesday_number_of_class2.set(row1[2])
                        self.var_civil_4th_thuesday_time1.set(row1[3])
                        self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject1.set(row1[4])
                        self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    ##################################################################################################################################################
                    self.thuesday_civil_4th_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_civil_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_civil_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_civil_4th_time_table_data_frame,orient=VERTICAL)
                    self.civil_4th_thuesday_time_table=ttk.Treeview(self.thuesday_civil_4th_time_table_data_frame,columns=('cid','day1','civil_4th_thuesday_total_number_of_class','civil_4th_thuesday_time','civil_4th_thuesday_subject','civil_4th_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.civil_4th_thuesday_time_table.xview)
                    scrolly.configure(command=self.civil_4th_thuesday_time_table.yview)

                    self.civil_4th_thuesday_time_table.heading('cid',text='Serial No')
                    self.civil_4th_thuesday_time_table.heading('day1',text='Day')
                    self.civil_4th_thuesday_time_table.heading('civil_4th_thuesday_total_number_of_class',text='Totel class')
                    self.civil_4th_thuesday_time_table.heading('civil_4th_thuesday_time',text='class time')
                    self.civil_4th_thuesday_time_table.heading('civil_4th_thuesday_subject',text='Subject')
                    self.civil_4th_thuesday_time_table.heading('civil_4th_thuesday_faculty',text='Faculty')

                    self.civil_4th_thuesday_time_table.column('cid',width=100)
                    self.civil_4th_thuesday_time_table.column('day1',width=150)
                    self.civil_4th_thuesday_time_table.column('civil_4th_thuesday_total_number_of_class',width=100)
                    self.civil_4th_thuesday_time_table.column('civil_4th_thuesday_time',width=150)
                    self.civil_4th_thuesday_time_table.column('civil_4th_thuesday_subject',width=150)
                    self.civil_4th_thuesday_time_table.column('civil_4th_thuesday_faculty',width=150)

                    self.civil_4th_thuesday_time_table['show']='headings'

                    self.civil_4th_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.civil_4th_thuesday_time_table.bind('<ButtonRelease-1>',civil_4th_thuesday_time_table_get)

 
                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_civil_4th_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_civil_4th_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_civil_4th_subject_list=[]
                    self.fetch_civil_4th_faculty_subject()
                    thuesday_civil_4thmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject1,state='readonly',values=self.faculty_civil_4th_subject_list)
                    thuesday_civil_4thmistry_cycle_subject1.place(x=400,y=25) 
           
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_civil_4th_name_list=[]
                    self.fetch_civil_4th_faculty_name()
                    thuesday_civil_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_civil_4th_thuesday_civil_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_civil_4th_name_list)
                    thuesday_civil_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    civil_4th_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_civil_4th_thuesday_faculty_serch)
                    civil_4th_faculty_serch1.place(x=800,y=25)
                    civil_4th_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=civil_4th_faculty_serch)
                    civil_4th_faculty_serch1_button.place(x=937,y=22)
                    civil_4th_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    civil_4th_add_database.place(x=10,y=140)

                    civil_4th_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    civil_4th_update_database.place(x=10,y=170)

                    civil_4th_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    civil_4th_delete_database.place(x=10,y=200)

                    civil_4th_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    civil_4th_clear_database.place(x=10,y=230)

        if self.var_sem_select.get() == '3rd_Semister':
            if self.var_branch_select.get() == 'Civil_Engineering':
                if self.var_day_select.get() == 'Wednesday':
                
                  
                    #print('this time table is for civil_4thmistry cycle in civil engineering mondy')
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_civil_4th_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_civil_4th_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into civil_4th_wednesday_time_table_database(day1,civil_4th_wednesday_total_number_of_class,civil_4th_wednesday_time,civil_4th_wednesday_subject,civil_4th_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_civil_4th_wednesday_number_of_class2.get(),
                                            self.var_civil_4th_wednesday_time1.get(),
                                            self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject1.get(),
                                            self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_4th_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.civil_4th_wednesday_time_table.delete(*self.civil_4th_wednesday_time_table.get_children())
                            for row in rows:
                                self.civil_4th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def civil_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from civil_4th_wednesday_time_table_database where civil_4th_wednesday_subject LIKE '%{self.var_civil_4th_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.civil_4th_wednesday_time_table.delete(*self.civil_4th_wednesday_time_table.get_children())
                                for row in rows:
                                    self.civil_4th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from civil_4th_wednesday_time_table_database where civil_4th_wednesday_subject=%s",(self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update civil_4th_wednesday_time_table_database set civil_4th_wednesday_total_number_of_class=%s,civil_4th_wednesday_time=%s,civil_4th_wednesday_faculty=%s where civil_4th_wednesday_subject=%s",(
                                        
                                        self.var_civil_4th_wednesday_number_of_class2.get(),
                                        self.var_civil_4th_wednesday_time1.get(),
                                        self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from civil_4th_wednesday_time_table_database where civil_4th_wednesday_subject=%s",(self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from civil_4th_wednesday_time_table_database where civil_4th_wednesday_subject=%s',(self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_civil_4th_wednesday_faculty_serch.set("")
                        self.var_civil_4th_wednesday_number_of_class2.set("")
                        self.var_civil_4th_wednesday_time1.set("")
                        self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject1.set("")
                        self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def civil_4th_wednesday_time_table_get(ev):
                        wednesday_civil_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.civil_4th_wednesday_time_table.focus()
                        content1=self.civil_4th_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_civil_4th_wednesday_number_of_class2.set(row1[2])
                        self.var_civil_4th_wednesday_time1.set(row1[3])
                        self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject1.set(row1[4])
                        self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    
                    self.wednesday_civil_4th_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_civil_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_civil_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_civil_4th_time_table_data_frame,orient=VERTICAL)
                    self.civil_4th_wednesday_time_table=ttk.Treeview(self.wednesday_civil_4th_time_table_data_frame,columns=('cid','day1','civil_4th_wednesday_total_number_of_class','civil_4th_wednesday_time','civil_4th_wednesday_subject','civil_4th_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.civil_4th_wednesday_time_table.xview)
                    scrolly.configure(command=self.civil_4th_wednesday_time_table.yview)

                    self.civil_4th_wednesday_time_table.heading('cid',text='Serial No')
                    self.civil_4th_wednesday_time_table.heading('day1',text='Day')
                    self.civil_4th_wednesday_time_table.heading('civil_4th_wednesday_total_number_of_class',text='Totel class')
                    self.civil_4th_wednesday_time_table.heading('civil_4th_wednesday_time',text='class time')
                    self.civil_4th_wednesday_time_table.heading('civil_4th_wednesday_subject',text='Subject')
                    self.civil_4th_wednesday_time_table.heading('civil_4th_wednesday_faculty',text='Faculty')

                    self.civil_4th_wednesday_time_table.column('cid',width=100)
                    self.civil_4th_wednesday_time_table.column('day1',width=150)
                    self.civil_4th_wednesday_time_table.column('civil_4th_wednesday_total_number_of_class',width=100)
                    self.civil_4th_wednesday_time_table.column('civil_4th_wednesday_time',width=150)
                    self.civil_4th_wednesday_time_table.column('civil_4th_wednesday_subject',width=150)
                    self.civil_4th_wednesday_time_table.column('civil_4th_wednesday_faculty',width=150)

                    self.civil_4th_wednesday_time_table['show']='headings'

                    self.civil_4th_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.civil_4th_wednesday_time_table.bind('<ButtonRelease-1>',civil_4th_wednesday_time_table_get)

                    

                    

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_civil_4th_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_civil_4th_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_civil_4th_subject_list=[]
                    self.fetch_civil_4th_faculty_subject()
                    wednesday_civil_4thmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject1,state='readonly',values=self.faculty_civil_4th_subject_list)
                    wednesday_civil_4thmistry_cycle_subject1.place(x=400,y=25) 
                 
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_civil_4th_name_list=[]
                    self.fetch_civil_4th_faculty_name()
                    wednesday_civil_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_civil_4th_wednesday_civil_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_civil_4th_name_list)
                    wednesday_civil_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    civil_4th_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_civil_4th_wednesday_faculty_serch)
                    civil_4th_faculty_serch1.place(x=800,y=25)
                    civil_4th_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=civil_4th_faculty_serch)
                    civil_4th_faculty_serch1_button.place(x=937,y=22)
                    civil_4th_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    civil_4th_add_database.place(x=10,y=140)

                    civil_4th_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    civil_4th_update_database.place(x=10,y=170)

                    civil_4th_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    civil_4th_delete_database.place(x=10,y=200)

                    civil_4th_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    civil_4th_clear_database.place(x=10,y=230)

#############################################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Civil_Engineering':
                if self.var_day_select.get() == 'Thursday':
                
                  
                    #print('this time table is for civil_4thmistry cycle in civil engineering mondy')
                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_civil_4th_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_civil_4th_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_civil_4th_thursday_civil_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_civil_4th_thursday_civil_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into civil_4th_thursday_time_table_database(day1,civil_4th_thursday_total_number_of_class,civil_4th_thursday_time,civil_4th_thursday_subject,civil_4th_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_civil_4th_thursday_number_of_class2.get(),
                                            self.var_civil_4th_thursday_time1.get(),
                                            self.var_civil_4th_thursday_civil_4thmistry_cycle_subject1.get(),
                                            self.var_civil_4th_thursday_civil_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_4th_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.civil_4th_thursday_time_table.delete(*self.civil_4th_thursday_time_table.get_children())
                            for row in rows:
                                self.civil_4th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def civil_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from civil_4th_thursday_time_table_database where civil_4th_thursday_subject LIKE '%{self.var_civil_4th_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.civil_4th_thursday_time_table.delete(*self.civil_4th_thursday_time_table.get_children())
                                for row in rows:
                                    self.civil_4th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_thursday_civil_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from civil_4th_thursday_time_table_database where civil_4th_thursday_subject=%s",(self.var_civil_4th_thursday_civil_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update civil_4th_thursday_time_table_database set civil_4th_thursday_total_number_of_class=%s,civil_4th_thursday_time=%s,civil_4th_thursday_faculty=%s where civil_4th_thursday_subject=%s",(
                                        
                                        self.var_civil_4th_thursday_number_of_class2.get(),
                                        self.var_civil_4th_thursday_time1.get(),
                                        self.var_civil_4th_thursday_civil_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_civil_4th_thursday_civil_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_thursday_civil_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from civil_4th_thursday_time_table_database where civil_4th_thursday_subject=%s",(self.var_civil_4th_thursday_civil_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from civil_4th_thursday_time_table_database where civil_4th_thursday_subject=%s',(self.var_civil_4th_thursday_civil_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_civil_4th_thursday_faculty_serch.set("")
                        self.var_civil_4th_thursday_number_of_class2.set("")
                        self.var_civil_4th_thursday_time1.set("")
                        self.var_civil_4th_thursday_civil_4thmistry_cycle_subject1.set("")
                        self.var_civil_4th_thursday_civil_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def civil_4th_thursday_time_table_get(ev):
                        thursday_civil_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.civil_4th_thursday_time_table.focus()
                        content1=self.civil_4th_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_civil_4th_thursday_number_of_class2.set(row1[2])
                        self.var_civil_4th_thursday_time1.set(row1[3])
                        self.var_civil_4th_thursday_civil_4thmistry_cycle_subject1.set(row1[4])
                        self.var_civil_4th_thursday_civil_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    
                    self.thursday_civil_4th_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_civil_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_civil_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_civil_4th_time_table_data_frame,orient=VERTICAL)
                    self.civil_4th_thursday_time_table=ttk.Treeview(self.thursday_civil_4th_time_table_data_frame,columns=('cid','day1','civil_4th_thursday_total_number_of_class','civil_4th_thursday_time','civil_4th_thursday_subject','civil_4th_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.civil_4th_thursday_time_table.xview)
                    scrolly.configure(command=self.civil_4th_thursday_time_table.yview)

                    self.civil_4th_thursday_time_table.heading('cid',text='Serial No')
                    self.civil_4th_thursday_time_table.heading('day1',text='Day')
                    self.civil_4th_thursday_time_table.heading('civil_4th_thursday_total_number_of_class',text='Totel class')
                    self.civil_4th_thursday_time_table.heading('civil_4th_thursday_time',text='class time')
                    self.civil_4th_thursday_time_table.heading('civil_4th_thursday_subject',text='Subject')
                    self.civil_4th_thursday_time_table.heading('civil_4th_thursday_faculty',text='Faculty')

                    self.civil_4th_thursday_time_table.column('cid',width=100)
                    self.civil_4th_thursday_time_table.column('day1',width=150)
                    self.civil_4th_thursday_time_table.column('civil_4th_thursday_total_number_of_class',width=100)
                    self.civil_4th_thursday_time_table.column('civil_4th_thursday_time',width=150)
                    self.civil_4th_thursday_time_table.column('civil_4th_thursday_subject',width=150)
                    self.civil_4th_thursday_time_table.column('civil_4th_thursday_faculty',width=150)

                    self.civil_4th_thursday_time_table['show']='headings'

                    self.civil_4th_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.civil_4th_thursday_time_table.bind('<ButtonRelease-1>',civil_4th_thursday_time_table_get)

                    

                    

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_civil_4th_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_civil_4th_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_civil_4th_subject_list=[]
                    self.fetch_civil_4th_faculty_subject()
                    thursday_civil_4thmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_civil_4th_thursday_civil_4thmistry_cycle_subject1,state='readonly',values=self.faculty_civil_4th_subject_list)
                    thursday_civil_4thmistry_cycle_subject1.place(x=400,y=25) 
                    ###########################################################################select subject en
                    ######################################################################select faclty start
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_civil_4th_name_list=[]
                    self.fetch_civil_4th_faculty_name()
                    thursday_civil_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_civil_4th_thursday_civil_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_civil_4th_name_list)
                    thursday_civil_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    civil_4th_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_civil_4th_thursday_faculty_serch)
                    civil_4th_faculty_serch1.place(x=800,y=25)
                    civil_4th_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=civil_4th_faculty_serch)
                    civil_4th_faculty_serch1_button.place(x=937,y=22)
                    civil_4th_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    civil_4th_add_database.place(x=10,y=140)

                    civil_4th_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    civil_4th_update_database.place(x=10,y=170)

                    civil_4th_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    civil_4th_delete_database.place(x=10,y=200)

                    civil_4th_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    civil_4th_clear_database.place(x=10,y=230)

###################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Civil_Engineering':
                if self.var_day_select.get() == 'Friday':
                
   
   
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_civil_4th_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_civil_4th_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_civil_4th_friday_civil_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_civil_4th_friday_civil_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into civil_4th_friday_time_table_database(day1,civil_4th_friday_total_number_of_class,civil_4th_friday_time,civil_4th_friday_subject,civil_4th_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_civil_4th_friday_number_of_class2.get(),
                                            self.var_civil_4th_friday_time1.get(),
                                            self.var_civil_4th_friday_civil_4thmistry_cycle_subject1.get(),
                                            self.var_civil_4th_friday_civil_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_4th_friday_time_table_database')
                            rows=cur.fetchall()
                            self.civil_4th_friday_time_table.delete(*self.civil_4th_friday_time_table.get_children())
                            for row in rows:
                                self.civil_4th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def civil_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from civil_4th_friday_time_table_database where civil_4th_friday_subject LIKE '%{self.var_civil_4th_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.civil_4th_friday_time_table.delete(*self.civil_4th_friday_time_table.get_children())
                                for row in rows:
                                    self.civil_4th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_friday_civil_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from civil_4th_friday_time_table_database where civil_4th_friday_subject=%s",(self.var_civil_4th_friday_civil_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update civil_4th_friday_time_table_database set civil_4th_friday_total_number_of_class=%s,civil_4th_friday_time=%s,civil_4th_friday_faculty=%s where civil_4th_friday_subject=%s",(
                                        
                                        self.var_civil_4th_friday_number_of_class2.get(),
                                        self.var_civil_4th_friday_time1.get(),
                                        self.var_civil_4th_friday_civil_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_civil_4th_friday_civil_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_friday_civil_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from civil_4th_friday_time_table_database where civil_4th_friday_subject=%s",(self.var_civil_4th_friday_civil_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from civil_4th_friday_time_table_database where civil_4th_friday_subject=%s',(self.var_civil_4th_friday_civil_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_civil_4th_friday_faculty_serch.set("")
                        self.var_civil_4th_friday_number_of_class2.set("")
                        self.var_civil_4th_friday_time1.set("")
                        self.var_civil_4th_friday_civil_4thmistry_cycle_subject1.set("")
                        self.var_civil_4th_friday_civil_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def civil_4th_friday_time_table_get(ev):
                        friday_civil_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.civil_4th_friday_time_table.focus()
                        content1=self.civil_4th_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_civil_4th_friday_number_of_class2.set(row1[2])
                        self.var_civil_4th_friday_time1.set(row1[3])
                        self.var_civil_4th_friday_civil_4thmistry_cycle_subject1.set(row1[4])
                        self.var_civil_4th_friday_civil_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.friday_civil_4th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_civil_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_civil_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_civil_4th_time_table_data_frame,orient=VERTICAL)
                    self.civil_4th_friday_time_table=ttk.Treeview(self.friday_civil_4th_time_table_data_frame,columns=('cid','day1','civil_4th_friday_total_number_of_class','civil_4th_friday_time','civil_4th_friday_subject','civil_4th_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.civil_4th_friday_time_table.xview)
                    scrolly.configure(command=self.civil_4th_friday_time_table.yview)

                    self.civil_4th_friday_time_table.heading('cid',text='Serial No')
                    self.civil_4th_friday_time_table.heading('day1',text='Day')
                    self.civil_4th_friday_time_table.heading('civil_4th_friday_total_number_of_class',text='Totel class')
                    self.civil_4th_friday_time_table.heading('civil_4th_friday_time',text='class time')
                    self.civil_4th_friday_time_table.heading('civil_4th_friday_subject',text='Subject')
                    self.civil_4th_friday_time_table.heading('civil_4th_friday_faculty',text='Faculty')

                    self.civil_4th_friday_time_table.column('cid',width=100)
                    self.civil_4th_friday_time_table.column('day1',width=150)
                    self.civil_4th_friday_time_table.column('civil_4th_friday_total_number_of_class',width=100)
                    self.civil_4th_friday_time_table.column('civil_4th_friday_time',width=150)
                    self.civil_4th_friday_time_table.column('civil_4th_friday_subject',width=150)
                    self.civil_4th_friday_time_table.column('civil_4th_friday_faculty',width=150)

                    self.civil_4th_friday_time_table['show']='headings'

                    self.civil_4th_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.civil_4th_friday_time_table.bind('<ButtonRelease-1>',civil_4th_friday_time_table_get)

 
                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_civil_4th_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_civil_4th_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_civil_4th_subject_list=[]
                    self.fetch_civil_4th_faculty_subject()
                    friday_civil_4thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_civil_4th_friday_civil_4thmistry_cycle_subject1,state='readonly',values=self.faculty_civil_4th_subject_list)
                    friday_civil_4thmistry_cycle_subject1.place(x=400,y=25) 
               
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_civil_4th_name_list=[]
                    self.fetch_civil_4th_faculty_name()
                    friday_civil_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_civil_4th_friday_civil_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_civil_4th_name_list)
                    friday_civil_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    civil_4th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_civil_4th_friday_faculty_serch)
                    civil_4th_faculty_serch1.place(x=800,y=25)
                    civil_4th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=civil_4th_faculty_serch)
                    civil_4th_faculty_serch1_button.place(x=937,y=22)
                    civil_4th_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    civil_4th_add_database.place(x=10,y=140)

                    civil_4th_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    civil_4th_update_database.place(x=10,y=170)

                    civil_4th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    civil_4th_delete_database.place(x=10,y=200)

                    civil_4th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    civil_4th_clear_database.place(x=10,y=230)
#########################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Civil_Engineering':
                if self.var_day_select.get() == 'Saturday':
  
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_civil_4th_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_civil_4th_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_civil_4th_saturday_civil_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_civil_4th_saturday_civil_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into civil_4th_saturday_time_table_database(day1,civil_4th_saturday_total_number_of_class,civil_4th_saturday_time,civil_4th_saturday_subject,civil_4th_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_civil_4th_saturday_number_of_class2.get(),
                                            self.var_civil_4th_saturday_time1.get(),
                                            self.var_civil_4th_saturday_civil_4thmistry_cycle_subject1.get(),
                                            self.var_civil_4th_saturday_civil_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_4th_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.civil_4th_saturday_time_table.delete(*self.civil_4th_saturday_time_table.get_children())
                            for row in rows:
                                self.civil_4th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def civil_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from civil_4th_saturday_time_table_database where civil_4th_saturday_subject LIKE '%{self.var_civil_4th_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.civil_4th_saturday_time_table.delete(*self.civil_4th_saturday_time_table.get_children())
                                for row in rows:
                                    self.civil_4th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_saturday_civil_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from civil_4th_saturday_time_table_database where civil_4th_saturday_subject=%s",(self.var_civil_4th_saturday_civil_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update civil_4th_saturday_time_table_database set civil_4th_saturday_total_number_of_class=%s,civil_4th_saturday_time=%s,civil_4th_saturday_faculty=%s where civil_4th_saturday_subject=%s",(
                                        
                                        self.var_civil_4th_saturday_number_of_class2.get(),
                                        self.var_civil_4th_saturday_time1.get(),
                                        self.var_civil_4th_saturday_civil_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_civil_4th_saturday_civil_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_4th_saturday_civil_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from civil_4th_saturday_time_table_database where civil_4th_saturday_subject=%s",(self.var_civil_4th_saturday_civil_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from civil_4th_saturday_time_table_database where civil_4th_saturday_subject=%s',(self.var_civil_4th_saturday_civil_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_civil_4th_saturday_faculty_serch.set("")
                        self.var_civil_4th_saturday_number_of_class2.set("")
                        self.var_civil_4th_saturday_time1.set("")
                        self.var_civil_4th_saturday_civil_4thmistry_cycle_subject1.set("")
                        self.var_civil_4th_saturday_civil_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def civil_4th_saturday_time_table_get(ev):
                        saturday_civil_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.civil_4th_saturday_time_table.focus()
                        content1=self.civil_4th_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_civil_4th_saturday_number_of_class2.set(row1[2])
                        self.var_civil_4th_saturday_time1.set(row1[3])
                        self.var_civil_4th_saturday_civil_4thmistry_cycle_subject1.set(row1[4])
                        self.var_civil_4th_saturday_civil_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.saturday_civil_4th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_civil_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_civil_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_civil_4th_time_table_data_frame,orient=VERTICAL)
                    self.civil_4th_saturday_time_table=ttk.Treeview(self.saturday_civil_4th_time_table_data_frame,columns=('cid','day1','civil_4th_saturday_total_number_of_class','civil_4th_saturday_time','civil_4th_saturday_subject','civil_4th_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.civil_4th_saturday_time_table.xview)
                    scrolly.configure(command=self.civil_4th_saturday_time_table.yview)

                    self.civil_4th_saturday_time_table.heading('cid',text='Serial No')
                    self.civil_4th_saturday_time_table.heading('day1',text='Day')
                    self.civil_4th_saturday_time_table.heading('civil_4th_saturday_total_number_of_class',text='Totel class')
                    self.civil_4th_saturday_time_table.heading('civil_4th_saturday_time',text='class time')
                    self.civil_4th_saturday_time_table.heading('civil_4th_saturday_subject',text='Subject')
                    self.civil_4th_saturday_time_table.heading('civil_4th_saturday_faculty',text='Faculty')

                    self.civil_4th_saturday_time_table.column('cid',width=100)
                    self.civil_4th_saturday_time_table.column('day1',width=150)
                    self.civil_4th_saturday_time_table.column('civil_4th_saturday_total_number_of_class',width=100)
                    self.civil_4th_saturday_time_table.column('civil_4th_saturday_time',width=150)
                    self.civil_4th_saturday_time_table.column('civil_4th_saturday_subject',width=150)
                    self.civil_4th_saturday_time_table.column('civil_4th_saturday_faculty',width=150)

                    self.civil_4th_saturday_time_table['show']='headings'

                    self.civil_4th_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.civil_4th_saturday_time_table.bind('<ButtonRelease-1>',civil_4th_saturday_time_table_get)

     
                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_civil_4th_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_civil_4th_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_civil_4th_subject_list=[]
                    self.fetch_civil_4th_faculty_subject()
                    saturday_civil_4thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_civil_4th_saturday_civil_4thmistry_cycle_subject1,state='readonly',values=self.faculty_civil_4th_subject_list)
                    saturday_civil_4thmistry_cycle_subject1.place(x=400,y=25) 

                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_civil_4th_name_list=[]
                    self.fetch_civil_4th_faculty_name()
                    saturday_civil_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_civil_4th_saturday_civil_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_civil_4th_name_list)
                    saturday_civil_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    civil_4th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_civil_4th_saturday_faculty_serch)
                    civil_4th_faculty_serch1.place(x=800,y=25)
                    civil_4th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=civil_4th_faculty_serch)
                    civil_4th_faculty_serch1_button.place(x=937,y=22)
                    civil_4th_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    civil_4th_add_database.place(x=10,y=140)

                    civil_4th_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    civil_4th_update_database.place(x=10,y=170)

                    civil_4th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    civil_4th_delete_database.place(x=10,y=200)

                    civil_4th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    civil_4th_clear_database.place(x=10,y=230)


        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Mechanical_Engineering':
                if self.var_day_select.get() == 'Monday':
                

                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_mech_4th_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_mech_4th_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_mech_4th_monday_mech_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_mech_4th_monday_mech_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into mech_4th_monday_time_table_database(day1,mech_4th_monday_total_number_of_class,mech_4th_monday_time,mech_4th_monday_subject,mech_4th_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_mech_4th_monday_number_of_class1.get(),
                                            self.var_mech_4th_monday_time1.get(),
                                            self.var_mech_4th_monday_mech_4thmistry_cycle_subject1.get(),
                                            self.var_mech_4th_monday_mech_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_4th_monday_time_table_database')
                            rows=cur.fetchall()
                            self.mech_4th_monday_time_table.delete(*self.mech_4th_monday_time_table.get_children())
                            for row in rows:
                                self.mech_4th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def mech_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from mech_4th_monday_time_table_database where mech_4th_monday_subject LIKE '%{self.var_mech_4th_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.mech_4th_monday_time_table.delete(*self.mech_4th_monday_time_table.get_children())
                                for row in rows:
                                    self.mech_4th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_monday_mech_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from mech_4th_monday_time_table_database where mech_4th_monday_subject=%s",(self.var_mech_4th_monday_mech_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update mech_4th_monday_time_table_database set mech_4th_monday_total_number_of_class=%s,mech_4th_monday_time=%s,mech_4th_monday_faculty=%s where mech_4th_monday_subject=%s",(
                                        
                                        self.var_mech_4th_monday_number_of_class1.get(),
                                        self.var_mech_4th_monday_time1.get(),
                                        self.var_mech_4th_monday_mech_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_mech_4th_monday_mech_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_monday_mech_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from mech_4th_monday_time_table_database where mech_4th_monday_subject=%s",(self.var_mech_4th_monday_mech_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from mech_4th_monday_time_table_database where mech_4th_monday_subject=%s',(self.var_mech_4th_monday_mech_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_mech_4th_monday_faculty_serch.set("")
                        self.var_mech_4th_monday_number_of_class1.set("")
                        self.var_mech_4th_monday_time1.set("")
                        self.var_mech_4th_monday_mech_4thmistry_cycle_subject1.set("")
                        self.var_mech_4th_monday_mech_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def mech_4th_monday_time_table_get(ev):
                        monday_mech_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.mech_4th_monday_time_table.focus()
                        content1=self.mech_4th_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_mech_4th_monday_number_of_class1.set(row1[2])
                        self.var_mech_4th_monday_time1.set(row1[3])
                        self.var_mech_4th_monday_mech_4thmistry_cycle_subject1.set(row1[4])
                        self.var_mech_4th_monday_mech_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    
                    self.monday_mech_4th_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_mech_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_mech_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_mech_4th_time_table_data_frame,orient=VERTICAL)
                    self.mech_4th_monday_time_table=ttk.Treeview(self.monday_mech_4th_time_table_data_frame,columns=('cid','day1','mech_4th_monday_total_number_of_class','mech_4th_monday_time','mech_4th_monday_subject','mech_4th_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.mech_4th_monday_time_table.xview)
                    scrolly.configure(command=self.mech_4th_monday_time_table.yview)

                    self.mech_4th_monday_time_table.heading('cid',text='Serial No')
                    self.mech_4th_monday_time_table.heading('day1',text='Day')
                    self.mech_4th_monday_time_table.heading('mech_4th_monday_total_number_of_class',text='Totel class')
                    self.mech_4th_monday_time_table.heading('mech_4th_monday_time',text='class time')
                    self.mech_4th_monday_time_table.heading('mech_4th_monday_subject',text='Subject')
                    self.mech_4th_monday_time_table.heading('mech_4th_monday_faculty',text='Faculty')

                    self.mech_4th_monday_time_table.column('cid',width=100)
                    self.mech_4th_monday_time_table.column('day1',width=150)
                    self.mech_4th_monday_time_table.column('mech_4th_monday_total_number_of_class',width=100)
                    self.mech_4th_monday_time_table.column('mech_4th_monday_time',width=150)
                    self.mech_4th_monday_time_table.column('mech_4th_monday_subject',width=150)
                    self.mech_4th_monday_time_table.column('mech_4th_monday_faculty',width=150)

                    self.mech_4th_monday_time_table['show']='headings'

                    self.mech_4th_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.mech_4th_monday_time_table.bind('<ButtonRelease-1>',mech_4th_monday_time_table_get)

                    

                    

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_mech_4th_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_mech_4th_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_mech_4th_subject_list=[]
                    self.fetch_mech_4th_faculty_subject()
                    monday_mech_4thmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_mech_4th_monday_mech_4thmistry_cycle_subject1,state='readonly',values=self.faculty_mech_4th_subject_list)
                    monday_mech_4thmistry_cycle_subject1.place(x=400,y=25) 
                  
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_mech_4th_name_list=[]
                    self.fetch_mech_4th_faculty_name()
                    monday_mech_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_mech_4th_monday_mech_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_mech_4th_name_list)
                    monday_mech_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    mech_4th_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_mech_4th_monday_faculty_serch)
                    mech_4th_faculty_serch1.place(x=800,y=25)
                    mech_4th_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=mech_4th_faculty_serch)
                    mech_4th_faculty_serch1_button.place(x=937,y=22)
                    mech_4th_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    mech_4th_add_database.place(x=10,y=140)

                    mech_4th_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    mech_4th_update_database.place(x=10,y=170)

                    mech_4th_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    mech_4th_delete_database.place(x=10,y=200)

                    mech_4th_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    mech_4th_clear_database.place(x=10,y=230)
#############################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Mechanical_Engineering':
                if self.var_day_select.get() == 'Thuesday':
                
                  
                    #print('this time table is for mech_4thmistry cycle in mech engineering mondy')
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_mech_4th_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_mech_4th_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_mech_4th_thuesday_mech_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_mech_4th_thuesday_mech_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into mech_4th_thuesday_time_table_database(day1,mech_4th_thuesday_total_number_of_class,mech_4th_thuesday_time,mech_4th_thuesday_subject,mech_4th_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_mech_4th_thuesday_number_of_class2.get(),
                                            self.var_mech_4th_thuesday_time1.get(),
                                            self.var_mech_4th_thuesday_mech_4thmistry_cycle_subject1.get(),
                                            self.var_mech_4th_thuesday_mech_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_4th_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.mech_4th_thuesday_time_table.delete(*self.mech_4th_thuesday_time_table.get_children())
                            for row in rows:
                                self.mech_4th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def mech_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from mech_4th_thuesday_time_table_database where mech_4th_thuesday_subject LIKE '%{self.var_mech_4th_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.mech_4th_thuesday_time_table.delete(*self.mech_4th_thuesday_time_table.get_children())
                                for row in rows:
                                    self.mech_4th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_thuesday_mech_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from mech_4th_thuesday_time_table_database where mech_4th_thuesday_subject=%s",(self.var_mech_4th_thuesday_mech_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update mech_4th_thuesday_time_table_database set mech_4th_thuesday_total_number_of_class=%s,mech_4th_thuesday_time=%s,mech_4th_thuesday_faculty=%s where mech_4th_thuesday_subject=%s",(
                                        
                                        self.var_mech_4th_thuesday_number_of_class2.get(),
                                        self.var_mech_4th_thuesday_time1.get(),
                                        self.var_mech_4th_thuesday_mech_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_mech_4th_thuesday_mech_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_thuesday_mech_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from mech_4th_thuesday_time_table_database where mech_4th_thuesday_subject=%s",(self.var_mech_4th_thuesday_mech_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from mech_4th_thuesday_time_table_database where mech_4th_thuesday_subject=%s',(self.var_mech_4th_thuesday_mech_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_mech_4th_thuesday_faculty_serch.set("")
                        self.var_mech_4th_thuesday_number_of_class2.set("")
                        self.var_mech_4th_thuesday_time1.set("")
                        self.var_mech_4th_thuesday_mech_4thmistry_cycle_subject1.set("")
                        self.var_mech_4th_thuesday_mech_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def mech_4th_thuesday_time_table_get(ev):
                        thuesday_mech_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.mech_4th_thuesday_time_table.focus()
                        content1=self.mech_4th_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_mech_4th_thuesday_number_of_class2.set(row1[2])
                        self.var_mech_4th_thuesday_time1.set(row1[3])
                        self.var_mech_4th_thuesday_mech_4thmistry_cycle_subject1.set(row1[4])
                        self.var_mech_4th_thuesday_mech_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    
                    self.thuesday_mech_4th_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_mech_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_mech_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_mech_4th_time_table_data_frame,orient=VERTICAL)
                    self.mech_4th_thuesday_time_table=ttk.Treeview(self.thuesday_mech_4th_time_table_data_frame,columns=('cid','day1','mech_4th_thuesday_total_number_of_class','mech_4th_thuesday_time','mech_4th_thuesday_subject','mech_4th_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.mech_4th_thuesday_time_table.xview)
                    scrolly.configure(command=self.mech_4th_thuesday_time_table.yview)

                    self.mech_4th_thuesday_time_table.heading('cid',text='Serial No')
                    self.mech_4th_thuesday_time_table.heading('day1',text='Day')
                    self.mech_4th_thuesday_time_table.heading('mech_4th_thuesday_total_number_of_class',text='Totel class')
                    self.mech_4th_thuesday_time_table.heading('mech_4th_thuesday_time',text='class time')
                    self.mech_4th_thuesday_time_table.heading('mech_4th_thuesday_subject',text='Subject')
                    self.mech_4th_thuesday_time_table.heading('mech_4th_thuesday_faculty',text='Faculty')

                    self.mech_4th_thuesday_time_table.column('cid',width=100)
                    self.mech_4th_thuesday_time_table.column('day1',width=150)
                    self.mech_4th_thuesday_time_table.column('mech_4th_thuesday_total_number_of_class',width=100)
                    self.mech_4th_thuesday_time_table.column('mech_4th_thuesday_time',width=150)
                    self.mech_4th_thuesday_time_table.column('mech_4th_thuesday_subject',width=150)
                    self.mech_4th_thuesday_time_table.column('mech_4th_thuesday_faculty',width=150)

                    self.mech_4th_thuesday_time_table['show']='headings'

                    self.mech_4th_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.mech_4th_thuesday_time_table.bind('<ButtonRelease-1>',mech_4th_thuesday_time_table_get)

                    

                    

                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_mech_4th_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_mech_4th_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_mech_4th_subject_list=[]
                    self.fetch_mech_4th_faculty_subject()
                    thuesday_mech_4thmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_mech_4th_thuesday_mech_4thmistry_cycle_subject1,state='readonly',values=self.faculty_mech_4th_subject_list)
                    thuesday_mech_4thmistry_cycle_subject1.place(x=400,y=25) 
          
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_mech_4th_name_list=[]
                    self.fetch_mech_4th_faculty_name()
                    thuesday_mech_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_mech_4th_thuesday_mech_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_mech_4th_name_list)
                    thuesday_mech_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    mech_4th_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_mech_4th_thuesday_faculty_serch)
                    mech_4th_faculty_serch1.place(x=800,y=25)
                    mech_4th_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=mech_4th_faculty_serch)
                    mech_4th_faculty_serch1_button.place(x=937,y=22)
                    mech_4th_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    mech_4th_add_database.place(x=10,y=140)

                    mech_4th_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    mech_4th_update_database.place(x=10,y=170)

                    mech_4th_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    mech_4th_delete_database.place(x=10,y=200)

                    mech_4th_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    mech_4th_clear_database.place(x=10,y=230)
#
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Mechanical_Engineering':
                if self.var_day_select.get() == 'Wednesday':
                
                  
                    #print('this time table is for mech_4thmistry cycle in mech engineering mondy')
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_mech_4th_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_mech_4th_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_mech_4th_wednesday_mech_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_mech_4th_wednesday_mech_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into mech_4th_wednesday_time_table_database(day1,mech_4th_wednesday_total_number_of_class,mech_4th_wednesday_time,mech_4th_wednesday_subject,mech_4th_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_mech_4th_wednesday_number_of_class2.get(),
                                            self.var_mech_4th_wednesday_time1.get(),
                                            self.var_mech_4th_wednesday_mech_4thmistry_cycle_subject1.get(),
                                            self.var_mech_4th_wednesday_mech_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_4th_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.mech_4th_wednesday_time_table.delete(*self.mech_4th_wednesday_time_table.get_children())
                            for row in rows:
                                self.mech_4th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def mech_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from mech_4th_wednesday_time_table_database where mech_4th_wednesday_subject LIKE '%{self.var_mech_4th_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.mech_4th_wednesday_time_table.delete(*self.mech_4th_wednesday_time_table.get_children())
                                for row in rows:
                                    self.mech_4th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_wednesday_mech_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from mech_4th_wednesday_time_table_database where mech_4th_wednesday_subject=%s",(self.var_mech_4th_wednesday_mech_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update mech_4th_wednesday_time_table_database set mech_4th_wednesday_total_number_of_class=%s,mech_4th_wednesday_time=%s,mech_4th_wednesday_faculty=%s where mech_4th_wednesday_subject=%s",(
                                        
                                        self.var_mech_4th_wednesday_number_of_class2.get(),
                                        self.var_mech_4th_wednesday_time1.get(),
                                        self.var_mech_4th_wednesday_mech_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_mech_4th_wednesday_mech_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_wednesday_mech_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from mech_4th_wednesday_time_table_database where mech_4th_wednesday_subject=%s",(self.var_mech_4th_wednesday_mech_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from mech_4th_wednesday_time_table_database where mech_4th_wednesday_subject=%s',(self.var_mech_4th_wednesday_mech_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_mech_4th_wednesday_faculty_serch.set("")
                        self.var_mech_4th_wednesday_number_of_class2.set("")
                        self.var_mech_4th_wednesday_time1.set("")
                        self.var_mech_4th_wednesday_mech_4thmistry_cycle_subject1.set("")
                        self.var_mech_4th_wednesday_mech_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def mech_4th_wednesday_time_table_get(ev):
                        wednesday_mech_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.mech_4th_wednesday_time_table.focus()
                        content1=self.mech_4th_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_mech_4th_wednesday_number_of_class2.set(row1[2])
                        self.var_mech_4th_wednesday_time1.set(row1[3])
                        self.var_mech_4th_wednesday_mech_4thmistry_cycle_subject1.set(row1[4])
                        self.var_mech_4th_wednesday_mech_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    
                    self.wednesday_mech_4th_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_mech_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_mech_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_mech_4th_time_table_data_frame,orient=VERTICAL)
                    self.mech_4th_wednesday_time_table=ttk.Treeview(self.wednesday_mech_4th_time_table_data_frame,columns=('cid','day1','mech_4th_wednesday_total_number_of_class','mech_4th_wednesday_time','mech_4th_wednesday_subject','mech_4th_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.mech_4th_wednesday_time_table.xview)
                    scrolly.configure(command=self.mech_4th_wednesday_time_table.yview)

                    self.mech_4th_wednesday_time_table.heading('cid',text='Serial No')
                    self.mech_4th_wednesday_time_table.heading('day1',text='Day')
                    self.mech_4th_wednesday_time_table.heading('mech_4th_wednesday_total_number_of_class',text='Totel class')
                    self.mech_4th_wednesday_time_table.heading('mech_4th_wednesday_time',text='class time')
                    self.mech_4th_wednesday_time_table.heading('mech_4th_wednesday_subject',text='Subject')
                    self.mech_4th_wednesday_time_table.heading('mech_4th_wednesday_faculty',text='Faculty')

                    self.mech_4th_wednesday_time_table.column('cid',width=100)
                    self.mech_4th_wednesday_time_table.column('day1',width=150)
                    self.mech_4th_wednesday_time_table.column('mech_4th_wednesday_total_number_of_class',width=100)
                    self.mech_4th_wednesday_time_table.column('mech_4th_wednesday_time',width=150)
                    self.mech_4th_wednesday_time_table.column('mech_4th_wednesday_subject',width=150)
                    self.mech_4th_wednesday_time_table.column('mech_4th_wednesday_faculty',width=150)

                    self.mech_4th_wednesday_time_table['show']='headings'

                    self.mech_4th_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.mech_4th_wednesday_time_table.bind('<ButtonRelease-1>',mech_4th_wednesday_time_table_get)

                    

                    

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_mech_4th_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_mech_4th_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_mech_4th_subject_list=[]
                    self.fetch_mech_4th_faculty_subject()
                    wednesday_mech_4thmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_mech_4th_wednesday_mech_4thmistry_cycle_subject1,state='readonly',values=self.faculty_mech_4th_subject_list)
                    wednesday_mech_4thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_mech_4th_name_list=[]
                    self.fetch_mech_4th_faculty_name()
                    wednesday_mech_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_mech_4th_wednesday_mech_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_mech_4th_name_list)
                    wednesday_mech_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    mech_4th_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_mech_4th_wednesday_faculty_serch)
                    mech_4th_faculty_serch1.place(x=800,y=25)
                    mech_4th_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=mech_4th_faculty_serch)
                    mech_4th_faculty_serch1_button.place(x=937,y=22)
                    mech_4th_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    mech_4th_add_database.place(x=10,y=140)

                    mech_4th_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    mech_4th_update_database.place(x=10,y=170)

                    mech_4th_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    mech_4th_delete_database.place(x=10,y=200)

                    mech_4th_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    mech_4th_clear_database.place(x=10,y=230)

######################################################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Mechanical_Engineering':
                if self.var_day_select.get() == 'Thursday':
                
                  
                    #print('this time table is for mech_4thmistry cycle in mech engineering mondy')
                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    ###############################################################################################################################
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_mech_4th_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_mech_4th_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_mech_4th_thursday_mech_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_mech_4th_thursday_mech_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into mech_4th_thursday_time_table_database(day1,mech_4th_thursday_total_number_of_class,mech_4th_thursday_time,mech_4th_thursday_subject,mech_4th_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_mech_4th_thursday_number_of_class2.get(),
                                            self.var_mech_4th_thursday_time1.get(),
                                            self.var_mech_4th_thursday_mech_4thmistry_cycle_subject1.get(),
                                            self.var_mech_4th_thursday_mech_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_4th_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.mech_4th_thursday_time_table.delete(*self.mech_4th_thursday_time_table.get_children())
                            for row in rows:
                                self.mech_4th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def mech_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from mech_4th_thursday_time_table_database where mech_4th_thursday_subject LIKE '%{self.var_mech_4th_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.mech_4th_thursday_time_table.delete(*self.mech_4th_thursday_time_table.get_children())
                                for row in rows:
                                    self.mech_4th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_thursday_mech_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from mech_4th_thursday_time_table_database where mech_4th_thursday_subject=%s",(self.var_mech_4th_thursday_mech_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update mech_4th_thursday_time_table_database set mech_4th_thursday_total_number_of_class=%s,mech_4th_thursday_time=%s,mech_4th_thursday_faculty=%s where mech_4th_thursday_subject=%s",(
                                        
                                        self.var_mech_4th_thursday_number_of_class2.get(),
                                        self.var_mech_4th_thursday_time1.get(),
                                        self.var_mech_4th_thursday_mech_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_mech_4th_thursday_mech_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_thursday_mech_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from mech_4th_thursday_time_table_database where mech_4th_thursday_subject=%s",(self.var_mech_4th_thursday_mech_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from mech_4th_thursday_time_table_database where mech_4th_thursday_subject=%s',(self.var_mech_4th_thursday_mech_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_mech_4th_thursday_faculty_serch.set("")
                        self.var_mech_4th_thursday_number_of_class2.set("")
                        self.var_mech_4th_thursday_time1.set("")
                        self.var_mech_4th_thursday_mech_4thmistry_cycle_subject1.set("")
                        self.var_mech_4th_thursday_mech_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def mech_4th_thursday_time_table_get(ev):
                        thursday_mech_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.mech_4th_thursday_time_table.focus()
                        content1=self.mech_4th_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_mech_4th_thursday_number_of_class2.set(row1[2])
                        self.var_mech_4th_thursday_time1.set(row1[3])
                        self.var_mech_4th_thursday_mech_4thmistry_cycle_subject1.set(row1[4])
                        self.var_mech_4th_thursday_mech_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    
                    self.thursday_mech_4th_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_mech_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_mech_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_mech_4th_time_table_data_frame,orient=VERTICAL)
                    self.mech_4th_thursday_time_table=ttk.Treeview(self.thursday_mech_4th_time_table_data_frame,columns=('cid','day1','mech_4th_thursday_total_number_of_class','mech_4th_thursday_time','mech_4th_thursday_subject','mech_4th_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.mech_4th_thursday_time_table.xview)
                    scrolly.configure(command=self.mech_4th_thursday_time_table.yview)

                    self.mech_4th_thursday_time_table.heading('cid',text='Serial No')
                    self.mech_4th_thursday_time_table.heading('day1',text='Day')
                    self.mech_4th_thursday_time_table.heading('mech_4th_thursday_total_number_of_class',text='Totel class')
                    self.mech_4th_thursday_time_table.heading('mech_4th_thursday_time',text='class time')
                    self.mech_4th_thursday_time_table.heading('mech_4th_thursday_subject',text='Subject')
                    self.mech_4th_thursday_time_table.heading('mech_4th_thursday_faculty',text='Faculty')

                    self.mech_4th_thursday_time_table.column('cid',width=100)
                    self.mech_4th_thursday_time_table.column('day1',width=150)
                    self.mech_4th_thursday_time_table.column('mech_4th_thursday_total_number_of_class',width=100)
                    self.mech_4th_thursday_time_table.column('mech_4th_thursday_time',width=150)
                    self.mech_4th_thursday_time_table.column('mech_4th_thursday_subject',width=150)
                    self.mech_4th_thursday_time_table.column('mech_4th_thursday_faculty',width=150)

                    self.mech_4th_thursday_time_table['show']='headings'

                    self.mech_4th_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.mech_4th_thursday_time_table.bind('<ButtonRelease-1>',mech_4th_thursday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_mech_4th_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_mech_4th_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_mech_4th_subject_list=[]
                    self.fetch_mech_4th_faculty_subject()
                    thursday_mech_4thmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_mech_4th_thursday_mech_4thmistry_cycle_subject1,state='readonly',values=self.faculty_mech_4th_subject_list)
                    thursday_mech_4thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_mech_4th_name_list=[]
                    self.fetch_mech_4th_faculty_name()
                    thursday_mech_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_mech_4th_thursday_mech_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_mech_4th_name_list)
                    thursday_mech_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    mech_4th_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_mech_4th_thursday_faculty_serch)
                    mech_4th_faculty_serch1.place(x=800,y=25)
                    mech_4th_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=mech_4th_faculty_serch)
                    mech_4th_faculty_serch1_button.place(x=937,y=22)
                    mech_4th_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    mech_4th_add_database.place(x=10,y=140)

                    mech_4th_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    mech_4th_update_database.place(x=10,y=170)

                    mech_4th_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    mech_4th_delete_database.place(x=10,y=200)

                    mech_4th_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    mech_4th_clear_database.place(x=10,y=230)

#######################################################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Mechanical_Engineering':
                if self.var_day_select.get() == 'Friday':
                
                  
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_mech_4th_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_mech_4th_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_mech_4th_friday_mech_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_mech_4th_friday_mech_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into mech_4th_friday_time_table_database(day1,mech_4th_friday_total_number_of_class,mech_4th_friday_time,mech_4th_friday_subject,mech_4th_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_mech_4th_friday_number_of_class2.get(),
                                            self.var_mech_4th_friday_time1.get(),
                                            self.var_mech_4th_friday_mech_4thmistry_cycle_subject1.get(),
                                            self.var_mech_4th_friday_mech_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_4th_friday_time_table_database')
                            rows=cur.fetchall()
                            self.mech_4th_friday_time_table.delete(*self.mech_4th_friday_time_table.get_children())
                            for row in rows:
                                self.mech_4th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def mech_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from mech_4th_friday_time_table_database where mech_4th_friday_subject LIKE '%{self.var_mech_4th_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.mech_4th_friday_time_table.delete(*self.mech_4th_friday_time_table.get_children())
                                for row in rows:
                                    self.mech_4th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_friday_mech_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from mech_4th_friday_time_table_database where mech_4th_friday_subject=%s",(self.var_mech_4th_friday_mech_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update mech_4th_friday_time_table_database set mech_4th_friday_total_number_of_class=%s,mech_4th_friday_time=%s,mech_4th_friday_faculty=%s where mech_4th_friday_subject=%s",(
                                        
                                        self.var_mech_4th_friday_number_of_class2.get(),
                                        self.var_mech_4th_friday_time1.get(),
                                        self.var_mech_4th_friday_mech_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_mech_4th_friday_mech_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_friday_mech_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from mech_4th_friday_time_table_database where mech_4th_friday_subject=%s",(self.var_mech_4th_friday_mech_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from mech_4th_friday_time_table_database where mech_4th_friday_subject=%s',(self.var_mech_4th_friday_mech_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_mech_4th_friday_faculty_serch.set("")
                        self.var_mech_4th_friday_number_of_class2.set("")
                        self.var_mech_4th_friday_time1.set("")
                        self.var_mech_4th_friday_mech_4thmistry_cycle_subject1.set("")
                        self.var_mech_4th_friday_mech_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def mech_4th_friday_time_table_get(ev):
                        friday_mech_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.mech_4th_friday_time_table.focus()
                        content1=self.mech_4th_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_mech_4th_friday_number_of_class2.set(row1[2])
                        self.var_mech_4th_friday_time1.set(row1[3])
                        self.var_mech_4th_friday_mech_4thmistry_cycle_subject1.set(row1[4])
                        self.var_mech_4th_friday_mech_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.friday_mech_4th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_mech_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_mech_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_mech_4th_time_table_data_frame,orient=VERTICAL)
                    self.mech_4th_friday_time_table=ttk.Treeview(self.friday_mech_4th_time_table_data_frame,columns=('cid','day1','mech_4th_friday_total_number_of_class','mech_4th_friday_time','mech_4th_friday_subject','mech_4th_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.mech_4th_friday_time_table.xview)
                    scrolly.configure(command=self.mech_4th_friday_time_table.yview)

                    self.mech_4th_friday_time_table.heading('cid',text='Serial No')
                    self.mech_4th_friday_time_table.heading('day1',text='Day')
                    self.mech_4th_friday_time_table.heading('mech_4th_friday_total_number_of_class',text='Totel class')
                    self.mech_4th_friday_time_table.heading('mech_4th_friday_time',text='class time')
                    self.mech_4th_friday_time_table.heading('mech_4th_friday_subject',text='Subject')
                    self.mech_4th_friday_time_table.heading('mech_4th_friday_faculty',text='Faculty')

                    self.mech_4th_friday_time_table.column('cid',width=100)
                    self.mech_4th_friday_time_table.column('day1',width=150)
                    self.mech_4th_friday_time_table.column('mech_4th_friday_total_number_of_class',width=100)
                    self.mech_4th_friday_time_table.column('mech_4th_friday_time',width=150)
                    self.mech_4th_friday_time_table.column('mech_4th_friday_subject',width=150)
                    self.mech_4th_friday_time_table.column('mech_4th_friday_faculty',width=150)

                    self.mech_4th_friday_time_table['show']='headings'

                    self.mech_4th_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.mech_4th_friday_time_table.bind('<ButtonRelease-1>',mech_4th_friday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_mech_4th_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_mech_4th_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_mech_4th_subject_list=[]
                    self.fetch_mech_4th_faculty_subject()
                    friday_mech_4thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_mech_4th_friday_mech_4thmistry_cycle_subject1,state='readonly',values=self.faculty_mech_4th_subject_list)
                    friday_mech_4thmistry_cycle_subject1.place(x=400,y=25) 
         
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_mech_4th_name_list=[]
                    self.fetch_mech_4th_faculty_name()
                    friday_mech_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_mech_4th_friday_mech_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_mech_4th_name_list)
                    friday_mech_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    mech_4th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_mech_4th_friday_faculty_serch)
                    mech_4th_faculty_serch1.place(x=800,y=25)
                    mech_4th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=mech_4th_faculty_serch)
                    mech_4th_faculty_serch1_button.place(x=937,y=22)
                    mech_4th_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    mech_4th_add_database.place(x=10,y=140)

                    mech_4th_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    mech_4th_update_database.place(x=10,y=170)

                    mech_4th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    mech_4th_delete_database.place(x=10,y=200)

                    mech_4th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    mech_4th_clear_database.place(x=10,y=230)


##########################################################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Mechanical_Engineering':
                if self.var_day_select.get() == 'Saturday':
    
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_mech_4th_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_mech_4th_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_mech_4th_saturday_mech_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_mech_4th_saturday_mech_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into mech_4th_saturday_time_table_database(day1,mech_4th_saturday_total_number_of_class,mech_4th_saturday_time,mech_4th_saturday_subject,mech_4th_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_mech_4th_saturday_number_of_class2.get(),
                                            self.var_mech_4th_saturday_time1.get(),
                                            self.var_mech_4th_saturday_mech_4thmistry_cycle_subject1.get(),
                                            self.var_mech_4th_saturday_mech_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_4th_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.mech_4th_saturday_time_table.delete(*self.mech_4th_saturday_time_table.get_children())
                            for row in rows:
                                self.mech_4th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def mech_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from mech_4th_saturday_time_table_database where mech_4th_saturday_subject LIKE '%{self.var_mech_4th_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.mech_4th_saturday_time_table.delete(*self.mech_4th_saturday_time_table.get_children())
                                for row in rows:
                                    self.mech_4th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_saturday_mech_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from mech_4th_saturday_time_table_database where mech_4th_saturday_subject=%s",(self.var_mech_4th_saturday_mech_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update mech_4th_saturday_time_table_database set mech_4th_saturday_total_number_of_class=%s,mech_4th_saturday_time=%s,mech_4th_saturday_faculty=%s where mech_4th_saturday_subject=%s",(
                                        
                                        self.var_mech_4th_saturday_number_of_class2.get(),
                                        self.var_mech_4th_saturday_time1.get(),
                                        self.var_mech_4th_saturday_mech_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_mech_4th_saturday_mech_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_4th_saturday_mech_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from mech_4th_saturday_time_table_database where mech_4th_saturday_subject=%s",(self.var_mech_4th_saturday_mech_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from mech_4th_saturday_time_table_database where mech_4th_saturday_subject=%s',(self.var_mech_4th_saturday_mech_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_mech_4th_saturday_faculty_serch.set("")
                        self.var_mech_4th_saturday_number_of_class2.set("")
                        self.var_mech_4th_saturday_time1.set("")
                        self.var_mech_4th_saturday_mech_4thmistry_cycle_subject1.set("")
                        self.var_mech_4th_saturday_mech_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def mech_4th_saturday_time_table_get(ev):
                        saturday_mech_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.mech_4th_saturday_time_table.focus()
                        content1=self.mech_4th_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_mech_4th_saturday_number_of_class2.set(row1[2])
                        self.var_mech_4th_saturday_time1.set(row1[3])
                        self.var_mech_4th_saturday_mech_4thmistry_cycle_subject1.set(row1[4])
                        self.var_mech_4th_saturday_mech_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.saturday_mech_4th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_mech_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_mech_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_mech_4th_time_table_data_frame,orient=VERTICAL)
                    self.mech_4th_saturday_time_table=ttk.Treeview(self.saturday_mech_4th_time_table_data_frame,columns=('cid','day1','mech_4th_saturday_total_number_of_class','mech_4th_saturday_time','mech_4th_saturday_subject','mech_4th_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.mech_4th_saturday_time_table.xview)
                    scrolly.configure(command=self.mech_4th_saturday_time_table.yview)

                    self.mech_4th_saturday_time_table.heading('cid',text='Serial No')
                    self.mech_4th_saturday_time_table.heading('day1',text='Day')
                    self.mech_4th_saturday_time_table.heading('mech_4th_saturday_total_number_of_class',text='Totel class')
                    self.mech_4th_saturday_time_table.heading('mech_4th_saturday_time',text='class time')
                    self.mech_4th_saturday_time_table.heading('mech_4th_saturday_subject',text='Subject')
                    self.mech_4th_saturday_time_table.heading('mech_4th_saturday_faculty',text='Faculty')

                    self.mech_4th_saturday_time_table.column('cid',width=100)
                    self.mech_4th_saturday_time_table.column('day1',width=150)
                    self.mech_4th_saturday_time_table.column('mech_4th_saturday_total_number_of_class',width=100)
                    self.mech_4th_saturday_time_table.column('mech_4th_saturday_time',width=150)
                    self.mech_4th_saturday_time_table.column('mech_4th_saturday_subject',width=150)
                    self.mech_4th_saturday_time_table.column('mech_4th_saturday_faculty',width=150)

                    self.mech_4th_saturday_time_table['show']='headings'

                    self.mech_4th_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.mech_4th_saturday_time_table.bind('<ButtonRelease-1>',mech_4th_saturday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_mech_4th_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_mech_4th_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_mech_4th_subject_list=[]
                    self.fetch_mech_4th_faculty_subject()
                    saturday_mech_4thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_mech_4th_saturday_mech_4thmistry_cycle_subject1,state='readonly',values=self.faculty_mech_4th_subject_list)
                    saturday_mech_4thmistry_cycle_subject1.place(x=400,y=25) 
                 
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_mech_4th_name_list=[]
                    self.fetch_mech_4th_faculty_name()
                    saturday_mech_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_mech_4th_saturday_mech_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_mech_4th_name_list)
                    saturday_mech_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    mech_4th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_mech_4th_saturday_faculty_serch)
                    mech_4th_faculty_serch1.place(x=800,y=25)
                    mech_4th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=mech_4th_faculty_serch)
                    mech_4th_faculty_serch1_button.place(x=937,y=22)
                    mech_4th_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    mech_4th_add_database.place(x=10,y=140)

                    mech_4th_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    mech_4th_update_database.place(x=10,y=170)

                    mech_4th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    mech_4th_delete_database.place(x=10,y=200)

                    mech_4th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    mech_4th_clear_database.place(x=10,y=230)

        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Electrical_And_Electronic_Engineering':
                if self.var_day_select.get() == 'Monday':
                
                  

                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_eee_4th_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_eee_4th_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_eee_4th_monday_eee_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_eee_4th_monday_eee_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into eee_4th_monday_time_table_database(day1,eee_4th_monday_total_number_of_class,eee_4th_monday_time,eee_4th_monday_subject,eee_4th_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_eee_4th_monday_number_of_class1.get(),
                                            self.var_eee_4th_monday_time1.get(),
                                            self.var_eee_4th_monday_eee_4thmistry_cycle_subject1.get(),
                                            self.var_eee_4th_monday_eee_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_4th_monday_time_table_database')
                            rows=cur.fetchall()
                            self.eee_4th_monday_time_table.delete(*self.eee_4th_monday_time_table.get_children())
                            for row in rows:
                                self.eee_4th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def eee_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from eee_4th_monday_time_table_database where eee_4th_monday_subject LIKE '%{self.var_eee_4th_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.eee_4th_monday_time_table.delete(*self.eee_4th_monday_time_table.get_children())
                                for row in rows:
                                    self.eee_4th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_monday_eee_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from eee_4th_monday_time_table_database where eee_4th_monday_subject=%s",(self.var_eee_4th_monday_eee_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update eee_4th_monday_time_table_database set eee_4th_monday_total_number_of_class=%s,eee_4th_monday_time=%s,eee_4th_monday_faculty=%s where eee_4th_monday_subject=%s",(
                                        
                                        self.var_eee_4th_monday_number_of_class1.get(),
                                        self.var_eee_4th_monday_time1.get(),
                                        self.var_eee_4th_monday_eee_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_eee_4th_monday_eee_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_monday_eee_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from eee_4th_monday_time_table_database where eee_4th_monday_subject=%s",(self.var_eee_4th_monday_eee_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from eee_4th_monday_time_table_database where eee_4th_monday_subject=%s',(self.var_eee_4th_monday_eee_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_eee_4th_monday_faculty_serch.set("")
                        self.var_eee_4th_monday_number_of_class1.set("")
                        self.var_eee_4th_monday_time1.set("")
                        self.var_eee_4th_monday_eee_4thmistry_cycle_subject1.set("")
                        self.var_eee_4th_monday_eee_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def eee_4th_monday_time_table_get(ev):
                        monday_eee_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.eee_4th_monday_time_table.focus()
                        content1=self.eee_4th_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_eee_4th_monday_number_of_class1.set(row1[2])
                        self.var_eee_4th_monday_time1.set(row1[3])
                        self.var_eee_4th_monday_eee_4thmistry_cycle_subject1.set(row1[4])
                        self.var_eee_4th_monday_eee_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    ##################################################################################################################################################
                    self.monday_eee_4th_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_eee_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_eee_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_eee_4th_time_table_data_frame,orient=VERTICAL)
                    self.eee_4th_monday_time_table=ttk.Treeview(self.monday_eee_4th_time_table_data_frame,columns=('cid','day1','eee_4th_monday_total_number_of_class','eee_4th_monday_time','eee_4th_monday_subject','eee_4th_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.eee_4th_monday_time_table.xview)
                    scrolly.configure(command=self.eee_4th_monday_time_table.yview)

                    self.eee_4th_monday_time_table.heading('cid',text='Serial No')
                    self.eee_4th_monday_time_table.heading('day1',text='Day')
                    self.eee_4th_monday_time_table.heading('eee_4th_monday_total_number_of_class',text='Totel class')
                    self.eee_4th_monday_time_table.heading('eee_4th_monday_time',text='class time')
                    self.eee_4th_monday_time_table.heading('eee_4th_monday_subject',text='Subject')
                    self.eee_4th_monday_time_table.heading('eee_4th_monday_faculty',text='Faculty')

                    self.eee_4th_monday_time_table.column('cid',width=100)
                    self.eee_4th_monday_time_table.column('day1',width=150)
                    self.eee_4th_monday_time_table.column('eee_4th_monday_total_number_of_class',width=100)
                    self.eee_4th_monday_time_table.column('eee_4th_monday_time',width=150)
                    self.eee_4th_monday_time_table.column('eee_4th_monday_subject',width=150)
                    self.eee_4th_monday_time_table.column('eee_4th_monday_faculty',width=150)

                    self.eee_4th_monday_time_table['show']='headings'

                    self.eee_4th_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.eee_4th_monday_time_table.bind('<ButtonRelease-1>',eee_4th_monday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_eee_4th_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_eee_4th_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_eee_4th_subject_list=[]
                    self.fetch_eee_4th_faculty_subject()
                    monday_eee_4thmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_eee_4th_monday_eee_4thmistry_cycle_subject1,state='readonly',values=self.faculty_eee_4th_subject_list)
                    monday_eee_4thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_eee_4th_name_list=[]
                    self.fetch_eee_4th_faculty_name()
                    monday_eee_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_eee_4th_monday_eee_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_eee_4th_name_list)
                    monday_eee_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    eee_4th_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_eee_4th_monday_faculty_serch)
                    eee_4th_faculty_serch1.place(x=800,y=25)
                    eee_4th_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=eee_4th_faculty_serch)
                    eee_4th_faculty_serch1_button.place(x=937,y=22)
                    eee_4th_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    eee_4th_add_database.place(x=10,y=140)

                    eee_4th_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    eee_4th_update_database.place(x=10,y=170)

                    eee_4th_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    eee_4th_delete_database.place(x=10,y=200)

                    eee_4th_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    eee_4th_clear_database.place(x=10,y=230)
###########################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Electrical_And_Electronic_Engineering':
                if self.var_day_select.get() == 'Thuesday':
      
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_eee_4th_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_eee_4th_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into eee_4th_thuesday_time_table_database(day1,eee_4th_thuesday_total_number_of_class,eee_4th_thuesday_time,eee_4th_thuesday_subject,eee_4th_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_eee_4th_thuesday_number_of_class2.get(),
                                            self.var_eee_4th_thuesday_time1.get(),
                                            self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject1.get(),
                                            self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_4th_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.eee_4th_thuesday_time_table.delete(*self.eee_4th_thuesday_time_table.get_children())
                            for row in rows:
                                self.eee_4th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def eee_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from eee_4th_thuesday_time_table_database where eee_4th_thuesday_subject LIKE '%{self.var_eee_4th_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.eee_4th_thuesday_time_table.delete(*self.eee_4th_thuesday_time_table.get_children())
                                for row in rows:
                                    self.eee_4th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from eee_4th_thuesday_time_table_database where eee_4th_thuesday_subject=%s",(self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update eee_4th_thuesday_time_table_database set eee_4th_thuesday_total_number_of_class=%s,eee_4th_thuesday_time=%s,eee_4th_thuesday_faculty=%s where eee_4th_thuesday_subject=%s",(
                                        
                                        self.var_eee_4th_thuesday_number_of_class2.get(),
                                        self.var_eee_4th_thuesday_time1.get(),
                                        self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from eee_4th_thuesday_time_table_database where eee_4th_thuesday_subject=%s",(self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from eee_4th_thuesday_time_table_database where eee_4th_thuesday_subject=%s',(self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_eee_4th_thuesday_faculty_serch.set("")
                        self.var_eee_4th_thuesday_number_of_class2.set("")
                        self.var_eee_4th_thuesday_time1.set("")
                        self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject1.set("")
                        self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def eee_4th_thuesday_time_table_get(ev):
                        thuesday_eee_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.eee_4th_thuesday_time_table.focus()
                        content1=self.eee_4th_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_eee_4th_thuesday_number_of_class2.set(row1[2])
                        self.var_eee_4th_thuesday_time1.set(row1[3])
                        self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject1.set(row1[4])
                        self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    
                    self.thuesday_eee_4th_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_eee_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_eee_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_eee_4th_time_table_data_frame,orient=VERTICAL)
                    self.eee_4th_thuesday_time_table=ttk.Treeview(self.thuesday_eee_4th_time_table_data_frame,columns=('cid','day1','eee_4th_thuesday_total_number_of_class','eee_4th_thuesday_time','eee_4th_thuesday_subject','eee_4th_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.eee_4th_thuesday_time_table.xview)
                    scrolly.configure(command=self.eee_4th_thuesday_time_table.yview)

                    self.eee_4th_thuesday_time_table.heading('cid',text='Serial No')
                    self.eee_4th_thuesday_time_table.heading('day1',text='Day')
                    self.eee_4th_thuesday_time_table.heading('eee_4th_thuesday_total_number_of_class',text='Totel class')
                    self.eee_4th_thuesday_time_table.heading('eee_4th_thuesday_time',text='class time')
                    self.eee_4th_thuesday_time_table.heading('eee_4th_thuesday_subject',text='Subject')
                    self.eee_4th_thuesday_time_table.heading('eee_4th_thuesday_faculty',text='Faculty')

                    self.eee_4th_thuesday_time_table.column('cid',width=100)
                    self.eee_4th_thuesday_time_table.column('day1',width=150)
                    self.eee_4th_thuesday_time_table.column('eee_4th_thuesday_total_number_of_class',width=100)
                    self.eee_4th_thuesday_time_table.column('eee_4th_thuesday_time',width=150)
                    self.eee_4th_thuesday_time_table.column('eee_4th_thuesday_subject',width=150)
                    self.eee_4th_thuesday_time_table.column('eee_4th_thuesday_faculty',width=150)

                    self.eee_4th_thuesday_time_table['show']='headings'

                    self.eee_4th_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.eee_4th_thuesday_time_table.bind('<ButtonRelease-1>',eee_4th_thuesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_eee_4th_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_eee_4th_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_eee_4th_subject_list=[]
                    self.fetch_eee_4th_faculty_subject()
                    thuesday_eee_4thmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject1,state='readonly',values=self.faculty_eee_4th_subject_list)
                    thuesday_eee_4thmistry_cycle_subject1.place(x=400,y=25) 
                  
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_eee_4th_name_list=[]
                    self.fetch_eee_4th_faculty_name()
                    thuesday_eee_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_eee_4th_thuesday_eee_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_eee_4th_name_list)
                    thuesday_eee_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    eee_4th_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_eee_4th_thuesday_faculty_serch)
                    eee_4th_faculty_serch1.place(x=800,y=25)
                    eee_4th_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=eee_4th_faculty_serch)
                    eee_4th_faculty_serch1_button.place(x=937,y=22)
                    eee_4th_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    eee_4th_add_database.place(x=10,y=140)

                    eee_4th_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    eee_4th_update_database.place(x=10,y=170)

                    eee_4th_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    eee_4th_delete_database.place(x=10,y=200)

                    eee_4th_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    eee_4th_clear_database.place(x=10,y=230)

        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Electrical_And_Electronic_Engineering':
                if self.var_day_select.get() == 'Wednesday':
                
 
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_eee_4th_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_eee_4th_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into eee_4th_wednesday_time_table_database(day1,eee_4th_wednesday_total_number_of_class,eee_4th_wednesday_time,eee_4th_wednesday_subject,eee_4th_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_eee_4th_wednesday_number_of_class2.get(),
                                            self.var_eee_4th_wednesday_time1.get(),
                                            self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject1.get(),
                                            self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_4th_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.eee_4th_wednesday_time_table.delete(*self.eee_4th_wednesday_time_table.get_children())
                            for row in rows:
                                self.eee_4th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def eee_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from eee_4th_wednesday_time_table_database where eee_4th_wednesday_subject LIKE '%{self.var_eee_4th_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.eee_4th_wednesday_time_table.delete(*self.eee_4th_wednesday_time_table.get_children())
                                for row in rows:
                                    self.eee_4th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from eee_4th_wednesday_time_table_database where eee_4th_wednesday_subject=%s",(self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update eee_4th_wednesday_time_table_database set eee_4th_wednesday_total_number_of_class=%s,eee_4th_wednesday_time=%s,eee_4th_wednesday_faculty=%s where eee_4th_wednesday_subject=%s",(
                                        
                                        self.var_eee_4th_wednesday_number_of_class2.get(),
                                        self.var_eee_4th_wednesday_time1.get(),
                                        self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from eee_4th_wednesday_time_table_database where eee_4th_wednesday_subject=%s",(self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from eee_4th_wednesday_time_table_database where eee_4th_wednesday_subject=%s',(self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_eee_4th_wednesday_faculty_serch.set("")
                        self.var_eee_4th_wednesday_number_of_class2.set("")
                        self.var_eee_4th_wednesday_time1.set("")
                        self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject1.set("")
                        self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def eee_4th_wednesday_time_table_get(ev):
                        wednesday_eee_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.eee_4th_wednesday_time_table.focus()
                        content1=self.eee_4th_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_eee_4th_wednesday_number_of_class2.set(row1[2])
                        self.var_eee_4th_wednesday_time1.set(row1[3])
                        self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject1.set(row1[4])
                        self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    
                    self.wednesday_eee_4th_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_eee_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_eee_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_eee_4th_time_table_data_frame,orient=VERTICAL)
                    self.eee_4th_wednesday_time_table=ttk.Treeview(self.wednesday_eee_4th_time_table_data_frame,columns=('cid','day1','eee_4th_wednesday_total_number_of_class','eee_4th_wednesday_time','eee_4th_wednesday_subject','eee_4th_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.eee_4th_wednesday_time_table.xview)
                    scrolly.configure(command=self.eee_4th_wednesday_time_table.yview)

                    self.eee_4th_wednesday_time_table.heading('cid',text='Serial No')
                    self.eee_4th_wednesday_time_table.heading('day1',text='Day')
                    self.eee_4th_wednesday_time_table.heading('eee_4th_wednesday_total_number_of_class',text='Totel class')
                    self.eee_4th_wednesday_time_table.heading('eee_4th_wednesday_time',text='class time')
                    self.eee_4th_wednesday_time_table.heading('eee_4th_wednesday_subject',text='Subject')
                    self.eee_4th_wednesday_time_table.heading('eee_4th_wednesday_faculty',text='Faculty')

                    self.eee_4th_wednesday_time_table.column('cid',width=100)
                    self.eee_4th_wednesday_time_table.column('day1',width=150)
                    self.eee_4th_wednesday_time_table.column('eee_4th_wednesday_total_number_of_class',width=100)
                    self.eee_4th_wednesday_time_table.column('eee_4th_wednesday_time',width=150)
                    self.eee_4th_wednesday_time_table.column('eee_4th_wednesday_subject',width=150)
                    self.eee_4th_wednesday_time_table.column('eee_4th_wednesday_faculty',width=150)

                    self.eee_4th_wednesday_time_table['show']='headings'

                    self.eee_4th_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.eee_4th_wednesday_time_table.bind('<ButtonRelease-1>',eee_4th_wednesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_eee_4th_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_eee_4th_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_eee_4th_subject_list=[]
                    self.fetch_eee_4th_faculty_subject()
                    wednesday_eee_4thmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject1,state='readonly',values=self.faculty_eee_4th_subject_list)
                    wednesday_eee_4thmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_eee_4th_name_list=[]
                    self.fetch_eee_4th_faculty_name()
                    wednesday_eee_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_eee_4th_wednesday_eee_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_eee_4th_name_list)
                    wednesday_eee_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    eee_4th_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_eee_4th_wednesday_faculty_serch)
                    eee_4th_faculty_serch1.place(x=800,y=25)
                    eee_4th_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=eee_4th_faculty_serch)
                    eee_4th_faculty_serch1_button.place(x=937,y=22)
                    eee_4th_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    eee_4th_add_database.place(x=10,y=140)

                    eee_4th_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    eee_4th_update_database.place(x=10,y=170)

                    eee_4th_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    eee_4th_delete_database.place(x=10,y=200)

                    eee_4th_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    eee_4th_clear_database.place(x=10,y=230)
####################################################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Electrical_And_Electronic_Engineering':
                if self.var_day_select.get() == 'Thursday':
                
                  
                    #print('this time table is for eee_4thmistry cycle in civil engineering mondy')
                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_eee_4th_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_eee_4th_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_eee_4th_thursday_eee_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_eee_4th_thursday_eee_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into eee_4th_thursday_time_table_database(day1,eee_4th_thursday_total_number_of_class,eee_4th_thursday_time,eee_4th_thursday_subject,eee_4th_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_eee_4th_thursday_number_of_class2.get(),
                                            self.var_eee_4th_thursday_time1.get(),
                                            self.var_eee_4th_thursday_eee_4thmistry_cycle_subject1.get(),
                                            self.var_eee_4th_thursday_eee_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_4th_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.eee_4th_thursday_time_table.delete(*self.eee_4th_thursday_time_table.get_children())
                            for row in rows:
                                self.eee_4th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def eee_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from eee_4th_thursday_time_table_database where eee_4th_thursday_subject LIKE '%{self.var_eee_4th_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.eee_4th_thursday_time_table.delete(*self.eee_4th_thursday_time_table.get_children())
                                for row in rows:
                                    self.eee_4th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_thursday_eee_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from eee_4th_thursday_time_table_database where eee_4th_thursday_subject=%s",(self.var_eee_4th_thursday_eee_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update eee_4th_thursday_time_table_database set eee_4th_thursday_total_number_of_class=%s,eee_4th_thursday_time=%s,eee_4th_thursday_faculty=%s where eee_4th_thursday_subject=%s",(
                                        
                                        self.var_eee_4th_thursday_number_of_class2.get(),
                                        self.var_eee_4th_thursday_time1.get(),
                                        self.var_eee_4th_thursday_eee_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_eee_4th_thursday_eee_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_thursday_eee_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from eee_4th_thursday_time_table_database where eee_4th_thursday_subject=%s",(self.var_eee_4th_thursday_eee_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from eee_4th_thursday_time_table_database where eee_4th_thursday_subject=%s',(self.var_eee_4th_thursday_eee_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_eee_4th_thursday_faculty_serch.set("")
                        self.var_eee_4th_thursday_number_of_class2.set("")
                        self.var_eee_4th_thursday_time1.set("")
                        self.var_eee_4th_thursday_eee_4thmistry_cycle_subject1.set("")
                        self.var_eee_4th_thursday_eee_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def eee_4th_thursday_time_table_get(ev):
                        thursday_eee_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.eee_4th_thursday_time_table.focus()
                        content1=self.eee_4th_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_eee_4th_thursday_number_of_class2.set(row1[2])
                        self.var_eee_4th_thursday_time1.set(row1[3])
                        self.var_eee_4th_thursday_eee_4thmistry_cycle_subject1.set(row1[4])
                        self.var_eee_4th_thursday_eee_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    
                    self.thursday_eee_4th_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_eee_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_eee_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_eee_4th_time_table_data_frame,orient=VERTICAL)
                    self.eee_4th_thursday_time_table=ttk.Treeview(self.thursday_eee_4th_time_table_data_frame,columns=('cid','day1','eee_4th_thursday_total_number_of_class','eee_4th_thursday_time','eee_4th_thursday_subject','eee_4th_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.eee_4th_thursday_time_table.xview)
                    scrolly.configure(command=self.eee_4th_thursday_time_table.yview)

                    self.eee_4th_thursday_time_table.heading('cid',text='Serial No')
                    self.eee_4th_thursday_time_table.heading('day1',text='Day')
                    self.eee_4th_thursday_time_table.heading('eee_4th_thursday_total_number_of_class',text='Totel class')
                    self.eee_4th_thursday_time_table.heading('eee_4th_thursday_time',text='class time')
                    self.eee_4th_thursday_time_table.heading('eee_4th_thursday_subject',text='Subject')
                    self.eee_4th_thursday_time_table.heading('eee_4th_thursday_faculty',text='Faculty')

                    self.eee_4th_thursday_time_table.column('cid',width=100)
                    self.eee_4th_thursday_time_table.column('day1',width=150)
                    self.eee_4th_thursday_time_table.column('eee_4th_thursday_total_number_of_class',width=100)
                    self.eee_4th_thursday_time_table.column('eee_4th_thursday_time',width=150)
                    self.eee_4th_thursday_time_table.column('eee_4th_thursday_subject',width=150)
                    self.eee_4th_thursday_time_table.column('eee_4th_thursday_faculty',width=150)

                    self.eee_4th_thursday_time_table['show']='headings'

                    self.eee_4th_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.eee_4th_thursday_time_table.bind('<ButtonRelease-1>',eee_4th_thursday_time_table_get)

     
                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_eee_4th_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_eee_4th_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_eee_4th_subject_list=[]
                    self.fetch_eee_4th_faculty_subject()
                    thursday_eee_4thmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_eee_4th_thursday_eee_4thmistry_cycle_subject1,state='readonly',values=self.faculty_eee_4th_subject_list)
                    thursday_eee_4thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_eee_4th_name_list=[]
                    self.fetch_eee_4th_faculty_name()
                    thursday_eee_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_eee_4th_thursday_eee_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_eee_4th_name_list)
                    thursday_eee_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    eee_4th_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_eee_4th_thursday_faculty_serch)
                    eee_4th_faculty_serch1.place(x=800,y=25)
                    eee_4th_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=eee_4th_faculty_serch)
                    eee_4th_faculty_serch1_button.place(x=937,y=22)
                    eee_4th_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    eee_4th_add_database.place(x=10,y=140)

                    eee_4th_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    eee_4th_update_database.place(x=10,y=170)

                    eee_4th_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    eee_4th_delete_database.place(x=10,y=200)

                    eee_4th_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    eee_4th_clear_database.place(x=10,y=230)

##########################################################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Electrical_And_Electronic_Engineering':
                if self.var_day_select.get() == 'Friday':
    
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                         )
                        cur=con.cursor()
                        if self.var_eee_4th_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_eee_4th_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_eee_4th_friday_eee_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_eee_4th_friday_eee_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into eee_4th_friday_time_table_database(day1,eee_4th_friday_total_number_of_class,eee_4th_friday_time,eee_4th_friday_subject,eee_4th_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_eee_4th_friday_number_of_class2.get(),
                                            self.var_eee_4th_friday_time1.get(),
                                            self.var_eee_4th_friday_eee_4thmistry_cycle_subject1.get(),
                                            self.var_eee_4th_friday_eee_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_4th_friday_time_table_database')
                            rows=cur.fetchall()
                            self.eee_4th_friday_time_table.delete(*self.eee_4th_friday_time_table.get_children())
                            for row in rows:
                                self.eee_4th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def eee_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from eee_4th_friday_time_table_database where eee_4th_friday_subject LIKE '%{self.var_eee_4th_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.eee_4th_friday_time_table.delete(*self.eee_4th_friday_time_table.get_children())
                                for row in rows:
                                    self.eee_4th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_friday_eee_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from eee_4th_friday_time_table_database where eee_4th_friday_subject=%s",(self.var_eee_4th_friday_eee_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update eee_4th_friday_time_table_database set eee_4th_friday_total_number_of_class=%s,eee_4th_friday_time=%s,eee_4th_friday_faculty=%s where eee_4th_friday_subject=%s",(
                                        
                                        self.var_eee_4th_friday_number_of_class2.get(),
                                        self.var_eee_4th_friday_time1.get(),
                                        self.var_eee_4th_friday_eee_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_eee_4th_friday_eee_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_friday_eee_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from eee_4th_friday_time_table_database where eee_4th_friday_subject=%s",(self.var_eee_4th_friday_eee_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from eee_4th_friday_time_table_database where eee_4th_friday_subject=%s',(self.var_eee_4th_friday_eee_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_eee_4th_friday_faculty_serch.set("")
                        self.var_eee_4th_friday_number_of_class2.set("")
                        self.var_eee_4th_friday_time1.set("")
                        self.var_eee_4th_friday_eee_4thmistry_cycle_subject1.set("")
                        self.var_eee_4th_friday_eee_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def eee_4th_friday_time_table_get(ev):
                        friday_eee_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.eee_4th_friday_time_table.focus()
                        content1=self.eee_4th_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_eee_4th_friday_number_of_class2.set(row1[2])
                        self.var_eee_4th_friday_time1.set(row1[3])
                        self.var_eee_4th_friday_eee_4thmistry_cycle_subject1.set(row1[4])
                        self.var_eee_4th_friday_eee_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.friday_eee_4th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_eee_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_eee_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_eee_4th_time_table_data_frame,orient=VERTICAL)
                    self.eee_4th_friday_time_table=ttk.Treeview(self.friday_eee_4th_time_table_data_frame,columns=('cid','day1','eee_4th_friday_total_number_of_class','eee_4th_friday_time','eee_4th_friday_subject','eee_4th_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.eee_4th_friday_time_table.xview)
                    scrolly.configure(command=self.eee_4th_friday_time_table.yview)

                    self.eee_4th_friday_time_table.heading('cid',text='Serial No')
                    self.eee_4th_friday_time_table.heading('day1',text='Day')
                    self.eee_4th_friday_time_table.heading('eee_4th_friday_total_number_of_class',text='Totel class')
                    self.eee_4th_friday_time_table.heading('eee_4th_friday_time',text='class time')
                    self.eee_4th_friday_time_table.heading('eee_4th_friday_subject',text='Subject')
                    self.eee_4th_friday_time_table.heading('eee_4th_friday_faculty',text='Faculty')

                    self.eee_4th_friday_time_table.column('cid',width=100)
                    self.eee_4th_friday_time_table.column('day1',width=150)
                    self.eee_4th_friday_time_table.column('eee_4th_friday_total_number_of_class',width=100)
                    self.eee_4th_friday_time_table.column('eee_4th_friday_time',width=150)
                    self.eee_4th_friday_time_table.column('eee_4th_friday_subject',width=150)
                    self.eee_4th_friday_time_table.column('eee_4th_friday_faculty',width=150)

                    self.eee_4th_friday_time_table['show']='headings'

                    self.eee_4th_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.eee_4th_friday_time_table.bind('<ButtonRelease-1>',eee_4th_friday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_eee_4th_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_eee_4th_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_eee_4th_subject_list=[]
                    self.fetch_eee_4th_faculty_subject()
                    friday_eee_4thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_eee_4th_friday_eee_4thmistry_cycle_subject1,state='readonly',values=self.faculty_eee_4th_subject_list)
                    friday_eee_4thmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_eee_4th_name_list=[]
                    self.fetch_eee_4th_faculty_name()
                    friday_eee_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_eee_4th_friday_eee_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_eee_4th_name_list)
                    friday_eee_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    eee_4th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_eee_4th_friday_faculty_serch)
                    eee_4th_faculty_serch1.place(x=800,y=25)
                    eee_4th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=eee_4th_faculty_serch)
                    eee_4th_faculty_serch1_button.place(x=937,y=22)
                    eee_4th_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    eee_4th_add_database.place(x=10,y=140)

                    eee_4th_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    eee_4th_update_database.place(x=10,y=170)

                    eee_4th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    eee_4th_delete_database.place(x=10,y=200)

                    eee_4th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    eee_4th_clear_database.place(x=10,y=230)
#####################################################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Electrical_And_Electronic_Engineering':
                if self.var_day_select.get() == 'Saturday':
                
                  
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_eee_4th_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_eee_4th_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_eee_4th_saturday_eee_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_eee_4th_saturday_eee_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into eee_4th_saturday_time_table_database(day1,eee_4th_saturday_total_number_of_class,eee_4th_saturday_time,eee_4th_saturday_subject,eee_4th_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_eee_4th_saturday_number_of_class2.get(),
                                            self.var_eee_4th_saturday_time1.get(),
                                            self.var_eee_4th_saturday_eee_4thmistry_cycle_subject1.get(),
                                            self.var_eee_4th_saturday_eee_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_4th_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.eee_4th_saturday_time_table.delete(*self.eee_4th_saturday_time_table.get_children())
                            for row in rows:
                                self.eee_4th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def eee_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from eee_4th_saturday_time_table_database where eee_4th_saturday_subject LIKE '%{self.var_eee_4th_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.eee_4th_saturday_time_table.delete(*self.eee_4th_saturday_time_table.get_children())
                                for row in rows:
                                    self.eee_4th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_saturday_eee_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from eee_4th_saturday_time_table_database where eee_4th_saturday_subject=%s",(self.var_eee_4th_saturday_eee_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update eee_4th_saturday_time_table_database set eee_4th_saturday_total_number_of_class=%s,eee_4th_saturday_time=%s,eee_4th_saturday_faculty=%s where eee_4th_saturday_subject=%s",(
                                        
                                        self.var_eee_4th_saturday_number_of_class2.get(),
                                        self.var_eee_4th_saturday_time1.get(),
                                        self.var_eee_4th_saturday_eee_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_eee_4th_saturday_eee_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_4th_saturday_eee_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from eee_4th_saturday_time_table_database where eee_4th_saturday_subject=%s",(self.var_eee_4th_saturday_eee_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from eee_4th_saturday_time_table_database where eee_4th_saturday_subject=%s',(self.var_eee_4th_saturday_eee_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_eee_4th_saturday_faculty_serch.set("")
                        self.var_eee_4th_saturday_number_of_class2.set("")
                        self.var_eee_4th_saturday_time1.set("")
                        self.var_eee_4th_saturday_eee_4thmistry_cycle_subject1.set("")
                        self.var_eee_4th_saturday_eee_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def eee_4th_saturday_time_table_get(ev):
                        saturday_eee_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.eee_4th_saturday_time_table.focus()
                        content1=self.eee_4th_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_eee_4th_saturday_number_of_class2.set(row1[2])
                        self.var_eee_4th_saturday_time1.set(row1[3])
                        self.var_eee_4th_saturday_eee_4thmistry_cycle_subject1.set(row1[4])
                        self.var_eee_4th_saturday_eee_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.saturday_eee_4th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_eee_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_eee_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_eee_4th_time_table_data_frame,orient=VERTICAL)
                    self.eee_4th_saturday_time_table=ttk.Treeview(self.saturday_eee_4th_time_table_data_frame,columns=('cid','day1','eee_4th_saturday_total_number_of_class','eee_4th_saturday_time','eee_4th_saturday_subject','eee_4th_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.eee_4th_saturday_time_table.xview)
                    scrolly.configure(command=self.eee_4th_saturday_time_table.yview)

                    self.eee_4th_saturday_time_table.heading('cid',text='Serial No')
                    self.eee_4th_saturday_time_table.heading('day1',text='Day')
                    self.eee_4th_saturday_time_table.heading('eee_4th_saturday_total_number_of_class',text='Totel class')
                    self.eee_4th_saturday_time_table.heading('eee_4th_saturday_time',text='class time')
                    self.eee_4th_saturday_time_table.heading('eee_4th_saturday_subject',text='Subject')
                    self.eee_4th_saturday_time_table.heading('eee_4th_saturday_faculty',text='Faculty')

                    self.eee_4th_saturday_time_table.column('cid',width=100)
                    self.eee_4th_saturday_time_table.column('day1',width=150)
                    self.eee_4th_saturday_time_table.column('eee_4th_saturday_total_number_of_class',width=100)
                    self.eee_4th_saturday_time_table.column('eee_4th_saturday_time',width=150)
                    self.eee_4th_saturday_time_table.column('eee_4th_saturday_subject',width=150)
                    self.eee_4th_saturday_time_table.column('eee_4th_saturday_faculty',width=150)

                    self.eee_4th_saturday_time_table['show']='headings'

                    self.eee_4th_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.eee_4th_saturday_time_table.bind('<ButtonRelease-1>',eee_4th_saturday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_eee_4th_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_eee_4th_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_eee_4th_subject_list=[]
                    self.fetch_eee_4th_faculty_subject()
                    saturday_eee_4thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_eee_4th_saturday_eee_4thmistry_cycle_subject1,state='readonly',values=self.faculty_eee_4th_subject_list)
                    saturday_eee_4thmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_eee_4th_name_list=[]
                    self.fetch_eee_4th_faculty_name()
                    saturday_eee_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_eee_4th_saturday_eee_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_eee_4th_name_list)
                    saturday_eee_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    eee_4th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_eee_4th_saturday_faculty_serch)
                    eee_4th_faculty_serch1.place(x=800,y=25)
                    eee_4th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=eee_4th_faculty_serch)
                    eee_4th_faculty_serch1_button.place(x=937,y=22)
                    eee_4th_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    eee_4th_add_database.place(x=10,y=140)

                    eee_4th_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    eee_4th_update_database.place(x=10,y=170)

                    eee_4th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    eee_4th_delete_database.place(x=10,y=200)

                    eee_4th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    eee_4th_clear_database.place(x=10,y=230)


        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Communication_Engineering':
                if self.var_day_select.get() == 'Monday':
                
                  
                    
                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ece_4th_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_ece_4th_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_ece_4th_monday_ece_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_ece_4th_monday_ece_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into ece_4th_monday_time_table_database(day1,ece_4th_monday_total_number_of_class,ece_4th_monday_time,ece_4th_monday_subject,ece_4th_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ece_4th_monday_number_of_class1.get(),
                                            self.var_ece_4th_monday_time1.get(),
                                            self.var_ece_4th_monday_ece_4thmistry_cycle_subject1.get(),
                                            self.var_ece_4th_monday_ece_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_4th_monday_time_table_database')
                            rows=cur.fetchall()
                            self.ece_4th_monday_time_table.delete(*self.ece_4th_monday_time_table.get_children())
                            for row in rows:
                                self.ece_4th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def ece_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from ece_4th_monday_time_table_database where ece_4th_monday_subject LIKE '%{self.var_ece_4th_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ece_4th_monday_time_table.delete(*self.ece_4th_monday_time_table.get_children())
                                for row in rows:
                                    self.ece_4th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_monday_ece_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from ece_4th_monday_time_table_database where ece_4th_monday_subject=%s",(self.var_ece_4th_monday_ece_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update ece_4th_monday_time_table_database set ece_4th_monday_total_number_of_class=%s,ece_4th_monday_time=%s,ece_4th_monday_faculty=%s where ece_4th_monday_subject=%s",(
                                        
                                        self.var_ece_4th_monday_number_of_class1.get(),
                                        self.var_ece_4th_monday_time1.get(),
                                        self.var_ece_4th_monday_ece_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_ece_4th_monday_ece_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_monday_ece_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from ece_4th_monday_time_table_database where ece_4th_monday_subject=%s",(self.var_ece_4th_monday_ece_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from ece_4th_monday_time_table_database where ece_4th_monday_subject=%s',(self.var_ece_4th_monday_ece_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_ece_4th_monday_faculty_serch.set("")
                        self.var_ece_4th_monday_number_of_class1.set("")
                        self.var_ece_4th_monday_time1.set("")
                        self.var_ece_4th_monday_ece_4thmistry_cycle_subject1.set("")
                        self.var_ece_4th_monday_ece_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def ece_4th_monday_time_table_get(ev):
                        monday_ece_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ece_4th_monday_time_table.focus()
                        content1=self.ece_4th_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ece_4th_monday_number_of_class1.set(row1[2])
                        self.var_ece_4th_monday_time1.set(row1[3])
                        self.var_ece_4th_monday_ece_4thmistry_cycle_subject1.set(row1[4])
                        self.var_ece_4th_monday_ece_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    
                    self.monday_ece_4th_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_ece_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_ece_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_ece_4th_time_table_data_frame,orient=VERTICAL)
                    self.ece_4th_monday_time_table=ttk.Treeview(self.monday_ece_4th_time_table_data_frame,columns=('cid','day1','ece_4th_monday_total_number_of_class','ece_4th_monday_time','ece_4th_monday_subject','ece_4th_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ece_4th_monday_time_table.xview)
                    scrolly.configure(command=self.ece_4th_monday_time_table.yview)

                    self.ece_4th_monday_time_table.heading('cid',text='Serial No')
                    self.ece_4th_monday_time_table.heading('day1',text='Day')
                    self.ece_4th_monday_time_table.heading('ece_4th_monday_total_number_of_class',text='Totel class')
                    self.ece_4th_monday_time_table.heading('ece_4th_monday_time',text='class time')
                    self.ece_4th_monday_time_table.heading('ece_4th_monday_subject',text='Subject')
                    self.ece_4th_monday_time_table.heading('ece_4th_monday_faculty',text='Faculty')

                    self.ece_4th_monday_time_table.column('cid',width=100)
                    self.ece_4th_monday_time_table.column('day1',width=150)
                    self.ece_4th_monday_time_table.column('ece_4th_monday_total_number_of_class',width=100)
                    self.ece_4th_monday_time_table.column('ece_4th_monday_time',width=150)
                    self.ece_4th_monday_time_table.column('ece_4th_monday_subject',width=150)
                    self.ece_4th_monday_time_table.column('ece_4th_monday_faculty',width=150)

                    self.ece_4th_monday_time_table['show']='headings'

                    self.ece_4th_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.ece_4th_monday_time_table.bind('<ButtonRelease-1>',ece_4th_monday_time_table_get)

    
                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_ece_4th_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_ece_4th_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ece_4th_subject_list=[]
                    self.fetch_ece_4th_faculty_subject()
                    monday_ece_4thmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_ece_4th_monday_ece_4thmistry_cycle_subject1,state='readonly',values=self.faculty_ece_4th_subject_list)
                    monday_ece_4thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ece_4th_name_list=[]
                    self.fetch_ece_4th_faculty_name()
                    monday_ece_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_ece_4th_monday_ece_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ece_4th_name_list)
                    monday_ece_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ece_4th_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_ece_4th_monday_faculty_serch)
                    ece_4th_faculty_serch1.place(x=800,y=25)
                    ece_4th_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=ece_4th_faculty_serch)
                    ece_4th_faculty_serch1_button.place(x=937,y=22)
                    ece_4th_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    ece_4th_add_database.place(x=10,y=140)

                    ece_4th_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    ece_4th_update_database.place(x=10,y=170)

                    ece_4th_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    ece_4th_delete_database.place(x=10,y=200)

                    ece_4th_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    ece_4th_clear_database.place(x=10,y=230)
###############################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Communication_Engineering':
                if self.var_day_select.get() == 'Thuesday':
   
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ece_4th_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_ece_4th_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into ece_4th_thuesday_time_table_database(day1,ece_4th_thuesday_total_number_of_class,ece_4th_thuesday_time,ece_4th_thuesday_subject,ece_4th_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ece_4th_thuesday_number_of_class2.get(),
                                            self.var_ece_4th_thuesday_time1.get(),
                                            self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject1.get(),
                                            self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_4th_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.ece_4th_thuesday_time_table.delete(*self.ece_4th_thuesday_time_table.get_children())
                            for row in rows:
                                self.ece_4th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def ece_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from ece_4th_thuesday_time_table_database where ece_4th_thuesday_subject LIKE '%{self.var_ece_4th_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ece_4th_thuesday_time_table.delete(*self.ece_4th_thuesday_time_table.get_children())
                                for row in rows:
                                    self.ece_4th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from ece_4th_thuesday_time_table_database where ece_4th_thuesday_subject=%s",(self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update ece_4th_thuesday_time_table_database set ece_4th_thuesday_total_number_of_class=%s,ece_4th_thuesday_time=%s,ece_4th_thuesday_faculty=%s where ece_4th_thuesday_subject=%s",(
                                        
                                        self.var_ece_4th_thuesday_number_of_class2.get(),
                                        self.var_ece_4th_thuesday_time1.get(),
                                        self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from ece_4th_thuesday_time_table_database where ece_4th_thuesday_subject=%s",(self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from ece_4th_thuesday_time_table_database where ece_4th_thuesday_subject=%s',(self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_ece_4th_thuesday_faculty_serch.set("")
                        self.var_ece_4th_thuesday_number_of_class2.set("")
                        self.var_ece_4th_thuesday_time1.set("")
                        self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject1.set("")
                        self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def ece_4th_thuesday_time_table_get(ev):
                        thuesday_ece_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ece_4th_thuesday_time_table.focus()
                        content1=self.ece_4th_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ece_4th_thuesday_number_of_class2.set(row1[2])
                        self.var_ece_4th_thuesday_time1.set(row1[3])
                        self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject1.set(row1[4])
                        self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    
                    self.thuesday_ece_4th_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_ece_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_ece_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_ece_4th_time_table_data_frame,orient=VERTICAL)
                    self.ece_4th_thuesday_time_table=ttk.Treeview(self.thuesday_ece_4th_time_table_data_frame,columns=('cid','day1','ece_4th_thuesday_total_number_of_class','ece_4th_thuesday_time','ece_4th_thuesday_subject','ece_4th_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ece_4th_thuesday_time_table.xview)
                    scrolly.configure(command=self.ece_4th_thuesday_time_table.yview)

                    self.ece_4th_thuesday_time_table.heading('cid',text='Serial No')
                    self.ece_4th_thuesday_time_table.heading('day1',text='Day')
                    self.ece_4th_thuesday_time_table.heading('ece_4th_thuesday_total_number_of_class',text='Totel class')
                    self.ece_4th_thuesday_time_table.heading('ece_4th_thuesday_time',text='class time')
                    self.ece_4th_thuesday_time_table.heading('ece_4th_thuesday_subject',text='Subject')
                    self.ece_4th_thuesday_time_table.heading('ece_4th_thuesday_faculty',text='Faculty')

                    self.ece_4th_thuesday_time_table.column('cid',width=100)
                    self.ece_4th_thuesday_time_table.column('day1',width=150)
                    self.ece_4th_thuesday_time_table.column('ece_4th_thuesday_total_number_of_class',width=100)
                    self.ece_4th_thuesday_time_table.column('ece_4th_thuesday_time',width=150)
                    self.ece_4th_thuesday_time_table.column('ece_4th_thuesday_subject',width=150)
                    self.ece_4th_thuesday_time_table.column('ece_4th_thuesday_faculty',width=150)

                    self.ece_4th_thuesday_time_table['show']='headings'

                    self.ece_4th_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.ece_4th_thuesday_time_table.bind('<ButtonRelease-1>',ece_4th_thuesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_ece_4th_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_ece_4th_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ece_4th_subject_list=[]
                    self.fetch_ece_4th_faculty_subject()
                    thuesday_ece_4thmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject1,state='readonly',values=self.faculty_ece_4th_subject_list)
                    thuesday_ece_4thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ece_4th_name_list=[]
                    self.fetch_ece_4th_faculty_name()
                    thuesday_ece_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_ece_4th_thuesday_ece_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ece_4th_name_list)
                    thuesday_ece_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ece_4th_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_ece_4th_thuesday_faculty_serch)
                    ece_4th_faculty_serch1.place(x=800,y=25)
                    ece_4th_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=ece_4th_faculty_serch)
                    ece_4th_faculty_serch1_button.place(x=937,y=22)
                    ece_4th_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    ece_4th_add_database.place(x=10,y=140)

                    ece_4th_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    ece_4th_update_database.place(x=10,y=170)

                    ece_4th_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    ece_4th_delete_database.place(x=10,y=200)

                    ece_4th_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    ece_4th_clear_database.place(x=10,y=230)

        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Communication_Engineering':
                if self.var_day_select.get() == 'Wednesday':
                

                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ece_4th_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_ece_4th_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into ece_4th_wednesday_time_table_database(day1,ece_4th_wednesday_total_number_of_class,ece_4th_wednesday_time,ece_4th_wednesday_subject,ece_4th_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ece_4th_wednesday_number_of_class2.get(),
                                            self.var_ece_4th_wednesday_time1.get(),
                                            self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject1.get(),
                                            self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_4th_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.ece_4th_wednesday_time_table.delete(*self.ece_4th_wednesday_time_table.get_children())
                            for row in rows:
                                self.ece_4th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def ece_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from ece_4th_wednesday_time_table_database where ece_4th_wednesday_subject LIKE '%{self.var_ece_4th_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ece_4th_wednesday_time_table.delete(*self.ece_4th_wednesday_time_table.get_children())
                                for row in rows:
                                    self.ece_4th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from ece_4th_wednesday_time_table_database where ece_4th_wednesday_subject=%s",(self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update ece_4th_wednesday_time_table_database set ece_4th_wednesday_total_number_of_class=%s,ece_4th_wednesday_time=%s,ece_4th_wednesday_faculty=%s where ece_4th_wednesday_subject=%s",(
                                        
                                        self.var_ece_4th_wednesday_number_of_class2.get(),
                                        self.var_ece_4th_wednesday_time1.get(),
                                        self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from ece_4th_wednesday_time_table_database where ece_4th_wednesday_subject=%s",(self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from ece_4th_wednesday_time_table_database where ece_4th_wednesday_subject=%s',(self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_ece_4th_wednesday_faculty_serch.set("")
                        self.var_ece_4th_wednesday_number_of_class2.set("")
                        self.var_ece_4th_wednesday_time1.set("")
                        self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject1.set("")
                        self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def ece_4th_wednesday_time_table_get(ev):
                        wednesday_ece_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ece_4th_wednesday_time_table.focus()
                        content1=self.ece_4th_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ece_4th_wednesday_number_of_class2.set(row1[2])
                        self.var_ece_4th_wednesday_time1.set(row1[3])
                        self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject1.set(row1[4])
                        self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    
                    self.wednesday_ece_4th_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_ece_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_ece_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_ece_4th_time_table_data_frame,orient=VERTICAL)
                    self.ece_4th_wednesday_time_table=ttk.Treeview(self.wednesday_ece_4th_time_table_data_frame,columns=('cid','day1','ece_4th_wednesday_total_number_of_class','ece_4th_wednesday_time','ece_4th_wednesday_subject','ece_4th_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ece_4th_wednesday_time_table.xview)
                    scrolly.configure(command=self.ece_4th_wednesday_time_table.yview)

                    self.ece_4th_wednesday_time_table.heading('cid',text='Serial No')
                    self.ece_4th_wednesday_time_table.heading('day1',text='Day')
                    self.ece_4th_wednesday_time_table.heading('ece_4th_wednesday_total_number_of_class',text='Totel class')
                    self.ece_4th_wednesday_time_table.heading('ece_4th_wednesday_time',text='class time')
                    self.ece_4th_wednesday_time_table.heading('ece_4th_wednesday_subject',text='Subject')
                    self.ece_4th_wednesday_time_table.heading('ece_4th_wednesday_faculty',text='Faculty')

                    self.ece_4th_wednesday_time_table.column('cid',width=100)
                    self.ece_4th_wednesday_time_table.column('day1',width=150)
                    self.ece_4th_wednesday_time_table.column('ece_4th_wednesday_total_number_of_class',width=100)
                    self.ece_4th_wednesday_time_table.column('ece_4th_wednesday_time',width=150)
                    self.ece_4th_wednesday_time_table.column('ece_4th_wednesday_subject',width=150)
                    self.ece_4th_wednesday_time_table.column('ece_4th_wednesday_faculty',width=150)

                    self.ece_4th_wednesday_time_table['show']='headings'

                    self.ece_4th_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.ece_4th_wednesday_time_table.bind('<ButtonRelease-1>',ece_4th_wednesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_ece_4th_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_ece_4th_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ece_4th_subject_list=[]
                    self.fetch_ece_4th_faculty_subject()
                    wednesday_ece_4thmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject1,state='readonly',values=self.faculty_ece_4th_subject_list)
                    wednesday_ece_4thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ece_4th_name_list=[]
                    self.fetch_ece_4th_faculty_name()
                    wednesday_ece_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_ece_4th_wednesday_ece_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ece_4th_name_list)
                    wednesday_ece_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ece_4th_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_ece_4th_wednesday_faculty_serch)
                    ece_4th_faculty_serch1.place(x=800,y=25)
                    ece_4th_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=ece_4th_faculty_serch)
                    ece_4th_faculty_serch1_button.place(x=937,y=22)
                    ece_4th_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    ece_4th_add_database.place(x=10,y=140)

                    ece_4th_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    ece_4th_update_database.place(x=10,y=170)

                    ece_4th_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    ece_4th_delete_database.place(x=10,y=200)

                    ece_4th_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    ece_4th_clear_database.place(x=10,y=230)

###########################################################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Communication_Engineering':
                if self.var_day_select.get() == 'Thursday':
                
                  
                    #print('this time table is for ece_4thmistry cycle in civil engineering mondy')
                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ece_4th_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_ece_4th_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_ece_4th_thursday_ece_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_ece_4th_thursday_ece_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into ece_4th_thursday_time_table_database(day1,ece_4th_thursday_total_number_of_class,ece_4th_thursday_time,ece_4th_thursday_subject,ece_4th_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ece_4th_thursday_number_of_class2.get(),
                                            self.var_ece_4th_thursday_time1.get(),
                                            self.var_ece_4th_thursday_ece_4thmistry_cycle_subject1.get(),
                                            self.var_ece_4th_thursday_ece_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_4th_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.ece_4th_thursday_time_table.delete(*self.ece_4th_thursday_time_table.get_children())
                            for row in rows:
                                self.ece_4th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def ece_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from ece_4th_thursday_time_table_database where ece_4th_thursday_subject LIKE '%{self.var_ece_4th_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ece_4th_thursday_time_table.delete(*self.ece_4th_thursday_time_table.get_children())
                                for row in rows:
                                    self.ece_4th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_thursday_ece_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from ece_4th_thursday_time_table_database where ece_4th_thursday_subject=%s",(self.var_ece_4th_thursday_ece_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update ece_4th_thursday_time_table_database set ece_4th_thursday_total_number_of_class=%s,ece_4th_thursday_time=%s,ece_4th_thursday_faculty=%s where ece_4th_thursday_subject=%s",(
                                        
                                        self.var_ece_4th_thursday_number_of_class2.get(),
                                        self.var_ece_4th_thursday_time1.get(),
                                        self.var_ece_4th_thursday_ece_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_ece_4th_thursday_ece_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_thursday_ece_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from ece_4th_thursday_time_table_database where ece_4th_thursday_subject=%s",(self.var_ece_4th_thursday_ece_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from ece_4th_thursday_time_table_database where ece_4th_thursday_subject=%s',(self.var_ece_4th_thursday_ece_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_ece_4th_thursday_faculty_serch.set("")
                        self.var_ece_4th_thursday_number_of_class2.set("")
                        self.var_ece_4th_thursday_time1.set("")
                        self.var_ece_4th_thursday_ece_4thmistry_cycle_subject1.set("")
                        self.var_ece_4th_thursday_ece_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def ece_4th_thursday_time_table_get(ev):
                        thursday_ece_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ece_4th_thursday_time_table.focus()
                        content1=self.ece_4th_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ece_4th_thursday_number_of_class2.set(row1[2])
                        self.var_ece_4th_thursday_time1.set(row1[3])
                        self.var_ece_4th_thursday_ece_4thmistry_cycle_subject1.set(row1[4])
                        self.var_ece_4th_thursday_ece_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    
                    self.thursday_ece_4th_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_ece_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_ece_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_ece_4th_time_table_data_frame,orient=VERTICAL)
                    self.ece_4th_thursday_time_table=ttk.Treeview(self.thursday_ece_4th_time_table_data_frame,columns=('cid','day1','ece_4th_thursday_total_number_of_class','ece_4th_thursday_time','ece_4th_thursday_subject','ece_4th_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ece_4th_thursday_time_table.xview)
                    scrolly.configure(command=self.ece_4th_thursday_time_table.yview)

                    self.ece_4th_thursday_time_table.heading('cid',text='Serial No')
                    self.ece_4th_thursday_time_table.heading('day1',text='Day')
                    self.ece_4th_thursday_time_table.heading('ece_4th_thursday_total_number_of_class',text='Totel class')
                    self.ece_4th_thursday_time_table.heading('ece_4th_thursday_time',text='class time')
                    self.ece_4th_thursday_time_table.heading('ece_4th_thursday_subject',text='Subject')
                    self.ece_4th_thursday_time_table.heading('ece_4th_thursday_faculty',text='Faculty')

                    self.ece_4th_thursday_time_table.column('cid',width=100)
                    self.ece_4th_thursday_time_table.column('day1',width=150)
                    self.ece_4th_thursday_time_table.column('ece_4th_thursday_total_number_of_class',width=100)
                    self.ece_4th_thursday_time_table.column('ece_4th_thursday_time',width=150)
                    self.ece_4th_thursday_time_table.column('ece_4th_thursday_subject',width=150)
                    self.ece_4th_thursday_time_table.column('ece_4th_thursday_faculty',width=150)

                    self.ece_4th_thursday_time_table['show']='headings'

                    self.ece_4th_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.ece_4th_thursday_time_table.bind('<ButtonRelease-1>',ece_4th_thursday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_ece_4th_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_ece_4th_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ece_4th_subject_list=[]
                    self.fetch_ece_4th_faculty_subject()
                    thursday_ece_4thmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_ece_4th_thursday_ece_4thmistry_cycle_subject1,state='readonly',values=self.faculty_ece_4th_subject_list)
                    thursday_ece_4thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ece_4th_name_list=[]
                    self.fetch_ece_4th_faculty_name()
                    thursday_ece_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_ece_4th_thursday_ece_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ece_4th_name_list)
                    thursday_ece_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ece_4th_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_ece_4th_thursday_faculty_serch)
                    ece_4th_faculty_serch1.place(x=800,y=25)
                    ece_4th_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=ece_4th_faculty_serch)
                    ece_4th_faculty_serch1_button.place(x=937,y=22)
                    ece_4th_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    ece_4th_add_database.place(x=10,y=140)

                    ece_4th_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    ece_4th_update_database.place(x=10,y=170)

                    ece_4th_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    ece_4th_delete_database.place(x=10,y=200)

                    ece_4th_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    ece_4th_clear_database.place(x=10,y=230)

#########################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Communication_Engineering':
                if self.var_day_select.get() == 'Friday':
                

                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ece_4th_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_ece_4th_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_ece_4th_friday_ece_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_ece_4th_friday_ece_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into ece_4th_friday_time_table_database(day1,ece_4th_friday_total_number_of_class,ece_4th_friday_time,ece_4th_friday_subject,ece_4th_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ece_4th_friday_number_of_class2.get(),
                                            self.var_ece_4th_friday_time1.get(),
                                            self.var_ece_4th_friday_ece_4thmistry_cycle_subject1.get(),
                                            self.var_ece_4th_friday_ece_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_4th_friday_time_table_database')
                            rows=cur.fetchall()
                            self.ece_4th_friday_time_table.delete(*self.ece_4th_friday_time_table.get_children())
                            for row in rows:
                                self.ece_4th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def ece_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from ece_4th_friday_time_table_database where ece_4th_friday_subject LIKE '%{self.var_ece_4th_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ece_4th_friday_time_table.delete(*self.ece_4th_friday_time_table.get_children())
                                for row in rows:
                                    self.ece_4th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_friday_ece_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from ece_4th_friday_time_table_database where ece_4th_friday_subject=%s",(self.var_ece_4th_friday_ece_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update ece_4th_friday_time_table_database set ece_4th_friday_total_number_of_class=%s,ece_4th_friday_time=%s,ece_4th_friday_faculty=%s where ece_4th_friday_subject=%s",(
                                        
                                        self.var_ece_4th_friday_number_of_class2.get(),
                                        self.var_ece_4th_friday_time1.get(),
                                        self.var_ece_4th_friday_ece_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_ece_4th_friday_ece_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_friday_ece_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from ece_4th_friday_time_table_database where ece_4th_friday_subject=%s",(self.var_ece_4th_friday_ece_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from ece_4th_friday_time_table_database where ece_4th_friday_subject=%s',(self.var_ece_4th_friday_ece_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_ece_4th_friday_faculty_serch.set("")
                        self.var_ece_4th_friday_number_of_class2.set("")
                        self.var_ece_4th_friday_time1.set("")
                        self.var_ece_4th_friday_ece_4thmistry_cycle_subject1.set("")
                        self.var_ece_4th_friday_ece_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def ece_4th_friday_time_table_get(ev):
                        friday_ece_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ece_4th_friday_time_table.focus()
                        content1=self.ece_4th_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ece_4th_friday_number_of_class2.set(row1[2])
                        self.var_ece_4th_friday_time1.set(row1[3])
                        self.var_ece_4th_friday_ece_4thmistry_cycle_subject1.set(row1[4])
                        self.var_ece_4th_friday_ece_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.friday_ece_4th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_ece_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_ece_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_ece_4th_time_table_data_frame,orient=VERTICAL)
                    self.ece_4th_friday_time_table=ttk.Treeview(self.friday_ece_4th_time_table_data_frame,columns=('cid','day1','ece_4th_friday_total_number_of_class','ece_4th_friday_time','ece_4th_friday_subject','ece_4th_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ece_4th_friday_time_table.xview)
                    scrolly.configure(command=self.ece_4th_friday_time_table.yview)

                    self.ece_4th_friday_time_table.heading('cid',text='Serial No')
                    self.ece_4th_friday_time_table.heading('day1',text='Day')
                    self.ece_4th_friday_time_table.heading('ece_4th_friday_total_number_of_class',text='Totel class')
                    self.ece_4th_friday_time_table.heading('ece_4th_friday_time',text='class time')
                    self.ece_4th_friday_time_table.heading('ece_4th_friday_subject',text='Subject')
                    self.ece_4th_friday_time_table.heading('ece_4th_friday_faculty',text='Faculty')

                    self.ece_4th_friday_time_table.column('cid',width=100)
                    self.ece_4th_friday_time_table.column('day1',width=150)
                    self.ece_4th_friday_time_table.column('ece_4th_friday_total_number_of_class',width=100)
                    self.ece_4th_friday_time_table.column('ece_4th_friday_time',width=150)
                    self.ece_4th_friday_time_table.column('ece_4th_friday_subject',width=150)
                    self.ece_4th_friday_time_table.column('ece_4th_friday_faculty',width=150)

                    self.ece_4th_friday_time_table['show']='headings'

                    self.ece_4th_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.ece_4th_friday_time_table.bind('<ButtonRelease-1>',ece_4th_friday_time_table_get)
                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_ece_4th_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_ece_4th_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ece_4th_subject_list=[]
                    self.fetch_ece_4th_faculty_subject()
                    friday_ece_4thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ece_4th_friday_ece_4thmistry_cycle_subject1,state='readonly',values=self.faculty_ece_4th_subject_list)
                    friday_ece_4thmistry_cycle_subject1.place(x=400,y=25) 
               
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ece_4th_name_list=[]
                    self.fetch_ece_4th_faculty_name()
                    friday_ece_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ece_4th_friday_ece_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ece_4th_name_list)
                    friday_ece_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ece_4th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_ece_4th_friday_faculty_serch)
                    ece_4th_faculty_serch1.place(x=800,y=25)
                    ece_4th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=ece_4th_faculty_serch)
                    ece_4th_faculty_serch1_button.place(x=937,y=22)
                    ece_4th_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    ece_4th_add_database.place(x=10,y=140)

                    ece_4th_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    ece_4th_update_database.place(x=10,y=170)

                    ece_4th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    ece_4th_delete_database.place(x=10,y=200)

                    ece_4th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    ece_4th_clear_database.place(x=10,y=230)

#########################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Communication_Engineering':
                if self.var_day_select.get() == 'Saturday':
                
          
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ece_4th_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_ece_4th_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_ece_4th_saturday_ece_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_ece_4th_saturday_ece_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into ece_4th_saturday_time_table_database(day1,ece_4th_saturday_total_number_of_class,ece_4th_saturday_time,ece_4th_saturday_subject,ece_4th_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ece_4th_saturday_number_of_class2.get(),
                                            self.var_ece_4th_saturday_time1.get(),
                                            self.var_ece_4th_saturday_ece_4thmistry_cycle_subject1.get(),
                                            self.var_ece_4th_saturday_ece_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_4th_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.ece_4th_saturday_time_table.delete(*self.ece_4th_saturday_time_table.get_children())
                            for row in rows:
                                self.ece_4th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def ece_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from ece_4th_saturday_time_table_database where ece_4th_saturday_subject LIKE '%{self.var_ece_4th_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ece_4th_saturday_time_table.delete(*self.ece_4th_saturday_time_table.get_children())
                                for row in rows:
                                    self.ece_4th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_saturday_ece_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from ece_4th_saturday_time_table_database where ece_4th_saturday_subject=%s",(self.var_ece_4th_saturday_ece_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update ece_4th_saturday_time_table_database set ece_4th_saturday_total_number_of_class=%s,ece_4th_saturday_time=%s,ece_4th_saturday_faculty=%s where ece_4th_saturday_subject=%s",(
                                        
                                        self.var_ece_4th_saturday_number_of_class2.get(),
                                        self.var_ece_4th_saturday_time1.get(),
                                        self.var_ece_4th_saturday_ece_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_ece_4th_saturday_ece_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_4th_saturday_ece_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from ece_4th_saturday_time_table_database where ece_4th_saturday_subject=%s",(self.var_ece_4th_saturday_ece_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from ece_4th_saturday_time_table_database where ece_4th_saturday_subject=%s',(self.var_ece_4th_saturday_ece_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_ece_4th_saturday_faculty_serch.set("")
                        self.var_ece_4th_saturday_number_of_class2.set("")
                        self.var_ece_4th_saturday_time1.set("")
                        self.var_ece_4th_saturday_ece_4thmistry_cycle_subject1.set("")
                        self.var_ece_4th_saturday_ece_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def ece_4th_saturday_time_table_get(ev):
                        saturday_ece_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ece_4th_saturday_time_table.focus()
                        content1=self.ece_4th_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ece_4th_saturday_number_of_class2.set(row1[2])
                        self.var_ece_4th_saturday_time1.set(row1[3])
                        self.var_ece_4th_saturday_ece_4thmistry_cycle_subject1.set(row1[4])
                        self.var_ece_4th_saturday_ece_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    self.saturday_ece_4th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_ece_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_ece_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_ece_4th_time_table_data_frame,orient=VERTICAL)
                    self.ece_4th_saturday_time_table=ttk.Treeview(self.saturday_ece_4th_time_table_data_frame,columns=('cid','day1','ece_4th_saturday_total_number_of_class','ece_4th_saturday_time','ece_4th_saturday_subject','ece_4th_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ece_4th_saturday_time_table.xview)
                    scrolly.configure(command=self.ece_4th_saturday_time_table.yview)

                    self.ece_4th_saturday_time_table.heading('cid',text='Serial No')
                    self.ece_4th_saturday_time_table.heading('day1',text='Day')
                    self.ece_4th_saturday_time_table.heading('ece_4th_saturday_total_number_of_class',text='Totel class')
                    self.ece_4th_saturday_time_table.heading('ece_4th_saturday_time',text='class time')
                    self.ece_4th_saturday_time_table.heading('ece_4th_saturday_subject',text='Subject')
                    self.ece_4th_saturday_time_table.heading('ece_4th_saturday_faculty',text='Faculty')

                    self.ece_4th_saturday_time_table.column('cid',width=100)
                    self.ece_4th_saturday_time_table.column('day1',width=150)
                    self.ece_4th_saturday_time_table.column('ece_4th_saturday_total_number_of_class',width=100)
                    self.ece_4th_saturday_time_table.column('ece_4th_saturday_time',width=150)
                    self.ece_4th_saturday_time_table.column('ece_4th_saturday_subject',width=150)
                    self.ece_4th_saturday_time_table.column('ece_4th_saturday_faculty',width=150)

                    self.ece_4th_saturday_time_table['show']='headings'

                    self.ece_4th_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.ece_4th_saturday_time_table.bind('<ButtonRelease-1>',ece_4th_saturday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_ece_4th_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_ece_4th_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ece_4th_subject_list=[]
                    self.fetch_ece_4th_faculty_subject()
                    saturday_ece_4thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ece_4th_saturday_ece_4thmistry_cycle_subject1,state='readonly',values=self.faculty_ece_4th_subject_list)
                    saturday_ece_4thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ece_4th_name_list=[]
                    self.fetch_ece_4th_faculty_name()
                    saturday_ece_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ece_4th_saturday_ece_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ece_4th_name_list)
                    saturday_ece_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ece_4th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_ece_4th_saturday_faculty_serch)
                    ece_4th_faculty_serch1.place(x=800,y=25)
                    ece_4th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=ece_4th_faculty_serch)
                    ece_4th_faculty_serch1_button.place(x=937,y=22)
                    ece_4th_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    ece_4th_add_database.place(x=10,y=140)

                    ece_4th_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    ece_4th_update_database.place(x=10,y=170)

                    ece_4th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    ece_4th_delete_database.place(x=10,y=200)

                    ece_4th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    ece_4th_clear_database.place(x=10,y=230)


        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Computer_Science_Engineering':
                if self.var_day_select.get() == 'Monday':

                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                   
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_cs_4th_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_cs_4th_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_cs_4th_monday_cs_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_cs_4th_monday_cs_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into cs_4th_monday_time_table_database(day1,cs_4th_monday_total_number_of_class,cs_4th_monday_time,cs_4th_monday_subject,cs_4th_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_cs_4th_monday_number_of_class1.get(),
                                            self.var_cs_4th_monday_time1.get(),
                                            self.var_cs_4th_monday_cs_4thmistry_cycle_subject1.get(),
                                            self.var_cs_4th_monday_cs_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_4th_monday_time_table_database')
                            rows=cur.fetchall()
                            self.cs_4th_monday_time_table.delete(*self.cs_4th_monday_time_table.get_children())
                            for row in rows:
                                self.cs_4th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def cs_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from cs_4th_monday_time_table_database where cs_4th_monday_subject LIKE '%{self.var_cs_4th_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.cs_4th_monday_time_table.delete(*self.cs_4th_monday_time_table.get_children())
                                for row in rows:
                                    self.cs_4th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_monday_cs_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from cs_4th_monday_time_table_database where cs_4th_monday_subject=%s",(self.var_cs_4th_monday_cs_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update cs_4th_monday_time_table_database set cs_4th_monday_total_number_of_class=%s,cs_4th_monday_time=%s,cs_4th_monday_faculty=%s where cs_4th_monday_subject=%s",(
                                        
                                        self.var_cs_4th_monday_number_of_class1.get(),
                                        self.var_cs_4th_monday_time1.get(),
                                        self.var_cs_4th_monday_cs_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_cs_4th_monday_cs_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_monday_cs_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from cs_4th_monday_time_table_database where cs_4th_monday_subject=%s",(self.var_cs_4th_monday_cs_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from cs_4th_monday_time_table_database where cs_4th_monday_subject=%s',(self.var_cs_4th_monday_cs_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_cs_4th_monday_faculty_serch.set("")
                        self.var_cs_4th_monday_number_of_class1.set("")
                        self.var_cs_4th_monday_time1.set("")
                        self.var_cs_4th_monday_cs_4thmistry_cycle_subject1.set("")
                        self.var_cs_4th_monday_cs_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def cs_4th_monday_time_table_get(ev):
                        monday_cs_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.cs_4th_monday_time_table.focus()
                        content1=self.cs_4th_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_cs_4th_monday_number_of_class1.set(row1[2])
                        self.var_cs_4th_monday_time1.set(row1[3])
                        self.var_cs_4th_monday_cs_4thmistry_cycle_subject1.set(row1[4])
                        self.var_cs_4th_monday_cs_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    
                    self.monday_cs_4th_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_cs_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_cs_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_cs_4th_time_table_data_frame,orient=VERTICAL)
                    self.cs_4th_monday_time_table=ttk.Treeview(self.monday_cs_4th_time_table_data_frame,columns=('cid','day1','cs_4th_monday_total_number_of_class','cs_4th_monday_time','cs_4th_monday_subject','cs_4th_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.cs_4th_monday_time_table.xview)
                    scrolly.configure(command=self.cs_4th_monday_time_table.yview)

                    self.cs_4th_monday_time_table.heading('cid',text='Serial No')
                    self.cs_4th_monday_time_table.heading('day1',text='Day')
                    self.cs_4th_monday_time_table.heading('cs_4th_monday_total_number_of_class',text='Totel class')
                    self.cs_4th_monday_time_table.heading('cs_4th_monday_time',text='class time')
                    self.cs_4th_monday_time_table.heading('cs_4th_monday_subject',text='Subject')
                    self.cs_4th_monday_time_table.heading('cs_4th_monday_faculty',text='Faculty')

                    self.cs_4th_monday_time_table.column('cid',width=100)
                    self.cs_4th_monday_time_table.column('day1',width=150)
                    self.cs_4th_monday_time_table.column('cs_4th_monday_total_number_of_class',width=100)
                    self.cs_4th_monday_time_table.column('cs_4th_monday_time',width=150)
                    self.cs_4th_monday_time_table.column('cs_4th_monday_subject',width=150)
                    self.cs_4th_monday_time_table.column('cs_4th_monday_faculty',width=150)

                    self.cs_4th_monday_time_table['show']='headings'

                    self.cs_4th_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.cs_4th_monday_time_table.bind('<ButtonRelease-1>',cs_4th_monday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_cs_4th_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_cs_4th_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_cs_4th_subject_list=[]
                    self.fetch_cs_4th_faculty_subject()
                    monday_cs_4thmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_cs_4th_monday_cs_4thmistry_cycle_subject1,state='readonly',values=self.faculty_cs_4th_subject_list)
                    monday_cs_4thmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_cs_4th_name_list=[]
                    self.fetch_cs_4th_faculty_name()
                    monday_cs_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_cs_4th_monday_cs_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_cs_4th_name_list)
                    monday_cs_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    cs_4th_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_cs_4th_monday_faculty_serch)
                    cs_4th_faculty_serch1.place(x=800,y=25)
                    cs_4th_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=cs_4th_faculty_serch)
                    cs_4th_faculty_serch1_button.place(x=937,y=22)
                    cs_4th_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    cs_4th_add_database.place(x=10,y=140)

                    cs_4th_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    cs_4th_update_database.place(x=10,y=170)

                    cs_4th_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    cs_4th_delete_database.place(x=10,y=200)

                    cs_4th_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    cs_4th_clear_database.place(x=10,y=230)
#################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Computer_Science_Engineering':
                if self.var_day_select.get() == 'Thuesday':
                

                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_cs_4th_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_cs_4th_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into cs_4th_thuesday_time_table_database(day1,cs_4th_thuesday_total_number_of_class,cs_4th_thuesday_time,cs_4th_thuesday_subject,cs_4th_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_cs_4th_thuesday_number_of_class2.get(),
                                            self.var_cs_4th_thuesday_time1.get(),
                                            self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject1.get(),
                                            self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_4th_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.cs_4th_thuesday_time_table.delete(*self.cs_4th_thuesday_time_table.get_children())
                            for row in rows:
                                self.cs_4th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def cs_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from cs_4th_thuesday_time_table_database where cs_4th_thuesday_subject LIKE '%{self.var_cs_4th_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.cs_4th_thuesday_time_table.delete(*self.cs_4th_thuesday_time_table.get_children())
                                for row in rows:
                                    self.cs_4th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from cs_4th_thuesday_time_table_database where cs_4th_thuesday_subject=%s",(self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update cs_4th_thuesday_time_table_database set cs_4th_thuesday_total_number_of_class=%s,cs_4th_thuesday_time=%s,cs_4th_thuesday_faculty=%s where cs_4th_thuesday_subject=%s",(
                                        
                                        self.var_cs_4th_thuesday_number_of_class2.get(),
                                        self.var_cs_4th_thuesday_time1.get(),
                                        self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from cs_4th_thuesday_time_table_database where cs_4th_thuesday_subject=%s",(self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from cs_4th_thuesday_time_table_database where cs_4th_thuesday_subject=%s',(self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_cs_4th_thuesday_faculty_serch.set("")
                        self.var_cs_4th_thuesday_number_of_class2.set("")
                        self.var_cs_4th_thuesday_time1.set("")
                        self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject1.set("")
                        self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def cs_4th_thuesday_time_table_get(ev):
                        thuesday_cs_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.cs_4th_thuesday_time_table.focus()
                        content1=self.cs_4th_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_cs_4th_thuesday_number_of_class2.set(row1[2])
                        self.var_cs_4th_thuesday_time1.set(row1[3])
                        self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject1.set(row1[4])
                        self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    
                    self.thuesday_cs_4th_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_cs_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_cs_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_cs_4th_time_table_data_frame,orient=VERTICAL)
                    self.cs_4th_thuesday_time_table=ttk.Treeview(self.thuesday_cs_4th_time_table_data_frame,columns=('cid','day1','cs_4th_thuesday_total_number_of_class','cs_4th_thuesday_time','cs_4th_thuesday_subject','cs_4th_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.cs_4th_thuesday_time_table.xview)
                    scrolly.configure(command=self.cs_4th_thuesday_time_table.yview)

                    self.cs_4th_thuesday_time_table.heading('cid',text='Serial No')
                    self.cs_4th_thuesday_time_table.heading('day1',text='Day')
                    self.cs_4th_thuesday_time_table.heading('cs_4th_thuesday_total_number_of_class',text='Totel class')
                    self.cs_4th_thuesday_time_table.heading('cs_4th_thuesday_time',text='class time')
                    self.cs_4th_thuesday_time_table.heading('cs_4th_thuesday_subject',text='Subject')
                    self.cs_4th_thuesday_time_table.heading('cs_4th_thuesday_faculty',text='Faculty')

                    self.cs_4th_thuesday_time_table.column('cid',width=100)
                    self.cs_4th_thuesday_time_table.column('day1',width=150)
                    self.cs_4th_thuesday_time_table.column('cs_4th_thuesday_total_number_of_class',width=100)
                    self.cs_4th_thuesday_time_table.column('cs_4th_thuesday_time',width=150)
                    self.cs_4th_thuesday_time_table.column('cs_4th_thuesday_subject',width=150)
                    self.cs_4th_thuesday_time_table.column('cs_4th_thuesday_faculty',width=150)

                    self.cs_4th_thuesday_time_table['show']='headings'

                    self.cs_4th_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.cs_4th_thuesday_time_table.bind('<ButtonRelease-1>',cs_4th_thuesday_time_table_get)

 
                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_cs_4th_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_cs_4th_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_cs_4th_subject_list=[]
                    self.fetch_cs_4th_faculty_subject()
                    thuesday_cs_4thmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject1,state='readonly',values=self.faculty_cs_4th_subject_list)
                    thuesday_cs_4thmistry_cycle_subject1.place(x=400,y=25) 
       
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_cs_4th_name_list=[]
                    self.fetch_cs_4th_faculty_name()
                    thuesday_cs_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_cs_4th_thuesday_cs_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_cs_4th_name_list)
                    thuesday_cs_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    cs_4th_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_cs_4th_thuesday_faculty_serch)
                    cs_4th_faculty_serch1.place(x=800,y=25)
                    cs_4th_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=cs_4th_faculty_serch)
                    cs_4th_faculty_serch1_button.place(x=937,y=22)
                    cs_4th_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    cs_4th_add_database.place(x=10,y=140)

                    cs_4th_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    cs_4th_update_database.place(x=10,y=170)

                    cs_4th_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    cs_4th_delete_database.place(x=10,y=200)

                    cs_4th_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    cs_4th_clear_database.place(x=10,y=230)
#####################################################################################################################################################################

        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Computer_Science_Engineering':
                if self.var_day_select.get() == 'Wednesday':
                
 
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_cs_4th_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_cs_4th_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into cs_4th_wednesday_time_table_database(day1,cs_4th_wednesday_total_number_of_class,cs_4th_wednesday_time,cs_4th_wednesday_subject,cs_4th_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_cs_4th_wednesday_number_of_class2.get(),
                                            self.var_cs_4th_wednesday_time1.get(),
                                            self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject1.get(),
                                            self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_4th_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.cs_4th_wednesday_time_table.delete(*self.cs_4th_wednesday_time_table.get_children())
                            for row in rows:
                                self.cs_4th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def cs_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from cs_4th_wednesday_time_table_database where cs_4th_wednesday_subject LIKE '%{self.var_cs_4th_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.cs_4th_wednesday_time_table.delete(*self.cs_4th_wednesday_time_table.get_children())
                                for row in rows:
                                    self.cs_4th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from cs_4th_wednesday_time_table_database where cs_4th_wednesday_subject=%s",(self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update cs_4th_wednesday_time_table_database set cs_4th_wednesday_total_number_of_class=%s,cs_4th_wednesday_time=%s,cs_4th_wednesday_faculty=%s where cs_4th_wednesday_subject=%s",(
                                        
                                        self.var_cs_4th_wednesday_number_of_class2.get(),
                                        self.var_cs_4th_wednesday_time1.get(),
                                        self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from cs_4th_wednesday_time_table_database where cs_4th_wednesday_subject=%s",(self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from cs_4th_wednesday_time_table_database where cs_4th_wednesday_subject=%s',(self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_cs_4th_wednesday_faculty_serch.set("")
                        self.var_cs_4th_wednesday_number_of_class2.set("")
                        self.var_cs_4th_wednesday_time1.set("")
                        self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject1.set("")
                        self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def cs_4th_wednesday_time_table_get(ev):
                        wednesday_cs_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.cs_4th_wednesday_time_table.focus()
                        content1=self.cs_4th_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_cs_4th_wednesday_number_of_class2.set(row1[2])
                        self.var_cs_4th_wednesday_time1.set(row1[3])
                        self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject1.set(row1[4])
                        self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    
                    self.wednesday_cs_4th_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_cs_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_cs_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_cs_4th_time_table_data_frame,orient=VERTICAL)
                    self.cs_4th_wednesday_time_table=ttk.Treeview(self.wednesday_cs_4th_time_table_data_frame,columns=('cid','day1','cs_4th_wednesday_total_number_of_class','cs_4th_wednesday_time','cs_4th_wednesday_subject','cs_4th_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.cs_4th_wednesday_time_table.xview)
                    scrolly.configure(command=self.cs_4th_wednesday_time_table.yview)

                    self.cs_4th_wednesday_time_table.heading('cid',text='Serial No')
                    self.cs_4th_wednesday_time_table.heading('day1',text='Day')
                    self.cs_4th_wednesday_time_table.heading('cs_4th_wednesday_total_number_of_class',text='Totel class')
                    self.cs_4th_wednesday_time_table.heading('cs_4th_wednesday_time',text='class time')
                    self.cs_4th_wednesday_time_table.heading('cs_4th_wednesday_subject',text='Subject')
                    self.cs_4th_wednesday_time_table.heading('cs_4th_wednesday_faculty',text='Faculty')

                    self.cs_4th_wednesday_time_table.column('cid',width=100)
                    self.cs_4th_wednesday_time_table.column('day1',width=150)
                    self.cs_4th_wednesday_time_table.column('cs_4th_wednesday_total_number_of_class',width=100)
                    self.cs_4th_wednesday_time_table.column('cs_4th_wednesday_time',width=150)
                    self.cs_4th_wednesday_time_table.column('cs_4th_wednesday_subject',width=150)
                    self.cs_4th_wednesday_time_table.column('cs_4th_wednesday_faculty',width=150)

                    self.cs_4th_wednesday_time_table['show']='headings'

                    self.cs_4th_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.cs_4th_wednesday_time_table.bind('<ButtonRelease-1>',cs_4th_wednesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_cs_4th_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_cs_4th_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_cs_4th_subject_list=[]
                    self.fetch_cs_4th_faculty_subject()
                    wednesday_cs_4thmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject1,state='readonly',values=self.faculty_cs_4th_subject_list)
                    wednesday_cs_4thmistry_cycle_subject1.place(x=400,y=25) 
  
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_cs_4th_name_list=[]
                    self.fetch_cs_4th_faculty_name()
                    wednesday_cs_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_cs_4th_wednesday_cs_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_cs_4th_name_list)
                    wednesday_cs_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    cs_4th_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_cs_4th_wednesday_faculty_serch)
                    cs_4th_faculty_serch1.place(x=800,y=25)
                    cs_4th_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=cs_4th_faculty_serch)
                    cs_4th_faculty_serch1_button.place(x=937,y=22)
                    cs_4th_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    cs_4th_add_database.place(x=10,y=140)

                    cs_4th_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    cs_4th_update_database.place(x=10,y=170)

                    cs_4th_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    cs_4th_delete_database.place(x=10,y=200)

                    cs_4th_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    cs_4th_clear_database.place(x=10,y=230)

################################################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Computer_Science_Engineering':
                if self.var_day_select.get() == 'Thursday':
      
                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_cs_4th_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_cs_4th_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_cs_4th_thursday_cs_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_cs_4th_thursday_cs_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into cs_4th_thursday_time_table_database(day1,cs_4th_thursday_total_number_of_class,cs_4th_thursday_time,cs_4th_thursday_subject,cs_4th_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_cs_4th_thursday_number_of_class2.get(),
                                            self.var_cs_4th_thursday_time1.get(),
                                            self.var_cs_4th_thursday_cs_4thmistry_cycle_subject1.get(),
                                            self.var_cs_4th_thursday_cs_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_4th_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.cs_4th_thursday_time_table.delete(*self.cs_4th_thursday_time_table.get_children())
                            for row in rows:
                                self.cs_4th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def cs_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from cs_4th_thursday_time_table_database where cs_4th_thursday_subject LIKE '%{self.var_cs_4th_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.cs_4th_thursday_time_table.delete(*self.cs_4th_thursday_time_table.get_children())
                                for row in rows:
                                    self.cs_4th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_thursday_cs_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from cs_4th_thursday_time_table_database where cs_4th_thursday_subject=%s",(self.var_cs_4th_thursday_cs_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update cs_4th_thursday_time_table_database set cs_4th_thursday_total_number_of_class=%s,cs_4th_thursday_time=%s,cs_4th_thursday_faculty=%s where cs_4th_thursday_subject=%s",(
                                        
                                        self.var_cs_4th_thursday_number_of_class2.get(),
                                        self.var_cs_4th_thursday_time1.get(),
                                        self.var_cs_4th_thursday_cs_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_cs_4th_thursday_cs_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_thursday_cs_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from cs_4th_thursday_time_table_database where cs_4th_thursday_subject=%s",(self.var_cs_4th_thursday_cs_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from cs_4th_thursday_time_table_database where cs_4th_thursday_subject=%s',(self.var_cs_4th_thursday_cs_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_cs_4th_thursday_faculty_serch.set("")
                        self.var_cs_4th_thursday_number_of_class2.set("")
                        self.var_cs_4th_thursday_time1.set("")
                        self.var_cs_4th_thursday_cs_4thmistry_cycle_subject1.set("")
                        self.var_cs_4th_thursday_cs_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def cs_4th_thursday_time_table_get(ev):
                        thursday_cs_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.cs_4th_thursday_time_table.focus()
                        content1=self.cs_4th_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_cs_4th_thursday_number_of_class2.set(row1[2])
                        self.var_cs_4th_thursday_time1.set(row1[3])
                        self.var_cs_4th_thursday_cs_4thmistry_cycle_subject1.set(row1[4])
                        self.var_cs_4th_thursday_cs_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    
                    self.thursday_cs_4th_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_cs_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_cs_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_cs_4th_time_table_data_frame,orient=VERTICAL)
                    self.cs_4th_thursday_time_table=ttk.Treeview(self.thursday_cs_4th_time_table_data_frame,columns=('cid','day1','cs_4th_thursday_total_number_of_class','cs_4th_thursday_time','cs_4th_thursday_subject','cs_4th_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.cs_4th_thursday_time_table.xview)
                    scrolly.configure(command=self.cs_4th_thursday_time_table.yview)

                    self.cs_4th_thursday_time_table.heading('cid',text='Serial No')
                    self.cs_4th_thursday_time_table.heading('day1',text='Day')
                    self.cs_4th_thursday_time_table.heading('cs_4th_thursday_total_number_of_class',text='Totel class')
                    self.cs_4th_thursday_time_table.heading('cs_4th_thursday_time',text='class time')
                    self.cs_4th_thursday_time_table.heading('cs_4th_thursday_subject',text='Subject')
                    self.cs_4th_thursday_time_table.heading('cs_4th_thursday_faculty',text='Faculty')

                    self.cs_4th_thursday_time_table.column('cid',width=100)
                    self.cs_4th_thursday_time_table.column('day1',width=150)
                    self.cs_4th_thursday_time_table.column('cs_4th_thursday_total_number_of_class',width=100)
                    self.cs_4th_thursday_time_table.column('cs_4th_thursday_time',width=150)
                    self.cs_4th_thursday_time_table.column('cs_4th_thursday_subject',width=150)
                    self.cs_4th_thursday_time_table.column('cs_4th_thursday_faculty',width=150)

                    self.cs_4th_thursday_time_table['show']='headings'

                    self.cs_4th_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.cs_4th_thursday_time_table.bind('<ButtonRelease-1>',cs_4th_thursday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_cs_4th_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_cs_4th_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_cs_4th_subject_list=[]
                    self.fetch_cs_4th_faculty_subject()
                    thursday_cs_4thmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_cs_4th_thursday_cs_4thmistry_cycle_subject1,state='readonly',values=self.faculty_cs_4th_subject_list)
                    thursday_cs_4thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_cs_4th_name_list=[]
                    self.fetch_cs_4th_faculty_name()
                    thursday_cs_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_cs_4th_thursday_cs_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_cs_4th_name_list)
                    thursday_cs_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    cs_4th_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_cs_4th_thursday_faculty_serch)
                    cs_4th_faculty_serch1.place(x=800,y=25)
                    cs_4th_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=cs_4th_faculty_serch)
                    cs_4th_faculty_serch1_button.place(x=937,y=22)
                    cs_4th_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    cs_4th_add_database.place(x=10,y=140)

                    cs_4th_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    cs_4th_update_database.place(x=10,y=170)

                    cs_4th_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    cs_4th_delete_database.place(x=10,y=200)

                    cs_4th_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    cs_4th_clear_database.place(x=10,y=230)

###################################################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Computer_Science_Engineering':
                if self.var_day_select.get() == 'Friday':
  
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_cs_4th_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_cs_4th_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_cs_4th_friday_cs_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_cs_4th_friday_cs_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into cs_4th_friday_time_table_database(day1,cs_4th_friday_total_number_of_class,cs_4th_friday_time,cs_4th_friday_subject,cs_4th_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_cs_4th_friday_number_of_class2.get(),
                                            self.var_cs_4th_friday_time1.get(),
                                            self.var_cs_4th_friday_cs_4thmistry_cycle_subject1.get(),
                                            self.var_cs_4th_friday_cs_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_4th_friday_time_table_database')
                            rows=cur.fetchall()
                            self.cs_4th_friday_time_table.delete(*self.cs_4th_friday_time_table.get_children())
                            for row in rows:
                                self.cs_4th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def cs_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from cs_4th_friday_time_table_database where cs_4th_friday_subject LIKE '%{self.var_cs_4th_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.cs_4th_friday_time_table.delete(*self.cs_4th_friday_time_table.get_children())
                                for row in rows:
                                    self.cs_4th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_friday_cs_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from cs_4th_friday_time_table_database where cs_4th_friday_subject=%s",(self.var_cs_4th_friday_cs_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update cs_4th_friday_time_table_database set cs_4th_friday_total_number_of_class=%s,cs_4th_friday_time=%s,cs_4th_friday_faculty=%s where cs_4th_friday_subject=%s",(
                                        
                                        self.var_cs_4th_friday_number_of_class2.get(),
                                        self.var_cs_4th_friday_time1.get(),
                                        self.var_cs_4th_friday_cs_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_cs_4th_friday_cs_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_friday_cs_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from cs_4th_friday_time_table_database where cs_4th_friday_subject=%s",(self.var_cs_4th_friday_cs_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from cs_4th_friday_time_table_database where cs_4th_friday_subject=%s',(self.var_cs_4th_friday_cs_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_cs_4th_friday_faculty_serch.set("")
                        self.var_cs_4th_friday_number_of_class2.set("")
                        self.var_cs_4th_friday_time1.set("")
                        self.var_cs_4th_friday_cs_4thmistry_cycle_subject1.set("")
                        self.var_cs_4th_friday_cs_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def cs_4th_friday_time_table_get(ev):
                        friday_cs_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.cs_4th_friday_time_table.focus()
                        content1=self.cs_4th_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_cs_4th_friday_number_of_class2.set(row1[2])
                        self.var_cs_4th_friday_time1.set(row1[3])
                        self.var_cs_4th_friday_cs_4thmistry_cycle_subject1.set(row1[4])
                        self.var_cs_4th_friday_cs_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.friday_cs_4th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_cs_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_cs_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_cs_4th_time_table_data_frame,orient=VERTICAL)
                    self.cs_4th_friday_time_table=ttk.Treeview(self.friday_cs_4th_time_table_data_frame,columns=('cid','day1','cs_4th_friday_total_number_of_class','cs_4th_friday_time','cs_4th_friday_subject','cs_4th_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.cs_4th_friday_time_table.xview)
                    scrolly.configure(command=self.cs_4th_friday_time_table.yview)

                    self.cs_4th_friday_time_table.heading('cid',text='Serial No')
                    self.cs_4th_friday_time_table.heading('day1',text='Day')
                    self.cs_4th_friday_time_table.heading('cs_4th_friday_total_number_of_class',text='Totel class')
                    self.cs_4th_friday_time_table.heading('cs_4th_friday_time',text='class time')
                    self.cs_4th_friday_time_table.heading('cs_4th_friday_subject',text='Subject')
                    self.cs_4th_friday_time_table.heading('cs_4th_friday_faculty',text='Faculty')

                    self.cs_4th_friday_time_table.column('cid',width=100)
                    self.cs_4th_friday_time_table.column('day1',width=150)
                    self.cs_4th_friday_time_table.column('cs_4th_friday_total_number_of_class',width=100)
                    self.cs_4th_friday_time_table.column('cs_4th_friday_time',width=150)
                    self.cs_4th_friday_time_table.column('cs_4th_friday_subject',width=150)
                    self.cs_4th_friday_time_table.column('cs_4th_friday_faculty',width=150)

                    self.cs_4th_friday_time_table['show']='headings'

                    self.cs_4th_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.cs_4th_friday_time_table.bind('<ButtonRelease-1>',cs_4th_friday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_cs_4th_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_cs_4th_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_cs_4th_subject_list=[]
                    self.fetch_cs_4th_faculty_subject()
                    friday_cs_4thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_cs_4th_friday_cs_4thmistry_cycle_subject1,state='readonly',values=self.faculty_cs_4th_subject_list)
                    friday_cs_4thmistry_cycle_subject1.place(x=400,y=25) 

                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_cs_4th_name_list=[]
                    self.fetch_cs_4th_faculty_name()
                    friday_cs_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_cs_4th_friday_cs_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_cs_4th_name_list)
                    friday_cs_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    cs_4th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_cs_4th_friday_faculty_serch)
                    cs_4th_faculty_serch1.place(x=800,y=25)
                    cs_4th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=cs_4th_faculty_serch)
                    cs_4th_faculty_serch1_button.place(x=937,y=22)
                    cs_4th_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    cs_4th_add_database.place(x=10,y=140)

                    cs_4th_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    cs_4th_update_database.place(x=10,y=170)

                    cs_4th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    cs_4th_delete_database.place(x=10,y=200)

                    cs_4th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    cs_4th_clear_database.place(x=10,y=230)
#######################################################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Computer_Science_Engineering':
                if self.var_day_select.get() == 'Saturday':

                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_cs_4th_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_cs_4th_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_cs_4th_saturday_cs_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_cs_4th_saturday_cs_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into cs_4th_saturday_time_table_database(day1,cs_4th_saturday_total_number_of_class,cs_4th_saturday_time,cs_4th_saturday_subject,cs_4th_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_cs_4th_saturday_number_of_class2.get(),
                                            self.var_cs_4th_saturday_time1.get(),
                                            self.var_cs_4th_saturday_cs_4thmistry_cycle_subject1.get(),
                                            self.var_cs_4th_saturday_cs_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_4th_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.cs_4th_saturday_time_table.delete(*self.cs_4th_saturday_time_table.get_children())
                            for row in rows:
                                self.cs_4th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def cs_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from cs_4th_saturday_time_table_database where cs_4th_saturday_subject LIKE '%{self.var_cs_4th_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.cs_4th_saturday_time_table.delete(*self.cs_4th_saturday_time_table.get_children())
                                for row in rows:
                                    self.cs_4th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_saturday_cs_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from cs_4th_saturday_time_table_database where cs_4th_saturday_subject=%s",(self.var_cs_4th_saturday_cs_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update cs_4th_saturday_time_table_database set cs_4th_saturday_total_number_of_class=%s,cs_4th_saturday_time=%s,cs_4th_saturday_faculty=%s where cs_4th_saturday_subject=%s",(
                                        
                                        self.var_cs_4th_saturday_number_of_class2.get(),
                                        self.var_cs_4th_saturday_time1.get(),
                                        self.var_cs_4th_saturday_cs_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_cs_4th_saturday_cs_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_4th_saturday_cs_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from cs_4th_saturday_time_table_database where cs_4th_saturday_subject=%s",(self.var_cs_4th_saturday_cs_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from cs_4th_saturday_time_table_database where cs_4th_saturday_subject=%s',(self.var_cs_4th_saturday_cs_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_cs_4th_saturday_faculty_serch.set("")
                        self.var_cs_4th_saturday_number_of_class2.set("")
                        self.var_cs_4th_saturday_time1.set("")
                        self.var_cs_4th_saturday_cs_4thmistry_cycle_subject1.set("")
                        self.var_cs_4th_saturday_cs_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def cs_4th_saturday_time_table_get(ev):
                        saturday_cs_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.cs_4th_saturday_time_table.focus()
                        content1=self.cs_4th_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_cs_4th_saturday_number_of_class2.set(row1[2])
                        self.var_cs_4th_saturday_time1.set(row1[3])
                        self.var_cs_4th_saturday_cs_4thmistry_cycle_subject1.set(row1[4])
                        self.var_cs_4th_saturday_cs_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.saturday_cs_4th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_cs_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_cs_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_cs_4th_time_table_data_frame,orient=VERTICAL)
                    self.cs_4th_saturday_time_table=ttk.Treeview(self.saturday_cs_4th_time_table_data_frame,columns=('cid','day1','cs_4th_saturday_total_number_of_class','cs_4th_saturday_time','cs_4th_saturday_subject','cs_4th_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.cs_4th_saturday_time_table.xview)
                    scrolly.configure(command=self.cs_4th_saturday_time_table.yview)

                    self.cs_4th_saturday_time_table.heading('cid',text='Serial No')
                    self.cs_4th_saturday_time_table.heading('day1',text='Day')
                    self.cs_4th_saturday_time_table.heading('cs_4th_saturday_total_number_of_class',text='Totel class')
                    self.cs_4th_saturday_time_table.heading('cs_4th_saturday_time',text='class time')
                    self.cs_4th_saturday_time_table.heading('cs_4th_saturday_subject',text='Subject')
                    self.cs_4th_saturday_time_table.heading('cs_4th_saturday_faculty',text='Faculty')

                    self.cs_4th_saturday_time_table.column('cid',width=100)
                    self.cs_4th_saturday_time_table.column('day1',width=150)
                    self.cs_4th_saturday_time_table.column('cs_4th_saturday_total_number_of_class',width=100)
                    self.cs_4th_saturday_time_table.column('cs_4th_saturday_time',width=150)
                    self.cs_4th_saturday_time_table.column('cs_4th_saturday_subject',width=150)
                    self.cs_4th_saturday_time_table.column('cs_4th_saturday_faculty',width=150)

                    self.cs_4th_saturday_time_table['show']='headings'

                    self.cs_4th_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.cs_4th_saturday_time_table.bind('<ButtonRelease-1>',cs_4th_saturday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_cs_4th_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_cs_4th_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_cs_4th_subject_list=[]
                    self.fetch_cs_4th_faculty_subject()
                    saturday_cs_4thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_cs_4th_saturday_cs_4thmistry_cycle_subject1,state='readonly',values=self.faculty_cs_4th_subject_list)
                    saturday_cs_4thmistry_cycle_subject1.place(x=400,y=25) 

                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_cs_4th_name_list=[]
                    self.fetch_cs_4th_faculty_name()
                    saturday_cs_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_cs_4th_saturday_cs_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_cs_4th_name_list)
                    saturday_cs_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    cs_4th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_cs_4th_saturday_faculty_serch)
                    cs_4th_faculty_serch1.place(x=800,y=25)
                    cs_4th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=cs_4th_faculty_serch)
                    cs_4th_faculty_serch1_button.place(x=937,y=22)
                    cs_4th_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    cs_4th_add_database.place(x=10,y=140)

                    cs_4th_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    cs_4th_update_database.place(x=10,y=170)

                    cs_4th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    cs_4th_delete_database.place(x=10,y=200)

                    cs_4th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    cs_4th_clear_database.place(x=10,y=230)


        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Information_Science_and_Engineering':
                if self.var_day_select.get() == 'Monday':
  
                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ise_4th_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_ise_4th_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_ise_4th_monday_ise_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_ise_4th_monday_ise_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into ise_4th_monday_time_table_database(day1,ise_4th_monday_total_number_of_class,ise_4th_monday_time,ise_4th_monday_subject,ise_4th_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ise_4th_monday_number_of_class1.get(),
                                            self.var_ise_4th_monday_time1.get(),
                                            self.var_ise_4th_monday_ise_4thmistry_cycle_subject1.get(),
                                            self.var_ise_4th_monday_ise_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_4th_monday_time_table_database')
                            rows=cur.fetchall()
                            self.ise_4th_monday_time_table.delete(*self.ise_4th_monday_time_table.get_children())
                            for row in rows:
                                self.ise_4th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def ise_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from ise_4th_monday_time_table_database where ise_4th_monday_subject LIKE '%{self.var_ise_4th_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ise_4th_monday_time_table.delete(*self.ise_4th_monday_time_table.get_children())
                                for row in rows:
                                    self.ise_4th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_monday_ise_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from ise_4th_monday_time_table_database where ise_4th_monday_subject=%s",(self.var_ise_4th_monday_ise_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update ise_4th_monday_time_table_database set ise_4th_monday_total_number_of_class=%s,ise_4th_monday_time=%s,ise_4th_monday_faculty=%s where ise_4th_monday_subject=%s",(
                                        
                                        self.var_ise_4th_monday_number_of_class1.get(),
                                        self.var_ise_4th_monday_time1.get(),
                                        self.var_ise_4th_monday_ise_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_ise_4th_monday_ise_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_monday_ise_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from ise_4th_monday_time_table_database where ise_4th_monday_subject=%s",(self.var_ise_4th_monday_ise_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from ise_4th_monday_time_table_database where ise_4th_monday_subject=%s',(self.var_ise_4th_monday_ise_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_ise_4th_monday_faculty_serch.set("")
                        self.var_ise_4th_monday_number_of_class1.set("")
                        self.var_ise_4th_monday_time1.set("")
                        self.var_ise_4th_monday_ise_4thmistry_cycle_subject1.set("")
                        self.var_ise_4th_monday_ise_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def ise_4th_monday_time_table_get(ev):
                        monday_ise_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ise_4th_monday_time_table.focus()
                        content1=self.ise_4th_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ise_4th_monday_number_of_class1.set(row1[2])
                        self.var_ise_4th_monday_time1.set(row1[3])
                        self.var_ise_4th_monday_ise_4thmistry_cycle_subject1.set(row1[4])
                        self.var_ise_4th_monday_ise_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    
                    self.monday_ise_4th_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_ise_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_ise_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_ise_4th_time_table_data_frame,orient=VERTICAL)
                    self.ise_4th_monday_time_table=ttk.Treeview(self.monday_ise_4th_time_table_data_frame,columns=('cid','day1','ise_4th_monday_total_number_of_class','ise_4th_monday_time','ise_4th_monday_subject','ise_4th_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ise_4th_monday_time_table.xview)
                    scrolly.configure(command=self.ise_4th_monday_time_table.yview)

                    self.ise_4th_monday_time_table.heading('cid',text='Serial No')
                    self.ise_4th_monday_time_table.heading('day1',text='Day')
                    self.ise_4th_monday_time_table.heading('ise_4th_monday_total_number_of_class',text='Totel class')
                    self.ise_4th_monday_time_table.heading('ise_4th_monday_time',text='class time')
                    self.ise_4th_monday_time_table.heading('ise_4th_monday_subject',text='Subject')
                    self.ise_4th_monday_time_table.heading('ise_4th_monday_faculty',text='Faculty')

                    self.ise_4th_monday_time_table.column('cid',width=100)
                    self.ise_4th_monday_time_table.column('day1',width=150)
                    self.ise_4th_monday_time_table.column('ise_4th_monday_total_number_of_class',width=100)
                    self.ise_4th_monday_time_table.column('ise_4th_monday_time',width=150)
                    self.ise_4th_monday_time_table.column('ise_4th_monday_subject',width=150)
                    self.ise_4th_monday_time_table.column('ise_4th_monday_faculty',width=150)

                    self.ise_4th_monday_time_table['show']='headings'

                    self.ise_4th_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.ise_4th_monday_time_table.bind('<ButtonRelease-1>',ise_4th_monday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_ise_4th_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_ise_4th_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ise_4th_subject_list=[]
                    self.fetch_ise_4th_faculty_subject()
                    monday_ise_4thmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_ise_4th_monday_ise_4thmistry_cycle_subject1,state='readonly',values=self.faculty_ise_4th_subject_list)
                    monday_ise_4thmistry_cycle_subject1.place(x=400,y=25) 

                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ise_4th_name_list=[]
                    self.fetch_ise_4th_faculty_name()
                    monday_ise_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_ise_4th_monday_ise_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ise_4th_name_list)
                    monday_ise_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ise_4th_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_ise_4th_monday_faculty_serch)
                    ise_4th_faculty_serch1.place(x=800,y=25)
                    ise_4th_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=ise_4th_faculty_serch)
                    ise_4th_faculty_serch1_button.place(x=937,y=22)
                    ise_4th_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    ise_4th_add_database.place(x=10,y=140)

                    ise_4th_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    ise_4th_update_database.place(x=10,y=170)

                    ise_4th_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    ise_4th_delete_database.place(x=10,y=200)

                    ise_4th_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    ise_4th_clear_database.place(x=10,y=230)
############################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Information_Science_and_Engineering':
                if self.var_day_select.get() == 'Thuesday':
                
     
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ise_4th_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_ise_4th_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into ise_4th_thuesday_time_table_database(day1,ise_4th_thuesday_total_number_of_class,ise_4th_thuesday_time,ise_4th_thuesday_subject,ise_4th_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ise_4th_thuesday_number_of_class2.get(),
                                            self.var_ise_4th_thuesday_time1.get(),
                                            self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject1.get(),
                                            self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_4th_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.ise_4th_thuesday_time_table.delete(*self.ise_4th_thuesday_time_table.get_children())
                            for row in rows:
                                self.ise_4th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def ise_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from ise_4th_thuesday_time_table_database where ise_4th_thuesday_subject LIKE '%{self.var_ise_4th_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ise_4th_thuesday_time_table.delete(*self.ise_4th_thuesday_time_table.get_children())
                                for row in rows:
                                    self.ise_4th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from ise_4th_thuesday_time_table_database where ise_4th_thuesday_subject=%s",(self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update ise_4th_thuesday_time_table_database set ise_4th_thuesday_total_number_of_class=%s,ise_4th_thuesday_time=%s,ise_4th_thuesday_faculty=%s where ise_4th_thuesday_subject=%s",(
                                        
                                        self.var_ise_4th_thuesday_number_of_class2.get(),
                                        self.var_ise_4th_thuesday_time1.get(),
                                        self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from ise_4th_thuesday_time_table_database where ise_4th_thuesday_subject=%s",(self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from ise_4th_thuesday_time_table_database where ise_4th_thuesday_subject=%s',(self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_ise_4th_thuesday_faculty_serch.set("")
                        self.var_ise_4th_thuesday_number_of_class2.set("")
                        self.var_ise_4th_thuesday_time1.set("")
                        self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject1.set("")
                        self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def ise_4th_thuesday_time_table_get(ev):
                        thuesday_ise_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ise_4th_thuesday_time_table.focus()
                        content1=self.ise_4th_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ise_4th_thuesday_number_of_class2.set(row1[2])
                        self.var_ise_4th_thuesday_time1.set(row1[3])
                        self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject1.set(row1[4])
                        self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    
                    self.thuesday_ise_4th_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_ise_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_ise_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_ise_4th_time_table_data_frame,orient=VERTICAL)
                    self.ise_4th_thuesday_time_table=ttk.Treeview(self.thuesday_ise_4th_time_table_data_frame,columns=('cid','day1','ise_4th_thuesday_total_number_of_class','ise_4th_thuesday_time','ise_4th_thuesday_subject','ise_4th_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ise_4th_thuesday_time_table.xview)
                    scrolly.configure(command=self.ise_4th_thuesday_time_table.yview)

                    self.ise_4th_thuesday_time_table.heading('cid',text='Serial No')
                    self.ise_4th_thuesday_time_table.heading('day1',text='Day')
                    self.ise_4th_thuesday_time_table.heading('ise_4th_thuesday_total_number_of_class',text='Totel class')
                    self.ise_4th_thuesday_time_table.heading('ise_4th_thuesday_time',text='class time')
                    self.ise_4th_thuesday_time_table.heading('ise_4th_thuesday_subject',text='Subject')
                    self.ise_4th_thuesday_time_table.heading('ise_4th_thuesday_faculty',text='Faculty')

                    self.ise_4th_thuesday_time_table.column('cid',width=100)
                    self.ise_4th_thuesday_time_table.column('day1',width=150)
                    self.ise_4th_thuesday_time_table.column('ise_4th_thuesday_total_number_of_class',width=100)
                    self.ise_4th_thuesday_time_table.column('ise_4th_thuesday_time',width=150)
                    self.ise_4th_thuesday_time_table.column('ise_4th_thuesday_subject',width=150)
                    self.ise_4th_thuesday_time_table.column('ise_4th_thuesday_faculty',width=150)

                    self.ise_4th_thuesday_time_table['show']='headings'

                    self.ise_4th_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.ise_4th_thuesday_time_table.bind('<ButtonRelease-1>',ise_4th_thuesday_time_table_get)
                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_ise_4th_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_ise_4th_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ise_4th_subject_list=[]
                    self.fetch_ise_4th_faculty_subject()
                    thuesday_ise_4thmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject1,state='readonly',values=self.faculty_ise_4th_subject_list)
                    thuesday_ise_4thmistry_cycle_subject1.place(x=400,y=25) 

                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ise_4th_name_list=[]
                    self.fetch_ise_4th_faculty_name()
                    thuesday_ise_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_ise_4th_thuesday_ise_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ise_4th_name_list)
                    thuesday_ise_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ise_4th_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_ise_4th_thuesday_faculty_serch)
                    ise_4th_faculty_serch1.place(x=800,y=25)
                    ise_4th_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=ise_4th_faculty_serch)
                    ise_4th_faculty_serch1_button.place(x=937,y=22)
                    ise_4th_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    ise_4th_add_database.place(x=10,y=140)

                    ise_4th_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    ise_4th_update_database.place(x=10,y=170)

                    ise_4th_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    ise_4th_delete_database.place(x=10,y=200)

                    ise_4th_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    ise_4th_clear_database.place(x=10,y=230)

        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Information_Science_and_Engineering':
                if self.var_day_select.get() == 'Wednesday':

                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ise_4th_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_ise_4th_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into ise_4th_wednesday_time_table_database(day1,ise_4th_wednesday_total_number_of_class,ise_4th_wednesday_time,ise_4th_wednesday_subject,ise_4th_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ise_4th_wednesday_number_of_class2.get(),
                                            self.var_ise_4th_wednesday_time1.get(),
                                            self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject1.get(),
                                            self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_4th_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.ise_4th_wednesday_time_table.delete(*self.ise_4th_wednesday_time_table.get_children())
                            for row in rows:
                                self.ise_4th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def ise_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from ise_4th_wednesday_time_table_database where ise_4th_wednesday_subject LIKE '%{self.var_ise_4th_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ise_4th_wednesday_time_table.delete(*self.ise_4th_wednesday_time_table.get_children())
                                for row in rows:
                                    self.ise_4th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from ise_4th_wednesday_time_table_database where ise_4th_wednesday_subject=%s",(self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update ise_4th_wednesday_time_table_database set ise_4th_wednesday_total_number_of_class=%s,ise_4th_wednesday_time=%s,ise_4th_wednesday_faculty=%s where ise_4th_wednesday_subject=%s",(
                                        
                                        self.var_ise_4th_wednesday_number_of_class2.get(),
                                        self.var_ise_4th_wednesday_time1.get(),
                                        self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from ise_4th_wednesday_time_table_database where ise_4th_wednesday_subject=%s",(self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from ise_4th_wednesday_time_table_database where ise_4th_wednesday_subject=%s',(self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_ise_4th_wednesday_faculty_serch.set("")
                        self.var_ise_4th_wednesday_number_of_class2.set("")
                        self.var_ise_4th_wednesday_time1.set("")
                        self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject1.set("")
                        self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def ise_4th_wednesday_time_table_get(ev):
                        wednesday_ise_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ise_4th_wednesday_time_table.focus()
                        content1=self.ise_4th_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ise_4th_wednesday_number_of_class2.set(row1[2])
                        self.var_ise_4th_wednesday_time1.set(row1[3])
                        self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject1.set(row1[4])
                        self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    
                    self.wednesday_ise_4th_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_ise_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_ise_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_ise_4th_time_table_data_frame,orient=VERTICAL)
                    self.ise_4th_wednesday_time_table=ttk.Treeview(self.wednesday_ise_4th_time_table_data_frame,columns=('cid','day1','ise_4th_wednesday_total_number_of_class','ise_4th_wednesday_time','ise_4th_wednesday_subject','ise_4th_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ise_4th_wednesday_time_table.xview)
                    scrolly.configure(command=self.ise_4th_wednesday_time_table.yview)

                    self.ise_4th_wednesday_time_table.heading('cid',text='Serial No')
                    self.ise_4th_wednesday_time_table.heading('day1',text='Day')
                    self.ise_4th_wednesday_time_table.heading('ise_4th_wednesday_total_number_of_class',text='Totel class')
                    self.ise_4th_wednesday_time_table.heading('ise_4th_wednesday_time',text='class time')
                    self.ise_4th_wednesday_time_table.heading('ise_4th_wednesday_subject',text='Subject')
                    self.ise_4th_wednesday_time_table.heading('ise_4th_wednesday_faculty',text='Faculty')

                    self.ise_4th_wednesday_time_table.column('cid',width=100)
                    self.ise_4th_wednesday_time_table.column('day1',width=150)
                    self.ise_4th_wednesday_time_table.column('ise_4th_wednesday_total_number_of_class',width=100)
                    self.ise_4th_wednesday_time_table.column('ise_4th_wednesday_time',width=150)
                    self.ise_4th_wednesday_time_table.column('ise_4th_wednesday_subject',width=150)
                    self.ise_4th_wednesday_time_table.column('ise_4th_wednesday_faculty',width=150)

                    self.ise_4th_wednesday_time_table['show']='headings'

                    self.ise_4th_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.ise_4th_wednesday_time_table.bind('<ButtonRelease-1>',ise_4th_wednesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_ise_4th_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_ise_4th_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ise_4th_subject_list=[]
                    self.fetch_ise_4th_faculty_subject()
                    wednesday_ise_4thmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject1,state='readonly',values=self.faculty_ise_4th_subject_list)
                    wednesday_ise_4thmistry_cycle_subject1.place(x=400,y=25) 

                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ise_4th_name_list=[]
                    self.fetch_ise_4th_faculty_name()
                    wednesday_ise_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_ise_4th_wednesday_ise_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ise_4th_name_list)
                    wednesday_ise_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ise_4th_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_ise_4th_wednesday_faculty_serch)
                    ise_4th_faculty_serch1.place(x=800,y=25)
                    ise_4th_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=ise_4th_faculty_serch)
                    ise_4th_faculty_serch1_button.place(x=937,y=22)
                    ise_4th_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    ise_4th_add_database.place(x=10,y=140)

                    ise_4th_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    ise_4th_update_database.place(x=10,y=170)

                    ise_4th_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    ise_4th_delete_database.place(x=10,y=200)

                    ise_4th_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    ise_4th_clear_database.place(x=10,y=230)

####################################################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Information_Science_and_Engineering':
                if self.var_day_select.get() == 'Thursday':
                

                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ise_4th_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_ise_4th_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_ise_4th_thursday_ise_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_ise_4th_thursday_ise_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into ise_4th_thursday_time_table_database(day1,ise_4th_thursday_total_number_of_class,ise_4th_thursday_time,ise_4th_thursday_subject,ise_4th_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ise_4th_thursday_number_of_class2.get(),
                                            self.var_ise_4th_thursday_time1.get(),
                                            self.var_ise_4th_thursday_ise_4thmistry_cycle_subject1.get(),
                                            self.var_ise_4th_thursday_ise_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_4th_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.ise_4th_thursday_time_table.delete(*self.ise_4th_thursday_time_table.get_children())
                            for row in rows:
                                self.ise_4th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def ise_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from ise_4th_thursday_time_table_database where ise_4th_thursday_subject LIKE '%{self.var_ise_4th_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ise_4th_thursday_time_table.delete(*self.ise_4th_thursday_time_table.get_children())
                                for row in rows:
                                    self.ise_4th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_thursday_ise_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from ise_4th_thursday_time_table_database where ise_4th_thursday_subject=%s",(self.var_ise_4th_thursday_ise_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update ise_4th_thursday_time_table_database set ise_4th_thursday_total_number_of_class=%s,ise_4th_thursday_time=%s,ise_4th_thursday_faculty=%s where ise_4th_thursday_subject=%s",(
                                        
                                        self.var_ise_4th_thursday_number_of_class2.get(),
                                        self.var_ise_4th_thursday_time1.get(),
                                        self.var_ise_4th_thursday_ise_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_ise_4th_thursday_ise_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_thursday_ise_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from ise_4th_thursday_time_table_database where ise_4th_thursday_subject=%s",(self.var_ise_4th_thursday_ise_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from ise_4th_thursday_time_table_database where ise_4th_thursday_subject=%s',(self.var_ise_4th_thursday_ise_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_ise_4th_thursday_faculty_serch.set("")
                        self.var_ise_4th_thursday_number_of_class2.set("")
                        self.var_ise_4th_thursday_time1.set("")
                        self.var_ise_4th_thursday_ise_4thmistry_cycle_subject1.set("")
                        self.var_ise_4th_thursday_ise_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def ise_4th_thursday_time_table_get(ev):
                        thursday_ise_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ise_4th_thursday_time_table.focus()
                        content1=self.ise_4th_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ise_4th_thursday_number_of_class2.set(row1[2])
                        self.var_ise_4th_thursday_time1.set(row1[3])
                        self.var_ise_4th_thursday_ise_4thmistry_cycle_subject1.set(row1[4])
                        self.var_ise_4th_thursday_ise_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    
                    self.thursday_ise_4th_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_ise_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_ise_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_ise_4th_time_table_data_frame,orient=VERTICAL)
                    self.ise_4th_thursday_time_table=ttk.Treeview(self.thursday_ise_4th_time_table_data_frame,columns=('cid','day1','ise_4th_thursday_total_number_of_class','ise_4th_thursday_time','ise_4th_thursday_subject','ise_4th_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ise_4th_thursday_time_table.xview)
                    scrolly.configure(command=self.ise_4th_thursday_time_table.yview)

                    self.ise_4th_thursday_time_table.heading('cid',text='Serial No')
                    self.ise_4th_thursday_time_table.heading('day1',text='Day')
                    self.ise_4th_thursday_time_table.heading('ise_4th_thursday_total_number_of_class',text='Totel class')
                    self.ise_4th_thursday_time_table.heading('ise_4th_thursday_time',text='class time')
                    self.ise_4th_thursday_time_table.heading('ise_4th_thursday_subject',text='Subject')
                    self.ise_4th_thursday_time_table.heading('ise_4th_thursday_faculty',text='Faculty')

                    self.ise_4th_thursday_time_table.column('cid',width=100)
                    self.ise_4th_thursday_time_table.column('day1',width=150)
                    self.ise_4th_thursday_time_table.column('ise_4th_thursday_total_number_of_class',width=100)
                    self.ise_4th_thursday_time_table.column('ise_4th_thursday_time',width=150)
                    self.ise_4th_thursday_time_table.column('ise_4th_thursday_subject',width=150)
                    self.ise_4th_thursday_time_table.column('ise_4th_thursday_faculty',width=150)

                    self.ise_4th_thursday_time_table['show']='headings'

                    self.ise_4th_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.ise_4th_thursday_time_table.bind('<ButtonRelease-1>',ise_4th_thursday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_ise_4th_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_ise_4th_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ise_4th_subject_list=[]
                    self.fetch_ise_4th_faculty_subject()
                    thursday_ise_4thmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_ise_4th_thursday_ise_4thmistry_cycle_subject1,state='readonly',values=self.faculty_ise_4th_subject_list)
                    thursday_ise_4thmistry_cycle_subject1.place(x=400,y=25) 
                
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ise_4th_name_list=[]
                    self.fetch_ise_4th_faculty_name()
                    thursday_ise_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_ise_4th_thursday_ise_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ise_4th_name_list)
                    thursday_ise_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ise_4th_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_ise_4th_thursday_faculty_serch)
                    ise_4th_faculty_serch1.place(x=800,y=25)
                    ise_4th_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=ise_4th_faculty_serch)
                    ise_4th_faculty_serch1_button.place(x=937,y=22)
                    ise_4th_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    ise_4th_add_database.place(x=10,y=140)

                    ise_4th_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    ise_4th_update_database.place(x=10,y=170)

                    ise_4th_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    ise_4th_delete_database.place(x=10,y=200)

                    ise_4th_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    ise_4th_clear_database.place(x=10,y=230)

#############################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Information_Science_and_Engineering':
                if self.var_day_select.get() == 'Friday':
                

                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
                        cur=con.cursor()
                        if self.var_ise_4th_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_ise_4th_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_ise_4th_friday_ise_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_ise_4th_friday_ise_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into ise_4th_friday_time_table_database(day1,ise_4th_friday_total_number_of_class,ise_4th_friday_time,ise_4th_friday_subject,ise_4th_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ise_4th_friday_number_of_class2.get(),
                                            self.var_ise_4th_friday_time1.get(),
                                            self.var_ise_4th_friday_ise_4thmistry_cycle_subject1.get(),
                                            self.var_ise_4th_friday_ise_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_4th_friday_time_table_database')
                            rows=cur.fetchall()
                            self.ise_4th_friday_time_table.delete(*self.ise_4th_friday_time_table.get_children())
                            for row in rows:
                                self.ise_4th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def ise_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from ise_4th_friday_time_table_database where ise_4th_friday_subject LIKE '%{self.var_ise_4th_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ise_4th_friday_time_table.delete(*self.ise_4th_friday_time_table.get_children())
                                for row in rows:
                                    self.ise_4th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_friday_ise_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from ise_4th_friday_time_table_database where ise_4th_friday_subject=%s",(self.var_ise_4th_friday_ise_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update ise_4th_friday_time_table_database set ise_4th_friday_total_number_of_class=%s,ise_4th_friday_time=%s,ise_4th_friday_faculty=%s where ise_4th_friday_subject=%s",(
                                        
                                        self.var_ise_4th_friday_number_of_class2.get(),
                                        self.var_ise_4th_friday_time1.get(),
                                        self.var_ise_4th_friday_ise_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_ise_4th_friday_ise_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_friday_ise_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from ise_4th_friday_time_table_database where ise_4th_friday_subject=%s",(self.var_ise_4th_friday_ise_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from ise_4th_friday_time_table_database where ise_4th_friday_subject=%s',(self.var_ise_4th_friday_ise_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_ise_4th_friday_faculty_serch.set("")
                        self.var_ise_4th_friday_number_of_class2.set("")
                        self.var_ise_4th_friday_time1.set("")
                        self.var_ise_4th_friday_ise_4thmistry_cycle_subject1.set("")
                        self.var_ise_4th_friday_ise_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def ise_4th_friday_time_table_get(ev):
                        friday_ise_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ise_4th_friday_time_table.focus()
                        content1=self.ise_4th_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ise_4th_friday_number_of_class2.set(row1[2])
                        self.var_ise_4th_friday_time1.set(row1[3])
                        self.var_ise_4th_friday_ise_4thmistry_cycle_subject1.set(row1[4])
                        self.var_ise_4th_friday_ise_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.friday_ise_4th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_ise_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_ise_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_ise_4th_time_table_data_frame,orient=VERTICAL)
                    self.ise_4th_friday_time_table=ttk.Treeview(self.friday_ise_4th_time_table_data_frame,columns=('cid','day1','ise_4th_friday_total_number_of_class','ise_4th_friday_time','ise_4th_friday_subject','ise_4th_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ise_4th_friday_time_table.xview)
                    scrolly.configure(command=self.ise_4th_friday_time_table.yview)

                    self.ise_4th_friday_time_table.heading('cid',text='Serial No')
                    self.ise_4th_friday_time_table.heading('day1',text='Day')
                    self.ise_4th_friday_time_table.heading('ise_4th_friday_total_number_of_class',text='Totel class')
                    self.ise_4th_friday_time_table.heading('ise_4th_friday_time',text='class time')
                    self.ise_4th_friday_time_table.heading('ise_4th_friday_subject',text='Subject')
                    self.ise_4th_friday_time_table.heading('ise_4th_friday_faculty',text='Faculty')

                    self.ise_4th_friday_time_table.column('cid',width=100)
                    self.ise_4th_friday_time_table.column('day1',width=150)
                    self.ise_4th_friday_time_table.column('ise_4th_friday_total_number_of_class',width=100)
                    self.ise_4th_friday_time_table.column('ise_4th_friday_time',width=150)
                    self.ise_4th_friday_time_table.column('ise_4th_friday_subject',width=150)
                    self.ise_4th_friday_time_table.column('ise_4th_friday_faculty',width=150)

                    self.ise_4th_friday_time_table['show']='headings'

                    self.ise_4th_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.ise_4th_friday_time_table.bind('<ButtonRelease-1>',ise_4th_friday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_ise_4th_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_ise_4th_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ise_4th_subject_list=[]
                    self.fetch_ise_4th_faculty_subject()
                    friday_ise_4thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ise_4th_friday_ise_4thmistry_cycle_subject1,state='readonly',values=self.faculty_ise_4th_subject_list)
                    friday_ise_4thmistry_cycle_subject1.place(x=400,y=25) 
                 
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ise_4th_name_list=[]
                    self.fetch_ise_4th_faculty_name()
                    friday_ise_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ise_4th_friday_ise_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ise_4th_name_list)
                    friday_ise_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ise_4th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_ise_4th_friday_faculty_serch)
                    ise_4th_faculty_serch1.place(x=800,y=25)
                    ise_4th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=ise_4th_faculty_serch)
                    ise_4th_faculty_serch1_button.place(x=937,y=22)
                    ise_4th_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    ise_4th_add_database.place(x=10,y=140)

                    ise_4th_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    ise_4th_update_database.place(x=10,y=170)

                    ise_4th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    ise_4th_delete_database.place(x=10,y=200)

                    ise_4th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    ise_4th_clear_database.place(x=10,y=230)
#######################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Information_Science_and_Engineering':
                if self.var_day_select.get() == 'Saturday':
      
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ise_4th_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_ise_4th_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_ise_4th_saturday_ise_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_ise_4th_saturday_ise_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into ise_4th_saturday_time_table_database(day1,ise_4th_saturday_total_number_of_class,ise_4th_saturday_time,ise_4th_saturday_subject,ise_4th_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ise_4th_saturday_number_of_class2.get(),
                                            self.var_ise_4th_saturday_time1.get(),
                                            self.var_ise_4th_saturday_ise_4thmistry_cycle_subject1.get(),
                                            self.var_ise_4th_saturday_ise_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_4th_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.ise_4th_saturday_time_table.delete(*self.ise_4th_saturday_time_table.get_children())
                            for row in rows:
                                self.ise_4th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def ise_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from ise_4th_saturday_time_table_database where ise_4th_saturday_subject LIKE '%{self.var_ise_4th_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ise_4th_saturday_time_table.delete(*self.ise_4th_saturday_time_table.get_children())
                                for row in rows:
                                    self.ise_4th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_saturday_ise_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from ise_4th_saturday_time_table_database where ise_4th_saturday_subject=%s",(self.var_ise_4th_saturday_ise_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update ise_4th_saturday_time_table_database set ise_4th_saturday_total_number_of_class=%s,ise_4th_saturday_time=%s,ise_4th_saturday_faculty=%s where ise_4th_saturday_subject=%s",(
                                        
                                        self.var_ise_4th_saturday_number_of_class2.get(),
                                        self.var_ise_4th_saturday_time1.get(),
                                        self.var_ise_4th_saturday_ise_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_ise_4th_saturday_ise_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_4th_saturday_ise_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from ise_4th_saturday_time_table_database where ise_4th_saturday_subject=%s",(self.var_ise_4th_saturday_ise_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from ise_4th_saturday_time_table_database where ise_4th_saturday_subject=%s',(self.var_ise_4th_saturday_ise_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_ise_4th_saturday_faculty_serch.set("")
                        self.var_ise_4th_saturday_number_of_class2.set("")
                        self.var_ise_4th_saturday_time1.set("")
                        self.var_ise_4th_saturday_ise_4thmistry_cycle_subject1.set("")
                        self.var_ise_4th_saturday_ise_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def ise_4th_saturday_time_table_get(ev):
                        saturday_ise_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ise_4th_saturday_time_table.focus()
                        content1=self.ise_4th_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ise_4th_saturday_number_of_class2.set(row1[2])
                        self.var_ise_4th_saturday_time1.set(row1[3])
                        self.var_ise_4th_saturday_ise_4thmistry_cycle_subject1.set(row1[4])
                        self.var_ise_4th_saturday_ise_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.saturday_ise_4th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_ise_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_ise_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_ise_4th_time_table_data_frame,orient=VERTICAL)
                    self.ise_4th_saturday_time_table=ttk.Treeview(self.saturday_ise_4th_time_table_data_frame,columns=('cid','day1','ise_4th_saturday_total_number_of_class','ise_4th_saturday_time','ise_4th_saturday_subject','ise_4th_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ise_4th_saturday_time_table.xview)
                    scrolly.configure(command=self.ise_4th_saturday_time_table.yview)

                    self.ise_4th_saturday_time_table.heading('cid',text='Serial No')
                    self.ise_4th_saturday_time_table.heading('day1',text='Day')
                    self.ise_4th_saturday_time_table.heading('ise_4th_saturday_total_number_of_class',text='Totel class')
                    self.ise_4th_saturday_time_table.heading('ise_4th_saturday_time',text='class time')
                    self.ise_4th_saturday_time_table.heading('ise_4th_saturday_subject',text='Subject')
                    self.ise_4th_saturday_time_table.heading('ise_4th_saturday_faculty',text='Faculty')

                    self.ise_4th_saturday_time_table.column('cid',width=100)
                    self.ise_4th_saturday_time_table.column('day1',width=150)
                    self.ise_4th_saturday_time_table.column('ise_4th_saturday_total_number_of_class',width=100)
                    self.ise_4th_saturday_time_table.column('ise_4th_saturday_time',width=150)
                    self.ise_4th_saturday_time_table.column('ise_4th_saturday_subject',width=150)
                    self.ise_4th_saturday_time_table.column('ise_4th_saturday_faculty',width=150)

                    self.ise_4th_saturday_time_table['show']='headings'

                    self.ise_4th_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.ise_4th_saturday_time_table.bind('<ButtonRelease-1>',ise_4th_saturday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_ise_4th_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_ise_4th_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ise_4th_subject_list=[]
                    self.fetch_ise_4th_faculty_subject()
                    saturday_ise_4thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ise_4th_saturday_ise_4thmistry_cycle_subject1,state='readonly',values=self.faculty_ise_4th_subject_list)
                    saturday_ise_4thmistry_cycle_subject1.place(x=400,y=25) 
           
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ise_4th_name_list=[]
                    self.fetch_ise_4th_faculty_name()
                    saturday_ise_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ise_4th_saturday_ise_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ise_4th_name_list)
                    saturday_ise_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ise_4th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_ise_4th_saturday_faculty_serch)
                    ise_4th_faculty_serch1.place(x=800,y=25)
                    ise_4th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=ise_4th_faculty_serch)
                    ise_4th_faculty_serch1_button.place(x=937,y=22)
                    ise_4th_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    ise_4th_add_database.place(x=10,y=140)

                    ise_4th_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    ise_4th_update_database.place(x=10,y=170)

                    ise_4th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    ise_4th_delete_database.place(x=10,y=200)

                    ise_4th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    ise_4th_clear_database.place(x=10,y=230)

        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Telecommunication_Engineering':
                if self.var_day_select.get() == 'Monday':
                
      
                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ete_4th_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_ete_4th_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_ete_4th_monday_ete_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_ete_4th_monday_ete_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into ete_4th_monday_time_table_database(day1,ete_4th_monday_total_number_of_class,ete_4th_monday_time,ete_4th_monday_subject,ete_4th_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ete_4th_monday_number_of_class1.get(),
                                            self.var_ete_4th_monday_time1.get(),
                                            self.var_ete_4th_monday_ete_4thmistry_cycle_subject1.get(),
                                            self.var_ete_4th_monday_ete_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_4th_monday_time_table_database')
                            rows=cur.fetchall()
                            self.ete_4th_monday_time_table.delete(*self.ete_4th_monday_time_table.get_children())
                            for row in rows:
                                self.ete_4th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def ete_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from ete_4th_monday_time_table_database where ete_4th_monday_subject LIKE '%{self.var_ete_4th_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ete_4th_monday_time_table.delete(*self.ete_4th_monday_time_table.get_children())
                                for row in rows:
                                    self.ete_4th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_monday_ete_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from ete_4th_monday_time_table_database where ete_4th_monday_subject=%s",(self.var_ete_4th_monday_ete_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update ete_4th_monday_time_table_database set ete_4th_monday_total_number_of_class=%s,ete_4th_monday_time=%s,ete_4th_monday_faculty=%s where ete_4th_monday_subject=%s",(
                                        
                                        self.var_ete_4th_monday_number_of_class1.get(),
                                        self.var_ete_4th_monday_time1.get(),
                                        self.var_ete_4th_monday_ete_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_ete_4th_monday_ete_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_monday_ete_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from ete_4th_monday_time_table_database where ete_4th_monday_subject=%s",(self.var_ete_4th_monday_ete_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from ete_4th_monday_time_table_database where ete_4th_monday_subject=%s',(self.var_ete_4th_monday_ete_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_ete_4th_monday_faculty_serch.set("")
                        self.var_ete_4th_monday_number_of_class1.set("")
                        self.var_ete_4th_monday_time1.set("")
                        self.var_ete_4th_monday_ete_4thmistry_cycle_subject1.set("")
                        self.var_ete_4th_monday_ete_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def ete_4th_monday_time_table_get(ev):
                        monday_ete_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ete_4th_monday_time_table.focus()
                        content1=self.ete_4th_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ete_4th_monday_number_of_class1.set(row1[2])
                        self.var_ete_4th_monday_time1.set(row1[3])
                        self.var_ete_4th_monday_ete_4thmistry_cycle_subject1.set(row1[4])
                        self.var_ete_4th_monday_ete_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    
                    self.monday_ete_4th_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_ete_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_ete_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_ete_4th_time_table_data_frame,orient=VERTICAL)
                    self.ete_4th_monday_time_table=ttk.Treeview(self.monday_ete_4th_time_table_data_frame,columns=('cid','day1','ete_4th_monday_total_number_of_class','ete_4th_monday_time','ete_4th_monday_subject','ete_4th_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ete_4th_monday_time_table.xview)
                    scrolly.configure(command=self.ete_4th_monday_time_table.yview)

                    self.ete_4th_monday_time_table.heading('cid',text='Serial No')
                    self.ete_4th_monday_time_table.heading('day1',text='Day')
                    self.ete_4th_monday_time_table.heading('ete_4th_monday_total_number_of_class',text='Totel class')
                    self.ete_4th_monday_time_table.heading('ete_4th_monday_time',text='class time')
                    self.ete_4th_monday_time_table.heading('ete_4th_monday_subject',text='Subject')
                    self.ete_4th_monday_time_table.heading('ete_4th_monday_faculty',text='Faculty')

                    self.ete_4th_monday_time_table.column('cid',width=100)
                    self.ete_4th_monday_time_table.column('day1',width=150)
                    self.ete_4th_monday_time_table.column('ete_4th_monday_total_number_of_class',width=100)
                    self.ete_4th_monday_time_table.column('ete_4th_monday_time',width=150)
                    self.ete_4th_monday_time_table.column('ete_4th_monday_subject',width=150)
                    self.ete_4th_monday_time_table.column('ete_4th_monday_faculty',width=150)

                    self.ete_4th_monday_time_table['show']='headings'

                    self.ete_4th_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.ete_4th_monday_time_table.bind('<ButtonRelease-1>',ete_4th_monday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_ete_4th_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_ete_4th_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ete_4th_subject_list=[]
                    self.fetch_ete_4th_faculty_subject()
                    monday_ete_4thmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_ete_4th_monday_ete_4thmistry_cycle_subject1,state='readonly',values=self.faculty_ete_4th_subject_list)
                    monday_ete_4thmistry_cycle_subject1.place(x=400,y=25) 
                  
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ete_4th_name_list=[]
                    self.fetch_ete_4th_faculty_name()
                    monday_ete_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_ete_4th_monday_ete_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ete_4th_name_list)
                    monday_ete_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ete_4th_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_ete_4th_monday_faculty_serch)
                    ete_4th_faculty_serch1.place(x=800,y=25)
                    ete_4th_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=ete_4th_faculty_serch)
                    ete_4th_faculty_serch1_button.place(x=937,y=22)
                    ete_4th_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    ete_4th_add_database.place(x=10,y=140)

                    ete_4th_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    ete_4th_update_database.place(x=10,y=170)

                    ete_4th_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    ete_4th_delete_database.place(x=10,y=200)

                    ete_4th_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    ete_4th_clear_database.place(x=10,y=230)
###################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Telecommunication_Engineering':
                if self.var_day_select.get() == 'Thuesday':
                
 
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ete_4th_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_ete_4th_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into ete_4th_thuesday_time_table_database(day1,ete_4th_thuesday_total_number_of_class,ete_4th_thuesday_time,ete_4th_thuesday_subject,ete_4th_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ete_4th_thuesday_number_of_class2.get(),
                                            self.var_ete_4th_thuesday_time1.get(),
                                            self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject1.get(),
                                            self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_4th_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.ete_4th_thuesday_time_table.delete(*self.ete_4th_thuesday_time_table.get_children())
                            for row in rows:
                                self.ete_4th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def ete_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from ete_4th_thuesday_time_table_database where ete_4th_thuesday_subject LIKE '%{self.var_ete_4th_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ete_4th_thuesday_time_table.delete(*self.ete_4th_thuesday_time_table.get_children())
                                for row in rows:
                                    self.ete_4th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from ete_4th_thuesday_time_table_database where ete_4th_thuesday_subject=%s",(self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update ete_4th_thuesday_time_table_database set ete_4th_thuesday_total_number_of_class=%s,ete_4th_thuesday_time=%s,ete_4th_thuesday_faculty=%s where ete_4th_thuesday_subject=%s",(
                                        
                                        self.var_ete_4th_thuesday_number_of_class2.get(),
                                        self.var_ete_4th_thuesday_time1.get(),
                                        self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from ete_4th_thuesday_time_table_database where ete_4th_thuesday_subject=%s",(self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from ete_4th_thuesday_time_table_database where ete_4th_thuesday_subject=%s',(self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_ete_4th_thuesday_faculty_serch.set("")
                        self.var_ete_4th_thuesday_number_of_class2.set("")
                        self.var_ete_4th_thuesday_time1.set("")
                        self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject1.set("")
                        self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def ete_4th_thuesday_time_table_get(ev):
                        thuesday_ete_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ete_4th_thuesday_time_table.focus()
                        content1=self.ete_4th_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ete_4th_thuesday_number_of_class2.set(row1[2])
                        self.var_ete_4th_thuesday_time1.set(row1[3])
                        self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject1.set(row1[4])
                        self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    
                    self.thuesday_ete_4th_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_ete_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_ete_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_ete_4th_time_table_data_frame,orient=VERTICAL)
                    self.ete_4th_thuesday_time_table=ttk.Treeview(self.thuesday_ete_4th_time_table_data_frame,columns=('cid','day1','ete_4th_thuesday_total_number_of_class','ete_4th_thuesday_time','ete_4th_thuesday_subject','ete_4th_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ete_4th_thuesday_time_table.xview)
                    scrolly.configure(command=self.ete_4th_thuesday_time_table.yview)

                    self.ete_4th_thuesday_time_table.heading('cid',text='Serial No')
                    self.ete_4th_thuesday_time_table.heading('day1',text='Day')
                    self.ete_4th_thuesday_time_table.heading('ete_4th_thuesday_total_number_of_class',text='Totel class')
                    self.ete_4th_thuesday_time_table.heading('ete_4th_thuesday_time',text='class time')
                    self.ete_4th_thuesday_time_table.heading('ete_4th_thuesday_subject',text='Subject')
                    self.ete_4th_thuesday_time_table.heading('ete_4th_thuesday_faculty',text='Faculty')

                    self.ete_4th_thuesday_time_table.column('cid',width=100)
                    self.ete_4th_thuesday_time_table.column('day1',width=150)
                    self.ete_4th_thuesday_time_table.column('ete_4th_thuesday_total_number_of_class',width=100)
                    self.ete_4th_thuesday_time_table.column('ete_4th_thuesday_time',width=150)
                    self.ete_4th_thuesday_time_table.column('ete_4th_thuesday_subject',width=150)
                    self.ete_4th_thuesday_time_table.column('ete_4th_thuesday_faculty',width=150)

                    self.ete_4th_thuesday_time_table['show']='headings'

                    self.ete_4th_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.ete_4th_thuesday_time_table.bind('<ButtonRelease-1>',ete_4th_thuesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_ete_4th_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_ete_4th_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ete_4th_subject_list=[]
                    self.fetch_ete_4th_faculty_subject()
                    thuesday_ete_4thmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject1,state='readonly',values=self.faculty_ete_4th_subject_list)
                    thuesday_ete_4thmistry_cycle_subject1.place(x=400,y=25) 
              
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ete_4th_name_list=[]
                    self.fetch_ete_4th_faculty_name()
                    thuesday_ete_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_ete_4th_thuesday_ete_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ete_4th_name_list)
                    thuesday_ete_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ete_4th_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_ete_4th_thuesday_faculty_serch)
                    ete_4th_faculty_serch1.place(x=800,y=25)
                    ete_4th_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=ete_4th_faculty_serch)
                    ete_4th_faculty_serch1_button.place(x=937,y=22)
                    ete_4th_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    ete_4th_add_database.place(x=10,y=140)

                    ete_4th_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    ete_4th_update_database.place(x=10,y=170)

                    ete_4th_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    ete_4th_delete_database.place(x=10,y=200)

                    ete_4th_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    ete_4th_clear_database.place(x=10,y=230)
#############################################################################################################################################################

        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Telecommunication_Engineering':
                if self.var_day_select.get() == 'Wednesday':
                

                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ete_4th_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_ete_4th_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into ete_4th_wednesday_time_table_database(day1,ete_4th_wednesday_total_number_of_class,ete_4th_wednesday_time,ete_4th_wednesday_subject,ete_4th_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ete_4th_wednesday_number_of_class2.get(),
                                            self.var_ete_4th_wednesday_time1.get(),
                                            self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject1.get(),
                                            self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_4th_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.ete_4th_wednesday_time_table.delete(*self.ete_4th_wednesday_time_table.get_children())
                            for row in rows:
                                self.ete_4th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def ete_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from ete_4th_wednesday_time_table_database where ete_4th_wednesday_subject LIKE '%{self.var_ete_4th_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ete_4th_wednesday_time_table.delete(*self.ete_4th_wednesday_time_table.get_children())
                                for row in rows:
                                    self.ete_4th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from ete_4th_wednesday_time_table_database where ete_4th_wednesday_subject=%s",(self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update ete_4th_wednesday_time_table_database set ete_4th_wednesday_total_number_of_class=%s,ete_4th_wednesday_time=%s,ete_4th_wednesday_faculty=%s where ete_4th_wednesday_subject=%s",(
                                        
                                        self.var_ete_4th_wednesday_number_of_class2.get(),
                                        self.var_ete_4th_wednesday_time1.get(),
                                        self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from ete_4th_wednesday_time_table_database where ete_4th_wednesday_subject=%s",(self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from ete_4th_wednesday_time_table_database where ete_4th_wednesday_subject=%s',(self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_ete_4th_wednesday_faculty_serch.set("")
                        self.var_ete_4th_wednesday_number_of_class2.set("")
                        self.var_ete_4th_wednesday_time1.set("")
                        self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject1.set("")
                        self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def ete_4th_wednesday_time_table_get(ev):
                        wednesday_ete_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ete_4th_wednesday_time_table.focus()
                        content1=self.ete_4th_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ete_4th_wednesday_number_of_class2.set(row1[2])
                        self.var_ete_4th_wednesday_time1.set(row1[3])
                        self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject1.set(row1[4])
                        self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    
                    self.wednesday_ete_4th_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_ete_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_ete_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_ete_4th_time_table_data_frame,orient=VERTICAL)
                    self.ete_4th_wednesday_time_table=ttk.Treeview(self.wednesday_ete_4th_time_table_data_frame,columns=('cid','day1','ete_4th_wednesday_total_number_of_class','ete_4th_wednesday_time','ete_4th_wednesday_subject','ete_4th_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ete_4th_wednesday_time_table.xview)
                    scrolly.configure(command=self.ete_4th_wednesday_time_table.yview)

                    self.ete_4th_wednesday_time_table.heading('cid',text='Serial No')
                    self.ete_4th_wednesday_time_table.heading('day1',text='Day')
                    self.ete_4th_wednesday_time_table.heading('ete_4th_wednesday_total_number_of_class',text='Totel class')
                    self.ete_4th_wednesday_time_table.heading('ete_4th_wednesday_time',text='class time')
                    self.ete_4th_wednesday_time_table.heading('ete_4th_wednesday_subject',text='Subject')
                    self.ete_4th_wednesday_time_table.heading('ete_4th_wednesday_faculty',text='Faculty')

                    self.ete_4th_wednesday_time_table.column('cid',width=100)
                    self.ete_4th_wednesday_time_table.column('day1',width=150)
                    self.ete_4th_wednesday_time_table.column('ete_4th_wednesday_total_number_of_class',width=100)
                    self.ete_4th_wednesday_time_table.column('ete_4th_wednesday_time',width=150)
                    self.ete_4th_wednesday_time_table.column('ete_4th_wednesday_subject',width=150)
                    self.ete_4th_wednesday_time_table.column('ete_4th_wednesday_faculty',width=150)

                    self.ete_4th_wednesday_time_table['show']='headings'

                    self.ete_4th_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.ete_4th_wednesday_time_table.bind('<ButtonRelease-1>',ete_4th_wednesday_time_table_get)

       
                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_ete_4th_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_ete_4th_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ete_4th_subject_list=[]
                    self.fetch_ete_4th_faculty_subject()
                    wednesday_ete_4thmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject1,state='readonly',values=self.faculty_ete_4th_subject_list)
                    wednesday_ete_4thmistry_cycle_subject1.place(x=400,y=25) 
      
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ete_4th_name_list=[]
                    self.fetch_ete_4th_faculty_name()
                    wednesday_ete_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_ete_4th_wednesday_ete_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ete_4th_name_list)
                    wednesday_ete_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ete_4th_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_ete_4th_wednesday_faculty_serch)
                    ete_4th_faculty_serch1.place(x=800,y=25)
                    ete_4th_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=ete_4th_faculty_serch)
                    ete_4th_faculty_serch1_button.place(x=937,y=22)
                    ete_4th_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    ete_4th_add_database.place(x=10,y=140)

                    ete_4th_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    ete_4th_update_database.place(x=10,y=170)

                    ete_4th_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    ete_4th_delete_database.place(x=10,y=200)

                    ete_4th_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    ete_4th_clear_database.place(x=10,y=230)
#########################################################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Telecommunication_Engineering':
                if self.var_day_select.get() == 'Thursday':

                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ete_4th_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_ete_4th_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_ete_4th_thursday_ete_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_ete_4th_thursday_ete_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into ete_4th_thursday_time_table_database(day1,ete_4th_thursday_total_number_of_class,ete_4th_thursday_time,ete_4th_thursday_subject,ete_4th_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ete_4th_thursday_number_of_class2.get(),
                                            self.var_ete_4th_thursday_time1.get(),
                                            self.var_ete_4th_thursday_ete_4thmistry_cycle_subject1.get(),
                                            self.var_ete_4th_thursday_ete_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_4th_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.ete_4th_thursday_time_table.delete(*self.ete_4th_thursday_time_table.get_children())
                            for row in rows:
                                self.ete_4th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def ete_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from ete_4th_thursday_time_table_database where ete_4th_thursday_subject LIKE '%{self.var_ete_4th_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ete_4th_thursday_time_table.delete(*self.ete_4th_thursday_time_table.get_children())
                                for row in rows:
                                    self.ete_4th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_thursday_ete_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from ete_4th_thursday_time_table_database where ete_4th_thursday_subject=%s",(self.var_ete_4th_thursday_ete_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update ete_4th_thursday_time_table_database set ete_4th_thursday_total_number_of_class=%s,ete_4th_thursday_time=%s,ete_4th_thursday_faculty=%s where ete_4th_thursday_subject=%s",(
                                        
                                        self.var_ete_4th_thursday_number_of_class2.get(),
                                        self.var_ete_4th_thursday_time1.get(),
                                        self.var_ete_4th_thursday_ete_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_ete_4th_thursday_ete_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_thursday_ete_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from ete_4th_thursday_time_table_database where ete_4th_thursday_subject=%s",(self.var_ete_4th_thursday_ete_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from ete_4th_thursday_time_table_database where ete_4th_thursday_subject=%s',(self.var_ete_4th_thursday_ete_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_ete_4th_thursday_faculty_serch.set("")
                        self.var_ete_4th_thursday_number_of_class2.set("")
                        self.var_ete_4th_thursday_time1.set("")
                        self.var_ete_4th_thursday_ete_4thmistry_cycle_subject1.set("")
                        self.var_ete_4th_thursday_ete_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def ete_4th_thursday_time_table_get(ev):
                        thursday_ete_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ete_4th_thursday_time_table.focus()
                        content1=self.ete_4th_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ete_4th_thursday_number_of_class2.set(row1[2])
                        self.var_ete_4th_thursday_time1.set(row1[3])
                        self.var_ete_4th_thursday_ete_4thmistry_cycle_subject1.set(row1[4])
                        self.var_ete_4th_thursday_ete_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    
                    self.thursday_ete_4th_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_ete_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_ete_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_ete_4th_time_table_data_frame,orient=VERTICAL)
                    self.ete_4th_thursday_time_table=ttk.Treeview(self.thursday_ete_4th_time_table_data_frame,columns=('cid','day1','ete_4th_thursday_total_number_of_class','ete_4th_thursday_time','ete_4th_thursday_subject','ete_4th_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ete_4th_thursday_time_table.xview)
                    scrolly.configure(command=self.ete_4th_thursday_time_table.yview)

                    self.ete_4th_thursday_time_table.heading('cid',text='Serial No')
                    self.ete_4th_thursday_time_table.heading('day1',text='Day')
                    self.ete_4th_thursday_time_table.heading('ete_4th_thursday_total_number_of_class',text='Totel class')
                    self.ete_4th_thursday_time_table.heading('ete_4th_thursday_time',text='class time')
                    self.ete_4th_thursday_time_table.heading('ete_4th_thursday_subject',text='Subject')
                    self.ete_4th_thursday_time_table.heading('ete_4th_thursday_faculty',text='Faculty')

                    self.ete_4th_thursday_time_table.column('cid',width=100)
                    self.ete_4th_thursday_time_table.column('day1',width=150)
                    self.ete_4th_thursday_time_table.column('ete_4th_thursday_total_number_of_class',width=100)
                    self.ete_4th_thursday_time_table.column('ete_4th_thursday_time',width=150)
                    self.ete_4th_thursday_time_table.column('ete_4th_thursday_subject',width=150)
                    self.ete_4th_thursday_time_table.column('ete_4th_thursday_faculty',width=150)

                    self.ete_4th_thursday_time_table['show']='headings'

                    self.ete_4th_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.ete_4th_thursday_time_table.bind('<ButtonRelease-1>',ete_4th_thursday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_ete_4th_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_ete_4th_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ete_4th_subject_list=[]
                    self.fetch_ete_4th_faculty_subject()
                    thursday_ete_4thmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_ete_4th_thursday_ete_4thmistry_cycle_subject1,state='readonly',values=self.faculty_ete_4th_subject_list)
                    thursday_ete_4thmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ete_4th_name_list=[]
                    self.fetch_ete_4th_faculty_name()
                    thursday_ete_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_ete_4th_thursday_ete_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ete_4th_name_list)
                    thursday_ete_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ete_4th_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_ete_4th_thursday_faculty_serch)
                    ete_4th_faculty_serch1.place(x=800,y=25)
                    ete_4th_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=ete_4th_faculty_serch)
                    ete_4th_faculty_serch1_button.place(x=937,y=22)
                    ete_4th_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    ete_4th_add_database.place(x=10,y=140)

                    ete_4th_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    ete_4th_update_database.place(x=10,y=170)

                    ete_4th_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    ete_4th_delete_database.place(x=10,y=200)

                    ete_4th_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    ete_4th_clear_database.place(x=10,y=230)
###################################################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Telecommunication_Engineering':
                if self.var_day_select.get() == 'Friday':
                
            
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ete_4th_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_ete_4th_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_ete_4th_friday_ete_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_ete_4th_friday_ete_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into ete_4th_friday_time_table_database(day1,ete_4th_friday_total_number_of_class,ete_4th_friday_time,ete_4th_friday_subject,ete_4th_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ete_4th_friday_number_of_class2.get(),
                                            self.var_ete_4th_friday_time1.get(),
                                            self.var_ete_4th_friday_ete_4thmistry_cycle_subject1.get(),
                                            self.var_ete_4th_friday_ete_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_4th_friday_time_table_database')
                            rows=cur.fetchall()
                            self.ete_4th_friday_time_table.delete(*self.ete_4th_friday_time_table.get_children())
                            for row in rows:
                                self.ete_4th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def ete_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from ete_4th_friday_time_table_database where ete_4th_friday_subject LIKE '%{self.var_ete_4th_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ete_4th_friday_time_table.delete(*self.ete_4th_friday_time_table.get_children())
                                for row in rows:
                                    self.ete_4th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_friday_ete_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from ete_4th_friday_time_table_database where ete_4th_friday_subject=%s",(self.var_ete_4th_friday_ete_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update ete_4th_friday_time_table_database set ete_4th_friday_total_number_of_class=%s,ete_4th_friday_time=%s,ete_4th_friday_faculty=%s where ete_4th_friday_subject=%s",(
                                        
                                        self.var_ete_4th_friday_number_of_class2.get(),
                                        self.var_ete_4th_friday_time1.get(),
                                        self.var_ete_4th_friday_ete_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_ete_4th_friday_ete_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_friday_ete_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from ete_4th_friday_time_table_database where ete_4th_friday_subject=%s",(self.var_ete_4th_friday_ete_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from ete_4th_friday_time_table_database where ete_4th_friday_subject=%s',(self.var_ete_4th_friday_ete_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_ete_4th_friday_faculty_serch.set("")
                        self.var_ete_4th_friday_number_of_class2.set("")
                        self.var_ete_4th_friday_time1.set("")
                        self.var_ete_4th_friday_ete_4thmistry_cycle_subject1.set("")
                        self.var_ete_4th_friday_ete_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def ete_4th_friday_time_table_get(ev):
                        friday_ete_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ete_4th_friday_time_table.focus()
                        content1=self.ete_4th_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ete_4th_friday_number_of_class2.set(row1[2])
                        self.var_ete_4th_friday_time1.set(row1[3])
                        self.var_ete_4th_friday_ete_4thmistry_cycle_subject1.set(row1[4])
                        self.var_ete_4th_friday_ete_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.friday_ete_4th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_ete_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_ete_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_ete_4th_time_table_data_frame,orient=VERTICAL)
                    self.ete_4th_friday_time_table=ttk.Treeview(self.friday_ete_4th_time_table_data_frame,columns=('cid','day1','ete_4th_friday_total_number_of_class','ete_4th_friday_time','ete_4th_friday_subject','ete_4th_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ete_4th_friday_time_table.xview)
                    scrolly.configure(command=self.ete_4th_friday_time_table.yview)

                    self.ete_4th_friday_time_table.heading('cid',text='Serial No')
                    self.ete_4th_friday_time_table.heading('day1',text='Day')
                    self.ete_4th_friday_time_table.heading('ete_4th_friday_total_number_of_class',text='Totel class')
                    self.ete_4th_friday_time_table.heading('ete_4th_friday_time',text='class time')
                    self.ete_4th_friday_time_table.heading('ete_4th_friday_subject',text='Subject')
                    self.ete_4th_friday_time_table.heading('ete_4th_friday_faculty',text='Faculty')

                    self.ete_4th_friday_time_table.column('cid',width=100)
                    self.ete_4th_friday_time_table.column('day1',width=150)
                    self.ete_4th_friday_time_table.column('ete_4th_friday_total_number_of_class',width=100)
                    self.ete_4th_friday_time_table.column('ete_4th_friday_time',width=150)
                    self.ete_4th_friday_time_table.column('ete_4th_friday_subject',width=150)
                    self.ete_4th_friday_time_table.column('ete_4th_friday_faculty',width=150)

                    self.ete_4th_friday_time_table['show']='headings'

                    self.ete_4th_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.ete_4th_friday_time_table.bind('<ButtonRelease-1>',ete_4th_friday_time_table_get)

    
                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_ete_4th_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_ete_4th_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ete_4th_subject_list=[]
                    self.fetch_ete_4th_faculty_subject()
                    friday_ete_4thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ete_4th_friday_ete_4thmistry_cycle_subject1,state='readonly',values=self.faculty_ete_4th_subject_list)
                    friday_ete_4thmistry_cycle_subject1.place(x=400,y=25) 
                 
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ete_4th_name_list=[]
                    self.fetch_ete_4th_faculty_name()
                    friday_ete_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ete_4th_friday_ete_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ete_4th_name_list)
                    friday_ete_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ete_4th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_ete_4th_friday_faculty_serch)
                    ete_4th_faculty_serch1.place(x=800,y=25)
                    ete_4th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=ete_4th_faculty_serch)
                    ete_4th_faculty_serch1_button.place(x=937,y=22)
                    ete_4th_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    ete_4th_add_database.place(x=10,y=140)

                    ete_4th_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    ete_4th_update_database.place(x=10,y=170)

                    ete_4th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    ete_4th_delete_database.place(x=10,y=200)

                    ete_4th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    ete_4th_clear_database.place(x=10,y=230)
##########################################################################################################################################################
        if self.var_sem_select.get() == '4th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Telecommunication_Engineering':
                if self.var_day_select.get() == 'Saturday':
                

                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ete_4th_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_ete_4th_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_ete_4th_saturday_ete_4thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_ete_4th_saturday_ete_4thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into ete_4th_saturday_time_table_database(day1,ete_4th_saturday_total_number_of_class,ete_4th_saturday_time,ete_4th_saturday_subject,ete_4th_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ete_4th_saturday_number_of_class2.get(),
                                            self.var_ete_4th_saturday_time1.get(),
                                            self.var_ete_4th_saturday_ete_4thmistry_cycle_subject1.get(),
                                            self.var_ete_4th_saturday_ete_4thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_4th_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.ete_4th_saturday_time_table.delete(*self.ete_4th_saturday_time_table.get_children())
                            for row in rows:
                                self.ete_4th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def ete_4th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from ete_4th_saturday_time_table_database where ete_4th_saturday_subject LIKE '%{self.var_ete_4th_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ete_4th_saturday_time_table.delete(*self.ete_4th_saturday_time_table.get_children())
                                for row in rows:
                                    self.ete_4th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_saturday_ete_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from ete_4th_saturday_time_table_database where ete_4th_saturday_subject=%s",(self.var_ete_4th_saturday_ete_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update ete_4th_saturday_time_table_database set ete_4th_saturday_total_number_of_class=%s,ete_4th_saturday_time=%s,ete_4th_saturday_faculty=%s where ete_4th_saturday_subject=%s",(
                                        
                                        self.var_ete_4th_saturday_number_of_class2.get(),
                                        self.var_ete_4th_saturday_time1.get(),
                                        self.var_ete_4th_saturday_ete_4thmistry_cycle_subject_faculty1.get(),
                                        self.var_ete_4th_saturday_ete_4thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_4th_saturday_ete_4thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from ete_4th_saturday_time_table_database where ete_4th_saturday_subject=%s",(self.var_ete_4th_saturday_ete_4thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from ete_4th_saturday_time_table_database where ete_4th_saturday_subject=%s',(self.var_ete_4th_saturday_ete_4thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_ete_4th_saturday_faculty_serch.set("")
                        self.var_ete_4th_saturday_number_of_class2.set("")
                        self.var_ete_4th_saturday_time1.set("")
                        self.var_ete_4th_saturday_ete_4thmistry_cycle_subject1.set("")
                        self.var_ete_4th_saturday_ete_4thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def ete_4th_saturday_time_table_get(ev):
                        saturday_ete_4thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ete_4th_saturday_time_table.focus()
                        content1=self.ete_4th_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ete_4th_saturday_number_of_class2.set(row1[2])
                        self.var_ete_4th_saturday_time1.set(row1[3])
                        self.var_ete_4th_saturday_ete_4thmistry_cycle_subject1.set(row1[4])
                        self.var_ete_4th_saturday_ete_4thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.saturday_ete_4th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_ete_4th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_ete_4th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_ete_4th_time_table_data_frame,orient=VERTICAL)
                    self.ete_4th_saturday_time_table=ttk.Treeview(self.saturday_ete_4th_time_table_data_frame,columns=('cid','day1','ete_4th_saturday_total_number_of_class','ete_4th_saturday_time','ete_4th_saturday_subject','ete_4th_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ete_4th_saturday_time_table.xview)
                    scrolly.configure(command=self.ete_4th_saturday_time_table.yview)

                    self.ete_4th_saturday_time_table.heading('cid',text='Serial No')
                    self.ete_4th_saturday_time_table.heading('day1',text='Day')
                    self.ete_4th_saturday_time_table.heading('ete_4th_saturday_total_number_of_class',text='Totel class')
                    self.ete_4th_saturday_time_table.heading('ete_4th_saturday_time',text='class time')
                    self.ete_4th_saturday_time_table.heading('ete_4th_saturday_subject',text='Subject')
                    self.ete_4th_saturday_time_table.heading('ete_4th_saturday_faculty',text='Faculty')

                    self.ete_4th_saturday_time_table.column('cid',width=100)
                    self.ete_4th_saturday_time_table.column('day1',width=150)
                    self.ete_4th_saturday_time_table.column('ete_4th_saturday_total_number_of_class',width=100)
                    self.ete_4th_saturday_time_table.column('ete_4th_saturday_time',width=150)
                    self.ete_4th_saturday_time_table.column('ete_4th_saturday_subject',width=150)
                    self.ete_4th_saturday_time_table.column('ete_4th_saturday_faculty',width=150)

                    self.ete_4th_saturday_time_table['show']='headings'

                    self.ete_4th_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.ete_4th_saturday_time_table.bind('<ButtonRelease-1>',ete_4th_saturday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_ete_4th_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_ete_4th_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ete_4th_subject_list=[]
                    self.fetch_ete_4th_faculty_subject()
                    saturday_ete_4thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ete_4th_saturday_ete_4thmistry_cycle_subject1,state='readonly',values=self.faculty_ete_4th_subject_list)
                    saturday_ete_4thmistry_cycle_subject1.place(x=400,y=25) 
                 
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ete_4th_name_list=[]
                    self.fetch_ete_4th_faculty_name()
                    saturday_ete_4thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ete_4th_saturday_ete_4thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ete_4th_name_list)
                    saturday_ete_4thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ete_4th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_ete_4th_saturday_faculty_serch)
                    ete_4th_faculty_serch1.place(x=800,y=25)
                    ete_4th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=ete_4th_faculty_serch)
                    ete_4th_faculty_serch1_button.place(x=937,y=22)
                    ete_4th_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    ete_4th_add_database.place(x=10,y=140)

                    ete_4th_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    ete_4th_update_database.place(x=10,y=170)

                    ete_4th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    ete_4th_delete_database.place(x=10,y=200)

                    ete_4th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    ete_4th_clear_database.place(x=10,y=230)

       
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Civil_Engineering':
                if self.var_day_select.get() == 'Monday':

                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_civil_5th_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_civil_5th_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_civil_5th_monday_civil_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_civil_5th_monday_civil_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into civil_5th_monday_time_table_database(day1,civil_5th_monday_total_number_of_class,civil_5th_monday_time,civil_5th_monday_subject,civil_5th_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_civil_5th_monday_number_of_class1.get(),
                                            self.var_civil_5th_monday_time1.get(),
                                            self.var_civil_5th_monday_civil_5thmistry_cycle_subject1.get(),
                                            self.var_civil_5th_monday_civil_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_5th_monday_time_table_database')
                            rows=cur.fetchall()
                            self.civil_5th_monday_time_table.delete(*self.civil_5th_monday_time_table.get_children())
                            for row in rows:
                                self.civil_5th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def civil_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from civil_5th_monday_time_table_database where civil_5th_monday_subject LIKE '%{self.var_civil_5th_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.civil_5th_monday_time_table.delete(*self.civil_5th_monday_time_table.get_children())
                                for row in rows:
                                    self.civil_5th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_monday_civil_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from civil_5th_monday_time_table_database where civil_5th_monday_subject=%s",(self.var_civil_5th_monday_civil_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update civil_5th_monday_time_table_database set civil_5th_monday_total_number_of_class=%s,civil_5th_monday_time=%s,civil_5th_monday_faculty=%s where civil_5th_monday_subject=%s",(
                                        
                                        self.var_civil_5th_monday_number_of_class1.get(),
                                        self.var_civil_5th_monday_time1.get(),
                                        self.var_civil_5th_monday_civil_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_civil_5th_monday_civil_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_monday_civil_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from civil_5th_monday_time_table_database where civil_5th_monday_subject=%s",(self.var_civil_5th_monday_civil_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from civil_5th_monday_time_table_database where civil_5th_monday_subject=%s',(self.var_civil_5th_monday_civil_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_civil_5th_monday_faculty_serch.set("")
                        self.var_civil_5th_monday_number_of_class1.set("")
                        self.var_civil_5th_monday_time1.set("")
                        self.var_civil_5th_monday_civil_5thmistry_cycle_subject1.set("")
                        self.var_civil_5th_monday_civil_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def civil_5th_monday_time_table_get(ev):
                        monday_civil_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.civil_5th_monday_time_table.focus()
                        content1=self.civil_5th_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_civil_5th_monday_number_of_class1.set(row1[2])
                        self.var_civil_5th_monday_time1.set(row1[3])
                        self.var_civil_5th_monday_civil_5thmistry_cycle_subject1.set(row1[4])
                        self.var_civil_5th_monday_civil_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    
                    self.monday_civil_5th_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_civil_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_civil_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_civil_5th_time_table_data_frame,orient=VERTICAL)
                    self.civil_5th_monday_time_table=ttk.Treeview(self.monday_civil_5th_time_table_data_frame,columns=('cid','day1','civil_5th_monday_total_number_of_class','civil_5th_monday_time','civil_5th_monday_subject','civil_5th_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.civil_5th_monday_time_table.xview)
                    scrolly.configure(command=self.civil_5th_monday_time_table.yview)

                    self.civil_5th_monday_time_table.heading('cid',text='Serial No')
                    self.civil_5th_monday_time_table.heading('day1',text='Day')
                    self.civil_5th_monday_time_table.heading('civil_5th_monday_total_number_of_class',text='Totel class')
                    self.civil_5th_monday_time_table.heading('civil_5th_monday_time',text='class time')
                    self.civil_5th_monday_time_table.heading('civil_5th_monday_subject',text='Subject')
                    self.civil_5th_monday_time_table.heading('civil_5th_monday_faculty',text='Faculty')

                    self.civil_5th_monday_time_table.column('cid',width=100)
                    self.civil_5th_monday_time_table.column('day1',width=150)
                    self.civil_5th_monday_time_table.column('civil_5th_monday_total_number_of_class',width=100)
                    self.civil_5th_monday_time_table.column('civil_5th_monday_time',width=150)
                    self.civil_5th_monday_time_table.column('civil_5th_monday_subject',width=150)
                    self.civil_5th_monday_time_table.column('civil_5th_monday_faculty',width=150)

                    self.civil_5th_monday_time_table['show']='headings'

                    self.civil_5th_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.civil_5th_monday_time_table.bind('<ButtonRelease-1>',civil_5th_monday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_civil_5th_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_civil_5th_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_civil_5th_subject_list=[]
                    self.fetch_civil_5th_faculty_subject()
                    monday_civil_5thmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_civil_5th_monday_civil_5thmistry_cycle_subject1,state='readonly',values=self.faculty_civil_5th_subject_list)
                    monday_civil_5thmistry_cycle_subject1.place(x=400,y=25) 
                 
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_civil_5th_name_list=[]
                    self.fetch_civil_5th_faculty_name()
                    monday_civil_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_civil_5th_monday_civil_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_civil_5th_name_list)
                    monday_civil_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    civil_5th_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_civil_5th_monday_faculty_serch)
                    civil_5th_faculty_serch1.place(x=800,y=25)
                    civil_5th_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=civil_5th_faculty_serch)
                    civil_5th_faculty_serch1_button.place(x=937,y=22)
                    civil_5th_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    civil_5th_add_database.place(x=10,y=140)

                    civil_5th_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    civil_5th_update_database.place(x=10,y=170)

                    civil_5th_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    civil_5th_delete_database.place(x=10,y=200)

                    civil_5th_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    civil_5th_clear_database.place(x=10,y=230)
##########################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Civil_Engineering':
                if self.var_day_select.get() == 'Thuesday':
                
                  

                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_civil_5th_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_civil_5th_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into civil_5th_thuesday_time_table_database(day1,civil_5th_thuesday_total_number_of_class,civil_5th_thuesday_time,civil_5th_thuesday_subject,civil_5th_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_civil_5th_thuesday_number_of_class2.get(),
                                            self.var_civil_5th_thuesday_time1.get(),
                                            self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject1.get(),
                                            self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_5th_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.civil_5th_thuesday_time_table.delete(*self.civil_5th_thuesday_time_table.get_children())
                            for row in rows:
                                self.civil_5th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def civil_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from civil_5th_thuesday_time_table_database where civil_5th_thuesday_subject LIKE '%{self.var_civil_5th_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.civil_5th_thuesday_time_table.delete(*self.civil_5th_thuesday_time_table.get_children())
                                for row in rows:
                                    self.civil_5th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from civil_5th_thuesday_time_table_database where civil_5th_thuesday_subject=%s",(self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update civil_5th_thuesday_time_table_database set civil_5th_thuesday_total_number_of_class=%s,civil_5th_thuesday_time=%s,civil_5th_thuesday_faculty=%s where civil_5th_thuesday_subject=%s",(
                                        
                                        self.var_civil_5th_thuesday_number_of_class2.get(),
                                        self.var_civil_5th_thuesday_time1.get(),
                                        self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from civil_5th_thuesday_time_table_database where civil_5th_thuesday_subject=%s",(self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from civil_5th_thuesday_time_table_database where civil_5th_thuesday_subject=%s',(self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_civil_5th_thuesday_faculty_serch.set("")
                        self.var_civil_5th_thuesday_number_of_class2.set("")
                        self.var_civil_5th_thuesday_time1.set("")
                        self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject1.set("")
                        self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def civil_5th_thuesday_time_table_get(ev):
                        thuesday_civil_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.civil_5th_thuesday_time_table.focus()
                        content1=self.civil_5th_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_civil_5th_thuesday_number_of_class2.set(row1[2])
                        self.var_civil_5th_thuesday_time1.set(row1[3])
                        self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject1.set(row1[4])
                        self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    
                    self.thuesday_civil_5th_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_civil_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_civil_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_civil_5th_time_table_data_frame,orient=VERTICAL)
                    self.civil_5th_thuesday_time_table=ttk.Treeview(self.thuesday_civil_5th_time_table_data_frame,columns=('cid','day1','civil_5th_thuesday_total_number_of_class','civil_5th_thuesday_time','civil_5th_thuesday_subject','civil_5th_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.civil_5th_thuesday_time_table.xview)
                    scrolly.configure(command=self.civil_5th_thuesday_time_table.yview)

                    self.civil_5th_thuesday_time_table.heading('cid',text='Serial No')
                    self.civil_5th_thuesday_time_table.heading('day1',text='Day')
                    self.civil_5th_thuesday_time_table.heading('civil_5th_thuesday_total_number_of_class',text='Totel class')
                    self.civil_5th_thuesday_time_table.heading('civil_5th_thuesday_time',text='class time')
                    self.civil_5th_thuesday_time_table.heading('civil_5th_thuesday_subject',text='Subject')
                    self.civil_5th_thuesday_time_table.heading('civil_5th_thuesday_faculty',text='Faculty')

                    self.civil_5th_thuesday_time_table.column('cid',width=100)
                    self.civil_5th_thuesday_time_table.column('day1',width=150)
                    self.civil_5th_thuesday_time_table.column('civil_5th_thuesday_total_number_of_class',width=100)
                    self.civil_5th_thuesday_time_table.column('civil_5th_thuesday_time',width=150)
                    self.civil_5th_thuesday_time_table.column('civil_5th_thuesday_subject',width=150)
                    self.civil_5th_thuesday_time_table.column('civil_5th_thuesday_faculty',width=150)

                    self.civil_5th_thuesday_time_table['show']='headings'

                    self.civil_5th_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.civil_5th_thuesday_time_table.bind('<ButtonRelease-1>',civil_5th_thuesday_time_table_get)

   
                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_civil_5th_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_civil_5th_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_civil_5th_subject_list=[]
                    self.fetch_civil_5th_faculty_subject()
                    thuesday_civil_5thmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject1,state='readonly',values=self.faculty_civil_5th_subject_list)
                    thuesday_civil_5thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_civil_5th_name_list=[]
                    self.fetch_civil_5th_faculty_name()
                    thuesday_civil_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_civil_5th_thuesday_civil_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_civil_5th_name_list)
                    thuesday_civil_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    civil_5th_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_civil_5th_thuesday_faculty_serch)
                    civil_5th_faculty_serch1.place(x=800,y=25)
                    civil_5th_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=civil_5th_faculty_serch)
                    civil_5th_faculty_serch1_button.place(x=937,y=22)
                    civil_5th_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    civil_5th_add_database.place(x=10,y=140)

                    civil_5th_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    civil_5th_update_database.place(x=10,y=170)

                    civil_5th_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    civil_5th_delete_database.place(x=10,y=200)

                    civil_5th_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    civil_5th_clear_database.place(x=10,y=230)
######################################################################################################################################################################

        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Civil_Engineering':
                if self.var_day_select.get() == 'Wednesday':

                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_civil_5th_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_civil_5th_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into civil_5th_wednesday_time_table_database(day1,civil_5th_wednesday_total_number_of_class,civil_5th_wednesday_time,civil_5th_wednesday_subject,civil_5th_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_civil_5th_wednesday_number_of_class2.get(),
                                            self.var_civil_5th_wednesday_time1.get(),
                                            self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject1.get(),
                                            self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_5th_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.civil_5th_wednesday_time_table.delete(*self.civil_5th_wednesday_time_table.get_children())
                            for row in rows:
                                self.civil_5th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def civil_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from civil_5th_wednesday_time_table_database where civil_5th_wednesday_subject LIKE '%{self.var_civil_5th_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.civil_5th_wednesday_time_table.delete(*self.civil_5th_wednesday_time_table.get_children())
                                for row in rows:
                                    self.civil_5th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from civil_5th_wednesday_time_table_database where civil_5th_wednesday_subject=%s",(self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update civil_5th_wednesday_time_table_database set civil_5th_wednesday_total_number_of_class=%s,civil_5th_wednesday_time=%s,civil_5th_wednesday_faculty=%s where civil_5th_wednesday_subject=%s",(
                                        
                                        self.var_civil_5th_wednesday_number_of_class2.get(),
                                        self.var_civil_5th_wednesday_time1.get(),
                                        self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from civil_5th_wednesday_time_table_database where civil_5th_wednesday_subject=%s",(self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from civil_5th_wednesday_time_table_database where civil_5th_wednesday_subject=%s',(self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_civil_5th_wednesday_faculty_serch.set("")
                        self.var_civil_5th_wednesday_number_of_class2.set("")
                        self.var_civil_5th_wednesday_time1.set("")
                        self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject1.set("")
                        self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def civil_5th_wednesday_time_table_get(ev):
                        wednesday_civil_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.civil_5th_wednesday_time_table.focus()
                        content1=self.civil_5th_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_civil_5th_wednesday_number_of_class2.set(row1[2])
                        self.var_civil_5th_wednesday_time1.set(row1[3])
                        self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject1.set(row1[4])
                        self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    
                    self.wednesday_civil_5th_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_civil_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_civil_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_civil_5th_time_table_data_frame,orient=VERTICAL)
                    self.civil_5th_wednesday_time_table=ttk.Treeview(self.wednesday_civil_5th_time_table_data_frame,columns=('cid','day1','civil_5th_wednesday_total_number_of_class','civil_5th_wednesday_time','civil_5th_wednesday_subject','civil_5th_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.civil_5th_wednesday_time_table.xview)
                    scrolly.configure(command=self.civil_5th_wednesday_time_table.yview)

                    self.civil_5th_wednesday_time_table.heading('cid',text='Serial No')
                    self.civil_5th_wednesday_time_table.heading('day1',text='Day')
                    self.civil_5th_wednesday_time_table.heading('civil_5th_wednesday_total_number_of_class',text='Totel class')
                    self.civil_5th_wednesday_time_table.heading('civil_5th_wednesday_time',text='class time')
                    self.civil_5th_wednesday_time_table.heading('civil_5th_wednesday_subject',text='Subject')
                    self.civil_5th_wednesday_time_table.heading('civil_5th_wednesday_faculty',text='Faculty')

                    self.civil_5th_wednesday_time_table.column('cid',width=100)
                    self.civil_5th_wednesday_time_table.column('day1',width=150)
                    self.civil_5th_wednesday_time_table.column('civil_5th_wednesday_total_number_of_class',width=100)
                    self.civil_5th_wednesday_time_table.column('civil_5th_wednesday_time',width=150)
                    self.civil_5th_wednesday_time_table.column('civil_5th_wednesday_subject',width=150)
                    self.civil_5th_wednesday_time_table.column('civil_5th_wednesday_faculty',width=150)

                    self.civil_5th_wednesday_time_table['show']='headings'

                    self.civil_5th_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.civil_5th_wednesday_time_table.bind('<ButtonRelease-1>',civil_5th_wednesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_civil_5th_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_civil_5th_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_civil_5th_subject_list=[]
                    self.fetch_civil_5th_faculty_subject()
                    wednesday_civil_5thmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject1,state='readonly',values=self.faculty_civil_5th_subject_list)
                    wednesday_civil_5thmistry_cycle_subject1.place(x=400,y=25) 
      
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_civil_5th_name_list=[]
                    self.fetch_civil_5th_faculty_name()
                    wednesday_civil_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_civil_5th_wednesday_civil_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_civil_5th_name_list)
                    wednesday_civil_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    civil_5th_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_civil_5th_wednesday_faculty_serch)
                    civil_5th_faculty_serch1.place(x=800,y=25)
                    civil_5th_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=civil_5th_faculty_serch)
                    civil_5th_faculty_serch1_button.place(x=937,y=22)
                    civil_5th_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    civil_5th_add_database.place(x=10,y=140)

                    civil_5th_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    civil_5th_update_database.place(x=10,y=170)

                    civil_5th_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    civil_5th_delete_database.place(x=10,y=200)

                    civil_5th_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    civil_5th_clear_database.place(x=10,y=230)

##########################################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Civil_Engineering':
                if self.var_day_select.get() == 'Thursday':
                

                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_civil_5th_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_civil_5th_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_civil_5th_thursday_civil_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_civil_5th_thursday_civil_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into civil_5th_thursday_time_table_database(day1,civil_5th_thursday_total_number_of_class,civil_5th_thursday_time,civil_5th_thursday_subject,civil_5th_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_civil_5th_thursday_number_of_class2.get(),
                                            self.var_civil_5th_thursday_time1.get(),
                                            self.var_civil_5th_thursday_civil_5thmistry_cycle_subject1.get(),
                                            self.var_civil_5th_thursday_civil_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_5th_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.civil_5th_thursday_time_table.delete(*self.civil_5th_thursday_time_table.get_children())
                            for row in rows:
                                self.civil_5th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def civil_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from civil_5th_thursday_time_table_database where civil_5th_thursday_subject LIKE '%{self.var_civil_5th_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.civil_5th_thursday_time_table.delete(*self.civil_5th_thursday_time_table.get_children())
                                for row in rows:
                                    self.civil_5th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_thursday_civil_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from civil_5th_thursday_time_table_database where civil_5th_thursday_subject=%s",(self.var_civil_5th_thursday_civil_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update civil_5th_thursday_time_table_database set civil_5th_thursday_total_number_of_class=%s,civil_5th_thursday_time=%s,civil_5th_thursday_faculty=%s where civil_5th_thursday_subject=%s",(
                                        
                                        self.var_civil_5th_thursday_number_of_class2.get(),
                                        self.var_civil_5th_thursday_time1.get(),
                                        self.var_civil_5th_thursday_civil_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_civil_5th_thursday_civil_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_thursday_civil_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from civil_5th_thursday_time_table_database where civil_5th_thursday_subject=%s",(self.var_civil_5th_thursday_civil_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from civil_5th_thursday_time_table_database where civil_5th_thursday_subject=%s',(self.var_civil_5th_thursday_civil_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_civil_5th_thursday_faculty_serch.set("")
                        self.var_civil_5th_thursday_number_of_class2.set("")
                        self.var_civil_5th_thursday_time1.set("")
                        self.var_civil_5th_thursday_civil_5thmistry_cycle_subject1.set("")
                        self.var_civil_5th_thursday_civil_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def civil_5th_thursday_time_table_get(ev):
                        thursday_civil_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.civil_5th_thursday_time_table.focus()
                        content1=self.civil_5th_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_civil_5th_thursday_number_of_class2.set(row1[2])
                        self.var_civil_5th_thursday_time1.set(row1[3])
                        self.var_civil_5th_thursday_civil_5thmistry_cycle_subject1.set(row1[4])
                        self.var_civil_5th_thursday_civil_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    
                    self.thursday_civil_5th_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_civil_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_civil_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_civil_5th_time_table_data_frame,orient=VERTICAL)
                    self.civil_5th_thursday_time_table=ttk.Treeview(self.thursday_civil_5th_time_table_data_frame,columns=('cid','day1','civil_5th_thursday_total_number_of_class','civil_5th_thursday_time','civil_5th_thursday_subject','civil_5th_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.civil_5th_thursday_time_table.xview)
                    scrolly.configure(command=self.civil_5th_thursday_time_table.yview)

                    self.civil_5th_thursday_time_table.heading('cid',text='Serial No')
                    self.civil_5th_thursday_time_table.heading('day1',text='Day')
                    self.civil_5th_thursday_time_table.heading('civil_5th_thursday_total_number_of_class',text='Totel class')
                    self.civil_5th_thursday_time_table.heading('civil_5th_thursday_time',text='class time')
                    self.civil_5th_thursday_time_table.heading('civil_5th_thursday_subject',text='Subject')
                    self.civil_5th_thursday_time_table.heading('civil_5th_thursday_faculty',text='Faculty')

                    self.civil_5th_thursday_time_table.column('cid',width=100)
                    self.civil_5th_thursday_time_table.column('day1',width=150)
                    self.civil_5th_thursday_time_table.column('civil_5th_thursday_total_number_of_class',width=100)
                    self.civil_5th_thursday_time_table.column('civil_5th_thursday_time',width=150)
                    self.civil_5th_thursday_time_table.column('civil_5th_thursday_subject',width=150)
                    self.civil_5th_thursday_time_table.column('civil_5th_thursday_faculty',width=150)

                    self.civil_5th_thursday_time_table['show']='headings'

                    self.civil_5th_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.civil_5th_thursday_time_table.bind('<ButtonRelease-1>',civil_5th_thursday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_civil_5th_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_civil_5th_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_civil_5th_subject_list=[]
                    self.fetch_civil_5th_faculty_subject()
                    thursday_civil_5thmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_civil_5th_thursday_civil_5thmistry_cycle_subject1,state='readonly',values=self.faculty_civil_5th_subject_list)
                    thursday_civil_5thmistry_cycle_subject1.place(x=400,y=25) 
                  
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_civil_5th_name_list=[]
                    self.fetch_civil_5th_faculty_name()
                    thursday_civil_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_civil_5th_thursday_civil_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_civil_5th_name_list)
                    thursday_civil_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    civil_5th_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_civil_5th_thursday_faculty_serch)
                    civil_5th_faculty_serch1.place(x=800,y=25)
                    civil_5th_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=civil_5th_faculty_serch)
                    civil_5th_faculty_serch1_button.place(x=937,y=22)
                    civil_5th_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    civil_5th_add_database.place(x=10,y=140)

                    civil_5th_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    civil_5th_update_database.place(x=10,y=170)

                    civil_5th_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    civil_5th_delete_database.place(x=10,y=200)

                    civil_5th_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    civil_5th_clear_database.place(x=10,y=230)

#####################################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Civil_Engineering':
                if self.var_day_select.get() == 'Friday':
                
     
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_civil_5th_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_civil_5th_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_civil_5th_friday_civil_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_civil_5th_friday_civil_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into civil_5th_friday_time_table_database(day1,civil_5th_friday_total_number_of_class,civil_5th_friday_time,civil_5th_friday_subject,civil_5th_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_civil_5th_friday_number_of_class2.get(),
                                            self.var_civil_5th_friday_time1.get(),
                                            self.var_civil_5th_friday_civil_5thmistry_cycle_subject1.get(),
                                            self.var_civil_5th_friday_civil_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_5th_friday_time_table_database')
                            rows=cur.fetchall()
                            self.civil_5th_friday_time_table.delete(*self.civil_5th_friday_time_table.get_children())
                            for row in rows:
                                self.civil_5th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def civil_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from civil_5th_friday_time_table_database where civil_5th_friday_subject LIKE '%{self.var_civil_5th_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.civil_5th_friday_time_table.delete(*self.civil_5th_friday_time_table.get_children())
                                for row in rows:
                                    self.civil_5th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_friday_civil_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from civil_5th_friday_time_table_database where civil_5th_friday_subject=%s",(self.var_civil_5th_friday_civil_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update civil_5th_friday_time_table_database set civil_5th_friday_total_number_of_class=%s,civil_5th_friday_time=%s,civil_5th_friday_faculty=%s where civil_5th_friday_subject=%s",(
                                        
                                        self.var_civil_5th_friday_number_of_class2.get(),
                                        self.var_civil_5th_friday_time1.get(),
                                        self.var_civil_5th_friday_civil_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_civil_5th_friday_civil_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_friday_civil_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from civil_5th_friday_time_table_database where civil_5th_friday_subject=%s",(self.var_civil_5th_friday_civil_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from civil_5th_friday_time_table_database where civil_5th_friday_subject=%s',(self.var_civil_5th_friday_civil_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_civil_5th_friday_faculty_serch.set("")
                        self.var_civil_5th_friday_number_of_class2.set("")
                        self.var_civil_5th_friday_time1.set("")
                        self.var_civil_5th_friday_civil_5thmistry_cycle_subject1.set("")
                        self.var_civil_5th_friday_civil_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def civil_5th_friday_time_table_get(ev):
                        friday_civil_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.civil_5th_friday_time_table.focus()
                        content1=self.civil_5th_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_civil_5th_friday_number_of_class2.set(row1[2])
                        self.var_civil_5th_friday_time1.set(row1[3])
                        self.var_civil_5th_friday_civil_5thmistry_cycle_subject1.set(row1[4])
                        self.var_civil_5th_friday_civil_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.friday_civil_5th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_civil_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_civil_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_civil_5th_time_table_data_frame,orient=VERTICAL)
                    self.civil_5th_friday_time_table=ttk.Treeview(self.friday_civil_5th_time_table_data_frame,columns=('cid','day1','civil_5th_friday_total_number_of_class','civil_5th_friday_time','civil_5th_friday_subject','civil_5th_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.civil_5th_friday_time_table.xview)
                    scrolly.configure(command=self.civil_5th_friday_time_table.yview)

                    self.civil_5th_friday_time_table.heading('cid',text='Serial No')
                    self.civil_5th_friday_time_table.heading('day1',text='Day')
                    self.civil_5th_friday_time_table.heading('civil_5th_friday_total_number_of_class',text='Totel class')
                    self.civil_5th_friday_time_table.heading('civil_5th_friday_time',text='class time')
                    self.civil_5th_friday_time_table.heading('civil_5th_friday_subject',text='Subject')
                    self.civil_5th_friday_time_table.heading('civil_5th_friday_faculty',text='Faculty')

                    self.civil_5th_friday_time_table.column('cid',width=100)
                    self.civil_5th_friday_time_table.column('day1',width=150)
                    self.civil_5th_friday_time_table.column('civil_5th_friday_total_number_of_class',width=100)
                    self.civil_5th_friday_time_table.column('civil_5th_friday_time',width=150)
                    self.civil_5th_friday_time_table.column('civil_5th_friday_subject',width=150)
                    self.civil_5th_friday_time_table.column('civil_5th_friday_faculty',width=150)

                    self.civil_5th_friday_time_table['show']='headings'

                    self.civil_5th_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.civil_5th_friday_time_table.bind('<ButtonRelease-1>',civil_5th_friday_time_table_get)

      
                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_civil_5th_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_civil_5th_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_civil_5th_subject_list=[]
                    self.fetch_civil_5th_faculty_subject()
                    friday_civil_5thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_civil_5th_friday_civil_5thmistry_cycle_subject1,state='readonly',values=self.faculty_civil_5th_subject_list)
                    friday_civil_5thmistry_cycle_subject1.place(x=400,y=25) 
                  
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_civil_5th_name_list=[]
                    self.fetch_civil_5th_faculty_name()
                    friday_civil_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_civil_5th_friday_civil_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_civil_5th_name_list)
                    friday_civil_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    civil_5th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_civil_5th_friday_faculty_serch)
                    civil_5th_faculty_serch1.place(x=800,y=25)
                    civil_5th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=civil_5th_faculty_serch)
                    civil_5th_faculty_serch1_button.place(x=937,y=22)
                    civil_5th_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    civil_5th_add_database.place(x=10,y=140)

                    civil_5th_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    civil_5th_update_database.place(x=10,y=170)

                    civil_5th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    civil_5th_delete_database.place(x=10,y=200)

                    civil_5th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    civil_5th_clear_database.place(x=10,y=230)

###############################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Civil_Engineering':
                if self.var_day_select.get() == 'Saturday':
            
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_civil_5th_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_civil_5th_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_civil_5th_saturday_civil_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_civil_5th_saturday_civil_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into civil_5th_saturday_time_table_database(day1,civil_5th_saturday_total_number_of_class,civil_5th_saturday_time,civil_5th_saturday_subject,civil_5th_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_civil_5th_saturday_number_of_class2.get(),
                                            self.var_civil_5th_saturday_time1.get(),
                                            self.var_civil_5th_saturday_civil_5thmistry_cycle_subject1.get(),
                                            self.var_civil_5th_saturday_civil_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from civil_5th_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.civil_5th_saturday_time_table.delete(*self.civil_5th_saturday_time_table.get_children())
                            for row in rows:
                                self.civil_5th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def civil_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from civil_5th_saturday_time_table_database where civil_5th_saturday_subject LIKE '%{self.var_civil_5th_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.civil_5th_saturday_time_table.delete(*self.civil_5th_saturday_time_table.get_children())
                                for row in rows:
                                    self.civil_5th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_saturday_civil_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from civil_5th_saturday_time_table_database where civil_5th_saturday_subject=%s",(self.var_civil_5th_saturday_civil_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update civil_5th_saturday_time_table_database set civil_5th_saturday_total_number_of_class=%s,civil_5th_saturday_time=%s,civil_5th_saturday_faculty=%s where civil_5th_saturday_subject=%s",(
                                        
                                        self.var_civil_5th_saturday_number_of_class2.get(),
                                        self.var_civil_5th_saturday_time1.get(),
                                        self.var_civil_5th_saturday_civil_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_civil_5th_saturday_civil_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_civil_5th_saturday_civil_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from civil_5th_saturday_time_table_database where civil_5th_saturday_subject=%s",(self.var_civil_5th_saturday_civil_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from civil_5th_saturday_time_table_database where civil_5th_saturday_subject=%s',(self.var_civil_5th_saturday_civil_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_civil_5th_saturday_faculty_serch.set("")
                        self.var_civil_5th_saturday_number_of_class2.set("")
                        self.var_civil_5th_saturday_time1.set("")
                        self.var_civil_5th_saturday_civil_5thmistry_cycle_subject1.set("")
                        self.var_civil_5th_saturday_civil_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def civil_5th_saturday_time_table_get(ev):
                        saturday_civil_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.civil_5th_saturday_time_table.focus()
                        content1=self.civil_5th_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_civil_5th_saturday_number_of_class2.set(row1[2])
                        self.var_civil_5th_saturday_time1.set(row1[3])
                        self.var_civil_5th_saturday_civil_5thmistry_cycle_subject1.set(row1[4])
                        self.var_civil_5th_saturday_civil_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.saturday_civil_5th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_civil_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_civil_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_civil_5th_time_table_data_frame,orient=VERTICAL)
                    self.civil_5th_saturday_time_table=ttk.Treeview(self.saturday_civil_5th_time_table_data_frame,columns=('cid','day1','civil_5th_saturday_total_number_of_class','civil_5th_saturday_time','civil_5th_saturday_subject','civil_5th_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.civil_5th_saturday_time_table.xview)
                    scrolly.configure(command=self.civil_5th_saturday_time_table.yview)

                    self.civil_5th_saturday_time_table.heading('cid',text='Serial No')
                    self.civil_5th_saturday_time_table.heading('day1',text='Day')
                    self.civil_5th_saturday_time_table.heading('civil_5th_saturday_total_number_of_class',text='Totel class')
                    self.civil_5th_saturday_time_table.heading('civil_5th_saturday_time',text='class time')
                    self.civil_5th_saturday_time_table.heading('civil_5th_saturday_subject',text='Subject')
                    self.civil_5th_saturday_time_table.heading('civil_5th_saturday_faculty',text='Faculty')

                    self.civil_5th_saturday_time_table.column('cid',width=100)
                    self.civil_5th_saturday_time_table.column('day1',width=150)
                    self.civil_5th_saturday_time_table.column('civil_5th_saturday_total_number_of_class',width=100)
                    self.civil_5th_saturday_time_table.column('civil_5th_saturday_time',width=150)
                    self.civil_5th_saturday_time_table.column('civil_5th_saturday_subject',width=150)
                    self.civil_5th_saturday_time_table.column('civil_5th_saturday_faculty',width=150)

                    self.civil_5th_saturday_time_table['show']='headings'

                    self.civil_5th_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.civil_5th_saturday_time_table.bind('<ButtonRelease-1>',civil_5th_saturday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_civil_5th_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_civil_5th_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_civil_5th_subject_list=[]
                    self.fetch_civil_5th_faculty_subject()
                    saturday_civil_5thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_civil_5th_saturday_civil_5thmistry_cycle_subject1,state='readonly',values=self.faculty_civil_5th_subject_list)
                    saturday_civil_5thmistry_cycle_subject1.place(x=400,y=25) 
               
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_civil_5th_name_list=[]
                    self.fetch_civil_5th_faculty_name()
                    saturday_civil_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_civil_5th_saturday_civil_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_civil_5th_name_list)
                    saturday_civil_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    civil_5th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_civil_5th_saturday_faculty_serch)
                    civil_5th_faculty_serch1.place(x=800,y=25)
                    civil_5th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=civil_5th_faculty_serch)
                    civil_5th_faculty_serch1_button.place(x=937,y=22)
                    civil_5th_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    civil_5th_add_database.place(x=10,y=140)

                    civil_5th_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    civil_5th_update_database.place(x=10,y=170)

                    civil_5th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    civil_5th_delete_database.place(x=10,y=200)

                    civil_5th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    civil_5th_clear_database.place(x=10,y=230)


        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Mechanical_Engineering':
                if self.var_day_select.get() == 'Monday':
   
                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_mech_5th_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_mech_5th_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_mech_5th_monday_mech_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_mech_5th_monday_mech_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into mech_5th_monday_time_table_database(day1,mech_5th_monday_total_number_of_class,mech_5th_monday_time,mech_5th_monday_subject,mech_5th_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_mech_5th_monday_number_of_class1.get(),
                                            self.var_mech_5th_monday_time1.get(),
                                            self.var_mech_5th_monday_mech_5thmistry_cycle_subject1.get(),
                                            self.var_mech_5th_monday_mech_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_5th_monday_time_table_database')
                            rows=cur.fetchall()
                            self.mech_5th_monday_time_table.delete(*self.mech_5th_monday_time_table.get_children())
                            for row in rows:
                                self.mech_5th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def mech_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from mech_5th_monday_time_table_database where mech_5th_monday_subject LIKE '%{self.var_mech_5th_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.mech_5th_monday_time_table.delete(*self.mech_5th_monday_time_table.get_children())
                                for row in rows:
                                    self.mech_5th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_monday_mech_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from mech_5th_monday_time_table_database where mech_5th_monday_subject=%s",(self.var_mech_5th_monday_mech_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update mech_5th_monday_time_table_database set mech_5th_monday_total_number_of_class=%s,mech_5th_monday_time=%s,mech_5th_monday_faculty=%s where mech_5th_monday_subject=%s",(
                                        
                                        self.var_mech_5th_monday_number_of_class1.get(),
                                        self.var_mech_5th_monday_time1.get(),
                                        self.var_mech_5th_monday_mech_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_mech_5th_monday_mech_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_monday_mech_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from mech_5th_monday_time_table_database where mech_5th_monday_subject=%s",(self.var_mech_5th_monday_mech_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from mech_5th_monday_time_table_database where mech_5th_monday_subject=%s',(self.var_mech_5th_monday_mech_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_mech_5th_monday_faculty_serch.set("")
                        self.var_mech_5th_monday_number_of_class1.set("")
                        self.var_mech_5th_monday_time1.set("")
                        self.var_mech_5th_monday_mech_5thmistry_cycle_subject1.set("")
                        self.var_mech_5th_monday_mech_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def mech_5th_monday_time_table_get(ev):
                        monday_mech_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.mech_5th_monday_time_table.focus()
                        content1=self.mech_5th_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_mech_5th_monday_number_of_class1.set(row1[2])
                        self.var_mech_5th_monday_time1.set(row1[3])
                        self.var_mech_5th_monday_mech_5thmistry_cycle_subject1.set(row1[4])
                        self.var_mech_5th_monday_mech_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    
                    self.monday_mech_5th_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_mech_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_mech_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_mech_5th_time_table_data_frame,orient=VERTICAL)
                    self.mech_5th_monday_time_table=ttk.Treeview(self.monday_mech_5th_time_table_data_frame,columns=('cid','day1','mech_5th_monday_total_number_of_class','mech_5th_monday_time','mech_5th_monday_subject','mech_5th_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.mech_5th_monday_time_table.xview)
                    scrolly.configure(command=self.mech_5th_monday_time_table.yview)

                    self.mech_5th_monday_time_table.heading('cid',text='Serial No')
                    self.mech_5th_monday_time_table.heading('day1',text='Day')
                    self.mech_5th_monday_time_table.heading('mech_5th_monday_total_number_of_class',text='Totel class')
                    self.mech_5th_monday_time_table.heading('mech_5th_monday_time',text='class time')
                    self.mech_5th_monday_time_table.heading('mech_5th_monday_subject',text='Subject')
                    self.mech_5th_monday_time_table.heading('mech_5th_monday_faculty',text='Faculty')

                    self.mech_5th_monday_time_table.column('cid',width=100)
                    self.mech_5th_monday_time_table.column('day1',width=150)
                    self.mech_5th_monday_time_table.column('mech_5th_monday_total_number_of_class',width=100)
                    self.mech_5th_monday_time_table.column('mech_5th_monday_time',width=150)
                    self.mech_5th_monday_time_table.column('mech_5th_monday_subject',width=150)
                    self.mech_5th_monday_time_table.column('mech_5th_monday_faculty',width=150)

                    self.mech_5th_monday_time_table['show']='headings'

                    self.mech_5th_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.mech_5th_monday_time_table.bind('<ButtonRelease-1>',mech_5th_monday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_mech_5th_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_mech_5th_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_mech_5th_subject_list=[]
                    self.fetch_mech_5th_faculty_subject()
                    monday_mech_5thmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_mech_5th_monday_mech_5thmistry_cycle_subject1,state='readonly',values=self.faculty_mech_5th_subject_list)
                    monday_mech_5thmistry_cycle_subject1.place(x=400,y=25) 
               
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_mech_5th_name_list=[]
                    self.fetch_mech_5th_faculty_name()
                    monday_mech_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_mech_5th_monday_mech_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_mech_5th_name_list)
                    monday_mech_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    mech_5th_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_mech_5th_monday_faculty_serch)
                    mech_5th_faculty_serch1.place(x=800,y=25)
                    mech_5th_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=mech_5th_faculty_serch)
                    mech_5th_faculty_serch1_button.place(x=937,y=22)
                    mech_5th_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    mech_5th_add_database.place(x=10,y=140)

                    mech_5th_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    mech_5th_update_database.place(x=10,y=170)

                    mech_5th_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    mech_5th_delete_database.place(x=10,y=200)

                    mech_5th_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    mech_5th_clear_database.place(x=10,y=230)
##############################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Mechanical_Engineering':
                if self.var_day_select.get() == 'Thuesday':
                
                  
                    #print('this time table is for mech_5thmistry cycle in mech engineering mondy')
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_mech_5th_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_mech_5th_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_mech_5th_thuesday_mech_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_mech_5th_thuesday_mech_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into mech_5th_thuesday_time_table_database(day1,mech_5th_thuesday_total_number_of_class,mech_5th_thuesday_time,mech_5th_thuesday_subject,mech_5th_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_mech_5th_thuesday_number_of_class2.get(),
                                            self.var_mech_5th_thuesday_time1.get(),
                                            self.var_mech_5th_thuesday_mech_5thmistry_cycle_subject1.get(),
                                            self.var_mech_5th_thuesday_mech_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_5th_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.mech_5th_thuesday_time_table.delete(*self.mech_5th_thuesday_time_table.get_children())
                            for row in rows:
                                self.mech_5th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def mech_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from mech_5th_thuesday_time_table_database where mech_5th_thuesday_subject LIKE '%{self.var_mech_5th_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.mech_5th_thuesday_time_table.delete(*self.mech_5th_thuesday_time_table.get_children())
                                for row in rows:
                                    self.mech_5th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_thuesday_mech_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from mech_5th_thuesday_time_table_database where mech_5th_thuesday_subject=%s",(self.var_mech_5th_thuesday_mech_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update mech_5th_thuesday_time_table_database set mech_5th_thuesday_total_number_of_class=%s,mech_5th_thuesday_time=%s,mech_5th_thuesday_faculty=%s where mech_5th_thuesday_subject=%s",(
                                        
                                        self.var_mech_5th_thuesday_number_of_class2.get(),
                                        self.var_mech_5th_thuesday_time1.get(),
                                        self.var_mech_5th_thuesday_mech_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_mech_5th_thuesday_mech_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_thuesday_mech_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from mech_5th_thuesday_time_table_database where mech_5th_thuesday_subject=%s",(self.var_mech_5th_thuesday_mech_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from mech_5th_thuesday_time_table_database where mech_5th_thuesday_subject=%s',(self.var_mech_5th_thuesday_mech_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_mech_5th_thuesday_faculty_serch.set("")
                        self.var_mech_5th_thuesday_number_of_class2.set("")
                        self.var_mech_5th_thuesday_time1.set("")
                        self.var_mech_5th_thuesday_mech_5thmistry_cycle_subject1.set("")
                        self.var_mech_5th_thuesday_mech_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def mech_5th_thuesday_time_table_get(ev):
                        thuesday_mech_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.mech_5th_thuesday_time_table.focus()
                        content1=self.mech_5th_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_mech_5th_thuesday_number_of_class2.set(row1[2])
                        self.var_mech_5th_thuesday_time1.set(row1[3])
                        self.var_mech_5th_thuesday_mech_5thmistry_cycle_subject1.set(row1[4])
                        self.var_mech_5th_thuesday_mech_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    
                    self.thuesday_mech_5th_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_mech_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_mech_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_mech_5th_time_table_data_frame,orient=VERTICAL)
                    self.mech_5th_thuesday_time_table=ttk.Treeview(self.thuesday_mech_5th_time_table_data_frame,columns=('cid','day1','mech_5th_thuesday_total_number_of_class','mech_5th_thuesday_time','mech_5th_thuesday_subject','mech_5th_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.mech_5th_thuesday_time_table.xview)
                    scrolly.configure(command=self.mech_5th_thuesday_time_table.yview)

                    self.mech_5th_thuesday_time_table.heading('cid',text='Serial No')
                    self.mech_5th_thuesday_time_table.heading('day1',text='Day')
                    self.mech_5th_thuesday_time_table.heading('mech_5th_thuesday_total_number_of_class',text='Totel class')
                    self.mech_5th_thuesday_time_table.heading('mech_5th_thuesday_time',text='class time')
                    self.mech_5th_thuesday_time_table.heading('mech_5th_thuesday_subject',text='Subject')
                    self.mech_5th_thuesday_time_table.heading('mech_5th_thuesday_faculty',text='Faculty')

                    self.mech_5th_thuesday_time_table.column('cid',width=100)
                    self.mech_5th_thuesday_time_table.column('day1',width=150)
                    self.mech_5th_thuesday_time_table.column('mech_5th_thuesday_total_number_of_class',width=100)
                    self.mech_5th_thuesday_time_table.column('mech_5th_thuesday_time',width=150)
                    self.mech_5th_thuesday_time_table.column('mech_5th_thuesday_subject',width=150)
                    self.mech_5th_thuesday_time_table.column('mech_5th_thuesday_faculty',width=150)

                    self.mech_5th_thuesday_time_table['show']='headings'

                    self.mech_5th_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.mech_5th_thuesday_time_table.bind('<ButtonRelease-1>',mech_5th_thuesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_mech_5th_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_mech_5th_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_mech_5th_subject_list=[]
                    self.fetch_mech_5th_faculty_subject()
                    thuesday_mech_5thmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_mech_5th_thuesday_mech_5thmistry_cycle_subject1,state='readonly',values=self.faculty_mech_5th_subject_list)
                    thuesday_mech_5thmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_mech_5th_name_list=[]
                    self.fetch_mech_5th_faculty_name()
                    thuesday_mech_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_mech_5th_thuesday_mech_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_mech_5th_name_list)
                    thuesday_mech_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    mech_5th_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_mech_5th_thuesday_faculty_serch)
                    mech_5th_faculty_serch1.place(x=800,y=25)
                    mech_5th_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=mech_5th_faculty_serch)
                    mech_5th_faculty_serch1_button.place(x=937,y=22)
                    mech_5th_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    mech_5th_add_database.place(x=10,y=140)

                    mech_5th_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    mech_5th_update_database.place(x=10,y=170)

                    mech_5th_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    mech_5th_delete_database.place(x=10,y=200)

                    mech_5th_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    mech_5th_clear_database.place(x=10,y=230)
##################################################################################################################################################################

        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Mechanical_Engineering':
                if self.var_day_select.get() == 'Wednesday':
          
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_mech_5th_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_mech_5th_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_mech_5th_wednesday_mech_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_mech_5th_wednesday_mech_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into mech_5th_wednesday_time_table_database(day1,mech_5th_wednesday_total_number_of_class,mech_5th_wednesday_time,mech_5th_wednesday_subject,mech_5th_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_mech_5th_wednesday_number_of_class2.get(),
                                            self.var_mech_5th_wednesday_time1.get(),
                                            self.var_mech_5th_wednesday_mech_5thmistry_cycle_subject1.get(),
                                            self.var_mech_5th_wednesday_mech_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_5th_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.mech_5th_wednesday_time_table.delete(*self.mech_5th_wednesday_time_table.get_children())
                            for row in rows:
                                self.mech_5th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def mech_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from mech_5th_wednesday_time_table_database where mech_5th_wednesday_subject LIKE '%{self.var_mech_5th_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.mech_5th_wednesday_time_table.delete(*self.mech_5th_wednesday_time_table.get_children())
                                for row in rows:
                                    self.mech_5th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_wednesday_mech_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from mech_5th_wednesday_time_table_database where mech_5th_wednesday_subject=%s",(self.var_mech_5th_wednesday_mech_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update mech_5th_wednesday_time_table_database set mech_5th_wednesday_total_number_of_class=%s,mech_5th_wednesday_time=%s,mech_5th_wednesday_faculty=%s where mech_5th_wednesday_subject=%s",(
                                        
                                        self.var_mech_5th_wednesday_number_of_class2.get(),
                                        self.var_mech_5th_wednesday_time1.get(),
                                        self.var_mech_5th_wednesday_mech_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_mech_5th_wednesday_mech_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_wednesday_mech_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from mech_5th_wednesday_time_table_database where mech_5th_wednesday_subject=%s",(self.var_mech_5th_wednesday_mech_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from mech_5th_wednesday_time_table_database where mech_5th_wednesday_subject=%s',(self.var_mech_5th_wednesday_mech_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_mech_5th_wednesday_faculty_serch.set("")
                        self.var_mech_5th_wednesday_number_of_class2.set("")
                        self.var_mech_5th_wednesday_time1.set("")
                        self.var_mech_5th_wednesday_mech_5thmistry_cycle_subject1.set("")
                        self.var_mech_5th_wednesday_mech_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def mech_5th_wednesday_time_table_get(ev):
                        wednesday_mech_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.mech_5th_wednesday_time_table.focus()
                        content1=self.mech_5th_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_mech_5th_wednesday_number_of_class2.set(row1[2])
                        self.var_mech_5th_wednesday_time1.set(row1[3])
                        self.var_mech_5th_wednesday_mech_5thmistry_cycle_subject1.set(row1[4])
                        self.var_mech_5th_wednesday_mech_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    
                    self.wednesday_mech_5th_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_mech_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_mech_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_mech_5th_time_table_data_frame,orient=VERTICAL)
                    self.mech_5th_wednesday_time_table=ttk.Treeview(self.wednesday_mech_5th_time_table_data_frame,columns=('cid','day1','mech_5th_wednesday_total_number_of_class','mech_5th_wednesday_time','mech_5th_wednesday_subject','mech_5th_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.mech_5th_wednesday_time_table.xview)
                    scrolly.configure(command=self.mech_5th_wednesday_time_table.yview)

                    self.mech_5th_wednesday_time_table.heading('cid',text='Serial No')
                    self.mech_5th_wednesday_time_table.heading('day1',text='Day')
                    self.mech_5th_wednesday_time_table.heading('mech_5th_wednesday_total_number_of_class',text='Totel class')
                    self.mech_5th_wednesday_time_table.heading('mech_5th_wednesday_time',text='class time')
                    self.mech_5th_wednesday_time_table.heading('mech_5th_wednesday_subject',text='Subject')
                    self.mech_5th_wednesday_time_table.heading('mech_5th_wednesday_faculty',text='Faculty')

                    self.mech_5th_wednesday_time_table.column('cid',width=100)
                    self.mech_5th_wednesday_time_table.column('day1',width=150)
                    self.mech_5th_wednesday_time_table.column('mech_5th_wednesday_total_number_of_class',width=100)
                    self.mech_5th_wednesday_time_table.column('mech_5th_wednesday_time',width=150)
                    self.mech_5th_wednesday_time_table.column('mech_5th_wednesday_subject',width=150)
                    self.mech_5th_wednesday_time_table.column('mech_5th_wednesday_faculty',width=150)

                    self.mech_5th_wednesday_time_table['show']='headings'

                    self.mech_5th_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.mech_5th_wednesday_time_table.bind('<ButtonRelease-1>',mech_5th_wednesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_mech_5th_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_mech_5th_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_mech_5th_subject_list=[]
                    self.fetch_mech_5th_faculty_subject()
                    wednesday_mech_5thmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_mech_5th_wednesday_mech_5thmistry_cycle_subject1,state='readonly',values=self.faculty_mech_5th_subject_list)
                    wednesday_mech_5thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_mech_5th_name_list=[]
                    self.fetch_mech_5th_faculty_name()
                    wednesday_mech_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_mech_5th_wednesday_mech_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_mech_5th_name_list)
                    wednesday_mech_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    mech_5th_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_mech_5th_wednesday_faculty_serch)
                    mech_5th_faculty_serch1.place(x=800,y=25)
                    mech_5th_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=mech_5th_faculty_serch)
                    mech_5th_faculty_serch1_button.place(x=937,y=22)
                    mech_5th_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    mech_5th_add_database.place(x=10,y=140)

                    mech_5th_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    mech_5th_update_database.place(x=10,y=170)

                    mech_5th_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    mech_5th_delete_database.place(x=10,y=200)

                    mech_5th_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    mech_5th_clear_database.place(x=10,y=230)

###################################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Mechanical_Engineering':
                if self.var_day_select.get() == 'Thursday':
                

                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_mech_5th_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_mech_5th_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_mech_5th_thursday_mech_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_mech_5th_thursday_mech_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into mech_5th_thursday_time_table_database(day1,mech_5th_thursday_total_number_of_class,mech_5th_thursday_time,mech_5th_thursday_subject,mech_5th_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_mech_5th_thursday_number_of_class2.get(),
                                            self.var_mech_5th_thursday_time1.get(),
                                            self.var_mech_5th_thursday_mech_5thmistry_cycle_subject1.get(),
                                            self.var_mech_5th_thursday_mech_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_5th_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.mech_5th_thursday_time_table.delete(*self.mech_5th_thursday_time_table.get_children())
                            for row in rows:
                                self.mech_5th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def mech_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from mech_5th_thursday_time_table_database where mech_5th_thursday_subject LIKE '%{self.var_mech_5th_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.mech_5th_thursday_time_table.delete(*self.mech_5th_thursday_time_table.get_children())
                                for row in rows:
                                    self.mech_5th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_thursday_mech_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from mech_5th_thursday_time_table_database where mech_5th_thursday_subject=%s",(self.var_mech_5th_thursday_mech_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update mech_5th_thursday_time_table_database set mech_5th_thursday_total_number_of_class=%s,mech_5th_thursday_time=%s,mech_5th_thursday_faculty=%s where mech_5th_thursday_subject=%s",(
                                        
                                        self.var_mech_5th_thursday_number_of_class2.get(),
                                        self.var_mech_5th_thursday_time1.get(),
                                        self.var_mech_5th_thursday_mech_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_mech_5th_thursday_mech_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_thursday_mech_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from mech_5th_thursday_time_table_database where mech_5th_thursday_subject=%s",(self.var_mech_5th_thursday_mech_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from mech_5th_thursday_time_table_database where mech_5th_thursday_subject=%s',(self.var_mech_5th_thursday_mech_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_mech_5th_thursday_faculty_serch.set("")
                        self.var_mech_5th_thursday_number_of_class2.set("")
                        self.var_mech_5th_thursday_time1.set("")
                        self.var_mech_5th_thursday_mech_5thmistry_cycle_subject1.set("")
                        self.var_mech_5th_thursday_mech_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def mech_5th_thursday_time_table_get(ev):
                        thursday_mech_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.mech_5th_thursday_time_table.focus()
                        content1=self.mech_5th_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_mech_5th_thursday_number_of_class2.set(row1[2])
                        self.var_mech_5th_thursday_time1.set(row1[3])
                        self.var_mech_5th_thursday_mech_5thmistry_cycle_subject1.set(row1[4])
                        self.var_mech_5th_thursday_mech_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    
                    self.thursday_mech_5th_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_mech_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_mech_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_mech_5th_time_table_data_frame,orient=VERTICAL)
                    self.mech_5th_thursday_time_table=ttk.Treeview(self.thursday_mech_5th_time_table_data_frame,columns=('cid','day1','mech_5th_thursday_total_number_of_class','mech_5th_thursday_time','mech_5th_thursday_subject','mech_5th_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.mech_5th_thursday_time_table.xview)
                    scrolly.configure(command=self.mech_5th_thursday_time_table.yview)

                    self.mech_5th_thursday_time_table.heading('cid',text='Serial No')
                    self.mech_5th_thursday_time_table.heading('day1',text='Day')
                    self.mech_5th_thursday_time_table.heading('mech_5th_thursday_total_number_of_class',text='Totel class')
                    self.mech_5th_thursday_time_table.heading('mech_5th_thursday_time',text='class time')
                    self.mech_5th_thursday_time_table.heading('mech_5th_thursday_subject',text='Subject')
                    self.mech_5th_thursday_time_table.heading('mech_5th_thursday_faculty',text='Faculty')

                    self.mech_5th_thursday_time_table.column('cid',width=100)
                    self.mech_5th_thursday_time_table.column('day1',width=150)
                    self.mech_5th_thursday_time_table.column('mech_5th_thursday_total_number_of_class',width=100)
                    self.mech_5th_thursday_time_table.column('mech_5th_thursday_time',width=150)
                    self.mech_5th_thursday_time_table.column('mech_5th_thursday_subject',width=150)
                    self.mech_5th_thursday_time_table.column('mech_5th_thursday_faculty',width=150)

                    self.mech_5th_thursday_time_table['show']='headings'

                    self.mech_5th_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.mech_5th_thursday_time_table.bind('<ButtonRelease-1>',mech_5th_thursday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_mech_5th_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_mech_5th_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_mech_5th_subject_list=[]
                    self.fetch_mech_5th_faculty_subject()
                    thursday_mech_5thmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_mech_5th_thursday_mech_5thmistry_cycle_subject1,state='readonly',values=self.faculty_mech_5th_subject_list)
                    thursday_mech_5thmistry_cycle_subject1.place(x=400,y=25) 
  
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_mech_5th_name_list=[]
                    self.fetch_mech_5th_faculty_name()
                    thursday_mech_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_mech_5th_thursday_mech_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_mech_5th_name_list)
                    thursday_mech_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    mech_5th_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_mech_5th_thursday_faculty_serch)
                    mech_5th_faculty_serch1.place(x=800,y=25)
                    mech_5th_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=mech_5th_faculty_serch)
                    mech_5th_faculty_serch1_button.place(x=937,y=22)
                    mech_5th_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    mech_5th_add_database.place(x=10,y=140)

                    mech_5th_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    mech_5th_update_database.place(x=10,y=170)

                    mech_5th_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    mech_5th_delete_database.place(x=10,y=200)

                    mech_5th_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    mech_5th_clear_database.place(x=10,y=230)

#####################################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Mechanical_Engineering':
                if self.var_day_select.get() == 'Friday':
    
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_mech_5th_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_mech_5th_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_mech_5th_friday_mech_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_mech_5th_friday_mech_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into mech_5th_friday_time_table_database(day1,mech_5th_friday_total_number_of_class,mech_5th_friday_time,mech_5th_friday_subject,mech_5th_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_mech_5th_friday_number_of_class2.get(),
                                            self.var_mech_5th_friday_time1.get(),
                                            self.var_mech_5th_friday_mech_5thmistry_cycle_subject1.get(),
                                            self.var_mech_5th_friday_mech_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_5th_friday_time_table_database')
                            rows=cur.fetchall()
                            self.mech_5th_friday_time_table.delete(*self.mech_5th_friday_time_table.get_children())
                            for row in rows:
                                self.mech_5th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def mech_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from mech_5th_friday_time_table_database where mech_5th_friday_subject LIKE '%{self.var_mech_5th_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.mech_5th_friday_time_table.delete(*self.mech_5th_friday_time_table.get_children())
                                for row in rows:
                                    self.mech_5th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_friday_mech_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from mech_5th_friday_time_table_database where mech_5th_friday_subject=%s",(self.var_mech_5th_friday_mech_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update mech_5th_friday_time_table_database set mech_5th_friday_total_number_of_class=%s,mech_5th_friday_time=%s,mech_5th_friday_faculty=%s where mech_5th_friday_subject=%s",(
                                        
                                        self.var_mech_5th_friday_number_of_class2.get(),
                                        self.var_mech_5th_friday_time1.get(),
                                        self.var_mech_5th_friday_mech_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_mech_5th_friday_mech_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_friday_mech_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from mech_5th_friday_time_table_database where mech_5th_friday_subject=%s",(self.var_mech_5th_friday_mech_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from mech_5th_friday_time_table_database where mech_5th_friday_subject=%s',(self.var_mech_5th_friday_mech_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_mech_5th_friday_faculty_serch.set("")
                        self.var_mech_5th_friday_number_of_class2.set("")
                        self.var_mech_5th_friday_time1.set("")
                        self.var_mech_5th_friday_mech_5thmistry_cycle_subject1.set("")
                        self.var_mech_5th_friday_mech_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def mech_5th_friday_time_table_get(ev):
                        friday_mech_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.mech_5th_friday_time_table.focus()
                        content1=self.mech_5th_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_mech_5th_friday_number_of_class2.set(row1[2])
                        self.var_mech_5th_friday_time1.set(row1[3])
                        self.var_mech_5th_friday_mech_5thmistry_cycle_subject1.set(row1[4])
                        self.var_mech_5th_friday_mech_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.friday_mech_5th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_mech_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_mech_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_mech_5th_time_table_data_frame,orient=VERTICAL)
                    self.mech_5th_friday_time_table=ttk.Treeview(self.friday_mech_5th_time_table_data_frame,columns=('cid','day1','mech_5th_friday_total_number_of_class','mech_5th_friday_time','mech_5th_friday_subject','mech_5th_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.mech_5th_friday_time_table.xview)
                    scrolly.configure(command=self.mech_5th_friday_time_table.yview)

                    self.mech_5th_friday_time_table.heading('cid',text='Serial No')
                    self.mech_5th_friday_time_table.heading('day1',text='Day')
                    self.mech_5th_friday_time_table.heading('mech_5th_friday_total_number_of_class',text='Totel class')
                    self.mech_5th_friday_time_table.heading('mech_5th_friday_time',text='class time')
                    self.mech_5th_friday_time_table.heading('mech_5th_friday_subject',text='Subject')
                    self.mech_5th_friday_time_table.heading('mech_5th_friday_faculty',text='Faculty')

                    self.mech_5th_friday_time_table.column('cid',width=100)
                    self.mech_5th_friday_time_table.column('day1',width=150)
                    self.mech_5th_friday_time_table.column('mech_5th_friday_total_number_of_class',width=100)
                    self.mech_5th_friday_time_table.column('mech_5th_friday_time',width=150)
                    self.mech_5th_friday_time_table.column('mech_5th_friday_subject',width=150)
                    self.mech_5th_friday_time_table.column('mech_5th_friday_faculty',width=150)

                    self.mech_5th_friday_time_table['show']='headings'

                    self.mech_5th_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.mech_5th_friday_time_table.bind('<ButtonRelease-1>',mech_5th_friday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_mech_5th_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_mech_5th_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_mech_5th_subject_list=[]
                    self.fetch_mech_5th_faculty_subject()
                    friday_mech_5thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_mech_5th_friday_mech_5thmistry_cycle_subject1,state='readonly',values=self.faculty_mech_5th_subject_list)
                    friday_mech_5thmistry_cycle_subject1.place(x=400,y=25) 
   
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_mech_5th_name_list=[]
                    self.fetch_mech_5th_faculty_name()
                    friday_mech_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_mech_5th_friday_mech_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_mech_5th_name_list)
                    friday_mech_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    mech_5th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_mech_5th_friday_faculty_serch)
                    mech_5th_faculty_serch1.place(x=800,y=25)
                    mech_5th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=mech_5th_faculty_serch)
                    mech_5th_faculty_serch1_button.place(x=937,y=22)
                    mech_5th_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    mech_5th_add_database.place(x=10,y=140)

                    mech_5th_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    mech_5th_update_database.place(x=10,y=170)

                    mech_5th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    mech_5th_delete_database.place(x=10,y=200)

                    mech_5th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    mech_5th_clear_database.place(x=10,y=230)

###############################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Mechanical_Engineering':
                if self.var_day_select.get() == 'Saturday':

                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_mech_5th_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_mech_5th_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_mech_5th_saturday_mech_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_mech_5th_saturday_mech_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into mech_5th_saturday_time_table_database(day1,mech_5th_saturday_total_number_of_class,mech_5th_saturday_time,mech_5th_saturday_subject,mech_5th_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_mech_5th_saturday_number_of_class2.get(),
                                            self.var_mech_5th_saturday_time1.get(),
                                            self.var_mech_5th_saturday_mech_5thmistry_cycle_subject1.get(),
                                            self.var_mech_5th_saturday_mech_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from mech_5th_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.mech_5th_saturday_time_table.delete(*self.mech_5th_saturday_time_table.get_children())
                            for row in rows:
                                self.mech_5th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def mech_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from mech_5th_saturday_time_table_database where mech_5th_saturday_subject LIKE '%{self.var_mech_5th_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.mech_5th_saturday_time_table.delete(*self.mech_5th_saturday_time_table.get_children())
                                for row in rows:
                                    self.mech_5th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_saturday_mech_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from mech_5th_saturday_time_table_database where mech_5th_saturday_subject=%s",(self.var_mech_5th_saturday_mech_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update mech_5th_saturday_time_table_database set mech_5th_saturday_total_number_of_class=%s,mech_5th_saturday_time=%s,mech_5th_saturday_faculty=%s where mech_5th_saturday_subject=%s",(
                                        
                                        self.var_mech_5th_saturday_number_of_class2.get(),
                                        self.var_mech_5th_saturday_time1.get(),
                                        self.var_mech_5th_saturday_mech_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_mech_5th_saturday_mech_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_mech_5th_saturday_mech_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from mech_5th_saturday_time_table_database where mech_5th_saturday_subject=%s",(self.var_mech_5th_saturday_mech_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from mech_5th_saturday_time_table_database where mech_5th_saturday_subject=%s',(self.var_mech_5th_saturday_mech_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_mech_5th_saturday_faculty_serch.set("")
                        self.var_mech_5th_saturday_number_of_class2.set("")
                        self.var_mech_5th_saturday_time1.set("")
                        self.var_mech_5th_saturday_mech_5thmistry_cycle_subject1.set("")
                        self.var_mech_5th_saturday_mech_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def mech_5th_saturday_time_table_get(ev):
                        saturday_mech_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.mech_5th_saturday_time_table.focus()
                        content1=self.mech_5th_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_mech_5th_saturday_number_of_class2.set(row1[2])
                        self.var_mech_5th_saturday_time1.set(row1[3])
                        self.var_mech_5th_saturday_mech_5thmistry_cycle_subject1.set(row1[4])
                        self.var_mech_5th_saturday_mech_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.saturday_mech_5th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_mech_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_mech_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_mech_5th_time_table_data_frame,orient=VERTICAL)
                    self.mech_5th_saturday_time_table=ttk.Treeview(self.saturday_mech_5th_time_table_data_frame,columns=('cid','day1','mech_5th_saturday_total_number_of_class','mech_5th_saturday_time','mech_5th_saturday_subject','mech_5th_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.mech_5th_saturday_time_table.xview)
                    scrolly.configure(command=self.mech_5th_saturday_time_table.yview)

                    self.mech_5th_saturday_time_table.heading('cid',text='Serial No')
                    self.mech_5th_saturday_time_table.heading('day1',text='Day')
                    self.mech_5th_saturday_time_table.heading('mech_5th_saturday_total_number_of_class',text='Totel class')
                    self.mech_5th_saturday_time_table.heading('mech_5th_saturday_time',text='class time')
                    self.mech_5th_saturday_time_table.heading('mech_5th_saturday_subject',text='Subject')
                    self.mech_5th_saturday_time_table.heading('mech_5th_saturday_faculty',text='Faculty')

                    self.mech_5th_saturday_time_table.column('cid',width=100)
                    self.mech_5th_saturday_time_table.column('day1',width=150)
                    self.mech_5th_saturday_time_table.column('mech_5th_saturday_total_number_of_class',width=100)
                    self.mech_5th_saturday_time_table.column('mech_5th_saturday_time',width=150)
                    self.mech_5th_saturday_time_table.column('mech_5th_saturday_subject',width=150)
                    self.mech_5th_saturday_time_table.column('mech_5th_saturday_faculty',width=150)

                    self.mech_5th_saturday_time_table['show']='headings'

                    self.mech_5th_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.mech_5th_saturday_time_table.bind('<ButtonRelease-1>',mech_5th_saturday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_mech_5th_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_mech_5th_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_mech_5th_subject_list=[]
                    self.fetch_mech_5th_faculty_subject()
                    saturday_mech_5thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_mech_5th_saturday_mech_5thmistry_cycle_subject1,state='readonly',values=self.faculty_mech_5th_subject_list)
                    saturday_mech_5thmistry_cycle_subject1.place(x=400,y=25) 
                  
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_mech_5th_name_list=[]
                    self.fetch_mech_5th_faculty_name()
                    saturday_mech_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_mech_5th_saturday_mech_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_mech_5th_name_list)
                    saturday_mech_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    mech_5th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_mech_5th_saturday_faculty_serch)
                    mech_5th_faculty_serch1.place(x=800,y=25)
                    mech_5th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=mech_5th_faculty_serch)
                    mech_5th_faculty_serch1_button.place(x=937,y=22)
                    mech_5th_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    mech_5th_add_database.place(x=10,y=140)

                    mech_5th_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    mech_5th_update_database.place(x=10,y=170)

                    mech_5th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    mech_5th_delete_database.place(x=10,y=200)

                    mech_5th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    mech_5th_clear_database.place(x=10,y=230)


        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Electrical_And_Electronic_Engineering':
                if self.var_day_select.get() == 'Monday':
                

                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_eee_5th_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_eee_5th_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_eee_5th_monday_eee_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_eee_5th_monday_eee_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into eee_5th_monday_time_table_database(day1,eee_5th_monday_total_number_of_class,eee_5th_monday_time,eee_5th_monday_subject,eee_5th_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_eee_5th_monday_number_of_class1.get(),
                                            self.var_eee_5th_monday_time1.get(),
                                            self.var_eee_5th_monday_eee_5thmistry_cycle_subject1.get(),
                                            self.var_eee_5th_monday_eee_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_5th_monday_time_table_database')
                            rows=cur.fetchall()
                            self.eee_5th_monday_time_table.delete(*self.eee_5th_monday_time_table.get_children())
                            for row in rows:
                                self.eee_5th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def eee_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from eee_5th_monday_time_table_database where eee_5th_monday_subject LIKE '%{self.var_eee_5th_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.eee_5th_monday_time_table.delete(*self.eee_5th_monday_time_table.get_children())
                                for row in rows:
                                    self.eee_5th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_monday_eee_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from eee_5th_monday_time_table_database where eee_5th_monday_subject=%s",(self.var_eee_5th_monday_eee_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update eee_5th_monday_time_table_database set eee_5th_monday_total_number_of_class=%s,eee_5th_monday_time=%s,eee_5th_monday_faculty=%s where eee_5th_monday_subject=%s",(
                                        
                                        self.var_eee_5th_monday_number_of_class1.get(),
                                        self.var_eee_5th_monday_time1.get(),
                                        self.var_eee_5th_monday_eee_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_eee_5th_monday_eee_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_monday_eee_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from eee_5th_monday_time_table_database where eee_5th_monday_subject=%s",(self.var_eee_5th_monday_eee_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from eee_5th_monday_time_table_database where eee_5th_monday_subject=%s',(self.var_eee_5th_monday_eee_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_eee_5th_monday_faculty_serch.set("")
                        self.var_eee_5th_monday_number_of_class1.set("")
                        self.var_eee_5th_monday_time1.set("")
                        self.var_eee_5th_monday_eee_5thmistry_cycle_subject1.set("")
                        self.var_eee_5th_monday_eee_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def eee_5th_monday_time_table_get(ev):
                        monday_eee_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.eee_5th_monday_time_table.focus()
                        content1=self.eee_5th_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_eee_5th_monday_number_of_class1.set(row1[2])
                        self.var_eee_5th_monday_time1.set(row1[3])
                        self.var_eee_5th_monday_eee_5thmistry_cycle_subject1.set(row1[4])
                        self.var_eee_5th_monday_eee_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    
                    self.monday_eee_5th_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_eee_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_eee_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_eee_5th_time_table_data_frame,orient=VERTICAL)
                    self.eee_5th_monday_time_table=ttk.Treeview(self.monday_eee_5th_time_table_data_frame,columns=('cid','day1','eee_5th_monday_total_number_of_class','eee_5th_monday_time','eee_5th_monday_subject','eee_5th_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.eee_5th_monday_time_table.xview)
                    scrolly.configure(command=self.eee_5th_monday_time_table.yview)

                    self.eee_5th_monday_time_table.heading('cid',text='Serial No')
                    self.eee_5th_monday_time_table.heading('day1',text='Day')
                    self.eee_5th_monday_time_table.heading('eee_5th_monday_total_number_of_class',text='Totel class')
                    self.eee_5th_monday_time_table.heading('eee_5th_monday_time',text='class time')
                    self.eee_5th_monday_time_table.heading('eee_5th_monday_subject',text='Subject')
                    self.eee_5th_monday_time_table.heading('eee_5th_monday_faculty',text='Faculty')

                    self.eee_5th_monday_time_table.column('cid',width=100)
                    self.eee_5th_monday_time_table.column('day1',width=150)
                    self.eee_5th_monday_time_table.column('eee_5th_monday_total_number_of_class',width=100)
                    self.eee_5th_monday_time_table.column('eee_5th_monday_time',width=150)
                    self.eee_5th_monday_time_table.column('eee_5th_monday_subject',width=150)
                    self.eee_5th_monday_time_table.column('eee_5th_monday_faculty',width=150)

                    self.eee_5th_monday_time_table['show']='headings'

                    self.eee_5th_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.eee_5th_monday_time_table.bind('<ButtonRelease-1>',eee_5th_monday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_eee_5th_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_eee_5th_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_eee_5th_subject_list=[]
                    self.fetch_eee_5th_faculty_subject()
                    monday_eee_5thmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_eee_5th_monday_eee_5thmistry_cycle_subject1,state='readonly',values=self.faculty_eee_5th_subject_list)
                    monday_eee_5thmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_eee_5th_name_list=[]
                    self.fetch_eee_5th_faculty_name()
                    monday_eee_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_eee_5th_monday_eee_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_eee_5th_name_list)
                    monday_eee_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    eee_5th_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_eee_5th_monday_faculty_serch)
                    eee_5th_faculty_serch1.place(x=800,y=25)
                    eee_5th_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=eee_5th_faculty_serch)
                    eee_5th_faculty_serch1_button.place(x=937,y=22)
                    eee_5th_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    eee_5th_add_database.place(x=10,y=140)

                    eee_5th_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    eee_5th_update_database.place(x=10,y=170)

                    eee_5th_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    eee_5th_delete_database.place(x=10,y=200)

                    eee_5th_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    eee_5th_clear_database.place(x=10,y=230)
###################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Electrical_And_Electronic_Engineering':
                if self.var_day_select.get() == 'Thuesday':
                
   
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_eee_5th_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_eee_5th_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into eee_5th_thuesday_time_table_database(day1,eee_5th_thuesday_total_number_of_class,eee_5th_thuesday_time,eee_5th_thuesday_subject,eee_5th_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_eee_5th_thuesday_number_of_class2.get(),
                                            self.var_eee_5th_thuesday_time1.get(),
                                            self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject1.get(),
                                            self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_5th_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.eee_5th_thuesday_time_table.delete(*self.eee_5th_thuesday_time_table.get_children())
                            for row in rows:
                                self.eee_5th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def eee_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from eee_5th_thuesday_time_table_database where eee_5th_thuesday_subject LIKE '%{self.var_eee_5th_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.eee_5th_thuesday_time_table.delete(*self.eee_5th_thuesday_time_table.get_children())
                                for row in rows:
                                    self.eee_5th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from eee_5th_thuesday_time_table_database where eee_5th_thuesday_subject=%s",(self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update eee_5th_thuesday_time_table_database set eee_5th_thuesday_total_number_of_class=%s,eee_5th_thuesday_time=%s,eee_5th_thuesday_faculty=%s where eee_5th_thuesday_subject=%s",(
                                        
                                        self.var_eee_5th_thuesday_number_of_class2.get(),
                                        self.var_eee_5th_thuesday_time1.get(),
                                        self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from eee_5th_thuesday_time_table_database where eee_5th_thuesday_subject=%s",(self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from eee_5th_thuesday_time_table_database where eee_5th_thuesday_subject=%s',(self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_eee_5th_thuesday_faculty_serch.set("")
                        self.var_eee_5th_thuesday_number_of_class2.set("")
                        self.var_eee_5th_thuesday_time1.set("")
                        self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject1.set("")
                        self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def eee_5th_thuesday_time_table_get(ev):
                        thuesday_eee_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.eee_5th_thuesday_time_table.focus()
                        content1=self.eee_5th_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_eee_5th_thuesday_number_of_class2.set(row1[2])
                        self.var_eee_5th_thuesday_time1.set(row1[3])
                        self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject1.set(row1[4])
                        self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    
                    self.thuesday_eee_5th_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_eee_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_eee_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_eee_5th_time_table_data_frame,orient=VERTICAL)
                    self.eee_5th_thuesday_time_table=ttk.Treeview(self.thuesday_eee_5th_time_table_data_frame,columns=('cid','day1','eee_5th_thuesday_total_number_of_class','eee_5th_thuesday_time','eee_5th_thuesday_subject','eee_5th_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.eee_5th_thuesday_time_table.xview)
                    scrolly.configure(command=self.eee_5th_thuesday_time_table.yview)

                    self.eee_5th_thuesday_time_table.heading('cid',text='Serial No')
                    self.eee_5th_thuesday_time_table.heading('day1',text='Day')
                    self.eee_5th_thuesday_time_table.heading('eee_5th_thuesday_total_number_of_class',text='Totel class')
                    self.eee_5th_thuesday_time_table.heading('eee_5th_thuesday_time',text='class time')
                    self.eee_5th_thuesday_time_table.heading('eee_5th_thuesday_subject',text='Subject')
                    self.eee_5th_thuesday_time_table.heading('eee_5th_thuesday_faculty',text='Faculty')

                    self.eee_5th_thuesday_time_table.column('cid',width=100)
                    self.eee_5th_thuesday_time_table.column('day1',width=150)
                    self.eee_5th_thuesday_time_table.column('eee_5th_thuesday_total_number_of_class',width=100)
                    self.eee_5th_thuesday_time_table.column('eee_5th_thuesday_time',width=150)
                    self.eee_5th_thuesday_time_table.column('eee_5th_thuesday_subject',width=150)
                    self.eee_5th_thuesday_time_table.column('eee_5th_thuesday_faculty',width=150)

                    self.eee_5th_thuesday_time_table['show']='headings'

                    self.eee_5th_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.eee_5th_thuesday_time_table.bind('<ButtonRelease-1>',eee_5th_thuesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_eee_5th_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_eee_5th_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_eee_5th_subject_list=[]
                    self.fetch_eee_5th_faculty_subject()
                    thuesday_eee_5thmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject1,state='readonly',values=self.faculty_eee_5th_subject_list)
                    thuesday_eee_5thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_eee_5th_name_list=[]
                    self.fetch_eee_5th_faculty_name()
                    thuesday_eee_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_eee_5th_thuesday_eee_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_eee_5th_name_list)
                    thuesday_eee_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    eee_5th_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_eee_5th_thuesday_faculty_serch)
                    eee_5th_faculty_serch1.place(x=800,y=25)
                    eee_5th_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=eee_5th_faculty_serch)
                    eee_5th_faculty_serch1_button.place(x=937,y=22)
                    eee_5th_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    eee_5th_add_database.place(x=10,y=140)

                    eee_5th_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    eee_5th_update_database.place(x=10,y=170)

                    eee_5th_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    eee_5th_delete_database.place(x=10,y=200)

                    eee_5th_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    eee_5th_clear_database.place(x=10,y=230)
##########################################################################################################################################################################

        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Electrical_And_Electronic_Engineering':
                if self.var_day_select.get() == 'Wednesday':
               
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_eee_5th_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_eee_5th_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into eee_5th_wednesday_time_table_database(day1,eee_5th_wednesday_total_number_of_class,eee_5th_wednesday_time,eee_5th_wednesday_subject,eee_5th_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_eee_5th_wednesday_number_of_class2.get(),
                                            self.var_eee_5th_wednesday_time1.get(),
                                            self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject1.get(),
                                            self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_5th_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.eee_5th_wednesday_time_table.delete(*self.eee_5th_wednesday_time_table.get_children())
                            for row in rows:
                                self.eee_5th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def eee_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from eee_5th_wednesday_time_table_database where eee_5th_wednesday_subject LIKE '%{self.var_eee_5th_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.eee_5th_wednesday_time_table.delete(*self.eee_5th_wednesday_time_table.get_children())
                                for row in rows:
                                    self.eee_5th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from eee_5th_wednesday_time_table_database where eee_5th_wednesday_subject=%s",(self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update eee_5th_wednesday_time_table_database set eee_5th_wednesday_total_number_of_class=%s,eee_5th_wednesday_time=%s,eee_5th_wednesday_faculty=%s where eee_5th_wednesday_subject=%s",(
                                        
                                        self.var_eee_5th_wednesday_number_of_class2.get(),
                                        self.var_eee_5th_wednesday_time1.get(),
                                        self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from eee_5th_wednesday_time_table_database where eee_5th_wednesday_subject=%s",(self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from eee_5th_wednesday_time_table_database where eee_5th_wednesday_subject=%s',(self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_eee_5th_wednesday_faculty_serch.set("")
                        self.var_eee_5th_wednesday_number_of_class2.set("")
                        self.var_eee_5th_wednesday_time1.set("")
                        self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject1.set("")
                        self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def eee_5th_wednesday_time_table_get(ev):
                        wednesday_eee_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.eee_5th_wednesday_time_table.focus()
                        content1=self.eee_5th_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_eee_5th_wednesday_number_of_class2.set(row1[2])
                        self.var_eee_5th_wednesday_time1.set(row1[3])
                        self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject1.set(row1[4])
                        self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    
                    self.wednesday_eee_5th_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_eee_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_eee_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_eee_5th_time_table_data_frame,orient=VERTICAL)
                    self.eee_5th_wednesday_time_table=ttk.Treeview(self.wednesday_eee_5th_time_table_data_frame,columns=('cid','day1','eee_5th_wednesday_total_number_of_class','eee_5th_wednesday_time','eee_5th_wednesday_subject','eee_5th_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.eee_5th_wednesday_time_table.xview)
                    scrolly.configure(command=self.eee_5th_wednesday_time_table.yview)

                    self.eee_5th_wednesday_time_table.heading('cid',text='Serial No')
                    self.eee_5th_wednesday_time_table.heading('day1',text='Day')
                    self.eee_5th_wednesday_time_table.heading('eee_5th_wednesday_total_number_of_class',text='Totel class')
                    self.eee_5th_wednesday_time_table.heading('eee_5th_wednesday_time',text='class time')
                    self.eee_5th_wednesday_time_table.heading('eee_5th_wednesday_subject',text='Subject')
                    self.eee_5th_wednesday_time_table.heading('eee_5th_wednesday_faculty',text='Faculty')

                    self.eee_5th_wednesday_time_table.column('cid',width=100)
                    self.eee_5th_wednesday_time_table.column('day1',width=150)
                    self.eee_5th_wednesday_time_table.column('eee_5th_wednesday_total_number_of_class',width=100)
                    self.eee_5th_wednesday_time_table.column('eee_5th_wednesday_time',width=150)
                    self.eee_5th_wednesday_time_table.column('eee_5th_wednesday_subject',width=150)
                    self.eee_5th_wednesday_time_table.column('eee_5th_wednesday_faculty',width=150)

                    self.eee_5th_wednesday_time_table['show']='headings'

                    self.eee_5th_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.eee_5th_wednesday_time_table.bind('<ButtonRelease-1>',eee_5th_wednesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_eee_5th_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_eee_5th_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_eee_5th_subject_list=[]
                    self.fetch_eee_5th_faculty_subject()
                    wednesday_eee_5thmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject1,state='readonly',values=self.faculty_eee_5th_subject_list)
                    wednesday_eee_5thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_eee_5th_name_list=[]
                    self.fetch_eee_5th_faculty_name()
                    wednesday_eee_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_eee_5th_wednesday_eee_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_eee_5th_name_list)
                    wednesday_eee_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    eee_5th_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_eee_5th_wednesday_faculty_serch)
                    eee_5th_faculty_serch1.place(x=800,y=25)
                    eee_5th_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=eee_5th_faculty_serch)
                    eee_5th_faculty_serch1_button.place(x=937,y=22)
                    eee_5th_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    eee_5th_add_database.place(x=10,y=140)

                    eee_5th_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    eee_5th_update_database.place(x=10,y=170)

                    eee_5th_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    eee_5th_delete_database.place(x=10,y=200)

                    eee_5th_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    eee_5th_clear_database.place(x=10,y=230)
########################################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Electrical_And_Electronic_Engineering':
                if self.var_day_select.get() == 'Thursday':
                

                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_eee_5th_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_eee_5th_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_eee_5th_thursday_eee_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_eee_5th_thursday_eee_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into eee_5th_thursday_time_table_database(day1,eee_5th_thursday_total_number_of_class,eee_5th_thursday_time,eee_5th_thursday_subject,eee_5th_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_eee_5th_thursday_number_of_class2.get(),
                                            self.var_eee_5th_thursday_time1.get(),
                                            self.var_eee_5th_thursday_eee_5thmistry_cycle_subject1.get(),
                                            self.var_eee_5th_thursday_eee_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_5th_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.eee_5th_thursday_time_table.delete(*self.eee_5th_thursday_time_table.get_children())
                            for row in rows:
                                self.eee_5th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def eee_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from eee_5th_thursday_time_table_database where eee_5th_thursday_subject LIKE '%{self.var_eee_5th_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.eee_5th_thursday_time_table.delete(*self.eee_5th_thursday_time_table.get_children())
                                for row in rows:
                                    self.eee_5th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_thursday_eee_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from eee_5th_thursday_time_table_database where eee_5th_thursday_subject=%s",(self.var_eee_5th_thursday_eee_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update eee_5th_thursday_time_table_database set eee_5th_thursday_total_number_of_class=%s,eee_5th_thursday_time=%s,eee_5th_thursday_faculty=%s where eee_5th_thursday_subject=%s",(
                                        
                                        self.var_eee_5th_thursday_number_of_class2.get(),
                                        self.var_eee_5th_thursday_time1.get(),
                                        self.var_eee_5th_thursday_eee_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_eee_5th_thursday_eee_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_thursday_eee_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from eee_5th_thursday_time_table_database where eee_5th_thursday_subject=%s",(self.var_eee_5th_thursday_eee_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from eee_5th_thursday_time_table_database where eee_5th_thursday_subject=%s',(self.var_eee_5th_thursday_eee_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_eee_5th_thursday_faculty_serch.set("")
                        self.var_eee_5th_thursday_number_of_class2.set("")
                        self.var_eee_5th_thursday_time1.set("")
                        self.var_eee_5th_thursday_eee_5thmistry_cycle_subject1.set("")
                        self.var_eee_5th_thursday_eee_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def eee_5th_thursday_time_table_get(ev):
                        thursday_eee_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.eee_5th_thursday_time_table.focus()
                        content1=self.eee_5th_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_eee_5th_thursday_number_of_class2.set(row1[2])
                        self.var_eee_5th_thursday_time1.set(row1[3])
                        self.var_eee_5th_thursday_eee_5thmistry_cycle_subject1.set(row1[4])
                        self.var_eee_5th_thursday_eee_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    
                    self.thursday_eee_5th_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_eee_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_eee_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_eee_5th_time_table_data_frame,orient=VERTICAL)
                    self.eee_5th_thursday_time_table=ttk.Treeview(self.thursday_eee_5th_time_table_data_frame,columns=('cid','day1','eee_5th_thursday_total_number_of_class','eee_5th_thursday_time','eee_5th_thursday_subject','eee_5th_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.eee_5th_thursday_time_table.xview)
                    scrolly.configure(command=self.eee_5th_thursday_time_table.yview)

                    self.eee_5th_thursday_time_table.heading('cid',text='Serial No')
                    self.eee_5th_thursday_time_table.heading('day1',text='Day')
                    self.eee_5th_thursday_time_table.heading('eee_5th_thursday_total_number_of_class',text='Totel class')
                    self.eee_5th_thursday_time_table.heading('eee_5th_thursday_time',text='class time')
                    self.eee_5th_thursday_time_table.heading('eee_5th_thursday_subject',text='Subject')
                    self.eee_5th_thursday_time_table.heading('eee_5th_thursday_faculty',text='Faculty')

                    self.eee_5th_thursday_time_table.column('cid',width=100)
                    self.eee_5th_thursday_time_table.column('day1',width=150)
                    self.eee_5th_thursday_time_table.column('eee_5th_thursday_total_number_of_class',width=100)
                    self.eee_5th_thursday_time_table.column('eee_5th_thursday_time',width=150)
                    self.eee_5th_thursday_time_table.column('eee_5th_thursday_subject',width=150)
                    self.eee_5th_thursday_time_table.column('eee_5th_thursday_faculty',width=150)

                    self.eee_5th_thursday_time_table['show']='headings'

                    self.eee_5th_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.eee_5th_thursday_time_table.bind('<ButtonRelease-1>',eee_5th_thursday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_eee_5th_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_eee_5th_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_eee_5th_subject_list=[]
                    self.fetch_eee_5th_faculty_subject()
                    thursday_eee_5thmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_eee_5th_thursday_eee_5thmistry_cycle_subject1,state='readonly',values=self.faculty_eee_5th_subject_list)
                    thursday_eee_5thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_eee_5th_name_list=[]
                    self.fetch_eee_5th_faculty_name()
                    thursday_eee_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_eee_5th_thursday_eee_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_eee_5th_name_list)
                    thursday_eee_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    eee_5th_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_eee_5th_thursday_faculty_serch)
                    eee_5th_faculty_serch1.place(x=800,y=25)
                    eee_5th_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=eee_5th_faculty_serch)
                    eee_5th_faculty_serch1_button.place(x=937,y=22)
                    eee_5th_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    eee_5th_add_database.place(x=10,y=140)

                    eee_5th_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    eee_5th_update_database.place(x=10,y=170)

                    eee_5th_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    eee_5th_delete_database.place(x=10,y=200)

                    eee_5th_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    eee_5th_clear_database.place(x=10,y=230)

########################################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Electrical_And_Electronic_Engineering':
                if self.var_day_select.get() == 'Friday':
     
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_eee_5th_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_eee_5th_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_eee_5th_friday_eee_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_eee_5th_friday_eee_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into eee_5th_friday_time_table_database(day1,eee_5th_friday_total_number_of_class,eee_5th_friday_time,eee_5th_friday_subject,eee_5th_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_eee_5th_friday_number_of_class2.get(),
                                            self.var_eee_5th_friday_time1.get(),
                                            self.var_eee_5th_friday_eee_5thmistry_cycle_subject1.get(),
                                            self.var_eee_5th_friday_eee_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_5th_friday_time_table_database')
                            rows=cur.fetchall()
                            self.eee_5th_friday_time_table.delete(*self.eee_5th_friday_time_table.get_children())
                            for row in rows:
                                self.eee_5th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def eee_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from eee_5th_friday_time_table_database where eee_5th_friday_subject LIKE '%{self.var_eee_5th_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.eee_5th_friday_time_table.delete(*self.eee_5th_friday_time_table.get_children())
                                for row in rows:
                                    self.eee_5th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_friday_eee_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from eee_5th_friday_time_table_database where eee_5th_friday_subject=%s",(self.var_eee_5th_friday_eee_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update eee_5th_friday_time_table_database set eee_5th_friday_total_number_of_class=%s,eee_5th_friday_time=%s,eee_5th_friday_faculty=%s where eee_5th_friday_subject=%s",(
                                        
                                        self.var_eee_5th_friday_number_of_class2.get(),
                                        self.var_eee_5th_friday_time1.get(),
                                        self.var_eee_5th_friday_eee_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_eee_5th_friday_eee_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_friday_eee_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from eee_5th_friday_time_table_database where eee_5th_friday_subject=%s",(self.var_eee_5th_friday_eee_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from eee_5th_friday_time_table_database where eee_5th_friday_subject=%s',(self.var_eee_5th_friday_eee_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_eee_5th_friday_faculty_serch.set("")
                        self.var_eee_5th_friday_number_of_class2.set("")
                        self.var_eee_5th_friday_time1.set("")
                        self.var_eee_5th_friday_eee_5thmistry_cycle_subject1.set("")
                        self.var_eee_5th_friday_eee_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def eee_5th_friday_time_table_get(ev):
                        friday_eee_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.eee_5th_friday_time_table.focus()
                        content1=self.eee_5th_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_eee_5th_friday_number_of_class2.set(row1[2])
                        self.var_eee_5th_friday_time1.set(row1[3])
                        self.var_eee_5th_friday_eee_5thmistry_cycle_subject1.set(row1[4])
                        self.var_eee_5th_friday_eee_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.friday_eee_5th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_eee_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_eee_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_eee_5th_time_table_data_frame,orient=VERTICAL)
                    self.eee_5th_friday_time_table=ttk.Treeview(self.friday_eee_5th_time_table_data_frame,columns=('cid','day1','eee_5th_friday_total_number_of_class','eee_5th_friday_time','eee_5th_friday_subject','eee_5th_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.eee_5th_friday_time_table.xview)
                    scrolly.configure(command=self.eee_5th_friday_time_table.yview)

                    self.eee_5th_friday_time_table.heading('cid',text='Serial No')
                    self.eee_5th_friday_time_table.heading('day1',text='Day')
                    self.eee_5th_friday_time_table.heading('eee_5th_friday_total_number_of_class',text='Totel class')
                    self.eee_5th_friday_time_table.heading('eee_5th_friday_time',text='class time')
                    self.eee_5th_friday_time_table.heading('eee_5th_friday_subject',text='Subject')
                    self.eee_5th_friday_time_table.heading('eee_5th_friday_faculty',text='Faculty')

                    self.eee_5th_friday_time_table.column('cid',width=100)
                    self.eee_5th_friday_time_table.column('day1',width=150)
                    self.eee_5th_friday_time_table.column('eee_5th_friday_total_number_of_class',width=100)
                    self.eee_5th_friday_time_table.column('eee_5th_friday_time',width=150)
                    self.eee_5th_friday_time_table.column('eee_5th_friday_subject',width=150)
                    self.eee_5th_friday_time_table.column('eee_5th_friday_faculty',width=150)

                    self.eee_5th_friday_time_table['show']='headings'

                    self.eee_5th_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.eee_5th_friday_time_table.bind('<ButtonRelease-1>',eee_5th_friday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_eee_5th_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_eee_5th_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_eee_5th_subject_list=[]
                    self.fetch_eee_5th_faculty_subject()
                    friday_eee_5thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_eee_5th_friday_eee_5thmistry_cycle_subject1,state='readonly',values=self.faculty_eee_5th_subject_list)
                    friday_eee_5thmistry_cycle_subject1.place(x=400,y=25) 
         
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_eee_5th_name_list=[]
                    self.fetch_eee_5th_faculty_name()
                    friday_eee_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_eee_5th_friday_eee_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_eee_5th_name_list)
                    friday_eee_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    eee_5th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_eee_5th_friday_faculty_serch)
                    eee_5th_faculty_serch1.place(x=800,y=25)
                    eee_5th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=eee_5th_faculty_serch)
                    eee_5th_faculty_serch1_button.place(x=937,y=22)
                    eee_5th_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    eee_5th_add_database.place(x=10,y=140)

                    eee_5th_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    eee_5th_update_database.place(x=10,y=170)

                    eee_5th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    eee_5th_delete_database.place(x=10,y=200)

                    eee_5th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    eee_5th_clear_database.place(x=10,y=230)
#########################################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Electrical_And_Electronic_Engineering':
                if self.var_day_select.get() == 'Saturday':
     
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_eee_5th_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_eee_5th_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_eee_5th_saturday_eee_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_eee_5th_saturday_eee_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into eee_5th_saturday_time_table_database(day1,eee_5th_saturday_total_number_of_class,eee_5th_saturday_time,eee_5th_saturday_subject,eee_5th_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_eee_5th_saturday_number_of_class2.get(),
                                            self.var_eee_5th_saturday_time1.get(),
                                            self.var_eee_5th_saturday_eee_5thmistry_cycle_subject1.get(),
                                            self.var_eee_5th_saturday_eee_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from eee_5th_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.eee_5th_saturday_time_table.delete(*self.eee_5th_saturday_time_table.get_children())
                            for row in rows:
                                self.eee_5th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def eee_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from eee_5th_saturday_time_table_database where eee_5th_saturday_subject LIKE '%{self.var_eee_5th_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.eee_5th_saturday_time_table.delete(*self.eee_5th_saturday_time_table.get_children())
                                for row in rows:
                                    self.eee_5th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_saturday_eee_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from eee_5th_saturday_time_table_database where eee_5th_saturday_subject=%s",(self.var_eee_5th_saturday_eee_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update eee_5th_saturday_time_table_database set eee_5th_saturday_total_number_of_class=%s,eee_5th_saturday_time=%s,eee_5th_saturday_faculty=%s where eee_5th_saturday_subject=%s",(
                                        
                                        self.var_eee_5th_saturday_number_of_class2.get(),
                                        self.var_eee_5th_saturday_time1.get(),
                                        self.var_eee_5th_saturday_eee_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_eee_5th_saturday_eee_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_eee_5th_saturday_eee_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from eee_5th_saturday_time_table_database where eee_5th_saturday_subject=%s",(self.var_eee_5th_saturday_eee_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from eee_5th_saturday_time_table_database where eee_5th_saturday_subject=%s',(self.var_eee_5th_saturday_eee_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_eee_5th_saturday_faculty_serch.set("")
                        self.var_eee_5th_saturday_number_of_class2.set("")
                        self.var_eee_5th_saturday_time1.set("")
                        self.var_eee_5th_saturday_eee_5thmistry_cycle_subject1.set("")
                        self.var_eee_5th_saturday_eee_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def eee_5th_saturday_time_table_get(ev):
                        saturday_eee_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.eee_5th_saturday_time_table.focus()
                        content1=self.eee_5th_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_eee_5th_saturday_number_of_class2.set(row1[2])
                        self.var_eee_5th_saturday_time1.set(row1[3])
                        self.var_eee_5th_saturday_eee_5thmistry_cycle_subject1.set(row1[4])
                        self.var_eee_5th_saturday_eee_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.saturday_eee_5th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_eee_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_eee_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_eee_5th_time_table_data_frame,orient=VERTICAL)
                    self.eee_5th_saturday_time_table=ttk.Treeview(self.saturday_eee_5th_time_table_data_frame,columns=('cid','day1','eee_5th_saturday_total_number_of_class','eee_5th_saturday_time','eee_5th_saturday_subject','eee_5th_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.eee_5th_saturday_time_table.xview)
                    scrolly.configure(command=self.eee_5th_saturday_time_table.yview)

                    self.eee_5th_saturday_time_table.heading('cid',text='Serial No')
                    self.eee_5th_saturday_time_table.heading('day1',text='Day')
                    self.eee_5th_saturday_time_table.heading('eee_5th_saturday_total_number_of_class',text='Totel class')
                    self.eee_5th_saturday_time_table.heading('eee_5th_saturday_time',text='class time')
                    self.eee_5th_saturday_time_table.heading('eee_5th_saturday_subject',text='Subject')
                    self.eee_5th_saturday_time_table.heading('eee_5th_saturday_faculty',text='Faculty')

                    self.eee_5th_saturday_time_table.column('cid',width=100)
                    self.eee_5th_saturday_time_table.column('day1',width=150)
                    self.eee_5th_saturday_time_table.column('eee_5th_saturday_total_number_of_class',width=100)
                    self.eee_5th_saturday_time_table.column('eee_5th_saturday_time',width=150)
                    self.eee_5th_saturday_time_table.column('eee_5th_saturday_subject',width=150)
                    self.eee_5th_saturday_time_table.column('eee_5th_saturday_faculty',width=150)

                    self.eee_5th_saturday_time_table['show']='headings'

                    self.eee_5th_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.eee_5th_saturday_time_table.bind('<ButtonRelease-1>',eee_5th_saturday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_eee_5th_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_eee_5th_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_eee_5th_subject_list=[]
                    self.fetch_eee_5th_faculty_subject()
                    saturday_eee_5thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_eee_5th_saturday_eee_5thmistry_cycle_subject1,state='readonly',values=self.faculty_eee_5th_subject_list)
                    saturday_eee_5thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_eee_5th_name_list=[]
                    self.fetch_eee_5th_faculty_name()
                    saturday_eee_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_eee_5th_saturday_eee_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_eee_5th_name_list)
                    saturday_eee_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    eee_5th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_eee_5th_saturday_faculty_serch)
                    eee_5th_faculty_serch1.place(x=800,y=25)
                    eee_5th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=eee_5th_faculty_serch)
                    eee_5th_faculty_serch1_button.place(x=937,y=22)
                    eee_5th_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    eee_5th_add_database.place(x=10,y=140)

                    eee_5th_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    eee_5th_update_database.place(x=10,y=170)

                    eee_5th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    eee_5th_delete_database.place(x=10,y=200)

                    eee_5th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    eee_5th_clear_database.place(x=10,y=230)

        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Communication_Engineering':
                if self.var_day_select.get() == 'Monday':
  
                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ece_5th_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_ece_5th_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_ece_5th_monday_ece_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_ece_5th_monday_ece_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into ece_5th_monday_time_table_database(day1,ece_5th_monday_total_number_of_class,ece_5th_monday_time,ece_5th_monday_subject,ece_5th_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ece_5th_monday_number_of_class1.get(),
                                            self.var_ece_5th_monday_time1.get(),
                                            self.var_ece_5th_monday_ece_5thmistry_cycle_subject1.get(),
                                            self.var_ece_5th_monday_ece_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_5th_monday_time_table_database')
                            rows=cur.fetchall()
                            self.ece_5th_monday_time_table.delete(*self.ece_5th_monday_time_table.get_children())
                            for row in rows:
                                self.ece_5th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def ece_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from ece_5th_monday_time_table_database where ece_5th_monday_subject LIKE '%{self.var_ece_5th_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ece_5th_monday_time_table.delete(*self.ece_5th_monday_time_table.get_children())
                                for row in rows:
                                    self.ece_5th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_monday_ece_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from ece_5th_monday_time_table_database where ece_5th_monday_subject=%s",(self.var_ece_5th_monday_ece_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update ece_5th_monday_time_table_database set ece_5th_monday_total_number_of_class=%s,ece_5th_monday_time=%s,ece_5th_monday_faculty=%s where ece_5th_monday_subject=%s",(
                                        
                                        self.var_ece_5th_monday_number_of_class1.get(),
                                        self.var_ece_5th_monday_time1.get(),
                                        self.var_ece_5th_monday_ece_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_ece_5th_monday_ece_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_monday_ece_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from ece_5th_monday_time_table_database where ece_5th_monday_subject=%s",(self.var_ece_5th_monday_ece_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from ece_5th_monday_time_table_database where ece_5th_monday_subject=%s',(self.var_ece_5th_monday_ece_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_ece_5th_monday_faculty_serch.set("")
                        self.var_ece_5th_monday_number_of_class1.set("")
                        self.var_ece_5th_monday_time1.set("")
                        self.var_ece_5th_monday_ece_5thmistry_cycle_subject1.set("")
                        self.var_ece_5th_monday_ece_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def ece_5th_monday_time_table_get(ev):
                        monday_ece_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ece_5th_monday_time_table.focus()
                        content1=self.ece_5th_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ece_5th_monday_number_of_class1.set(row1[2])
                        self.var_ece_5th_monday_time1.set(row1[3])
                        self.var_ece_5th_monday_ece_5thmistry_cycle_subject1.set(row1[4])
                        self.var_ece_5th_monday_ece_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    
                    self.monday_ece_5th_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_ece_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_ece_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_ece_5th_time_table_data_frame,orient=VERTICAL)
                    self.ece_5th_monday_time_table=ttk.Treeview(self.monday_ece_5th_time_table_data_frame,columns=('cid','day1','ece_5th_monday_total_number_of_class','ece_5th_monday_time','ece_5th_monday_subject','ece_5th_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ece_5th_monday_time_table.xview)
                    scrolly.configure(command=self.ece_5th_monday_time_table.yview)

                    self.ece_5th_monday_time_table.heading('cid',text='Serial No')
                    self.ece_5th_monday_time_table.heading('day1',text='Day')
                    self.ece_5th_monday_time_table.heading('ece_5th_monday_total_number_of_class',text='Totel class')
                    self.ece_5th_monday_time_table.heading('ece_5th_monday_time',text='class time')
                    self.ece_5th_monday_time_table.heading('ece_5th_monday_subject',text='Subject')
                    self.ece_5th_monday_time_table.heading('ece_5th_monday_faculty',text='Faculty')

                    self.ece_5th_monday_time_table.column('cid',width=100)
                    self.ece_5th_monday_time_table.column('day1',width=150)
                    self.ece_5th_monday_time_table.column('ece_5th_monday_total_number_of_class',width=100)
                    self.ece_5th_monday_time_table.column('ece_5th_monday_time',width=150)
                    self.ece_5th_monday_time_table.column('ece_5th_monday_subject',width=150)
                    self.ece_5th_monday_time_table.column('ece_5th_monday_faculty',width=150)

                    self.ece_5th_monday_time_table['show']='headings'

                    self.ece_5th_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.ece_5th_monday_time_table.bind('<ButtonRelease-1>',ece_5th_monday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_ece_5th_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_ece_5th_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ece_5th_subject_list=[]
                    self.fetch_ece_5th_faculty_subject()
                    monday_ece_5thmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_ece_5th_monday_ece_5thmistry_cycle_subject1,state='readonly',values=self.faculty_ece_5th_subject_list)
                    monday_ece_5thmistry_cycle_subject1.place(x=400,y=25) 
                  
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ece_5th_name_list=[]
                    self.fetch_ece_5th_faculty_name()
                    monday_ece_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_ece_5th_monday_ece_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ece_5th_name_list)
                    monday_ece_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ece_5th_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_ece_5th_monday_faculty_serch)
                    ece_5th_faculty_serch1.place(x=800,y=25)
                    ece_5th_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=ece_5th_faculty_serch)
                    ece_5th_faculty_serch1_button.place(x=937,y=22)
                    ece_5th_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    ece_5th_add_database.place(x=10,y=140)

                    ece_5th_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    ece_5th_update_database.place(x=10,y=170)

                    ece_5th_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    ece_5th_delete_database.place(x=10,y=200)

                    ece_5th_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    ece_5th_clear_database.place(x=10,y=230)
####################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Communication_Engineering':
                if self.var_day_select.get() == 'Thuesday':
 
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ece_5th_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_ece_5th_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into ece_5th_thuesday_time_table_database(day1,ece_5th_thuesday_total_number_of_class,ece_5th_thuesday_time,ece_5th_thuesday_subject,ece_5th_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ece_5th_thuesday_number_of_class2.get(),
                                            self.var_ece_5th_thuesday_time1.get(),
                                            self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject1.get(),
                                            self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_5th_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.ece_5th_thuesday_time_table.delete(*self.ece_5th_thuesday_time_table.get_children())
                            for row in rows:
                                self.ece_5th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def ece_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from ece_5th_thuesday_time_table_database where ece_5th_thuesday_subject LIKE '%{self.var_ece_5th_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ece_5th_thuesday_time_table.delete(*self.ece_5th_thuesday_time_table.get_children())
                                for row in rows:
                                    self.ece_5th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from ece_5th_thuesday_time_table_database where ece_5th_thuesday_subject=%s",(self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update ece_5th_thuesday_time_table_database set ece_5th_thuesday_total_number_of_class=%s,ece_5th_thuesday_time=%s,ece_5th_thuesday_faculty=%s where ece_5th_thuesday_subject=%s",(
                                        
                                        self.var_ece_5th_thuesday_number_of_class2.get(),
                                        self.var_ece_5th_thuesday_time1.get(),
                                        self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from ece_5th_thuesday_time_table_database where ece_5th_thuesday_subject=%s",(self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from ece_5th_thuesday_time_table_database where ece_5th_thuesday_subject=%s',(self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_ece_5th_thuesday_faculty_serch.set("")
                        self.var_ece_5th_thuesday_number_of_class2.set("")
                        self.var_ece_5th_thuesday_time1.set("")
                        self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject1.set("")
                        self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def ece_5th_thuesday_time_table_get(ev):
                        thuesday_ece_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ece_5th_thuesday_time_table.focus()
                        content1=self.ece_5th_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ece_5th_thuesday_number_of_class2.set(row1[2])
                        self.var_ece_5th_thuesday_time1.set(row1[3])
                        self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject1.set(row1[4])
                        self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    
                    self.thuesday_ece_5th_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_ece_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_ece_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_ece_5th_time_table_data_frame,orient=VERTICAL)
                    self.ece_5th_thuesday_time_table=ttk.Treeview(self.thuesday_ece_5th_time_table_data_frame,columns=('cid','day1','ece_5th_thuesday_total_number_of_class','ece_5th_thuesday_time','ece_5th_thuesday_subject','ece_5th_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ece_5th_thuesday_time_table.xview)
                    scrolly.configure(command=self.ece_5th_thuesday_time_table.yview)

                    self.ece_5th_thuesday_time_table.heading('cid',text='Serial No')
                    self.ece_5th_thuesday_time_table.heading('day1',text='Day')
                    self.ece_5th_thuesday_time_table.heading('ece_5th_thuesday_total_number_of_class',text='Totel class')
                    self.ece_5th_thuesday_time_table.heading('ece_5th_thuesday_time',text='class time')
                    self.ece_5th_thuesday_time_table.heading('ece_5th_thuesday_subject',text='Subject')
                    self.ece_5th_thuesday_time_table.heading('ece_5th_thuesday_faculty',text='Faculty')

                    self.ece_5th_thuesday_time_table.column('cid',width=100)
                    self.ece_5th_thuesday_time_table.column('day1',width=150)
                    self.ece_5th_thuesday_time_table.column('ece_5th_thuesday_total_number_of_class',width=100)
                    self.ece_5th_thuesday_time_table.column('ece_5th_thuesday_time',width=150)
                    self.ece_5th_thuesday_time_table.column('ece_5th_thuesday_subject',width=150)
                    self.ece_5th_thuesday_time_table.column('ece_5th_thuesday_faculty',width=150)

                    self.ece_5th_thuesday_time_table['show']='headings'

                    self.ece_5th_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.ece_5th_thuesday_time_table.bind('<ButtonRelease-1>',ece_5th_thuesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_ece_5th_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_ece_5th_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ece_5th_subject_list=[]
                    self.fetch_ece_5th_faculty_subject()
                    thuesday_ece_5thmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject1,state='readonly',values=self.faculty_ece_5th_subject_list)
                    thuesday_ece_5thmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ece_5th_name_list=[]
                    self.fetch_ece_5th_faculty_name()
                    thuesday_ece_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_ece_5th_thuesday_ece_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ece_5th_name_list)
                    thuesday_ece_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ece_5th_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_ece_5th_thuesday_faculty_serch)
                    ece_5th_faculty_serch1.place(x=800,y=25)
                    ece_5th_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=ece_5th_faculty_serch)
                    ece_5th_faculty_serch1_button.place(x=937,y=22)
                    ece_5th_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    ece_5th_add_database.place(x=10,y=140)

                    ece_5th_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    ece_5th_update_database.place(x=10,y=170)

                    ece_5th_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    ece_5th_delete_database.place(x=10,y=200)

                    ece_5th_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    ece_5th_clear_database.place(x=10,y=230)
##################################################################################################################################################################

        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Communication_Engineering':
                if self.var_day_select.get() == 'Wednesday':
 
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ece_5th_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_ece_5th_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into ece_5th_wednesday_time_table_database(day1,ece_5th_wednesday_total_number_of_class,ece_5th_wednesday_time,ece_5th_wednesday_subject,ece_5th_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ece_5th_wednesday_number_of_class2.get(),
                                            self.var_ece_5th_wednesday_time1.get(),
                                            self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject1.get(),
                                            self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_5th_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.ece_5th_wednesday_time_table.delete(*self.ece_5th_wednesday_time_table.get_children())
                            for row in rows:
                                self.ece_5th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def ece_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from ece_5th_wednesday_time_table_database where ece_5th_wednesday_subject LIKE '%{self.var_ece_5th_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ece_5th_wednesday_time_table.delete(*self.ece_5th_wednesday_time_table.get_children())
                                for row in rows:
                                    self.ece_5th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from ece_5th_wednesday_time_table_database where ece_5th_wednesday_subject=%s",(self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update ece_5th_wednesday_time_table_database set ece_5th_wednesday_total_number_of_class=%s,ece_5th_wednesday_time=%s,ece_5th_wednesday_faculty=%s where ece_5th_wednesday_subject=%s",(
                                        
                                        self.var_ece_5th_wednesday_number_of_class2.get(),
                                        self.var_ece_5th_wednesday_time1.get(),
                                        self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from ece_5th_wednesday_time_table_database where ece_5th_wednesday_subject=%s",(self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from ece_5th_wednesday_time_table_database where ece_5th_wednesday_subject=%s',(self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_ece_5th_wednesday_faculty_serch.set("")
                        self.var_ece_5th_wednesday_number_of_class2.set("")
                        self.var_ece_5th_wednesday_time1.set("")
                        self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject1.set("")
                        self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def ece_5th_wednesday_time_table_get(ev):
                        wednesday_ece_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ece_5th_wednesday_time_table.focus()
                        content1=self.ece_5th_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ece_5th_wednesday_number_of_class2.set(row1[2])
                        self.var_ece_5th_wednesday_time1.set(row1[3])
                        self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject1.set(row1[4])
                        self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    
                    self.wednesday_ece_5th_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_ece_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_ece_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_ece_5th_time_table_data_frame,orient=VERTICAL)
                    self.ece_5th_wednesday_time_table=ttk.Treeview(self.wednesday_ece_5th_time_table_data_frame,columns=('cid','day1','ece_5th_wednesday_total_number_of_class','ece_5th_wednesday_time','ece_5th_wednesday_subject','ece_5th_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ece_5th_wednesday_time_table.xview)
                    scrolly.configure(command=self.ece_5th_wednesday_time_table.yview)

                    self.ece_5th_wednesday_time_table.heading('cid',text='Serial No')
                    self.ece_5th_wednesday_time_table.heading('day1',text='Day')
                    self.ece_5th_wednesday_time_table.heading('ece_5th_wednesday_total_number_of_class',text='Totel class')
                    self.ece_5th_wednesday_time_table.heading('ece_5th_wednesday_time',text='class time')
                    self.ece_5th_wednesday_time_table.heading('ece_5th_wednesday_subject',text='Subject')
                    self.ece_5th_wednesday_time_table.heading('ece_5th_wednesday_faculty',text='Faculty')

                    self.ece_5th_wednesday_time_table.column('cid',width=100)
                    self.ece_5th_wednesday_time_table.column('day1',width=150)
                    self.ece_5th_wednesday_time_table.column('ece_5th_wednesday_total_number_of_class',width=100)
                    self.ece_5th_wednesday_time_table.column('ece_5th_wednesday_time',width=150)
                    self.ece_5th_wednesday_time_table.column('ece_5th_wednesday_subject',width=150)
                    self.ece_5th_wednesday_time_table.column('ece_5th_wednesday_faculty',width=150)

                    self.ece_5th_wednesday_time_table['show']='headings'

                    self.ece_5th_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.ece_5th_wednesday_time_table.bind('<ButtonRelease-1>',ece_5th_wednesday_time_table_get)
                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_ece_5th_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_ece_5th_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ece_5th_subject_list=[]
                    self.fetch_ece_5th_faculty_subject()
                    wednesday_ece_5thmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject1,state='readonly',values=self.faculty_ece_5th_subject_list)
                    wednesday_ece_5thmistry_cycle_subject1.place(x=400,y=25) 
                 
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ece_5th_name_list=[]
                    self.fetch_ece_5th_faculty_name()
                    wednesday_ece_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_ece_5th_wednesday_ece_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ece_5th_name_list)
                    wednesday_ece_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ece_5th_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_ece_5th_wednesday_faculty_serch)
                    ece_5th_faculty_serch1.place(x=800,y=25)
                    ece_5th_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=ece_5th_faculty_serch)
                    ece_5th_faculty_serch1_button.place(x=937,y=22)
                    ece_5th_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    ece_5th_add_database.place(x=10,y=140)

                    ece_5th_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    ece_5th_update_database.place(x=10,y=170)

                    ece_5th_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    ece_5th_delete_database.place(x=10,y=200)

                    ece_5th_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    ece_5th_clear_database.place(x=10,y=230)

###################################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Communication_Engineering':
                if self.var_day_select.get() == 'Thursday':
          
                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ece_5th_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_ece_5th_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_ece_5th_thursday_ece_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_ece_5th_thursday_ece_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into ece_5th_thursday_time_table_database(day1,ece_5th_thursday_total_number_of_class,ece_5th_thursday_time,ece_5th_thursday_subject,ece_5th_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ece_5th_thursday_number_of_class2.get(),
                                            self.var_ece_5th_thursday_time1.get(),
                                            self.var_ece_5th_thursday_ece_5thmistry_cycle_subject1.get(),
                                            self.var_ece_5th_thursday_ece_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_5th_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.ece_5th_thursday_time_table.delete(*self.ece_5th_thursday_time_table.get_children())
                            for row in rows:
                                self.ece_5th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def ece_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from ece_5th_thursday_time_table_database where ece_5th_thursday_subject LIKE '%{self.var_ece_5th_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ece_5th_thursday_time_table.delete(*self.ece_5th_thursday_time_table.get_children())
                                for row in rows:
                                    self.ece_5th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_thursday_ece_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from ece_5th_thursday_time_table_database where ece_5th_thursday_subject=%s",(self.var_ece_5th_thursday_ece_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update ece_5th_thursday_time_table_database set ece_5th_thursday_total_number_of_class=%s,ece_5th_thursday_time=%s,ece_5th_thursday_faculty=%s where ece_5th_thursday_subject=%s",(
                                        
                                        self.var_ece_5th_thursday_number_of_class2.get(),
                                        self.var_ece_5th_thursday_time1.get(),
                                        self.var_ece_5th_thursday_ece_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_ece_5th_thursday_ece_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_thursday_ece_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from ece_5th_thursday_time_table_database where ece_5th_thursday_subject=%s",(self.var_ece_5th_thursday_ece_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from ece_5th_thursday_time_table_database where ece_5th_thursday_subject=%s',(self.var_ece_5th_thursday_ece_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_ece_5th_thursday_faculty_serch.set("")
                        self.var_ece_5th_thursday_number_of_class2.set("")
                        self.var_ece_5th_thursday_time1.set("")
                        self.var_ece_5th_thursday_ece_5thmistry_cycle_subject1.set("")
                        self.var_ece_5th_thursday_ece_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def ece_5th_thursday_time_table_get(ev):
                        thursday_ece_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ece_5th_thursday_time_table.focus()
                        content1=self.ece_5th_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ece_5th_thursday_number_of_class2.set(row1[2])
                        self.var_ece_5th_thursday_time1.set(row1[3])
                        self.var_ece_5th_thursday_ece_5thmistry_cycle_subject1.set(row1[4])
                        self.var_ece_5th_thursday_ece_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    
                    self.thursday_ece_5th_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_ece_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_ece_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_ece_5th_time_table_data_frame,orient=VERTICAL)
                    self.ece_5th_thursday_time_table=ttk.Treeview(self.thursday_ece_5th_time_table_data_frame,columns=('cid','day1','ece_5th_thursday_total_number_of_class','ece_5th_thursday_time','ece_5th_thursday_subject','ece_5th_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ece_5th_thursday_time_table.xview)
                    scrolly.configure(command=self.ece_5th_thursday_time_table.yview)

                    self.ece_5th_thursday_time_table.heading('cid',text='Serial No')
                    self.ece_5th_thursday_time_table.heading('day1',text='Day')
                    self.ece_5th_thursday_time_table.heading('ece_5th_thursday_total_number_of_class',text='Totel class')
                    self.ece_5th_thursday_time_table.heading('ece_5th_thursday_time',text='class time')
                    self.ece_5th_thursday_time_table.heading('ece_5th_thursday_subject',text='Subject')
                    self.ece_5th_thursday_time_table.heading('ece_5th_thursday_faculty',text='Faculty')

                    self.ece_5th_thursday_time_table.column('cid',width=100)
                    self.ece_5th_thursday_time_table.column('day1',width=150)
                    self.ece_5th_thursday_time_table.column('ece_5th_thursday_total_number_of_class',width=100)
                    self.ece_5th_thursday_time_table.column('ece_5th_thursday_time',width=150)
                    self.ece_5th_thursday_time_table.column('ece_5th_thursday_subject',width=150)
                    self.ece_5th_thursday_time_table.column('ece_5th_thursday_faculty',width=150)

                    self.ece_5th_thursday_time_table['show']='headings'

                    self.ece_5th_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.ece_5th_thursday_time_table.bind('<ButtonRelease-1>',ece_5th_thursday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_ece_5th_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_ece_5th_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ece_5th_subject_list=[]
                    self.fetch_ece_5th_faculty_subject()
                    thursday_ece_5thmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_ece_5th_thursday_ece_5thmistry_cycle_subject1,state='readonly',values=self.faculty_ece_5th_subject_list)
                    thursday_ece_5thmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ece_5th_name_list=[]
                    self.fetch_ece_5th_faculty_name()
                    thursday_ece_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_ece_5th_thursday_ece_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ece_5th_name_list)
                    thursday_ece_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ece_5th_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_ece_5th_thursday_faculty_serch)
                    ece_5th_faculty_serch1.place(x=800,y=25)
                    ece_5th_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=ece_5th_faculty_serch)
                    ece_5th_faculty_serch1_button.place(x=937,y=22)
                    ece_5th_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    ece_5th_add_database.place(x=10,y=140)

                    ece_5th_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    ece_5th_update_database.place(x=10,y=170)

                    ece_5th_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    ece_5th_delete_database.place(x=10,y=200)

                    ece_5th_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    ece_5th_clear_database.place(x=10,y=230)
#######################################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Communication_Engineering':
                if self.var_day_select.get() == 'Friday':
             
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ece_5th_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_ece_5th_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_ece_5th_friday_ece_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_ece_5th_friday_ece_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into ece_5th_friday_time_table_database(day1,ece_5th_friday_total_number_of_class,ece_5th_friday_time,ece_5th_friday_subject,ece_5th_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ece_5th_friday_number_of_class2.get(),
                                            self.var_ece_5th_friday_time1.get(),
                                            self.var_ece_5th_friday_ece_5thmistry_cycle_subject1.get(),
                                            self.var_ece_5th_friday_ece_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_5th_friday_time_table_database')
                            rows=cur.fetchall()
                            self.ece_5th_friday_time_table.delete(*self.ece_5th_friday_time_table.get_children())
                            for row in rows:
                                self.ece_5th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def ece_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from ece_5th_friday_time_table_database where ece_5th_friday_subject LIKE '%{self.var_ece_5th_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ece_5th_friday_time_table.delete(*self.ece_5th_friday_time_table.get_children())
                                for row in rows:
                                    self.ece_5th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_friday_ece_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from ece_5th_friday_time_table_database where ece_5th_friday_subject=%s",(self.var_ece_5th_friday_ece_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update ece_5th_friday_time_table_database set ece_5th_friday_total_number_of_class=%s,ece_5th_friday_time=%s,ece_5th_friday_faculty=%s where ece_5th_friday_subject=%s",(
                                        
                                        self.var_ece_5th_friday_number_of_class2.get(),
                                        self.var_ece_5th_friday_time1.get(),
                                        self.var_ece_5th_friday_ece_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_ece_5th_friday_ece_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_friday_ece_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from ece_5th_friday_time_table_database where ece_5th_friday_subject=%s",(self.var_ece_5th_friday_ece_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from ece_5th_friday_time_table_database where ece_5th_friday_subject=%s',(self.var_ece_5th_friday_ece_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_ece_5th_friday_faculty_serch.set("")
                        self.var_ece_5th_friday_number_of_class2.set("")
                        self.var_ece_5th_friday_time1.set("")
                        self.var_ece_5th_friday_ece_5thmistry_cycle_subject1.set("")
                        self.var_ece_5th_friday_ece_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def ece_5th_friday_time_table_get(ev):
                        friday_ece_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ece_5th_friday_time_table.focus()
                        content1=self.ece_5th_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ece_5th_friday_number_of_class2.set(row1[2])
                        self.var_ece_5th_friday_time1.set(row1[3])
                        self.var_ece_5th_friday_ece_5thmistry_cycle_subject1.set(row1[4])
                        self.var_ece_5th_friday_ece_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.friday_ece_5th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_ece_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_ece_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_ece_5th_time_table_data_frame,orient=VERTICAL)
                    self.ece_5th_friday_time_table=ttk.Treeview(self.friday_ece_5th_time_table_data_frame,columns=('cid','day1','ece_5th_friday_total_number_of_class','ece_5th_friday_time','ece_5th_friday_subject','ece_5th_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ece_5th_friday_time_table.xview)
                    scrolly.configure(command=self.ece_5th_friday_time_table.yview)

                    self.ece_5th_friday_time_table.heading('cid',text='Serial No')
                    self.ece_5th_friday_time_table.heading('day1',text='Day')
                    self.ece_5th_friday_time_table.heading('ece_5th_friday_total_number_of_class',text='Totel class')
                    self.ece_5th_friday_time_table.heading('ece_5th_friday_time',text='class time')
                    self.ece_5th_friday_time_table.heading('ece_5th_friday_subject',text='Subject')
                    self.ece_5th_friday_time_table.heading('ece_5th_friday_faculty',text='Faculty')

                    self.ece_5th_friday_time_table.column('cid',width=100)
                    self.ece_5th_friday_time_table.column('day1',width=150)
                    self.ece_5th_friday_time_table.column('ece_5th_friday_total_number_of_class',width=100)
                    self.ece_5th_friday_time_table.column('ece_5th_friday_time',width=150)
                    self.ece_5th_friday_time_table.column('ece_5th_friday_subject',width=150)
                    self.ece_5th_friday_time_table.column('ece_5th_friday_faculty',width=150)

                    self.ece_5th_friday_time_table['show']='headings'

                    self.ece_5th_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.ece_5th_friday_time_table.bind('<ButtonRelease-1>',ece_5th_friday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_ece_5th_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_ece_5th_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ece_5th_subject_list=[]
                    self.fetch_ece_5th_faculty_subject()
                    friday_ece_5thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ece_5th_friday_ece_5thmistry_cycle_subject1,state='readonly',values=self.faculty_ece_5th_subject_list)
                    friday_ece_5thmistry_cycle_subject1.place(x=400,y=25) 
                  
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ece_5th_name_list=[]
                    self.fetch_ece_5th_faculty_name()
                    friday_ece_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ece_5th_friday_ece_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ece_5th_name_list)
                    friday_ece_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ece_5th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_ece_5th_friday_faculty_serch)
                    ece_5th_faculty_serch1.place(x=800,y=25)
                    ece_5th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=ece_5th_faculty_serch)
                    ece_5th_faculty_serch1_button.place(x=937,y=22)
                    ece_5th_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    ece_5th_add_database.place(x=10,y=140)

                    ece_5th_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    ece_5th_update_database.place(x=10,y=170)

                    ece_5th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    ece_5th_delete_database.place(x=10,y=200)

                    ece_5th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    ece_5th_clear_database.place(x=10,y=230)
#################################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Communication_Engineering':
                if self.var_day_select.get() == 'Saturday':
                
                 
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ece_5th_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_ece_5th_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_ece_5th_saturday_ece_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_ece_5th_saturday_ece_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into ece_5th_saturday_time_table_database(day1,ece_5th_saturday_total_number_of_class,ece_5th_saturday_time,ece_5th_saturday_subject,ece_5th_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ece_5th_saturday_number_of_class2.get(),
                                            self.var_ece_5th_saturday_time1.get(),
                                            self.var_ece_5th_saturday_ece_5thmistry_cycle_subject1.get(),
                                            self.var_ece_5th_saturday_ece_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ece_5th_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.ece_5th_saturday_time_table.delete(*self.ece_5th_saturday_time_table.get_children())
                            for row in rows:
                                self.ece_5th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def ece_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from ece_5th_saturday_time_table_database where ece_5th_saturday_subject LIKE '%{self.var_ece_5th_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ece_5th_saturday_time_table.delete(*self.ece_5th_saturday_time_table.get_children())
                                for row in rows:
                                    self.ece_5th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_saturday_ece_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from ece_5th_saturday_time_table_database where ece_5th_saturday_subject=%s",(self.var_ece_5th_saturday_ece_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update ece_5th_saturday_time_table_database set ece_5th_saturday_total_number_of_class=%s,ece_5th_saturday_time=%s,ece_5th_saturday_faculty=%s where ece_5th_saturday_subject=%s",(
                                        
                                        self.var_ece_5th_saturday_number_of_class2.get(),
                                        self.var_ece_5th_saturday_time1.get(),
                                        self.var_ece_5th_saturday_ece_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_ece_5th_saturday_ece_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ece_5th_saturday_ece_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from ece_5th_saturday_time_table_database where ece_5th_saturday_subject=%s",(self.var_ece_5th_saturday_ece_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from ece_5th_saturday_time_table_database where ece_5th_saturday_subject=%s',(self.var_ece_5th_saturday_ece_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_ece_5th_saturday_faculty_serch.set("")
                        self.var_ece_5th_saturday_number_of_class2.set("")
                        self.var_ece_5th_saturday_time1.set("")
                        self.var_ece_5th_saturday_ece_5thmistry_cycle_subject1.set("")
                        self.var_ece_5th_saturday_ece_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def ece_5th_saturday_time_table_get(ev):
                        saturday_ece_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ece_5th_saturday_time_table.focus()
                        content1=self.ece_5th_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ece_5th_saturday_number_of_class2.set(row1[2])
                        self.var_ece_5th_saturday_time1.set(row1[3])
                        self.var_ece_5th_saturday_ece_5thmistry_cycle_subject1.set(row1[4])
                        self.var_ece_5th_saturday_ece_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.saturday_ece_5th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_ece_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_ece_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_ece_5th_time_table_data_frame,orient=VERTICAL)
                    self.ece_5th_saturday_time_table=ttk.Treeview(self.saturday_ece_5th_time_table_data_frame,columns=('cid','day1','ece_5th_saturday_total_number_of_class','ece_5th_saturday_time','ece_5th_saturday_subject','ece_5th_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ece_5th_saturday_time_table.xview)
                    scrolly.configure(command=self.ece_5th_saturday_time_table.yview)

                    self.ece_5th_saturday_time_table.heading('cid',text='Serial No')
                    self.ece_5th_saturday_time_table.heading('day1',text='Day')
                    self.ece_5th_saturday_time_table.heading('ece_5th_saturday_total_number_of_class',text='Totel class')
                    self.ece_5th_saturday_time_table.heading('ece_5th_saturday_time',text='class time')
                    self.ece_5th_saturday_time_table.heading('ece_5th_saturday_subject',text='Subject')
                    self.ece_5th_saturday_time_table.heading('ece_5th_saturday_faculty',text='Faculty')

                    self.ece_5th_saturday_time_table.column('cid',width=100)
                    self.ece_5th_saturday_time_table.column('day1',width=150)
                    self.ece_5th_saturday_time_table.column('ece_5th_saturday_total_number_of_class',width=100)
                    self.ece_5th_saturday_time_table.column('ece_5th_saturday_time',width=150)
                    self.ece_5th_saturday_time_table.column('ece_5th_saturday_subject',width=150)
                    self.ece_5th_saturday_time_table.column('ece_5th_saturday_faculty',width=150)

                    self.ece_5th_saturday_time_table['show']='headings'

                    self.ece_5th_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.ece_5th_saturday_time_table.bind('<ButtonRelease-1>',ece_5th_saturday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_ece_5th_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_ece_5th_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ece_5th_subject_list=[]
                    self.fetch_ece_5th_faculty_subject()
                    saturday_ece_5thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ece_5th_saturday_ece_5thmistry_cycle_subject1,state='readonly',values=self.faculty_ece_5th_subject_list)
                    saturday_ece_5thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ece_5th_name_list=[]
                    self.fetch_ece_5th_faculty_name()
                    saturday_ece_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ece_5th_saturday_ece_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ece_5th_name_list)
                    saturday_ece_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ece_5th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_ece_5th_saturday_faculty_serch)
                    ece_5th_faculty_serch1.place(x=800,y=25)
                    ece_5th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=ece_5th_faculty_serch)
                    ece_5th_faculty_serch1_button.place(x=937,y=22)
                    ece_5th_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    ece_5th_add_database.place(x=10,y=140)

                    ece_5th_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    ece_5th_update_database.place(x=10,y=170)

                    ece_5th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    ece_5th_delete_database.place(x=10,y=200)

                    ece_5th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    ece_5th_clear_database.place(x=10,y=230)


        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Computer_Science_Engineering':
                if self.var_day_select.get() == 'Monday':
      
                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_cs_5th_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_cs_5th_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_cs_5th_monday_cs_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_cs_5th_monday_cs_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into cs_5th_monday_time_table_database(day1,cs_5th_monday_total_number_of_class,cs_5th_monday_time,cs_5th_monday_subject,cs_5th_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_cs_5th_monday_number_of_class1.get(),
                                            self.var_cs_5th_monday_time1.get(),
                                            self.var_cs_5th_monday_cs_5thmistry_cycle_subject1.get(),
                                            self.var_cs_5th_monday_cs_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_5th_monday_time_table_database')
                            rows=cur.fetchall()
                            self.cs_5th_monday_time_table.delete(*self.cs_5th_monday_time_table.get_children())
                            for row in rows:
                                self.cs_5th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def cs_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from cs_5th_monday_time_table_database where cs_5th_monday_subject LIKE '%{self.var_cs_5th_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.cs_5th_monday_time_table.delete(*self.cs_5th_monday_time_table.get_children())
                                for row in rows:
                                    self.cs_5th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_monday_cs_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from cs_5th_monday_time_table_database where cs_5th_monday_subject=%s",(self.var_cs_5th_monday_cs_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update cs_5th_monday_time_table_database set cs_5th_monday_total_number_of_class=%s,cs_5th_monday_time=%s,cs_5th_monday_faculty=%s where cs_5th_monday_subject=%s",(
                                        
                                        self.var_cs_5th_monday_number_of_class1.get(),
                                        self.var_cs_5th_monday_time1.get(),
                                        self.var_cs_5th_monday_cs_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_cs_5th_monday_cs_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_monday_cs_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from cs_5th_monday_time_table_database where cs_5th_monday_subject=%s",(self.var_cs_5th_monday_cs_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from cs_5th_monday_time_table_database where cs_5th_monday_subject=%s',(self.var_cs_5th_monday_cs_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_cs_5th_monday_faculty_serch.set("")
                        self.var_cs_5th_monday_number_of_class1.set("")
                        self.var_cs_5th_monday_time1.set("")
                        self.var_cs_5th_monday_cs_5thmistry_cycle_subject1.set("")
                        self.var_cs_5th_monday_cs_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def cs_5th_monday_time_table_get(ev):
                        monday_cs_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.cs_5th_monday_time_table.focus()
                        content1=self.cs_5th_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_cs_5th_monday_number_of_class1.set(row1[2])
                        self.var_cs_5th_monday_time1.set(row1[3])
                        self.var_cs_5th_monday_cs_5thmistry_cycle_subject1.set(row1[4])
                        self.var_cs_5th_monday_cs_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    
                    self.monday_cs_5th_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_cs_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_cs_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_cs_5th_time_table_data_frame,orient=VERTICAL)
                    self.cs_5th_monday_time_table=ttk.Treeview(self.monday_cs_5th_time_table_data_frame,columns=('cid','day1','cs_5th_monday_total_number_of_class','cs_5th_monday_time','cs_5th_monday_subject','cs_5th_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.cs_5th_monday_time_table.xview)
                    scrolly.configure(command=self.cs_5th_monday_time_table.yview)

                    self.cs_5th_monday_time_table.heading('cid',text='Serial No')
                    self.cs_5th_monday_time_table.heading('day1',text='Day')
                    self.cs_5th_monday_time_table.heading('cs_5th_monday_total_number_of_class',text='Totel class')
                    self.cs_5th_monday_time_table.heading('cs_5th_monday_time',text='class time')
                    self.cs_5th_monday_time_table.heading('cs_5th_monday_subject',text='Subject')
                    self.cs_5th_monday_time_table.heading('cs_5th_monday_faculty',text='Faculty')

                    self.cs_5th_monday_time_table.column('cid',width=100)
                    self.cs_5th_monday_time_table.column('day1',width=150)
                    self.cs_5th_monday_time_table.column('cs_5th_monday_total_number_of_class',width=100)
                    self.cs_5th_monday_time_table.column('cs_5th_monday_time',width=150)
                    self.cs_5th_monday_time_table.column('cs_5th_monday_subject',width=150)
                    self.cs_5th_monday_time_table.column('cs_5th_monday_faculty',width=150)

                    self.cs_5th_monday_time_table['show']='headings'

                    self.cs_5th_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.cs_5th_monday_time_table.bind('<ButtonRelease-1>',cs_5th_monday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_cs_5th_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_cs_5th_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_cs_5th_subject_list=[]
                    self.fetch_cs_5th_faculty_subject()
                    monday_cs_5thmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_cs_5th_monday_cs_5thmistry_cycle_subject1,state='readonly',values=self.faculty_cs_5th_subject_list)
                    monday_cs_5thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_cs_5th_name_list=[]
                    self.fetch_cs_5th_faculty_name()
                    monday_cs_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_cs_5th_monday_cs_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_cs_5th_name_list)
                    monday_cs_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    cs_5th_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_cs_5th_monday_faculty_serch)
                    cs_5th_faculty_serch1.place(x=800,y=25)
                    cs_5th_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=cs_5th_faculty_serch)
                    cs_5th_faculty_serch1_button.place(x=937,y=22)
                    cs_5th_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    cs_5th_add_database.place(x=10,y=140)

                    cs_5th_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    cs_5th_update_database.place(x=10,y=170)

                    cs_5th_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    cs_5th_delete_database.place(x=10,y=200)

                    cs_5th_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    cs_5th_clear_database.place(x=10,y=230)
#########################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Computer_Science_Engineering':
                if self.var_day_select.get() == 'Thuesday':
 
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_cs_5th_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_cs_5th_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into cs_5th_thuesday_time_table_database(day1,cs_5th_thuesday_total_number_of_class,cs_5th_thuesday_time,cs_5th_thuesday_subject,cs_5th_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_cs_5th_thuesday_number_of_class2.get(),
                                            self.var_cs_5th_thuesday_time1.get(),
                                            self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject1.get(),
                                            self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_5th_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.cs_5th_thuesday_time_table.delete(*self.cs_5th_thuesday_time_table.get_children())
                            for row in rows:
                                self.cs_5th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def cs_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from cs_5th_thuesday_time_table_database where cs_5th_thuesday_subject LIKE '%{self.var_cs_5th_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.cs_5th_thuesday_time_table.delete(*self.cs_5th_thuesday_time_table.get_children())
                                for row in rows:
                                    self.cs_5th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from cs_5th_thuesday_time_table_database where cs_5th_thuesday_subject=%s",(self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update cs_5th_thuesday_time_table_database set cs_5th_thuesday_total_number_of_class=%s,cs_5th_thuesday_time=%s,cs_5th_thuesday_faculty=%s where cs_5th_thuesday_subject=%s",(
                                        
                                        self.var_cs_5th_thuesday_number_of_class2.get(),
                                        self.var_cs_5th_thuesday_time1.get(),
                                        self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from cs_5th_thuesday_time_table_database where cs_5th_thuesday_subject=%s",(self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from cs_5th_thuesday_time_table_database where cs_5th_thuesday_subject=%s',(self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_cs_5th_thuesday_faculty_serch.set("")
                        self.var_cs_5th_thuesday_number_of_class2.set("")
                        self.var_cs_5th_thuesday_time1.set("")
                        self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject1.set("")
                        self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def cs_5th_thuesday_time_table_get(ev):
                        thuesday_cs_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.cs_5th_thuesday_time_table.focus()
                        content1=self.cs_5th_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_cs_5th_thuesday_number_of_class2.set(row1[2])
                        self.var_cs_5th_thuesday_time1.set(row1[3])
                        self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject1.set(row1[4])
                        self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    
                    self.thuesday_cs_5th_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_cs_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_cs_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_cs_5th_time_table_data_frame,orient=VERTICAL)
                    self.cs_5th_thuesday_time_table=ttk.Treeview(self.thuesday_cs_5th_time_table_data_frame,columns=('cid','day1','cs_5th_thuesday_total_number_of_class','cs_5th_thuesday_time','cs_5th_thuesday_subject','cs_5th_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.cs_5th_thuesday_time_table.xview)
                    scrolly.configure(command=self.cs_5th_thuesday_time_table.yview)

                    self.cs_5th_thuesday_time_table.heading('cid',text='Serial No')
                    self.cs_5th_thuesday_time_table.heading('day1',text='Day')
                    self.cs_5th_thuesday_time_table.heading('cs_5th_thuesday_total_number_of_class',text='Totel class')
                    self.cs_5th_thuesday_time_table.heading('cs_5th_thuesday_time',text='class time')
                    self.cs_5th_thuesday_time_table.heading('cs_5th_thuesday_subject',text='Subject')
                    self.cs_5th_thuesday_time_table.heading('cs_5th_thuesday_faculty',text='Faculty')

                    self.cs_5th_thuesday_time_table.column('cid',width=100)
                    self.cs_5th_thuesday_time_table.column('day1',width=150)
                    self.cs_5th_thuesday_time_table.column('cs_5th_thuesday_total_number_of_class',width=100)
                    self.cs_5th_thuesday_time_table.column('cs_5th_thuesday_time',width=150)
                    self.cs_5th_thuesday_time_table.column('cs_5th_thuesday_subject',width=150)
                    self.cs_5th_thuesday_time_table.column('cs_5th_thuesday_faculty',width=150)

                    self.cs_5th_thuesday_time_table['show']='headings'

                    self.cs_5th_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.cs_5th_thuesday_time_table.bind('<ButtonRelease-1>',cs_5th_thuesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_cs_5th_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_cs_5th_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_cs_5th_subject_list=[]
                    self.fetch_cs_5th_faculty_subject()
                    thuesday_cs_5thmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject1,state='readonly',values=self.faculty_cs_5th_subject_list)
                    thuesday_cs_5thmistry_cycle_subject1.place(x=400,y=25) 
                 
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_cs_5th_name_list=[]
                    self.fetch_cs_5th_faculty_name()
                    thuesday_cs_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_cs_5th_thuesday_cs_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_cs_5th_name_list)
                    thuesday_cs_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    cs_5th_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_cs_5th_thuesday_faculty_serch)
                    cs_5th_faculty_serch1.place(x=800,y=25)
                    cs_5th_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=cs_5th_faculty_serch)
                    cs_5th_faculty_serch1_button.place(x=937,y=22)
                    cs_5th_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    cs_5th_add_database.place(x=10,y=140)

                    cs_5th_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    cs_5th_update_database.place(x=10,y=170)

                    cs_5th_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    cs_5th_delete_database.place(x=10,y=200)

                    cs_5th_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    cs_5th_clear_database.place(x=10,y=230)

        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Computer_Science_Engineering':
                if self.var_day_select.get() == 'Wednesday':
                
                  
   
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_cs_5th_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_cs_5th_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into cs_5th_wednesday_time_table_database(day1,cs_5th_wednesday_total_number_of_class,cs_5th_wednesday_time,cs_5th_wednesday_subject,cs_5th_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_cs_5th_wednesday_number_of_class2.get(),
                                            self.var_cs_5th_wednesday_time1.get(),
                                            self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject1.get(),
                                            self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_5th_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.cs_5th_wednesday_time_table.delete(*self.cs_5th_wednesday_time_table.get_children())
                            for row in rows:
                                self.cs_5th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def cs_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from cs_5th_wednesday_time_table_database where cs_5th_wednesday_subject LIKE '%{self.var_cs_5th_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.cs_5th_wednesday_time_table.delete(*self.cs_5th_wednesday_time_table.get_children())
                                for row in rows:
                                    self.cs_5th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from cs_5th_wednesday_time_table_database where cs_5th_wednesday_subject=%s",(self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update cs_5th_wednesday_time_table_database set cs_5th_wednesday_total_number_of_class=%s,cs_5th_wednesday_time=%s,cs_5th_wednesday_faculty=%s where cs_5th_wednesday_subject=%s",(
                                        
                                        self.var_cs_5th_wednesday_number_of_class2.get(),
                                        self.var_cs_5th_wednesday_time1.get(),
                                        self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from cs_5th_wednesday_time_table_database where cs_5th_wednesday_subject=%s",(self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from cs_5th_wednesday_time_table_database where cs_5th_wednesday_subject=%s',(self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_cs_5th_wednesday_faculty_serch.set("")
                        self.var_cs_5th_wednesday_number_of_class2.set("")
                        self.var_cs_5th_wednesday_time1.set("")
                        self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject1.set("")
                        self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def cs_5th_wednesday_time_table_get(ev):
                        wednesday_cs_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.cs_5th_wednesday_time_table.focus()
                        content1=self.cs_5th_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_cs_5th_wednesday_number_of_class2.set(row1[2])
                        self.var_cs_5th_wednesday_time1.set(row1[3])
                        self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject1.set(row1[4])
                        self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    
                    self.wednesday_cs_5th_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_cs_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_cs_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_cs_5th_time_table_data_frame,orient=VERTICAL)
                    self.cs_5th_wednesday_time_table=ttk.Treeview(self.wednesday_cs_5th_time_table_data_frame,columns=('cid','day1','cs_5th_wednesday_total_number_of_class','cs_5th_wednesday_time','cs_5th_wednesday_subject','cs_5th_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.cs_5th_wednesday_time_table.xview)
                    scrolly.configure(command=self.cs_5th_wednesday_time_table.yview)

                    self.cs_5th_wednesday_time_table.heading('cid',text='Serial No')
                    self.cs_5th_wednesday_time_table.heading('day1',text='Day')
                    self.cs_5th_wednesday_time_table.heading('cs_5th_wednesday_total_number_of_class',text='Totel class')
                    self.cs_5th_wednesday_time_table.heading('cs_5th_wednesday_time',text='class time')
                    self.cs_5th_wednesday_time_table.heading('cs_5th_wednesday_subject',text='Subject')
                    self.cs_5th_wednesday_time_table.heading('cs_5th_wednesday_faculty',text='Faculty')

                    self.cs_5th_wednesday_time_table.column('cid',width=100)
                    self.cs_5th_wednesday_time_table.column('day1',width=150)
                    self.cs_5th_wednesday_time_table.column('cs_5th_wednesday_total_number_of_class',width=100)
                    self.cs_5th_wednesday_time_table.column('cs_5th_wednesday_time',width=150)
                    self.cs_5th_wednesday_time_table.column('cs_5th_wednesday_subject',width=150)
                    self.cs_5th_wednesday_time_table.column('cs_5th_wednesday_faculty',width=150)

                    self.cs_5th_wednesday_time_table['show']='headings'

                    self.cs_5th_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.cs_5th_wednesday_time_table.bind('<ButtonRelease-1>',cs_5th_wednesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_cs_5th_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_cs_5th_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_cs_5th_subject_list=[]
                    self.fetch_cs_5th_faculty_subject()
                    wednesday_cs_5thmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject1,state='readonly',values=self.faculty_cs_5th_subject_list)
                    wednesday_cs_5thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_cs_5th_name_list=[]
                    self.fetch_cs_5th_faculty_name()
                    wednesday_cs_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_cs_5th_wednesday_cs_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_cs_5th_name_list)
                    wednesday_cs_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    cs_5th_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_cs_5th_wednesday_faculty_serch)
                    cs_5th_faculty_serch1.place(x=800,y=25)
                    cs_5th_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=cs_5th_faculty_serch)
                    cs_5th_faculty_serch1_button.place(x=937,y=22)
                    cs_5th_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    cs_5th_add_database.place(x=10,y=140)

                    cs_5th_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    cs_5th_update_database.place(x=10,y=170)

                    cs_5th_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    cs_5th_delete_database.place(x=10,y=200)

                    cs_5th_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    cs_5th_clear_database.place(x=10,y=230)

####################################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Computer_Science_Engineering':
                if self.var_day_select.get() == 'Thursday':
                

                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_cs_5th_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_cs_5th_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_cs_5th_thursday_cs_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_cs_5th_thursday_cs_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into cs_5th_thursday_time_table_database(day1,cs_5th_thursday_total_number_of_class,cs_5th_thursday_time,cs_5th_thursday_subject,cs_5th_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_cs_5th_thursday_number_of_class2.get(),
                                            self.var_cs_5th_thursday_time1.get(),
                                            self.var_cs_5th_thursday_cs_5thmistry_cycle_subject1.get(),
                                            self.var_cs_5th_thursday_cs_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_5th_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.cs_5th_thursday_time_table.delete(*self.cs_5th_thursday_time_table.get_children())
                            for row in rows:
                                self.cs_5th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def cs_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from cs_5th_thursday_time_table_database where cs_5th_thursday_subject LIKE '%{self.var_cs_5th_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.cs_5th_thursday_time_table.delete(*self.cs_5th_thursday_time_table.get_children())
                                for row in rows:
                                    self.cs_5th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_thursday_cs_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from cs_5th_thursday_time_table_database where cs_5th_thursday_subject=%s",(self.var_cs_5th_thursday_cs_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update cs_5th_thursday_time_table_database set cs_5th_thursday_total_number_of_class=%s,cs_5th_thursday_time=%s,cs_5th_thursday_faculty=%s where cs_5th_thursday_subject=%s",(
                                        
                                        self.var_cs_5th_thursday_number_of_class2.get(),
                                        self.var_cs_5th_thursday_time1.get(),
                                        self.var_cs_5th_thursday_cs_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_cs_5th_thursday_cs_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_thursday_cs_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from cs_5th_thursday_time_table_database where cs_5th_thursday_subject=%s",(self.var_cs_5th_thursday_cs_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from cs_5th_thursday_time_table_database where cs_5th_thursday_subject=%s',(self.var_cs_5th_thursday_cs_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_cs_5th_thursday_faculty_serch.set("")
                        self.var_cs_5th_thursday_number_of_class2.set("")
                        self.var_cs_5th_thursday_time1.set("")
                        self.var_cs_5th_thursday_cs_5thmistry_cycle_subject1.set("")
                        self.var_cs_5th_thursday_cs_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def cs_5th_thursday_time_table_get(ev):
                        thursday_cs_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.cs_5th_thursday_time_table.focus()
                        content1=self.cs_5th_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_cs_5th_thursday_number_of_class2.set(row1[2])
                        self.var_cs_5th_thursday_time1.set(row1[3])
                        self.var_cs_5th_thursday_cs_5thmistry_cycle_subject1.set(row1[4])
                        self.var_cs_5th_thursday_cs_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    
                    self.thursday_cs_5th_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_cs_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_cs_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_cs_5th_time_table_data_frame,orient=VERTICAL)
                    self.cs_5th_thursday_time_table=ttk.Treeview(self.thursday_cs_5th_time_table_data_frame,columns=('cid','day1','cs_5th_thursday_total_number_of_class','cs_5th_thursday_time','cs_5th_thursday_subject','cs_5th_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.cs_5th_thursday_time_table.xview)
                    scrolly.configure(command=self.cs_5th_thursday_time_table.yview)

                    self.cs_5th_thursday_time_table.heading('cid',text='Serial No')
                    self.cs_5th_thursday_time_table.heading('day1',text='Day')
                    self.cs_5th_thursday_time_table.heading('cs_5th_thursday_total_number_of_class',text='Totel class')
                    self.cs_5th_thursday_time_table.heading('cs_5th_thursday_time',text='class time')
                    self.cs_5th_thursday_time_table.heading('cs_5th_thursday_subject',text='Subject')
                    self.cs_5th_thursday_time_table.heading('cs_5th_thursday_faculty',text='Faculty')

                    self.cs_5th_thursday_time_table.column('cid',width=100)
                    self.cs_5th_thursday_time_table.column('day1',width=150)
                    self.cs_5th_thursday_time_table.column('cs_5th_thursday_total_number_of_class',width=100)
                    self.cs_5th_thursday_time_table.column('cs_5th_thursday_time',width=150)
                    self.cs_5th_thursday_time_table.column('cs_5th_thursday_subject',width=150)
                    self.cs_5th_thursday_time_table.column('cs_5th_thursday_faculty',width=150)

                    self.cs_5th_thursday_time_table['show']='headings'

                    self.cs_5th_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.cs_5th_thursday_time_table.bind('<ButtonRelease-1>',cs_5th_thursday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_cs_5th_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_cs_5th_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_cs_5th_subject_list=[]
                    self.fetch_cs_5th_faculty_subject()
                    thursday_cs_5thmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_cs_5th_thursday_cs_5thmistry_cycle_subject1,state='readonly',values=self.faculty_cs_5th_subject_list)
                    thursday_cs_5thmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_cs_5th_name_list=[]
                    self.fetch_cs_5th_faculty_name()
                    thursday_cs_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_cs_5th_thursday_cs_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_cs_5th_name_list)
                    thursday_cs_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    cs_5th_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_cs_5th_thursday_faculty_serch)
                    cs_5th_faculty_serch1.place(x=800,y=25)
                    cs_5th_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=cs_5th_faculty_serch)
                    cs_5th_faculty_serch1_button.place(x=937,y=22)
                    cs_5th_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    cs_5th_add_database.place(x=10,y=140)

                    cs_5th_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    cs_5th_update_database.place(x=10,y=170)

                    cs_5th_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    cs_5th_delete_database.place(x=10,y=200)

                    cs_5th_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    cs_5th_clear_database.place(x=10,y=230)

###################################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Computer_Science_Engineering':
                if self.var_day_select.get() == 'Friday':
                
    
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_cs_5th_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_cs_5th_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_cs_5th_friday_cs_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_cs_5th_friday_cs_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into cs_5th_friday_time_table_database(day1,cs_5th_friday_total_number_of_class,cs_5th_friday_time,cs_5th_friday_subject,cs_5th_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_cs_5th_friday_number_of_class2.get(),
                                            self.var_cs_5th_friday_time1.get(),
                                            self.var_cs_5th_friday_cs_5thmistry_cycle_subject1.get(),
                                            self.var_cs_5th_friday_cs_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_5th_friday_time_table_database')
                            rows=cur.fetchall()
                            self.cs_5th_friday_time_table.delete(*self.cs_5th_friday_time_table.get_children())
                            for row in rows:
                                self.cs_5th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def cs_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from cs_5th_friday_time_table_database where cs_5th_friday_subject LIKE '%{self.var_cs_5th_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.cs_5th_friday_time_table.delete(*self.cs_5th_friday_time_table.get_children())
                                for row in rows:
                                    self.cs_5th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_friday_cs_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from cs_5th_friday_time_table_database where cs_5th_friday_subject=%s",(self.var_cs_5th_friday_cs_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update cs_5th_friday_time_table_database set cs_5th_friday_total_number_of_class=%s,cs_5th_friday_time=%s,cs_5th_friday_faculty=%s where cs_5th_friday_subject=%s",(
                                        
                                        self.var_cs_5th_friday_number_of_class2.get(),
                                        self.var_cs_5th_friday_time1.get(),
                                        self.var_cs_5th_friday_cs_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_cs_5th_friday_cs_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_friday_cs_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from cs_5th_friday_time_table_database where cs_5th_friday_subject=%s",(self.var_cs_5th_friday_cs_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from cs_5th_friday_time_table_database where cs_5th_friday_subject=%s',(self.var_cs_5th_friday_cs_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_cs_5th_friday_faculty_serch.set("")
                        self.var_cs_5th_friday_number_of_class2.set("")
                        self.var_cs_5th_friday_time1.set("")
                        self.var_cs_5th_friday_cs_5thmistry_cycle_subject1.set("")
                        self.var_cs_5th_friday_cs_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def cs_5th_friday_time_table_get(ev):
                        friday_cs_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.cs_5th_friday_time_table.focus()
                        content1=self.cs_5th_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_cs_5th_friday_number_of_class2.set(row1[2])
                        self.var_cs_5th_friday_time1.set(row1[3])
                        self.var_cs_5th_friday_cs_5thmistry_cycle_subject1.set(row1[4])
                        self.var_cs_5th_friday_cs_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.friday_cs_5th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_cs_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_cs_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_cs_5th_time_table_data_frame,orient=VERTICAL)
                    self.cs_5th_friday_time_table=ttk.Treeview(self.friday_cs_5th_time_table_data_frame,columns=('cid','day1','cs_5th_friday_total_number_of_class','cs_5th_friday_time','cs_5th_friday_subject','cs_5th_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.cs_5th_friday_time_table.xview)
                    scrolly.configure(command=self.cs_5th_friday_time_table.yview)

                    self.cs_5th_friday_time_table.heading('cid',text='Serial No')
                    self.cs_5th_friday_time_table.heading('day1',text='Day')
                    self.cs_5th_friday_time_table.heading('cs_5th_friday_total_number_of_class',text='Totel class')
                    self.cs_5th_friday_time_table.heading('cs_5th_friday_time',text='class time')
                    self.cs_5th_friday_time_table.heading('cs_5th_friday_subject',text='Subject')
                    self.cs_5th_friday_time_table.heading('cs_5th_friday_faculty',text='Faculty')

                    self.cs_5th_friday_time_table.column('cid',width=100)
                    self.cs_5th_friday_time_table.column('day1',width=150)
                    self.cs_5th_friday_time_table.column('cs_5th_friday_total_number_of_class',width=100)
                    self.cs_5th_friday_time_table.column('cs_5th_friday_time',width=150)
                    self.cs_5th_friday_time_table.column('cs_5th_friday_subject',width=150)
                    self.cs_5th_friday_time_table.column('cs_5th_friday_faculty',width=150)

                    self.cs_5th_friday_time_table['show']='headings'

                    self.cs_5th_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.cs_5th_friday_time_table.bind('<ButtonRelease-1>',cs_5th_friday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_cs_5th_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_cs_5th_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_cs_5th_subject_list=[]
                    self.fetch_cs_5th_faculty_subject()
                    friday_cs_5thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_cs_5th_friday_cs_5thmistry_cycle_subject1,state='readonly',values=self.faculty_cs_5th_subject_list)
                    friday_cs_5thmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_cs_5th_name_list=[]
                    self.fetch_cs_5th_faculty_name()
                    friday_cs_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_cs_5th_friday_cs_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_cs_5th_name_list)
                    friday_cs_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    cs_5th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_cs_5th_friday_faculty_serch)
                    cs_5th_faculty_serch1.place(x=800,y=25)
                    cs_5th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=cs_5th_faculty_serch)
                    cs_5th_faculty_serch1_button.place(x=937,y=22)
                    cs_5th_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    cs_5th_add_database.place(x=10,y=140)

                    cs_5th_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    cs_5th_update_database.place(x=10,y=170)

                    cs_5th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    cs_5th_delete_database.place(x=10,y=200)

                    cs_5th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    cs_5th_clear_database.place(x=10,y=230)

#################################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Computer_Science_Engineering':
                if self.var_day_select.get() == 'Saturday':
                
           
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_cs_5th_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_cs_5th_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_cs_5th_saturday_cs_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_cs_5th_saturday_cs_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into cs_5th_saturday_time_table_database(day1,cs_5th_saturday_total_number_of_class,cs_5th_saturday_time,cs_5th_saturday_subject,cs_5th_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_cs_5th_saturday_number_of_class2.get(),
                                            self.var_cs_5th_saturday_time1.get(),
                                            self.var_cs_5th_saturday_cs_5thmistry_cycle_subject1.get(),
                                            self.var_cs_5th_saturday_cs_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from cs_5th_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.cs_5th_saturday_time_table.delete(*self.cs_5th_saturday_time_table.get_children())
                            for row in rows:
                                self.cs_5th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def cs_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from cs_5th_saturday_time_table_database where cs_5th_saturday_subject LIKE '%{self.var_cs_5th_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.cs_5th_saturday_time_table.delete(*self.cs_5th_saturday_time_table.get_children())
                                for row in rows:
                                    self.cs_5th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_saturday_cs_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from cs_5th_saturday_time_table_database where cs_5th_saturday_subject=%s",(self.var_cs_5th_saturday_cs_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update cs_5th_saturday_time_table_database set cs_5th_saturday_total_number_of_class=%s,cs_5th_saturday_time=%s,cs_5th_saturday_faculty=%s where cs_5th_saturday_subject=%s",(
                                        
                                        self.var_cs_5th_saturday_number_of_class2.get(),
                                        self.var_cs_5th_saturday_time1.get(),
                                        self.var_cs_5th_saturday_cs_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_cs_5th_saturday_cs_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_cs_5th_saturday_cs_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from cs_5th_saturday_time_table_database where cs_5th_saturday_subject=%s",(self.var_cs_5th_saturday_cs_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from cs_5th_saturday_time_table_database where cs_5th_saturday_subject=%s',(self.var_cs_5th_saturday_cs_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_cs_5th_saturday_faculty_serch.set("")
                        self.var_cs_5th_saturday_number_of_class2.set("")
                        self.var_cs_5th_saturday_time1.set("")
                        self.var_cs_5th_saturday_cs_5thmistry_cycle_subject1.set("")
                        self.var_cs_5th_saturday_cs_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def cs_5th_saturday_time_table_get(ev):
                        saturday_cs_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.cs_5th_saturday_time_table.focus()
                        content1=self.cs_5th_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_cs_5th_saturday_number_of_class2.set(row1[2])
                        self.var_cs_5th_saturday_time1.set(row1[3])
                        self.var_cs_5th_saturday_cs_5thmistry_cycle_subject1.set(row1[4])
                        self.var_cs_5th_saturday_cs_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.saturday_cs_5th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_cs_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_cs_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_cs_5th_time_table_data_frame,orient=VERTICAL)
                    self.cs_5th_saturday_time_table=ttk.Treeview(self.saturday_cs_5th_time_table_data_frame,columns=('cid','day1','cs_5th_saturday_total_number_of_class','cs_5th_saturday_time','cs_5th_saturday_subject','cs_5th_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.cs_5th_saturday_time_table.xview)
                    scrolly.configure(command=self.cs_5th_saturday_time_table.yview)

                    self.cs_5th_saturday_time_table.heading('cid',text='Serial No')
                    self.cs_5th_saturday_time_table.heading('day1',text='Day')
                    self.cs_5th_saturday_time_table.heading('cs_5th_saturday_total_number_of_class',text='Totel class')
                    self.cs_5th_saturday_time_table.heading('cs_5th_saturday_time',text='class time')
                    self.cs_5th_saturday_time_table.heading('cs_5th_saturday_subject',text='Subject')
                    self.cs_5th_saturday_time_table.heading('cs_5th_saturday_faculty',text='Faculty')

                    self.cs_5th_saturday_time_table.column('cid',width=100)
                    self.cs_5th_saturday_time_table.column('day1',width=150)
                    self.cs_5th_saturday_time_table.column('cs_5th_saturday_total_number_of_class',width=100)
                    self.cs_5th_saturday_time_table.column('cs_5th_saturday_time',width=150)
                    self.cs_5th_saturday_time_table.column('cs_5th_saturday_subject',width=150)
                    self.cs_5th_saturday_time_table.column('cs_5th_saturday_faculty',width=150)

                    self.cs_5th_saturday_time_table['show']='headings'

                    self.cs_5th_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.cs_5th_saturday_time_table.bind('<ButtonRelease-1>',cs_5th_saturday_time_table_get)

           
                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_cs_5th_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_cs_5th_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_cs_5th_subject_list=[]
                    self.fetch_cs_5th_faculty_subject()
                    saturday_cs_5thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_cs_5th_saturday_cs_5thmistry_cycle_subject1,state='readonly',values=self.faculty_cs_5th_subject_list)
                    saturday_cs_5thmistry_cycle_subject1.place(x=400,y=25) 
                   
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_cs_5th_name_list=[]
                    self.fetch_cs_5th_faculty_name()
                    saturday_cs_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_cs_5th_saturday_cs_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_cs_5th_name_list)
                    saturday_cs_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    cs_5th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_cs_5th_saturday_faculty_serch)
                    cs_5th_faculty_serch1.place(x=800,y=25)
                    cs_5th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=cs_5th_faculty_serch)
                    cs_5th_faculty_serch1_button.place(x=937,y=22)
                    cs_5th_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    cs_5th_add_database.place(x=10,y=140)

                    cs_5th_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    cs_5th_update_database.place(x=10,y=170)

                    cs_5th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    cs_5th_delete_database.place(x=10,y=200)

                    cs_5th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    cs_5th_clear_database.place(x=10,y=230)


        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Information_Science_and_Engineering':
                if self.var_day_select.get() == 'Monday':
    
                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ise_5th_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_ise_5th_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_ise_5th_monday_ise_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_ise_5th_monday_ise_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into ise_5th_monday_time_table_database(day1,ise_5th_monday_total_number_of_class,ise_5th_monday_time,ise_5th_monday_subject,ise_5th_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ise_5th_monday_number_of_class1.get(),
                                            self.var_ise_5th_monday_time1.get(),
                                            self.var_ise_5th_monday_ise_5thmistry_cycle_subject1.get(),
                                            self.var_ise_5th_monday_ise_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_5th_monday_time_table_database')
                            rows=cur.fetchall()
                            self.ise_5th_monday_time_table.delete(*self.ise_5th_monday_time_table.get_children())
                            for row in rows:
                                self.ise_5th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def ise_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from ise_5th_monday_time_table_database where ise_5th_monday_subject LIKE '%{self.var_ise_5th_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ise_5th_monday_time_table.delete(*self.ise_5th_monday_time_table.get_children())
                                for row in rows:
                                    self.ise_5th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_monday_ise_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from ise_5th_monday_time_table_database where ise_5th_monday_subject=%s",(self.var_ise_5th_monday_ise_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update ise_5th_monday_time_table_database set ise_5th_monday_total_number_of_class=%s,ise_5th_monday_time=%s,ise_5th_monday_faculty=%s where ise_5th_monday_subject=%s",(
                                        
                                        self.var_ise_5th_monday_number_of_class1.get(),
                                        self.var_ise_5th_monday_time1.get(),
                                        self.var_ise_5th_monday_ise_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_ise_5th_monday_ise_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_monday_ise_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from ise_5th_monday_time_table_database where ise_5th_monday_subject=%s",(self.var_ise_5th_monday_ise_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from ise_5th_monday_time_table_database where ise_5th_monday_subject=%s',(self.var_ise_5th_monday_ise_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_ise_5th_monday_faculty_serch.set("")
                        self.var_ise_5th_monday_number_of_class1.set("")
                        self.var_ise_5th_monday_time1.set("")
                        self.var_ise_5th_monday_ise_5thmistry_cycle_subject1.set("")
                        self.var_ise_5th_monday_ise_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def ise_5th_monday_time_table_get(ev):
                        monday_ise_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ise_5th_monday_time_table.focus()
                        content1=self.ise_5th_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ise_5th_monday_number_of_class1.set(row1[2])
                        self.var_ise_5th_monday_time1.set(row1[3])
                        self.var_ise_5th_monday_ise_5thmistry_cycle_subject1.set(row1[4])
                        self.var_ise_5th_monday_ise_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    
                    self.monday_ise_5th_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_ise_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_ise_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_ise_5th_time_table_data_frame,orient=VERTICAL)
                    self.ise_5th_monday_time_table=ttk.Treeview(self.monday_ise_5th_time_table_data_frame,columns=('cid','day1','ise_5th_monday_total_number_of_class','ise_5th_monday_time','ise_5th_monday_subject','ise_5th_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ise_5th_monday_time_table.xview)
                    scrolly.configure(command=self.ise_5th_monday_time_table.yview)

                    self.ise_5th_monday_time_table.heading('cid',text='Serial No')
                    self.ise_5th_monday_time_table.heading('day1',text='Day')
                    self.ise_5th_monday_time_table.heading('ise_5th_monday_total_number_of_class',text='Totel class')
                    self.ise_5th_monday_time_table.heading('ise_5th_monday_time',text='class time')
                    self.ise_5th_monday_time_table.heading('ise_5th_monday_subject',text='Subject')
                    self.ise_5th_monday_time_table.heading('ise_5th_monday_faculty',text='Faculty')

                    self.ise_5th_monday_time_table.column('cid',width=100)
                    self.ise_5th_monday_time_table.column('day1',width=150)
                    self.ise_5th_monday_time_table.column('ise_5th_monday_total_number_of_class',width=100)
                    self.ise_5th_monday_time_table.column('ise_5th_monday_time',width=150)
                    self.ise_5th_monday_time_table.column('ise_5th_monday_subject',width=150)
                    self.ise_5th_monday_time_table.column('ise_5th_monday_faculty',width=150)

                    self.ise_5th_monday_time_table['show']='headings'

                    self.ise_5th_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.ise_5th_monday_time_table.bind('<ButtonRelease-1>',ise_5th_monday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_ise_5th_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_ise_5th_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ise_5th_subject_list=[]
                    self.fetch_ise_5th_faculty_subject()
                    monday_ise_5thmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_ise_5th_monday_ise_5thmistry_cycle_subject1,state='readonly',values=self.faculty_ise_5th_subject_list)
                    monday_ise_5thmistry_cycle_subject1.place(x=400,y=25) 

                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ise_5th_name_list=[]
                    self.fetch_ise_5th_faculty_name()
                    monday_ise_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_ise_5th_monday_ise_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ise_5th_name_list)
                    monday_ise_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ise_5th_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_ise_5th_monday_faculty_serch)
                    ise_5th_faculty_serch1.place(x=800,y=25)
                    ise_5th_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=ise_5th_faculty_serch)
                    ise_5th_faculty_serch1_button.place(x=937,y=22)
                    ise_5th_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    ise_5th_add_database.place(x=10,y=140)

                    ise_5th_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    ise_5th_update_database.place(x=10,y=170)

                    ise_5th_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    ise_5th_delete_database.place(x=10,y=200)

                    ise_5th_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    ise_5th_clear_database.place(x=10,y=230)
########################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Information_Science_and_Engineering':
                if self.var_day_select.get() == 'Thuesday':
                

                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ise_5th_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_ise_5th_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into ise_5th_thuesday_time_table_database(day1,ise_5th_thuesday_total_number_of_class,ise_5th_thuesday_time,ise_5th_thuesday_subject,ise_5th_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ise_5th_thuesday_number_of_class2.get(),
                                            self.var_ise_5th_thuesday_time1.get(),
                                            self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject1.get(),
                                            self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_5th_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.ise_5th_thuesday_time_table.delete(*self.ise_5th_thuesday_time_table.get_children())
                            for row in rows:
                                self.ise_5th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def ise_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from ise_5th_thuesday_time_table_database where ise_5th_thuesday_subject LIKE '%{self.var_ise_5th_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ise_5th_thuesday_time_table.delete(*self.ise_5th_thuesday_time_table.get_children())
                                for row in rows:
                                    self.ise_5th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from ise_5th_thuesday_time_table_database where ise_5th_thuesday_subject=%s",(self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update ise_5th_thuesday_time_table_database set ise_5th_thuesday_total_number_of_class=%s,ise_5th_thuesday_time=%s,ise_5th_thuesday_faculty=%s where ise_5th_thuesday_subject=%s",(
                                        
                                        self.var_ise_5th_thuesday_number_of_class2.get(),
                                        self.var_ise_5th_thuesday_time1.get(),
                                        self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from ise_5th_thuesday_time_table_database where ise_5th_thuesday_subject=%s",(self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from ise_5th_thuesday_time_table_database where ise_5th_thuesday_subject=%s',(self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_ise_5th_thuesday_faculty_serch.set("")
                        self.var_ise_5th_thuesday_number_of_class2.set("")
                        self.var_ise_5th_thuesday_time1.set("")
                        self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject1.set("")
                        self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def ise_5th_thuesday_time_table_get(ev):
                        thuesday_ise_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ise_5th_thuesday_time_table.focus()
                        content1=self.ise_5th_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ise_5th_thuesday_number_of_class2.set(row1[2])
                        self.var_ise_5th_thuesday_time1.set(row1[3])
                        self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject1.set(row1[4])
                        self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    
                    self.thuesday_ise_5th_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_ise_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_ise_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_ise_5th_time_table_data_frame,orient=VERTICAL)
                    self.ise_5th_thuesday_time_table=ttk.Treeview(self.thuesday_ise_5th_time_table_data_frame,columns=('cid','day1','ise_5th_thuesday_total_number_of_class','ise_5th_thuesday_time','ise_5th_thuesday_subject','ise_5th_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ise_5th_thuesday_time_table.xview)
                    scrolly.configure(command=self.ise_5th_thuesday_time_table.yview)

                    self.ise_5th_thuesday_time_table.heading('cid',text='Serial No')
                    self.ise_5th_thuesday_time_table.heading('day1',text='Day')
                    self.ise_5th_thuesday_time_table.heading('ise_5th_thuesday_total_number_of_class',text='Totel class')
                    self.ise_5th_thuesday_time_table.heading('ise_5th_thuesday_time',text='class time')
                    self.ise_5th_thuesday_time_table.heading('ise_5th_thuesday_subject',text='Subject')
                    self.ise_5th_thuesday_time_table.heading('ise_5th_thuesday_faculty',text='Faculty')

                    self.ise_5th_thuesday_time_table.column('cid',width=100)
                    self.ise_5th_thuesday_time_table.column('day1',width=150)
                    self.ise_5th_thuesday_time_table.column('ise_5th_thuesday_total_number_of_class',width=100)
                    self.ise_5th_thuesday_time_table.column('ise_5th_thuesday_time',width=150)
                    self.ise_5th_thuesday_time_table.column('ise_5th_thuesday_subject',width=150)
                    self.ise_5th_thuesday_time_table.column('ise_5th_thuesday_faculty',width=150)

                    self.ise_5th_thuesday_time_table['show']='headings'

                    self.ise_5th_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.ise_5th_thuesday_time_table.bind('<ButtonRelease-1>',ise_5th_thuesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_ise_5th_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_ise_5th_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ise_5th_subject_list=[]
                    self.fetch_ise_5th_faculty_subject()
                    thuesday_ise_5thmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject1,state='readonly',values=self.faculty_ise_5th_subject_list)
                    thuesday_ise_5thmistry_cycle_subject1.place(x=400,y=25) 
               
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ise_5th_name_list=[]
                    self.fetch_ise_5th_faculty_name()
                    thuesday_ise_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_ise_5th_thuesday_ise_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ise_5th_name_list)
                    thuesday_ise_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ise_5th_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_ise_5th_thuesday_faculty_serch)
                    ise_5th_faculty_serch1.place(x=800,y=25)
                    ise_5th_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=ise_5th_faculty_serch)
                    ise_5th_faculty_serch1_button.place(x=937,y=22)
                    ise_5th_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    ise_5th_add_database.place(x=10,y=140)

                    ise_5th_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    ise_5th_update_database.place(x=10,y=170)

                    ise_5th_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    ise_5th_delete_database.place(x=10,y=200)

                    ise_5th_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    ise_5th_clear_database.place(x=10,y=230)

        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Information_Science_and_Engineering':
                if self.var_day_select.get() == 'Wednesday':
                
            
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ise_5th_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_ise_5th_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into ise_5th_wednesday_time_table_database(day1,ise_5th_wednesday_total_number_of_class,ise_5th_wednesday_time,ise_5th_wednesday_subject,ise_5th_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ise_5th_wednesday_number_of_class2.get(),
                                            self.var_ise_5th_wednesday_time1.get(),
                                            self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject1.get(),
                                            self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_5th_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.ise_5th_wednesday_time_table.delete(*self.ise_5th_wednesday_time_table.get_children())
                            for row in rows:
                                self.ise_5th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def ise_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from ise_5th_wednesday_time_table_database where ise_5th_wednesday_subject LIKE '%{self.var_ise_5th_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ise_5th_wednesday_time_table.delete(*self.ise_5th_wednesday_time_table.get_children())
                                for row in rows:
                                    self.ise_5th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                         )
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from ise_5th_wednesday_time_table_database where ise_5th_wednesday_subject=%s",(self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update ise_5th_wednesday_time_table_database set ise_5th_wednesday_total_number_of_class=%s,ise_5th_wednesday_time=%s,ise_5th_wednesday_faculty=%s where ise_5th_wednesday_subject=%s",(
                                        
                                        self.var_ise_5th_wednesday_number_of_class2.get(),
                                        self.var_ise_5th_wednesday_time1.get(),
                                        self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from ise_5th_wednesday_time_table_database where ise_5th_wednesday_subject=%s",(self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from ise_5th_wednesday_time_table_database where ise_5th_wednesday_subject=%s',(self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_ise_5th_wednesday_faculty_serch.set("")
                        self.var_ise_5th_wednesday_number_of_class2.set("")
                        self.var_ise_5th_wednesday_time1.set("")
                        self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject1.set("")
                        self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def ise_5th_wednesday_time_table_get(ev):
                        wednesday_ise_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ise_5th_wednesday_time_table.focus()
                        content1=self.ise_5th_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ise_5th_wednesday_number_of_class2.set(row1[2])
                        self.var_ise_5th_wednesday_time1.set(row1[3])
                        self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject1.set(row1[4])
                        self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    self.wednesday_ise_5th_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_ise_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_ise_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_ise_5th_time_table_data_frame,orient=VERTICAL)
                    self.ise_5th_wednesday_time_table=ttk.Treeview(self.wednesday_ise_5th_time_table_data_frame,columns=('cid','day1','ise_5th_wednesday_total_number_of_class','ise_5th_wednesday_time','ise_5th_wednesday_subject','ise_5th_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ise_5th_wednesday_time_table.xview)
                    scrolly.configure(command=self.ise_5th_wednesday_time_table.yview)

                    self.ise_5th_wednesday_time_table.heading('cid',text='Serial No')
                    self.ise_5th_wednesday_time_table.heading('day1',text='Day')
                    self.ise_5th_wednesday_time_table.heading('ise_5th_wednesday_total_number_of_class',text='Totel class')
                    self.ise_5th_wednesday_time_table.heading('ise_5th_wednesday_time',text='class time')
                    self.ise_5th_wednesday_time_table.heading('ise_5th_wednesday_subject',text='Subject')
                    self.ise_5th_wednesday_time_table.heading('ise_5th_wednesday_faculty',text='Faculty')

                    self.ise_5th_wednesday_time_table.column('cid',width=100)
                    self.ise_5th_wednesday_time_table.column('day1',width=150)
                    self.ise_5th_wednesday_time_table.column('ise_5th_wednesday_total_number_of_class',width=100)
                    self.ise_5th_wednesday_time_table.column('ise_5th_wednesday_time',width=150)
                    self.ise_5th_wednesday_time_table.column('ise_5th_wednesday_subject',width=150)
                    self.ise_5th_wednesday_time_table.column('ise_5th_wednesday_faculty',width=150)

                    self.ise_5th_wednesday_time_table['show']='headings'

                    self.ise_5th_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.ise_5th_wednesday_time_table.bind('<ButtonRelease-1>',ise_5th_wednesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_ise_5th_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_ise_5th_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ise_5th_subject_list=[]
                    self.fetch_ise_5th_faculty_subject()
                    wednesday_ise_5thmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject1,state='readonly',values=self.faculty_ise_5th_subject_list)
                    wednesday_ise_5thmistry_cycle_subject1.place(x=400,y=25) 
       
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ise_5th_name_list=[]
                    self.fetch_ise_5th_faculty_name()
                    wednesday_ise_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_ise_5th_wednesday_ise_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ise_5th_name_list)
                    wednesday_ise_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ise_5th_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_ise_5th_wednesday_faculty_serch)
                    ise_5th_faculty_serch1.place(x=800,y=25)
                    ise_5th_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=ise_5th_faculty_serch)
                    ise_5th_faculty_serch1_button.place(x=937,y=22)
                    ise_5th_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    ise_5th_add_database.place(x=10,y=140)

                    ise_5th_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    ise_5th_update_database.place(x=10,y=170)

                    ise_5th_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    ise_5th_delete_database.place(x=10,y=200)

                    ise_5th_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    ise_5th_clear_database.place(x=10,y=230)
#####################################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Information_Science_and_Engineering':
                if self.var_day_select.get() == 'Thursday':
                
        
                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ise_5th_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_ise_5th_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_ise_5th_thursday_ise_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_ise_5th_thursday_ise_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into ise_5th_thursday_time_table_database(day1,ise_5th_thursday_total_number_of_class,ise_5th_thursday_time,ise_5th_thursday_subject,ise_5th_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ise_5th_thursday_number_of_class2.get(),
                                            self.var_ise_5th_thursday_time1.get(),
                                            self.var_ise_5th_thursday_ise_5thmistry_cycle_subject1.get(),
                                            self.var_ise_5th_thursday_ise_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_5th_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.ise_5th_thursday_time_table.delete(*self.ise_5th_thursday_time_table.get_children())
                            for row in rows:
                                self.ise_5th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def ise_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from ise_5th_thursday_time_table_database where ise_5th_thursday_subject LIKE '%{self.var_ise_5th_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ise_5th_thursday_time_table.delete(*self.ise_5th_thursday_time_table.get_children())
                                for row in rows:
                                    self.ise_5th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_thursday_ise_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from ise_5th_thursday_time_table_database where ise_5th_thursday_subject=%s",(self.var_ise_5th_thursday_ise_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update ise_5th_thursday_time_table_database set ise_5th_thursday_total_number_of_class=%s,ise_5th_thursday_time=%s,ise_5th_thursday_faculty=%s where ise_5th_thursday_subject=%s",(
                                        
                                        self.var_ise_5th_thursday_number_of_class2.get(),
                                        self.var_ise_5th_thursday_time1.get(),
                                        self.var_ise_5th_thursday_ise_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_ise_5th_thursday_ise_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_thursday_ise_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from ise_5th_thursday_time_table_database where ise_5th_thursday_subject=%s",(self.var_ise_5th_thursday_ise_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from ise_5th_thursday_time_table_database where ise_5th_thursday_subject=%s',(self.var_ise_5th_thursday_ise_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_ise_5th_thursday_faculty_serch.set("")
                        self.var_ise_5th_thursday_number_of_class2.set("")
                        self.var_ise_5th_thursday_time1.set("")
                        self.var_ise_5th_thursday_ise_5thmistry_cycle_subject1.set("")
                        self.var_ise_5th_thursday_ise_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def ise_5th_thursday_time_table_get(ev):
                        thursday_ise_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ise_5th_thursday_time_table.focus()
                        content1=self.ise_5th_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ise_5th_thursday_number_of_class2.set(row1[2])
                        self.var_ise_5th_thursday_time1.set(row1[3])
                        self.var_ise_5th_thursday_ise_5thmistry_cycle_subject1.set(row1[4])
                        self.var_ise_5th_thursday_ise_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    
                    self.thursday_ise_5th_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_ise_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_ise_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_ise_5th_time_table_data_frame,orient=VERTICAL)
                    self.ise_5th_thursday_time_table=ttk.Treeview(self.thursday_ise_5th_time_table_data_frame,columns=('cid','day1','ise_5th_thursday_total_number_of_class','ise_5th_thursday_time','ise_5th_thursday_subject','ise_5th_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ise_5th_thursday_time_table.xview)
                    scrolly.configure(command=self.ise_5th_thursday_time_table.yview)

                    self.ise_5th_thursday_time_table.heading('cid',text='Serial No')
                    self.ise_5th_thursday_time_table.heading('day1',text='Day')
                    self.ise_5th_thursday_time_table.heading('ise_5th_thursday_total_number_of_class',text='Totel class')
                    self.ise_5th_thursday_time_table.heading('ise_5th_thursday_time',text='class time')
                    self.ise_5th_thursday_time_table.heading('ise_5th_thursday_subject',text='Subject')
                    self.ise_5th_thursday_time_table.heading('ise_5th_thursday_faculty',text='Faculty')

                    self.ise_5th_thursday_time_table.column('cid',width=100)
                    self.ise_5th_thursday_time_table.column('day1',width=150)
                    self.ise_5th_thursday_time_table.column('ise_5th_thursday_total_number_of_class',width=100)
                    self.ise_5th_thursday_time_table.column('ise_5th_thursday_time',width=150)
                    self.ise_5th_thursday_time_table.column('ise_5th_thursday_subject',width=150)
                    self.ise_5th_thursday_time_table.column('ise_5th_thursday_faculty',width=150)

                    self.ise_5th_thursday_time_table['show']='headings'

                    self.ise_5th_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.ise_5th_thursday_time_table.bind('<ButtonRelease-1>',ise_5th_thursday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_ise_5th_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_ise_5th_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ise_5th_subject_list=[]
                    self.fetch_ise_5th_faculty_subject()
                    thursday_ise_5thmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_ise_5th_thursday_ise_5thmistry_cycle_subject1,state='readonly',values=self.faculty_ise_5th_subject_list)
                    thursday_ise_5thmistry_cycle_subject1.place(x=400,y=25) 
                 
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ise_5th_name_list=[]
                    self.fetch_ise_5th_faculty_name()
                    thursday_ise_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_ise_5th_thursday_ise_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ise_5th_name_list)
                    thursday_ise_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ise_5th_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_ise_5th_thursday_faculty_serch)
                    ise_5th_faculty_serch1.place(x=800,y=25)
                    ise_5th_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=ise_5th_faculty_serch)
                    ise_5th_faculty_serch1_button.place(x=937,y=22)
                    ise_5th_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    ise_5th_add_database.place(x=10,y=140)

                    ise_5th_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    ise_5th_update_database.place(x=10,y=170)

                    ise_5th_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    ise_5th_delete_database.place(x=10,y=200)

                    ise_5th_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    ise_5th_clear_database.place(x=10,y=230)

###########################################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Information_Science_and_Engineering':
                if self.var_day_select.get() == 'Friday':
               
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ise_5th_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_ise_5th_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_ise_5th_friday_ise_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_ise_5th_friday_ise_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into ise_5th_friday_time_table_database(day1,ise_5th_friday_total_number_of_class,ise_5th_friday_time,ise_5th_friday_subject,ise_5th_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ise_5th_friday_number_of_class2.get(),
                                            self.var_ise_5th_friday_time1.get(),
                                            self.var_ise_5th_friday_ise_5thmistry_cycle_subject1.get(),
                                            self.var_ise_5th_friday_ise_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_5th_friday_time_table_database')
                            rows=cur.fetchall()
                            self.ise_5th_friday_time_table.delete(*self.ise_5th_friday_time_table.get_children())
                            for row in rows:
                                self.ise_5th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def ise_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from ise_5th_friday_time_table_database where ise_5th_friday_subject LIKE '%{self.var_ise_5th_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ise_5th_friday_time_table.delete(*self.ise_5th_friday_time_table.get_children())
                                for row in rows:
                                    self.ise_5th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_friday_ise_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from ise_5th_friday_time_table_database where ise_5th_friday_subject=%s",(self.var_ise_5th_friday_ise_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update ise_5th_friday_time_table_database set ise_5th_friday_total_number_of_class=%s,ise_5th_friday_time=%s,ise_5th_friday_faculty=%s where ise_5th_friday_subject=%s",(
                                        
                                        self.var_ise_5th_friday_number_of_class2.get(),
                                        self.var_ise_5th_friday_time1.get(),
                                        self.var_ise_5th_friday_ise_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_ise_5th_friday_ise_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_friday_ise_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from ise_5th_friday_time_table_database where ise_5th_friday_subject=%s",(self.var_ise_5th_friday_ise_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from ise_5th_friday_time_table_database where ise_5th_friday_subject=%s',(self.var_ise_5th_friday_ise_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_ise_5th_friday_faculty_serch.set("")
                        self.var_ise_5th_friday_number_of_class2.set("")
                        self.var_ise_5th_friday_time1.set("")
                        self.var_ise_5th_friday_ise_5thmistry_cycle_subject1.set("")
                        self.var_ise_5th_friday_ise_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def ise_5th_friday_time_table_get(ev):
                        friday_ise_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ise_5th_friday_time_table.focus()
                        content1=self.ise_5th_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ise_5th_friday_number_of_class2.set(row1[2])
                        self.var_ise_5th_friday_time1.set(row1[3])
                        self.var_ise_5th_friday_ise_5thmistry_cycle_subject1.set(row1[4])
                        self.var_ise_5th_friday_ise_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.friday_ise_5th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_ise_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_ise_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_ise_5th_time_table_data_frame,orient=VERTICAL)
                    self.ise_5th_friday_time_table=ttk.Treeview(self.friday_ise_5th_time_table_data_frame,columns=('cid','day1','ise_5th_friday_total_number_of_class','ise_5th_friday_time','ise_5th_friday_subject','ise_5th_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ise_5th_friday_time_table.xview)
                    scrolly.configure(command=self.ise_5th_friday_time_table.yview)

                    self.ise_5th_friday_time_table.heading('cid',text='Serial No')
                    self.ise_5th_friday_time_table.heading('day1',text='Day')
                    self.ise_5th_friday_time_table.heading('ise_5th_friday_total_number_of_class',text='Totel class')
                    self.ise_5th_friday_time_table.heading('ise_5th_friday_time',text='class time')
                    self.ise_5th_friday_time_table.heading('ise_5th_friday_subject',text='Subject')
                    self.ise_5th_friday_time_table.heading('ise_5th_friday_faculty',text='Faculty')

                    self.ise_5th_friday_time_table.column('cid',width=100)
                    self.ise_5th_friday_time_table.column('day1',width=150)
                    self.ise_5th_friday_time_table.column('ise_5th_friday_total_number_of_class',width=100)
                    self.ise_5th_friday_time_table.column('ise_5th_friday_time',width=150)
                    self.ise_5th_friday_time_table.column('ise_5th_friday_subject',width=150)
                    self.ise_5th_friday_time_table.column('ise_5th_friday_faculty',width=150)

                    self.ise_5th_friday_time_table['show']='headings'

                    self.ise_5th_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.ise_5th_friday_time_table.bind('<ButtonRelease-1>',ise_5th_friday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_ise_5th_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_ise_5th_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ise_5th_subject_list=[]
                    self.fetch_ise_5th_faculty_subject()
                    friday_ise_5thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ise_5th_friday_ise_5thmistry_cycle_subject1,state='readonly',values=self.faculty_ise_5th_subject_list)
                    friday_ise_5thmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ise_5th_name_list=[]
                    self.fetch_ise_5th_faculty_name()
                    friday_ise_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ise_5th_friday_ise_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ise_5th_name_list)
                    friday_ise_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ise_5th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_ise_5th_friday_faculty_serch)
                    ise_5th_faculty_serch1.place(x=800,y=25)
                    ise_5th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=ise_5th_faculty_serch)
                    ise_5th_faculty_serch1_button.place(x=937,y=22)
                    ise_5th_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    ise_5th_add_database.place(x=10,y=140)

                    ise_5th_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    ise_5th_update_database.place(x=10,y=170)

                    ise_5th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    ise_5th_delete_database.place(x=10,y=200)

                    ise_5th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    ise_5th_clear_database.place(x=10,y=230)

###################################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Information_Science_and_Engineering':
                if self.var_day_select.get() == 'Saturday':
                

                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ise_5th_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_ise_5th_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_ise_5th_saturday_ise_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_ise_5th_saturday_ise_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into ise_5th_saturday_time_table_database(day1,ise_5th_saturday_total_number_of_class,ise_5th_saturday_time,ise_5th_saturday_subject,ise_5th_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ise_5th_saturday_number_of_class2.get(),
                                            self.var_ise_5th_saturday_time1.get(),
                                            self.var_ise_5th_saturday_ise_5thmistry_cycle_subject1.get(),
                                            self.var_ise_5th_saturday_ise_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ise_5th_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.ise_5th_saturday_time_table.delete(*self.ise_5th_saturday_time_table.get_children())
                            for row in rows:
                                self.ise_5th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def ise_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from ise_5th_saturday_time_table_database where ise_5th_saturday_subject LIKE '%{self.var_ise_5th_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ise_5th_saturday_time_table.delete(*self.ise_5th_saturday_time_table.get_children())
                                for row in rows:
                                    self.ise_5th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_saturday_ise_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from ise_5th_saturday_time_table_database where ise_5th_saturday_subject=%s",(self.var_ise_5th_saturday_ise_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update ise_5th_saturday_time_table_database set ise_5th_saturday_total_number_of_class=%s,ise_5th_saturday_time=%s,ise_5th_saturday_faculty=%s where ise_5th_saturday_subject=%s",(
                                        
                                        self.var_ise_5th_saturday_number_of_class2.get(),
                                        self.var_ise_5th_saturday_time1.get(),
                                        self.var_ise_5th_saturday_ise_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_ise_5th_saturday_ise_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ise_5th_saturday_ise_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from ise_5th_saturday_time_table_database where ise_5th_saturday_subject=%s",(self.var_ise_5th_saturday_ise_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from ise_5th_saturday_time_table_database where ise_5th_saturday_subject=%s',(self.var_ise_5th_saturday_ise_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_ise_5th_saturday_faculty_serch.set("")
                        self.var_ise_5th_saturday_number_of_class2.set("")
                        self.var_ise_5th_saturday_time1.set("")
                        self.var_ise_5th_saturday_ise_5thmistry_cycle_subject1.set("")
                        self.var_ise_5th_saturday_ise_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def ise_5th_saturday_time_table_get(ev):
                        saturday_ise_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ise_5th_saturday_time_table.focus()
                        content1=self.ise_5th_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ise_5th_saturday_number_of_class2.set(row1[2])
                        self.var_ise_5th_saturday_time1.set(row1[3])
                        self.var_ise_5th_saturday_ise_5thmistry_cycle_subject1.set(row1[4])
                        self.var_ise_5th_saturday_ise_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.saturday_ise_5th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_ise_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_ise_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_ise_5th_time_table_data_frame,orient=VERTICAL)
                    self.ise_5th_saturday_time_table=ttk.Treeview(self.saturday_ise_5th_time_table_data_frame,columns=('cid','day1','ise_5th_saturday_total_number_of_class','ise_5th_saturday_time','ise_5th_saturday_subject','ise_5th_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ise_5th_saturday_time_table.xview)
                    scrolly.configure(command=self.ise_5th_saturday_time_table.yview)

                    self.ise_5th_saturday_time_table.heading('cid',text='Serial No')
                    self.ise_5th_saturday_time_table.heading('day1',text='Day')
                    self.ise_5th_saturday_time_table.heading('ise_5th_saturday_total_number_of_class',text='Totel class')
                    self.ise_5th_saturday_time_table.heading('ise_5th_saturday_time',text='class time')
                    self.ise_5th_saturday_time_table.heading('ise_5th_saturday_subject',text='Subject')
                    self.ise_5th_saturday_time_table.heading('ise_5th_saturday_faculty',text='Faculty')

                    self.ise_5th_saturday_time_table.column('cid',width=100)
                    self.ise_5th_saturday_time_table.column('day1',width=150)
                    self.ise_5th_saturday_time_table.column('ise_5th_saturday_total_number_of_class',width=100)
                    self.ise_5th_saturday_time_table.column('ise_5th_saturday_time',width=150)
                    self.ise_5th_saturday_time_table.column('ise_5th_saturday_subject',width=150)
                    self.ise_5th_saturday_time_table.column('ise_5th_saturday_faculty',width=150)

                    self.ise_5th_saturday_time_table['show']='headings'

                    self.ise_5th_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.ise_5th_saturday_time_table.bind('<ButtonRelease-1>',ise_5th_saturday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_ise_5th_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_ise_5th_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ise_5th_subject_list=[]
                    self.fetch_ise_5th_faculty_subject()
                    saturday_ise_5thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ise_5th_saturday_ise_5thmistry_cycle_subject1,state='readonly',values=self.faculty_ise_5th_subject_list)
                    saturday_ise_5thmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ise_5th_name_list=[]
                    self.fetch_ise_5th_faculty_name()
                    saturday_ise_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ise_5th_saturday_ise_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ise_5th_name_list)
                    saturday_ise_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ise_5th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_ise_5th_saturday_faculty_serch)
                    ise_5th_faculty_serch1.place(x=800,y=25)
                    ise_5th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=ise_5th_faculty_serch)
                    ise_5th_faculty_serch1_button.place(x=937,y=22)
                    ise_5th_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    ise_5th_add_database.place(x=10,y=140)

                    ise_5th_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    ise_5th_update_database.place(x=10,y=170)

                    ise_5th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    ise_5th_delete_database.place(x=10,y=200)

                    ise_5th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    ise_5th_clear_database.place(x=10,y=230)


        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Telecommunication_Engineering':
                if self.var_day_select.get() == 'Monday':
                

                    table_frame6=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame6.place(x=10,y=120)

                    label_day=Label(table_frame6,bd=2,relief=GROOVE,bg='white',text='Monday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame6,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ete_5th_monday_number_of_class1.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame6)
                        else:
                            if self.var_ete_5th_monday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame6)
                            else:
                                if self.var_ete_5th_monday_ete_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame6)
                                else:
                                    if self.var_ete_5th_monday_ete_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame6)
                                    else:
                                        cur.execute('insert into ete_5th_monday_time_table_database(day1,ete_5th_monday_total_number_of_class,ete_5th_monday_time,ete_5th_monday_subject,ete_5th_monday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ete_5th_monday_number_of_class1.get(),
                                            self.var_ete_5th_monday_time1.get(),
                                            self.var_ete_5th_monday_ete_5thmistry_cycle_subject1.get(),
                                            self.var_ete_5th_monday_ete_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_monday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame6)
                                
                    def fetch_add_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_5th_monday_time_table_database')
                            rows=cur.fetchall()
                            self.ete_5th_monday_time_table.delete(*self.ete_5th_monday_time_table.get_children())
                            for row in rows:
                                self.ete_5th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    def ete_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_monday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame6)
                            else:
                                cur.execute(f"select * from ete_5th_monday_time_table_database where ete_5th_monday_subject LIKE '%{self.var_ete_5th_monday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ete_5th_monday_time_table.delete(*self.ete_5th_monday_time_table.get_children())
                                for row in rows:
                                    self.ete_5th_monday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame6)

                    def update_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_monday_ete_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame6)
                            else:
                                cur.execute("select * from ete_5th_monday_time_table_database where ete_5th_monday_subject=%s",(self.var_ete_5th_monday_ete_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame6)
                                else:
                                    cur.execute("update ete_5th_monday_time_table_database set ete_5th_monday_total_number_of_class=%s,ete_5th_monday_time=%s,ete_5th_monday_faculty=%s where ete_5th_monday_subject=%s",(
                                        
                                        self.var_ete_5th_monday_number_of_class1.get(),
                                        self.var_ete_5th_monday_time1.get(),
                                        self.var_ete_5th_monday_ete_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_ete_5th_monday_ete_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame6)
                                    fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame6)
                    def delete_monday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_monday_ete_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame6)
                            else:
                                cur.execute("select * from ete_5th_monday_time_table_database where ete_5th_monday_subject=%s",(self.var_ete_5th_monday_ete_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame6)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame6)
                                    if option==True:
                                        cur.execute('delete from ete_5th_monday_time_table_database where ete_5th_monday_subject=%s',(self.var_ete_5th_monday_ete_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame6)
                                        clear_monday_class_time_table()
                                        fetch_add_monday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame6)
                    
                    def clear_monday_class_time_table():
                        fetch_add_monday_class_time_table()
                        self.var_ete_5th_monday_faculty_serch.set("")
                        self.var_ete_5th_monday_number_of_class1.set("")
                        self.var_ete_5th_monday_time1.set("")
                        self.var_ete_5th_monday_ete_5thmistry_cycle_subject1.set("")
                        self.var_ete_5th_monday_ete_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame6)

                    def ete_5th_monday_time_table_get(ev):
                        monday_ete_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ete_5th_monday_time_table.focus()
                        content1=self.ete_5th_monday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ete_5th_monday_number_of_class1.set(row1[2])
                        self.var_ete_5th_monday_time1.set(row1[3])
                        self.var_ete_5th_monday_ete_5thmistry_cycle_subject1.set(row1[4])
                        self.var_ete_5th_monday_ete_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame6)

                    
                    self.monday_ete_5th_time_table_data_frame=Frame(table_frame6,width=900,height=150,relief=GROOVE)
                    self.monday_ete_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.monday_ete_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.monday_ete_5th_time_table_data_frame,orient=VERTICAL)
                    self.ete_5th_monday_time_table=ttk.Treeview(self.monday_ete_5th_time_table_data_frame,columns=('cid','day1','ete_5th_monday_total_number_of_class','ete_5th_monday_time','ete_5th_monday_subject','ete_5th_monday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ete_5th_monday_time_table.xview)
                    scrolly.configure(command=self.ete_5th_monday_time_table.yview)

                    self.ete_5th_monday_time_table.heading('cid',text='Serial No')
                    self.ete_5th_monday_time_table.heading('day1',text='Day')
                    self.ete_5th_monday_time_table.heading('ete_5th_monday_total_number_of_class',text='Totel class')
                    self.ete_5th_monday_time_table.heading('ete_5th_monday_time',text='class time')
                    self.ete_5th_monday_time_table.heading('ete_5th_monday_subject',text='Subject')
                    self.ete_5th_monday_time_table.heading('ete_5th_monday_faculty',text='Faculty')

                    self.ete_5th_monday_time_table.column('cid',width=100)
                    self.ete_5th_monday_time_table.column('day1',width=150)
                    self.ete_5th_monday_time_table.column('ete_5th_monday_total_number_of_class',width=100)
                    self.ete_5th_monday_time_table.column('ete_5th_monday_time',width=150)
                    self.ete_5th_monday_time_table.column('ete_5th_monday_subject',width=150)
                    self.ete_5th_monday_time_table.column('ete_5th_monday_faculty',width=150)

                    self.ete_5th_monday_time_table['show']='headings'

                    self.ete_5th_monday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_monday_class_time_table()
                    self.ete_5th_monday_time_table.bind('<ButtonRelease-1>',ete_5th_monday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame6,width=30,textvariable=self.var_ete_5th_monday_number_of_class1,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame6,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame6,width=25,textvariable=self.var_ete_5th_monday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame6,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ete_5th_subject_list=[]
                    self.fetch_ete_5th_faculty_subject()
                    monday_ete_5thmistry_cycle_subject1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_ete_5th_monday_ete_5thmistry_cycle_subject1,state='readonly',values=self.faculty_ete_5th_subject_list)
                    monday_ete_5thmistry_cycle_subject1.place(x=400,y=25) 
                  
                    label2=Label(table_frame6,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ete_5th_name_list=[]
                    self.fetch_ete_5th_faculty_name()
                    monday_ete_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame6,width=25,textvariable=self.var_ete_5th_monday_ete_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ete_5th_name_list)
                    monday_ete_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ete_5th_faculty_serch1=ttk.Entry(table_frame6,width=20,textvariable=self.var_ete_5th_monday_faculty_serch)
                    ete_5th_faculty_serch1.place(x=800,y=25)
                    ete_5th_faculty_serch1_button=ttk.Button(table_frame6,text='Search',command=ete_5th_faculty_serch)
                    ete_5th_faculty_serch1_button.place(x=937,y=22)
                    ete_5th_add_database=ttk.Button(table_frame6,text='add database',command=add_monday_class_time_table,width=30)
                    ete_5th_add_database.place(x=10,y=140)

                    ete_5th_update_database=ttk.Button(table_frame6,text='update',command=update_monday_class_time_table,width=30)
                    ete_5th_update_database.place(x=10,y=170)

                    ete_5th_delete_database=ttk.Button(table_frame6,text='delete',command=delete_monday_class_time_table,width=30)
                    ete_5th_delete_database.place(x=10,y=200)

                    ete_5th_clear_database=ttk.Button(table_frame6,text='clear',command=clear_monday_class_time_table,width=30)
                    ete_5th_clear_database.place(x=10,y=230)
##############################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Telecommunication_Engineering':
                if self.var_day_select.get() == 'Thuesday':
                
                    table_frame2=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame2.place(x=10,y=120)

                    label_day=Label(table_frame2,bd=2,relief=GROOVE,bg='white',text='Thuesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame2,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ete_5th_thuesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame2)
                        else:
                            if self.var_ete_5th_thuesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame2)
                            else:
                                if self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame2)
                                else:
                                    if self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame2)
                                    else:
                                        cur.execute('insert into ete_5th_thuesday_time_table_database(day1,ete_5th_thuesday_total_number_of_class,ete_5th_thuesday_time,ete_5th_thuesday_subject,ete_5th_thuesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ete_5th_thuesday_number_of_class2.get(),
                                            self.var_ete_5th_thuesday_time1.get(),
                                            self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject1.get(),
                                            self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thuesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame2)
                                
                    def fetch_add_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_5th_thuesday_time_table_database')
                            rows=cur.fetchall()
                            self.ete_5th_thuesday_time_table.delete(*self.ete_5th_thuesday_time_table.get_children())
                            for row in rows:
                                self.ete_5th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    def ete_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_thuesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame2)
                            else:
                                cur.execute(f"select * from ete_5th_thuesday_time_table_database where ete_5th_thuesday_subject LIKE '%{self.var_ete_5th_thuesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ete_5th_thuesday_time_table.delete(*self.ete_5th_thuesday_time_table.get_children())
                                for row in rows:
                                    self.ete_5th_thuesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame2)

                    def update_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame2)
                            else:
                                cur.execute("select * from ete_5th_thuesday_time_table_database where ete_5th_thuesday_subject=%s",(self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame2)
                                else:
                                    cur.execute("update ete_5th_thuesday_time_table_database set ete_5th_thuesday_total_number_of_class=%s,ete_5th_thuesday_time=%s,ete_5th_thuesday_faculty=%s where ete_5th_thuesday_subject=%s",(
                                        
                                        self.var_ete_5th_thuesday_number_of_class2.get(),
                                        self.var_ete_5th_thuesday_time1.get(),
                                        self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame2)
                                    fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame2)
                    def delete_thuesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame2)
                            else:
                                cur.execute("select * from ete_5th_thuesday_time_table_database where ete_5th_thuesday_subject=%s",(self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame2)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame2)
                                    if option==True:
                                        cur.execute('delete from ete_5th_thuesday_time_table_database where ete_5th_thuesday_subject=%s',(self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame2)
                                        clear_thuesday_class_time_table()
                                        fetch_add_thuesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame2)
                    
                    def clear_thuesday_class_time_table():
                        fetch_add_thuesday_class_time_table()
                        self.var_ete_5th_thuesday_faculty_serch.set("")
                        self.var_ete_5th_thuesday_number_of_class2.set("")
                        self.var_ete_5th_thuesday_time1.set("")
                        self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject1.set("")
                        self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame2)

                    def ete_5th_thuesday_time_table_get(ev):
                        thuesday_ete_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ete_5th_thuesday_time_table.focus()
                        content1=self.ete_5th_thuesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ete_5th_thuesday_number_of_class2.set(row1[2])
                        self.var_ete_5th_thuesday_time1.set(row1[3])
                        self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject1.set(row1[4])
                        self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame2)

                    
                    self.thuesday_ete_5th_time_table_data_frame=Frame(table_frame2,width=900,height=150,relief=GROOVE)
                    self.thuesday_ete_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thuesday_ete_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thuesday_ete_5th_time_table_data_frame,orient=VERTICAL)
                    self.ete_5th_thuesday_time_table=ttk.Treeview(self.thuesday_ete_5th_time_table_data_frame,columns=('cid','day1','ete_5th_thuesday_total_number_of_class','ete_5th_thuesday_time','ete_5th_thuesday_subject','ete_5th_thuesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ete_5th_thuesday_time_table.xview)
                    scrolly.configure(command=self.ete_5th_thuesday_time_table.yview)

                    self.ete_5th_thuesday_time_table.heading('cid',text='Serial No')
                    self.ete_5th_thuesday_time_table.heading('day1',text='Day')
                    self.ete_5th_thuesday_time_table.heading('ete_5th_thuesday_total_number_of_class',text='Totel class')
                    self.ete_5th_thuesday_time_table.heading('ete_5th_thuesday_time',text='class time')
                    self.ete_5th_thuesday_time_table.heading('ete_5th_thuesday_subject',text='Subject')
                    self.ete_5th_thuesday_time_table.heading('ete_5th_thuesday_faculty',text='Faculty')

                    self.ete_5th_thuesday_time_table.column('cid',width=100)
                    self.ete_5th_thuesday_time_table.column('day1',width=150)
                    self.ete_5th_thuesday_time_table.column('ete_5th_thuesday_total_number_of_class',width=100)
                    self.ete_5th_thuesday_time_table.column('ete_5th_thuesday_time',width=150)
                    self.ete_5th_thuesday_time_table.column('ete_5th_thuesday_subject',width=150)
                    self.ete_5th_thuesday_time_table.column('ete_5th_thuesday_faculty',width=150)

                    self.ete_5th_thuesday_time_table['show']='headings'

                    self.ete_5th_thuesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thuesday_class_time_table()
                    self.ete_5th_thuesday_time_table.bind('<ButtonRelease-1>',ete_5th_thuesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame2,width=30,textvariable=self.var_ete_5th_thuesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame2,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame2,width=25,textvariable=self.var_ete_5th_thuesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame2,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ete_5th_subject_list=[]
                    self.fetch_ete_5th_faculty_subject()
                    thuesday_ete_5thmistry_cycle_subject1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject1,state='readonly',values=self.faculty_ete_5th_subject_list)
                    thuesday_ete_5thmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame2,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ete_5th_name_list=[]
                    self.fetch_ete_5th_faculty_name()
                    thuesday_ete_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame2,width=25,textvariable=self.var_ete_5th_thuesday_ete_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ete_5th_name_list)
                    thuesday_ete_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ete_5th_faculty_serch1=ttk.Entry(table_frame2,width=20,textvariable=self.var_ete_5th_thuesday_faculty_serch)
                    ete_5th_faculty_serch1.place(x=800,y=25)
                    ete_5th_faculty_serch1_button=ttk.Button(table_frame2,text='Search',command=ete_5th_faculty_serch)
                    ete_5th_faculty_serch1_button.place(x=937,y=22)
                    ete_5th_add_database=ttk.Button(table_frame2,text='add database',command=add_thuesday_class_time_table,width=30)
                    ete_5th_add_database.place(x=10,y=140)

                    ete_5th_update_database=ttk.Button(table_frame2,text='update',command=update_thuesday_class_time_table,width=30)
                    ete_5th_update_database.place(x=10,y=170)

                    ete_5th_delete_database=ttk.Button(table_frame2,text='delete',command=delete_thuesday_class_time_table,width=30)
                    ete_5th_delete_database.place(x=10,y=200)

                    ete_5th_clear_database=ttk.Button(table_frame2,text='clear',command=clear_thuesday_class_time_table,width=30)
                    ete_5th_clear_database.place(x=10,y=230)
#
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Telecommunication_Engineering':
                if self.var_day_select.get() == 'Wednesday':
                
                  
                
                    table_frame3=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame3.place(x=10,y=120)

                    label_day=Label(table_frame3,bd=2,relief=GROOVE,bg='white',text='Wednesday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame3,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ete_5th_wednesday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame3)
                        else:
                            if self.var_ete_5th_wednesday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame3)
                            else:
                                if self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame3)
                                else:
                                    if self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame3)
                                    else:
                                        cur.execute('insert into ete_5th_wednesday_time_table_database(day1,ete_5th_wednesday_total_number_of_class,ete_5th_wednesday_time,ete_5th_wednesday_subject,ete_5th_wednesday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ete_5th_wednesday_number_of_class2.get(),
                                            self.var_ete_5th_wednesday_time1.get(),
                                            self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject1.get(),
                                            self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_wednesday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame3)
                                
                    def fetch_add_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_5th_wednesday_time_table_database')
                            rows=cur.fetchall()
                            self.ete_5th_wednesday_time_table.delete(*self.ete_5th_wednesday_time_table.get_children())
                            for row in rows:
                                self.ete_5th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    def ete_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_wednesday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame3)
                            else:
                                cur.execute(f"select * from ete_5th_wednesday_time_table_database where ete_5th_wednesday_subject LIKE '%{self.var_ete_5th_wednesday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ete_5th_wednesday_time_table.delete(*self.ete_5th_wednesday_time_table.get_children())
                                for row in rows:
                                    self.ete_5th_wednesday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame3)

                    def update_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame3)
                            else:
                                cur.execute("select * from ete_5th_wednesday_time_table_database where ete_5th_wednesday_subject=%s",(self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame3)
                                else:
                                    cur.execute("update ete_5th_wednesday_time_table_database set ete_5th_wednesday_total_number_of_class=%s,ete_5th_wednesday_time=%s,ete_5th_wednesday_faculty=%s where ete_5th_wednesday_subject=%s",(
                                        
                                        self.var_ete_5th_wednesday_number_of_class2.get(),
                                        self.var_ete_5th_wednesday_time1.get(),
                                        self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame3)
                                    fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame3)
                    def delete_wednesday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame3)
                            else:
                                cur.execute("select * from ete_5th_wednesday_time_table_database where ete_5th_wednesday_subject=%s",(self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame3)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame3)
                                    if option==True:
                                        cur.execute('delete from ete_5th_wednesday_time_table_database where ete_5th_wednesday_subject=%s',(self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame3)
                                        clear_wednesday_class_time_table()
                                        fetch_add_wednesday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame3)
                    
                    def clear_wednesday_class_time_table():
                        fetch_add_wednesday_class_time_table()
                        self.var_ete_5th_wednesday_faculty_serch.set("")
                        self.var_ete_5th_wednesday_number_of_class2.set("")
                        self.var_ete_5th_wednesday_time1.set("")
                        self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject1.set("")
                        self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame3)

                    def ete_5th_wednesday_time_table_get(ev):
                        wednesday_ete_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ete_5th_wednesday_time_table.focus()
                        content1=self.ete_5th_wednesday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ete_5th_wednesday_number_of_class2.set(row1[2])
                        self.var_ete_5th_wednesday_time1.set(row1[3])
                        self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject1.set(row1[4])
                        self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame3)

                    
                    self.wednesday_ete_5th_time_table_data_frame=Frame(table_frame3,width=900,height=150,relief=GROOVE)
                    self.wednesday_ete_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.wednesday_ete_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.wednesday_ete_5th_time_table_data_frame,orient=VERTICAL)
                    self.ete_5th_wednesday_time_table=ttk.Treeview(self.wednesday_ete_5th_time_table_data_frame,columns=('cid','day1','ete_5th_wednesday_total_number_of_class','ete_5th_wednesday_time','ete_5th_wednesday_subject','ete_5th_wednesday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ete_5th_wednesday_time_table.xview)
                    scrolly.configure(command=self.ete_5th_wednesday_time_table.yview)

                    self.ete_5th_wednesday_time_table.heading('cid',text='Serial No')
                    self.ete_5th_wednesday_time_table.heading('day1',text='Day')
                    self.ete_5th_wednesday_time_table.heading('ete_5th_wednesday_total_number_of_class',text='Totel class')
                    self.ete_5th_wednesday_time_table.heading('ete_5th_wednesday_time',text='class time')
                    self.ete_5th_wednesday_time_table.heading('ete_5th_wednesday_subject',text='Subject')
                    self.ete_5th_wednesday_time_table.heading('ete_5th_wednesday_faculty',text='Faculty')

                    self.ete_5th_wednesday_time_table.column('cid',width=100)
                    self.ete_5th_wednesday_time_table.column('day1',width=150)
                    self.ete_5th_wednesday_time_table.column('ete_5th_wednesday_total_number_of_class',width=100)
                    self.ete_5th_wednesday_time_table.column('ete_5th_wednesday_time',width=150)
                    self.ete_5th_wednesday_time_table.column('ete_5th_wednesday_subject',width=150)
                    self.ete_5th_wednesday_time_table.column('ete_5th_wednesday_faculty',width=150)

                    self.ete_5th_wednesday_time_table['show']='headings'

                    self.ete_5th_wednesday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_wednesday_class_time_table()
                    self.ete_5th_wednesday_time_table.bind('<ButtonRelease-1>',ete_5th_wednesday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame3,width=30,textvariable=self.var_ete_5th_wednesday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame3,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame3,width=25,textvariable=self.var_ete_5th_wednesday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame3,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ete_5th_subject_list=[]
                    self.fetch_ete_5th_faculty_subject()
                    wednesday_ete_5thmistry_cycle_subject1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject1,state='readonly',values=self.faculty_ete_5th_subject_list)
                    wednesday_ete_5thmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame3,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ete_5th_name_list=[]
                    self.fetch_ete_5th_faculty_name()
                    wednesday_ete_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame3,width=25,textvariable=self.var_ete_5th_wednesday_ete_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ete_5th_name_list)
                    wednesday_ete_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ete_5th_faculty_serch1=ttk.Entry(table_frame3,width=20,textvariable=self.var_ete_5th_wednesday_faculty_serch)
                    ete_5th_faculty_serch1.place(x=800,y=25)
                    ete_5th_faculty_serch1_button=ttk.Button(table_frame3,text='Search',command=ete_5th_faculty_serch)
                    ete_5th_faculty_serch1_button.place(x=937,y=22)
                    ete_5th_add_database=ttk.Button(table_frame3,text='add database',command=add_wednesday_class_time_table,width=30)
                    ete_5th_add_database.place(x=10,y=140)

                    ete_5th_update_database=ttk.Button(table_frame3,text='update',command=update_wednesday_class_time_table,width=30)
                    ete_5th_update_database.place(x=10,y=170)

                    ete_5th_delete_database=ttk.Button(table_frame3,text='delete',command=delete_wednesday_class_time_table,width=30)
                    ete_5th_delete_database.place(x=10,y=200)

                    ete_5th_clear_database=ttk.Button(table_frame3,text='clear',command=clear_wednesday_class_time_table,width=30)
                    ete_5th_clear_database.place(x=10,y=230)
###########################################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Telecommunication_Engineering':
                if self.var_day_select.get() == 'Thursday':
              
                    table_frame4=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame4.place(x=10,y=120)

                    label_day=Label(table_frame4,bd=2,relief=GROOVE,bg='white',text='Thursday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame4,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
 
                    def add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ete_5th_thursday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame4)
                        else:
                            if self.var_ete_5th_thursday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame4)
                            else:
                                if self.var_ete_5th_thursday_ete_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame4)
                                else:
                                    if self.var_ete_5th_thursday_ete_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame4)
                                    else:
                                        cur.execute('insert into ete_5th_thursday_time_table_database(day1,ete_5th_thursday_total_number_of_class,ete_5th_thursday_time,ete_5th_thursday_subject,ete_5th_thursday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ete_5th_thursday_number_of_class2.get(),
                                            self.var_ete_5th_thursday_time1.get(),
                                            self.var_ete_5th_thursday_ete_5thmistry_cycle_subject1.get(),
                                            self.var_ete_5th_thursday_ete_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_thursday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame4)
                                
                    def fetch_add_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_5th_thursday_time_table_database')
                            rows=cur.fetchall()
                            self.ete_5th_thursday_time_table.delete(*self.ete_5th_thursday_time_table.get_children())
                            for row in rows:
                                self.ete_5th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    def ete_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_thursday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame4)
                            else:
                                cur.execute(f"select * from ete_5th_thursday_time_table_database where ete_5th_thursday_subject LIKE '%{self.var_ete_5th_thursday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ete_5th_thursday_time_table.delete(*self.ete_5th_thursday_time_table.get_children())
                                for row in rows:
                                    self.ete_5th_thursday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame4)

                    def update_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_thursday_ete_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame4)
                            else:
                                cur.execute("select * from ete_5th_thursday_time_table_database where ete_5th_thursday_subject=%s",(self.var_ete_5th_thursday_ete_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame4)
                                else:
                                    cur.execute("update ete_5th_thursday_time_table_database set ete_5th_thursday_total_number_of_class=%s,ete_5th_thursday_time=%s,ete_5th_thursday_faculty=%s where ete_5th_thursday_subject=%s",(
                                        
                                        self.var_ete_5th_thursday_number_of_class2.get(),
                                        self.var_ete_5th_thursday_time1.get(),
                                        self.var_ete_5th_thursday_ete_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_ete_5th_thursday_ete_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame4)
                                    fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame4)
                    def delete_thursday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_thursday_ete_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame4)
                            else:
                                cur.execute("select * from ete_5th_thursday_time_table_database where ete_5th_thursday_subject=%s",(self.var_ete_5th_thursday_ete_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame4)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame4)
                                    if option==True:
                                        cur.execute('delete from ete_5th_thursday_time_table_database where ete_5th_thursday_subject=%s',(self.var_ete_5th_thursday_ete_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame4)
                                        clear_thursday_class_time_table()
                                        fetch_add_thursday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame4)
                    
                    def clear_thursday_class_time_table():
                        fetch_add_thursday_class_time_table()
                        self.var_ete_5th_thursday_faculty_serch.set("")
                        self.var_ete_5th_thursday_number_of_class2.set("")
                        self.var_ete_5th_thursday_time1.set("")
                        self.var_ete_5th_thursday_ete_5thmistry_cycle_subject1.set("")
                        self.var_ete_5th_thursday_ete_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame4)

                    def ete_5th_thursday_time_table_get(ev):
                        thursday_ete_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ete_5th_thursday_time_table.focus()
                        content1=self.ete_5th_thursday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ete_5th_thursday_number_of_class2.set(row1[2])
                        self.var_ete_5th_thursday_time1.set(row1[3])
                        self.var_ete_5th_thursday_ete_5thmistry_cycle_subject1.set(row1[4])
                        self.var_ete_5th_thursday_ete_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame4)

                    
                    self.thursday_ete_5th_time_table_data_frame=Frame(table_frame4,width=900,height=150,relief=GROOVE)
                    self.thursday_ete_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.thursday_ete_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.thursday_ete_5th_time_table_data_frame,orient=VERTICAL)
                    self.ete_5th_thursday_time_table=ttk.Treeview(self.thursday_ete_5th_time_table_data_frame,columns=('cid','day1','ete_5th_thursday_total_number_of_class','ete_5th_thursday_time','ete_5th_thursday_subject','ete_5th_thursday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ete_5th_thursday_time_table.xview)
                    scrolly.configure(command=self.ete_5th_thursday_time_table.yview)

                    self.ete_5th_thursday_time_table.heading('cid',text='Serial No')
                    self.ete_5th_thursday_time_table.heading('day1',text='Day')
                    self.ete_5th_thursday_time_table.heading('ete_5th_thursday_total_number_of_class',text='Totel class')
                    self.ete_5th_thursday_time_table.heading('ete_5th_thursday_time',text='class time')
                    self.ete_5th_thursday_time_table.heading('ete_5th_thursday_subject',text='Subject')
                    self.ete_5th_thursday_time_table.heading('ete_5th_thursday_faculty',text='Faculty')

                    self.ete_5th_thursday_time_table.column('cid',width=100)
                    self.ete_5th_thursday_time_table.column('day1',width=150)
                    self.ete_5th_thursday_time_table.column('ete_5th_thursday_total_number_of_class',width=100)
                    self.ete_5th_thursday_time_table.column('ete_5th_thursday_time',width=150)
                    self.ete_5th_thursday_time_table.column('ete_5th_thursday_subject',width=150)
                    self.ete_5th_thursday_time_table.column('ete_5th_thursday_faculty',width=150)

                    self.ete_5th_thursday_time_table['show']='headings'

                    self.ete_5th_thursday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_thursday_class_time_table()
                    self.ete_5th_thursday_time_table.bind('<ButtonRelease-1>',ete_5th_thursday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame4,width=30,textvariable=self.var_ete_5th_thursday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame4,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame4,width=25,textvariable=self.var_ete_5th_thursday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame4,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ete_5th_subject_list=[]
                    self.fetch_ete_5th_faculty_subject()
                    thursday_ete_5thmistry_cycle_subject1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_ete_5th_thursday_ete_5thmistry_cycle_subject1,state='readonly',values=self.faculty_ete_5th_subject_list)
                    thursday_ete_5thmistry_cycle_subject1.place(x=400,y=25) 
                    
                    label2=Label(table_frame4,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ete_5th_name_list=[]
                    self.fetch_ete_5th_faculty_name()
                    thursday_ete_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame4,width=25,textvariable=self.var_ete_5th_thursday_ete_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ete_5th_name_list)
                    thursday_ete_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ete_5th_faculty_serch1=ttk.Entry(table_frame4,width=20,textvariable=self.var_ete_5th_thursday_faculty_serch)
                    ete_5th_faculty_serch1.place(x=800,y=25)
                    ete_5th_faculty_serch1_button=ttk.Button(table_frame4,text='Search',command=ete_5th_faculty_serch)
                    ete_5th_faculty_serch1_button.place(x=937,y=22)
                    ete_5th_add_database=ttk.Button(table_frame4,text='add database',command=add_thursday_class_time_table,width=30)
                    ete_5th_add_database.place(x=10,y=140)

                    ete_5th_update_database=ttk.Button(table_frame4,text='update',command=update_thursday_class_time_table,width=30)
                    ete_5th_update_database.place(x=10,y=170)

                    ete_5th_delete_database=ttk.Button(table_frame4,text='delete',command=delete_thursday_class_time_table,width=30)
                    ete_5th_delete_database.place(x=10,y=200)

                    ete_5th_clear_database=ttk.Button(table_frame4,text='clear',command=clear_thursday_class_time_table,width=30)
                    ete_5th_clear_database.place(x=10,y=230)

######################################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Telecommunication_Engineering':
                if self.var_day_select.get() == 'Friday':
     
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Friday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ete_5th_friday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_ete_5th_friday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_ete_5th_friday_ete_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_ete_5th_friday_ete_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into ete_5th_friday_time_table_database(day1,ete_5th_friday_total_number_of_class,ete_5th_friday_time,ete_5th_friday_subject,ete_5th_friday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ete_5th_friday_number_of_class2.get(),
                                            self.var_ete_5th_friday_time1.get(),
                                            self.var_ete_5th_friday_ete_5thmistry_cycle_subject1.get(),
                                            self.var_ete_5th_friday_ete_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_friday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_5th_friday_time_table_database')
                            rows=cur.fetchall()
                            self.ete_5th_friday_time_table.delete(*self.ete_5th_friday_time_table.get_children())
                            for row in rows:
                                self.ete_5th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def ete_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_friday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from ete_5th_friday_time_table_database where ete_5th_friday_subject LIKE '%{self.var_ete_5th_friday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ete_5th_friday_time_table.delete(*self.ete_5th_friday_time_table.get_children())
                                for row in rows:
                                    self.ete_5th_friday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_friday_ete_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from ete_5th_friday_time_table_database where ete_5th_friday_subject=%s",(self.var_ete_5th_friday_ete_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update ete_5th_friday_time_table_database set ete_5th_friday_total_number_of_class=%s,ete_5th_friday_time=%s,ete_5th_friday_faculty=%s where ete_5th_friday_subject=%s",(
                                        
                                        self.var_ete_5th_friday_number_of_class2.get(),
                                        self.var_ete_5th_friday_time1.get(),
                                        self.var_ete_5th_friday_ete_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_ete_5th_friday_ete_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_friday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_friday_ete_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from ete_5th_friday_time_table_database where ete_5th_friday_subject=%s",(self.var_ete_5th_friday_ete_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from ete_5th_friday_time_table_database where ete_5th_friday_subject=%s',(self.var_ete_5th_friday_ete_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_friday_class_time_table()
                                        fetch_add_friday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_friday_class_time_table():
                        fetch_add_friday_class_time_table()
                        self.var_ete_5th_friday_faculty_serch.set("")
                        self.var_ete_5th_friday_number_of_class2.set("")
                        self.var_ete_5th_friday_time1.set("")
                        self.var_ete_5th_friday_ete_5thmistry_cycle_subject1.set("")
                        self.var_ete_5th_friday_ete_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def ete_5th_friday_time_table_get(ev):
                        friday_ete_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ete_5th_friday_time_table.focus()
                        content1=self.ete_5th_friday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ete_5th_friday_number_of_class2.set(row1[2])
                        self.var_ete_5th_friday_time1.set(row1[3])
                        self.var_ete_5th_friday_ete_5thmistry_cycle_subject1.set(row1[4])
                        self.var_ete_5th_friday_ete_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.friday_ete_5th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.friday_ete_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.friday_ete_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.friday_ete_5th_time_table_data_frame,orient=VERTICAL)
                    self.ete_5th_friday_time_table=ttk.Treeview(self.friday_ete_5th_time_table_data_frame,columns=('cid','day1','ete_5th_friday_total_number_of_class','ete_5th_friday_time','ete_5th_friday_subject','ete_5th_friday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ete_5th_friday_time_table.xview)
                    scrolly.configure(command=self.ete_5th_friday_time_table.yview)

                    self.ete_5th_friday_time_table.heading('cid',text='Serial No')
                    self.ete_5th_friday_time_table.heading('day1',text='Day')
                    self.ete_5th_friday_time_table.heading('ete_5th_friday_total_number_of_class',text='Totel class')
                    self.ete_5th_friday_time_table.heading('ete_5th_friday_time',text='class time')
                    self.ete_5th_friday_time_table.heading('ete_5th_friday_subject',text='Subject')
                    self.ete_5th_friday_time_table.heading('ete_5th_friday_faculty',text='Faculty')

                    self.ete_5th_friday_time_table.column('cid',width=100)
                    self.ete_5th_friday_time_table.column('day1',width=150)
                    self.ete_5th_friday_time_table.column('ete_5th_friday_total_number_of_class',width=100)
                    self.ete_5th_friday_time_table.column('ete_5th_friday_time',width=150)
                    self.ete_5th_friday_time_table.column('ete_5th_friday_subject',width=150)
                    self.ete_5th_friday_time_table.column('ete_5th_friday_faculty',width=150)

                    self.ete_5th_friday_time_table['show']='headings'

                    self.ete_5th_friday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_friday_class_time_table()
                    self.ete_5th_friday_time_table.bind('<ButtonRelease-1>',ete_5th_friday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_ete_5th_friday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_ete_5th_friday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ete_5th_subject_list=[]
                    self.fetch_ete_5th_faculty_subject()
                    friday_ete_5thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ete_5th_friday_ete_5thmistry_cycle_subject1,state='readonly',values=self.faculty_ete_5th_subject_list)
                    friday_ete_5thmistry_cycle_subject1.place(x=400,y=25) 
           
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ete_5th_name_list=[]
                    self.fetch_ete_5th_faculty_name()
                    friday_ete_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ete_5th_friday_ete_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ete_5th_name_list)
                    friday_ete_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ete_5th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_ete_5th_friday_faculty_serch)
                    ete_5th_faculty_serch1.place(x=800,y=25)
                    ete_5th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=ete_5th_faculty_serch)
                    ete_5th_faculty_serch1_button.place(x=937,y=22)
                    ete_5th_add_database=ttk.Button(table_frame5,text='add database',command=add_friday_class_time_table,width=30)
                    ete_5th_add_database.place(x=10,y=140)

                    ete_5th_update_database=ttk.Button(table_frame5,text='update',command=update_friday_class_time_table,width=30)
                    ete_5th_update_database.place(x=10,y=170)

                    ete_5th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_friday_class_time_table,width=30)
                    ete_5th_delete_database.place(x=10,y=200)

                    ete_5th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_friday_class_time_table,width=30)
                    ete_5th_clear_database.place(x=10,y=230)
##############################################################################################################################################################
        if self.var_sem_select.get() == '5th_Semister':
            if self.var_branch_select.get() == 'Electronic_And_Telecommunication_Engineering':
                if self.var_day_select.get() == 'Saturday':
                
             
                    table_frame5=Frame(self.root,width=1030,height=300,relief=GROOVE,bd=2,bg='white')
                    table_frame5.place(x=10,y=120)

                    label_day=Label(table_frame5,bd=2,relief=GROOVE,bg='white',text='Saturday',font=('times new roman',15,'bold'))
                    label_day.place(x=10,y=10,width=180,height=50)

                    label1=Label(table_frame5,text='Total Number of Class :',bg='white',font=('Times new roman',13,'bold'))
                    label1.place(x=10,y=70)
                    
                    def add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        if self.var_ete_5th_saturday_number_of_class2.get()=='':
                            messagebox.showerror('Error','Totel number of class must be rquired',parent=table_frame5)
                        else:
                            if self.var_ete_5th_saturday_time1.get()=='':
                                messagebox.showerror('Error','class Time must be rquired',parent=table_frame5)
                            else:
                                if self.var_ete_5th_saturday_ete_5thmistry_cycle_subject1.get()=='':
                                    messagebox.showerror('Error','class subject must be rquired',parent=table_frame5)
                                else:
                                    if self.var_ete_5th_saturday_ete_5thmistry_cycle_subject_faculty1.get()=='':
                                        messagebox.showerror('Error','class faculty must be rquired',parent=table_frame5)
                                    else:
                                        cur.execute('insert into ete_5th_saturday_time_table_database(day1,ete_5th_saturday_total_number_of_class,ete_5th_saturday_time,ete_5th_saturday_subject,ete_5th_saturday_faculty) values(%s,%s,%s,%s,%s)',(
                                            self.var_day_select.get(),
                                            self.var_ete_5th_saturday_number_of_class2.get(),
                                            self.var_ete_5th_saturday_time1.get(),
                                            self.var_ete_5th_saturday_ete_5thmistry_cycle_subject1.get(),
                                            self.var_ete_5th_saturday_ete_5thmistry_cycle_subject_faculty1.get()

                                        ))
                                        con.commit()
                                        fetch_add_saturday_class_time_table()
                                        con.close()
                                        messagebox.showinfo('Info','The data added successfulty...',parent=table_frame5)
                                
                    def fetch_add_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            cur.execute('select * from ete_5th_saturday_time_table_database')
                            rows=cur.fetchall()
                            self.ete_5th_saturday_time_table.delete(*self.ete_5th_saturday_time_table.get_children())
                            for row in rows:
                                self.ete_5th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    def ete_5th_faculty_serch():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_saturday_faculty_serch.get()=='':
                                messagebox.showerror('Error','The subject must be required must be required',parent=table_frame5)
                            else:
                                cur.execute(f"select * from ete_5th_saturday_time_table_database where ete_5th_saturday_subject LIKE '%{self.var_ete_5th_saturday_faculty_serch.get()}%' ")
                                rows=cur.fetchall()
                                self.ete_5th_saturday_time_table.delete(*self.ete_5th_saturday_time_table.get_children())
                                for row in rows:
                                    self.ete_5th_saturday_time_table.insert('',END,values=row)
                        except Exception as ex:
                            messagebox.showerror('Error',f"Error due to {str(ex)}",parent=table_frame5)

                    def update_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_saturday_ete_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required%s',parent=table_frame5)
                            else:
                                cur.execute("select * from ete_5th_saturday_time_table_database where ete_5th_saturday_subject=%s",(self.var_ete_5th_saturday_ete_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror("Error","Select a subject name from the  table:",parent=table_frame5)
                                else:
                                    cur.execute("update ete_5th_saturday_time_table_database set ete_5th_saturday_total_number_of_class=%s,ete_5th_saturday_time=%s,ete_5th_saturday_faculty=%s where ete_5th_saturday_subject=%s",(
                                        
                                        self.var_ete_5th_saturday_number_of_class2.get(),
                                        self.var_ete_5th_saturday_time1.get(),
                                        self.var_ete_5th_saturday_ete_5thmistry_cycle_subject_faculty1.get(),
                                        self.var_ete_5th_saturday_ete_5thmistry_cycle_subject1.get()
                                                                                                                
                                    ))
                                    con.commit()
                                    messagebox.showinfo('Success','Faculty details is updated successfuly..........',parent=table_frame5)
                                    fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f'error due to{str(ex)}',parent=table_frame5)
                    def delete_saturday_class_time_table():
                        con=psycopg2.connect(
                        host="ec2-23-21-4-7.compute-1.amazonaws.com",
                        database="d3cgb3tsbur7dj",
                        user="huzavcwsvfccit",
                        password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                        port="5432",
                        )
                        cur=con.cursor()
                        try:
                            if self.var_ete_5th_saturday_ete_5thmistry_cycle_subject1.get()=="":
                                messagebox.showerror('Error','subject name  must be required',parent=table_frame5)
                            else:
                                cur.execute("select * from ete_5th_saturday_time_table_database where ete_5th_saturday_subject=%s",(self.var_ete_5th_saturday_ete_5thmistry_cycle_subject1.get(),))
                                row=cur.fetchone()
                                if row==None:
                                    messagebox.showerror('Error','select the subject name from the table',parent=table_frame5)
                                else:
                                    option=messagebox.askyesno('confirm','do you want to delete the subject and faculty  detail from the database',parent=table_frame5)
                                    if option==True:
                                        cur.execute('delete from ete_5th_saturday_time_table_database where ete_5th_saturday_subject=%s',(self.var_ete_5th_saturday_ete_5thmistry_cycle_subject1.get(),))
                                        con.commit()
                                        messagebox.showinfo('Info','The student data deleted successfully.......',parent=table_frame5)
                                        clear_saturday_class_time_table()
                                        fetch_add_saturday_class_time_table()
                        except Exception as ex:
                            messagebox.showerror('Error',f"The error due to {str(ex)}",parent=table_frame5)
                    
                    def clear_saturday_class_time_table():
                        fetch_add_saturday_class_time_table()
                        self.var_ete_5th_saturday_faculty_serch.set("")
                        self.var_ete_5th_saturday_number_of_class2.set("")
                        self.var_ete_5th_saturday_time1.set("")
                        self.var_ete_5th_saturday_ete_5thmistry_cycle_subject1.set("")
                        self.var_ete_5th_saturday_ete_5thmistry_cycle_subject_faculty1.set("")
                        messagebox.showinfo('Info','All data are cleared but not deleted from the data base....',parent=table_frame5)

                    def ete_5th_saturday_time_table_get(ev):
                        saturday_ete_5thmistry_cycle_subject1.config(state='readonly')
                        r1=self.ete_5th_saturday_time_table.focus()
                        content1=self.ete_5th_saturday_time_table.item(r1)
                        row1=content1["values"]
                        print(row1)

                        self.var_ete_5th_saturday_number_of_class2.set(row1[2])
                        self.var_ete_5th_saturday_time1.set(row1[3])
                        self.var_ete_5th_saturday_ete_5thmistry_cycle_subject1.set(row1[4])
                        self.var_ete_5th_saturday_ete_5thmistry_cycle_subject_faculty1.set(row1[5])
                        messagebox.showinfo('Info','The all data fetch successfully ',parent=table_frame5)

                    
                    self.saturday_ete_5th_time_table_data_frame=Frame(table_frame5,width=900,height=150,relief=GROOVE)
                    self.saturday_ete_5th_time_table_data_frame.place(x=200,y=50)

                    scrollx=Scrollbar(self.saturday_ete_5th_time_table_data_frame,orient=HORIZONTAL)
                    scrolly=Scrollbar(self.saturday_ete_5th_time_table_data_frame,orient=VERTICAL)
                    self.ete_5th_saturday_time_table=ttk.Treeview(self.saturday_ete_5th_time_table_data_frame,columns=('cid','day1','ete_5th_saturday_total_number_of_class','ete_5th_saturday_time','ete_5th_saturday_subject','ete_5th_saturday_faculty'),xscrollcommand=scrollx.set,yscrollcommand=scrolly.set)
                    scrollx.pack(side=BOTTOM,fill=X)
                    scrolly.pack(side=RIGHT,fill=Y)

                    scrollx.configure(command=self.ete_5th_saturday_time_table.xview)
                    scrolly.configure(command=self.ete_5th_saturday_time_table.yview)

                    self.ete_5th_saturday_time_table.heading('cid',text='Serial No')
                    self.ete_5th_saturday_time_table.heading('day1',text='Day')
                    self.ete_5th_saturday_time_table.heading('ete_5th_saturday_total_number_of_class',text='Totel class')
                    self.ete_5th_saturday_time_table.heading('ete_5th_saturday_time',text='class time')
                    self.ete_5th_saturday_time_table.heading('ete_5th_saturday_subject',text='Subject')
                    self.ete_5th_saturday_time_table.heading('ete_5th_saturday_faculty',text='Faculty')

                    self.ete_5th_saturday_time_table.column('cid',width=100)
                    self.ete_5th_saturday_time_table.column('day1',width=150)
                    self.ete_5th_saturday_time_table.column('ete_5th_saturday_total_number_of_class',width=100)
                    self.ete_5th_saturday_time_table.column('ete_5th_saturday_time',width=150)
                    self.ete_5th_saturday_time_table.column('ete_5th_saturday_subject',width=150)
                    self.ete_5th_saturday_time_table.column('ete_5th_saturday_faculty',width=150)

                    self.ete_5th_saturday_time_table['show']='headings'

                    self.ete_5th_saturday_time_table.pack(fill=BOTH,expand=1)
                    fetch_add_saturday_class_time_table()
                    self.ete_5th_saturday_time_table.bind('<ButtonRelease-1>',ete_5th_saturday_time_table_get)

                    number_of_class=ttk.Combobox(table_frame5,width=30,textvariable=self.var_ete_5th_saturday_number_of_class2,state='readonly')
                    number_of_class.place(x=10,y=100,width=180)
                    number_of_class['values']=(
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6',
                        '7',
                        '8',
                        '9'  
                    )
                    label2=Label(table_frame5,text='Add times :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=200,y=2)
                    #1
                    time1=ttk.Entry(table_frame5,width=25,textvariable=self.var_ete_5th_saturday_time1)
                    time1.place(x=200,y=25)
                
                    label2=Label(table_frame5,text='Add Subject :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=400,y=2)

                    self.faculty_ete_5th_subject_list=[]
                    self.fetch_ete_5th_faculty_subject()
                    saturday_ete_5thmistry_cycle_subject1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ete_5th_saturday_ete_5thmistry_cycle_subject1,state='readonly',values=self.faculty_ete_5th_subject_list)
                    saturday_ete_5thmistry_cycle_subject1.place(x=400,y=25) 
           
                    label2=Label(table_frame5,text='Add Faculty :',bg='white',font=('Times new roman',13,'bold'))
                    label2.place(x=600,y=2)
                    self.faculty_ete_5th_name_list=[]
                    self.fetch_ete_5th_faculty_name()
                    saturday_ete_5thmistry_cycle_subject_faculty1=ttk.Combobox(table_frame5,width=25,textvariable=self.var_ete_5th_saturday_ete_5thmistry_cycle_subject_faculty1,state='readonly',values=self.faculty_ete_5th_name_list)
                    saturday_ete_5thmistry_cycle_subject_faculty1.place(x=600,y=25)

                    ete_5th_faculty_serch1=ttk.Entry(table_frame5,width=20,textvariable=self.var_ete_5th_saturday_faculty_serch)
                    ete_5th_faculty_serch1.place(x=800,y=25)
                    ete_5th_faculty_serch1_button=ttk.Button(table_frame5,text='Search',command=ete_5th_faculty_serch)
                    ete_5th_faculty_serch1_button.place(x=937,y=22)
                    ete_5th_add_database=ttk.Button(table_frame5,text='add database',command=add_saturday_class_time_table,width=30)
                    ete_5th_add_database.place(x=10,y=140)

                    ete_5th_update_database=ttk.Button(table_frame5,text='update',command=update_saturday_class_time_table,width=30)
                    ete_5th_update_database.place(x=10,y=170)

                    ete_5th_delete_database=ttk.Button(table_frame5,text='delete',command=delete_saturday_class_time_table,width=30)
                    ete_5th_delete_database.place(x=10,y=200)

                    ete_5th_clear_database=ttk.Button(table_frame5,text='clear',command=clear_saturday_class_time_table,width=30)
                    ete_5th_clear_database.place(x=10,y=230)

    def fetch_che_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_che_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_che_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_che_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_phy_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_phy_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_phy_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_phy_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_civil_3rd_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_civil_3rd_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_civil_3rd_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_civil_3rd_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_civil_4th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_civil_4th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_civil_4th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_civil_4th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_civil_5th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_civil_5th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_civil_5th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_civil_5th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_civil_5th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_civil_5th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_civil_5th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_civil_5th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_civil_6th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_civil_6th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_civil_6th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_civil_6th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_civil_7th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_civil_7th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_civil_7th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_civil_7th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_civil_8th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_civil_8th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_civil_8th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_civil_8th_name_list.append(row[0])
            con.commit()
            con.close()
    
            #################################################################################################################

    def fetch_eee_3rd_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_eee_3rd_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_eee_3rd_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_eee_3rd_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_eee_5th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_eee_5th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_eee_5th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_eee_5th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_eee_5th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_eee_5th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_eee_5th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_eee_5th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_eee_6th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_eee_6th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_eee_6th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_eee_6th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_eee_7th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_eee_7th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_eee_7th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_eee_7th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_eee_8th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_eee_8th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_eee_8th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_eee_8th_name_list.append(row[0])
            con.commit()
            con.close()
    ########################################################################################################
    def fetch_ece_3rd_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ece_3rd_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ece_3rd_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ece_3rd_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ece_5th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ece_5th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ece_5th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ece_5th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ece_5th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ece_5th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ece_5th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ece_5th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ece_6th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ece_6th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ece_6th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ece_6th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ece_7th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ece_7th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ece_7th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ece_7th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ece_8th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ece_8th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ece_8th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ece_8th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ece_8th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ece_8th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ece_8th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ece_8th_name_list.append(row[0])
            con.commit()
            con.close()
    ##############################################################################################################################################
    def fetch_mech_3rd_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_mech_3rd_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_mech_3rd_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_mech_3rd_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_mech_5th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_mech_5th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_mech_5th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_mech_5th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_mech_5th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_mech_5th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_mech_5th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_mech_5th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_mech_6th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_mech_6th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_mech_6th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_mech_6th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_mech_7th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_mech_7th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_mech_7th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_mech_7th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_mech_8th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_mech_8th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_mech_8th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_mech_8th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_mech_8th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_mech_8th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_mech_8th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_mech_8th_name_list.append(row[0])
            con.commit()
            con.close()
    ###################################################################################################################
    def fetch_cs_3rd_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_cs_3rd_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_cs_3rd_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_cs_3rd_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_cs_5th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_cs_5th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_cs_5th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_cs_5th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_cs_5th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_cs_5th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_cs_5th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_cs_5th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_cs_6th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_cs_6th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_cs_6th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_cs_6th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_cs_7th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_cs_7th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_cs_7th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_cs_7th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_cs_8th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_cs_8th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_cs_8th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_cs_8th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_cs_8th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_cs_8th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_cs_8th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_cs_8th_name_list.append(row[0])
            con.commit()
            con.close()
    #########################################################################################################33333
    def fetch_ise_3rd_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ise_3rd_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ise_3rd_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ise_3rd_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ise_5th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ise_5th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ise_5th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ise_5th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ise_5th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ise_5th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ise_5th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ise_5th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ise_6th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ise_6th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ise_6th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ise_6th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ise_7th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ise_7th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ise_7th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ise_7th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ise_8th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ise_8th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ise_8th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ise_8th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ise_8th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ise_8th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ise_8th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ise_8th_name_list.append(row[0])
            con.commit()
            con.close()
    #############################################################################################################################################
    def fetch_ete_3rd_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ete_3rd_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ete_3rd_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ete_3rd_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ete_5th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ete_5th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ete_5th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ete_5th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ete_5th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ete_5th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ete_5th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ete_5th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ete_6th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ete_6th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ete_6th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ete_6th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ete_7th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ete_7th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ete_7th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ete_7th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ete_8th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ete_8th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ete_8th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ete_8th_name_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ete_8th_faculty_subject(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_subject FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ete_8th_subject_list.append(row[0])
            con.commit()
            con.close()
    def fetch_ete_8th_faculty_name(self):
        con=psycopg2.connect(
                    host="ec2-23-21-4-7.compute-1.amazonaws.com",
                    database="d3cgb3tsbur7dj",
                    user="huzavcwsvfccit",
                    password="2c961ae9faa5eafc0340e151a64ab5631699caf63850c1a03218f9524e4e66d1",
                    port="5432",
                    )
        cur=con.cursor()
        cur.execute('SELECT faculty_name FROM add_faculty1')
        rows=cur.fetchall()
        if len(rows)>0:
            for row in rows:
                self.faculty_ete_8th_name_list.append(row[0])
            con.commit()
            con.close()
    

if __name__=='__main__':
    root=tk.Tk()
    ob1=AddTimeTable(root)
    root.mainloop()